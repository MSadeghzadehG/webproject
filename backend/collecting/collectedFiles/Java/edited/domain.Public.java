
package sample.jooq.domain;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


@Generated(value = { "http:		"jOOQ version:3.8.2" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 217498103;

	
	public static final Public PUBLIC = new Public();

	
	public final Language LANGUAGE = sample.jooq.domain.Language.LANGUAGE;

	
	public final Author AUTHOR = sample.jooq.domain.Author.AUTHOR;

	
	public final Book BOOK = sample.jooq.domain.Book.BOOK;

	
	public final BookStore BOOK_STORE = sample.jooq.domain.BookStore.BOOK_STORE;

	
	public final BookToBookStore BOOK_TO_BOOK_STORE = sample.jooq.domain.BookToBookStore.BOOK_TO_BOOK_STORE;

	
	private Public() {
		super("PUBLIC", null);
	}

	
	@Override
	public Catalog getCatalog() {
		return DefaultCatalog.DEFAULT_CATALOG;
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(Language.LANGUAGE, Author.AUTHOR, Book.BOOK,
				BookStore.BOOK_STORE, BookToBookStore.BOOK_TO_BOOK_STORE);
	}
}
