[('', 996543), ('*', 27729), ('{\n', 22744), ('the', 17439), ('=', 14663), ('public', 10548), ('}\n\n', 10197), ('}\n', 7744), ('void', 7626), ('to', 6773), ('final', 6174), ('@Override\n', 5782), ('if', 5278), ('new', 5075), ('*\n', 4982), ('of', 4547), ('a', 4491), ('return', 3648), ('and', 3492), ('OR', 3302), ('under', 3287), ('or', 3149), ('License', 3139), ('/**\n', 3018), ('static', 2659), ('for', 2604), ('this', 2591), ('extends', 2588), ('OF', 2545), ('in', 2445), ('is', 2319), ('@Test\n', 2307), ('may', 2244), ('}', 2227), ('distributed', 2149), ('class', 2117), ('super', 2076), ('not', 2052), ('{\n\n', 2020), ('by', 1975), ('@param', 1965), ('*/\n', 1952), ('THE', 1873), ('with', 1840), ('throws', 1792), ('on', 1757), ('ANY', 1731), ('an', 1719), ('{@link', 1554), ('private', 1519), ('==', 1515), ('boolean', 1466), ('Exception', 1436), ('Copyright', 1430), ('KIND,', 1415), ('WARRANTIES', 1415), ('"AS', 1414), ('WITHOUT', 1410), ('(the', 1409), ('+', 1397), ('software', 1371), ('file', 1368), ('try', 1358), ('(c)', 1335), ('int', 1331), ('is\n', 1329), ('in\n', 1298), ('you', 1265), ('The', 1264), ('//', 1259), ('be', 1228), ('License.\n', 1225), ('use', 1221), ('T>', 1212), ('!=', 1191), ('return;\n', 1187), ('IN', 1155), ('}\n}\n', 1138), ('except', 1134), ('Licensed', 1123), ('{@code', 1122), ('compliance', 1122), ('that', 1103), ('You', 1080), ('required', 1078), ('either', 1073), ('specific', 1067), ('copy', 1061), ('permissions', 1053), ('Apache', 1048), ('at\n', 1046), ('Version', 1046), ('language', 1043), ('2.0', 1041), ('obtain', 1040), ('License,', 1039), ('governing', 1039), ('CONDITIONS', 1039), ('Unless', 1039), ('applicable', 1039), ('law', 1039), ('agreed', 1039), ('IS"', 1038), ('http://www.apache.org/licenses/LICENSE-2.0\n', 1038), ('express', 1031), ('implied.', 995), ('BASIS,', 995), ('"License");', 994), ('long', 983), ('*/\n\npackage', 979), ('writing,', 979), ('limitations', 979), ('value', 978), ('RxJava', 971), ('Contributors.\n', 958), ('2016-present,', 956), ('License.', 936), ('See\n', 921), ('else', 880), ('catch', 858), ('throw', 837), ('String', 836), ('without', 823), ('null)', 788), ('e)', 788), ('t)', 776), ('Software', 761), ('copies', 753), ('@return', 753), ('SOFTWARE', 752), ('FOR', 752), ('notice', 752), ('?', 734), ('<p>\n', 733), ('source', 715), ('true;\n', 713), ('Disposable', 702), ('implements', 681), ('.test()\n', 678), ('*/\npublic', 661), ('all', 654), ('\n', 625), ('i', 614), ('any', 612), ('0)', 567), ('s)', 564), ('})\n', 552), ('R>', 546), ('<T>', 533), ('*/\npackage', 515), ('A', 512), ('onError(Throwable', 507), ('protected', 502), ('type\n', 490), ('io.reactivex.*;\nimport', 488), ('finally', 488), ('null', 482), ('ex)', 465), ('onComplete()', 465), ('and/or', 462), ('it', 458), (':', 457), ('(Throwable', 451), ('-', 445), ('do', 435), ('null;\n', 433), ('from', 429), ('Throwable', 425), ('run()', 418), ('subject', 418), ('as', 417), ('<', 415), ('following', 403), ('files', 401), ('associated', 399), ('null");\n', 397), ('permission', 390), ('OTHER', 388), ('free', 386), ('persons', 385), ('copyright', 385), ('error', 385), ('&&', 384), ('person', 384), ('including', 384), ('NO', 382), ('above', 381), ('THE\n', 380), ('NOT', 379), ('Permission', 379), ('included', 378), ('use,', 378), ('AN', 377), ('limitation', 377), ('permit', 377), ('documentation', 377), ('CONTRACT,', 376), ('WARRANTY', 376), ('PROVIDED', 376), ('CONNECTION', 376), ('LIMITED', 376), ('so,', 376), ('portions', 376), ('ACTION', 376), ('OTHERWISE,', 376), ('TORT', 376), ('will', 376), ('COPYRIGHT', 376), ('copy,', 376), ('publish,', 376), ('granted,', 376), ('EXPRESS', 376), ('charge,', 376), ('INCLUDING', 376), ('Software,', 376), ('NONINFRINGEMENT.', 376), ('MIT', 376), ('DAMAGES', 376), ('TO', 376), ('hereby', 376), ('IS",', 376), ('BE', 376), ('SHALL', 376), ('LIABLE', 376), ('PARTICULAR', 376), ('IS', 376), ('EVENT', 376), ('actual;\n', 376), ('shall', 376), ('HOLDERS', 376), ('whom', 376), ('sublicense,', 376), ('PURPOSE', 376), ('ARISING', 376), ('"Software"),', 376), ('substantial', 376), ('WITH', 376), ('DEALINGS', 376), ('merge,', 376), ('WHETHER', 376), ('obtaining', 376), ('modify,', 376), ('USE', 376), ('FITNESS', 375), ('T', 375), ('OUT', 375), ('LIABILITY,', 375), ('IMPLIED,', 375), ('SOFTWARE.\n', 375), ('conditions:\n', 375), ('Software.\n', 375), ('AUTHORS', 375), ('furnished', 375), ('FROM,\n', 372), ('apply(Integer', 370), ('OR\n', 369), ('AND', 367), ('restriction,', 367), ('distribute,', 367), ('CLAIM,', 367), ('BUT', 367), ('copy\n', 364), ('deal\n', 363), ('rights\n', 363), ('OTHER\n', 363), ('MERCHANTABILITY,\n', 363), ('sell\n', 363), ('default', 360), ('done', 358), ('License\n', 358), ('0,', 357), ('Seppälä\n', 355), ('Ilkka', 355), ('dispose()', 353), ('RxJavaPlugins.reset();\n', 352), ('does', 351), ('IN\n', 349), ('@CheckReturnValue\n', 347), ('Function<?', 346), ('Object', 343), ('"', 342), ('type', 339), ('List<Throwable>', 338), ('when', 334), ('};\n\n', 330), ('serialVersionUID', 330), ('errors', 329), ('Integer', 327), ('Runnable', 327), ('are', 326), ('T,', 321), ('Function<Integer,', 321), ('Maybe', 319), ('result', 314), ('the\n', 312), ('d', 311), ('2014-2016', 309), ('(int', 308), ('<dt><b>Scheduler:</b></dt>\n', 308), ('<dl>\n', 308), ('</dl>\n', 308), ('1,', 307), ('@SuppressWarnings("unchecked")\n', 298), ('});\n\n', 298), ('Elasticsearch', 297), ('emitted', 296), ('0;', 291), ('particular', 288), ('Scheduler}.</dd>\n', 282), ('can', 281), ('onSubscribe(Disposable', 280), ('returned', 279), ('item', 279), ('@see', 278), ('break;\n', 276), ('i++)', 275), ('operate', 272), ('<dd>{@code', 271), ('Scheduler', 271), ('method', 269), ('this.actual', 269), ('@SchedulerSupport(SchedulerSupport.NONE)\n', 267), ('2,', 266), ('Single', 265), ('one', 262), ('(done)', 260), ('io.reactivex.disposables.Disposable;\nimport', 258), ('v)', 256), ('instanceof', 256), ('instance\n', 255), ('have', 254), ('Runnable()', 250), ('isDisposed()', 249), ('(;;)', 248), ('into', 247), ('ex', 245), ('d)', 245), ('current', 244), ('});\n', 244), ('This', 243), ('should', 242), ('more', 238), ('has', 236), ('while', 235), ('given', 234), ('drain();\n', 230), ('MaybeSource<?', 229), ('onNext(T', 229), ('function', 229), ('s', 225), ('at', 225), ('->', 224), ('Subscription', 224), ('false;\n', 223), ('other', 220), ('/*\n', 218), ('operators', 213), ('SingleSource<?', 213), ('values', 211), ('value)', 209), ('Exceptions.throwIfFatal(ex);\n', 208), ('RxJavaPlugins.onAssembly(new', 206), ('each', 206), ('which', 206), ('emits', 204), ('after', 204), ('source.subscribe(new', 202), ('upstream', 200), ('{', 200), ('0;\n', 200), ('v', 198), ('actual.onComplete();\n', 195), ('Returns', 195), ('specified', 195), ('U>', 194), ('See', 193), ('its', 193), ('time', 191), ('TimeUnit', 191), ('actual,', 189), ('actual;\n\n', 188), ('};\n', 187), ('ts', 187), ('"The', 184), ('@since', 183), ('Integer>', 183), ('but', 183), ('interface', 182), ('list', 181), ('IOException', 181), ('alt="">\n', 177), ('<img', 177), ('width="640"', 177), ('1;\n', 177), ('observer)', 176), ('instance', 176), ('volatile', 176), ('source,', 175), ('number', 175), ('AtomicInteger', 175), ('<a', 174), ('assertEquals(1,', 170), ('items', 169), ('3,', 169), ('b', 169), ('RxJavaPlugins.onError(t);\n', 168), ('Elastic', 168), ('B.V.', 168), ('}\n\n}\n', 167), ('org.junit.Test;\n\nimport', 166), ('s;\n\n', 166), ('TestHelper.trackPluginErrors();\n', 165), ('Publisher<?', 163), ('source;\n', 163), ('/**', 162), ('},', 161), ('s))', 160), ('o', 159), ('returns', 158), ('>', 157), ('TestException();\n', 156), ('operator', 156), ('io.reactivex.plugins.RxJavaPlugins;\n\npublic', 155), ('Flowable', 155), ('e', 154), ('actual.onSubscribe(this);\n', 154), ('<R>', 153), ('PublishProcessor<Integer>', 153), ('io.reactivex.exceptions.Exceptions;\nimport', 153), ('||', 153), ('documentation:', 152), ('first', 152), ('agreements.', 152), ('v)\n', 152), ('cancel()', 152), ('license', 151), ('s.cancel();\n', 150), ('java.util.List;\nimport', 150), ('used', 150), ('event', 149), ('actual.onError(t);\n', 148), ('}\n\n\n', 148), ('R>>', 148), ('we', 147), ('single', 147), ('n)', 147), ('onSubscribe(Subscription', 146), ('no', 146), ('thread', 145), ('Flowable<T>', 145), ('Subscriber<?', 145), ('super(source);\n', 145), ('4,', 145), ('scheduler', 145), ('called', 145), ('queue', 143), ('TestHelper.assertUndeliverable(errors,', 143), ('object', 143), ('q', 143), ('idx', 142), ('Completable', 142), ('@throws', 141), ('calls', 141), ('data', 140), ('call()', 138), ('org.reactivestreams.*;\n\nimport', 138), ('and\n', 138), ('io.reactivex.internal.operators.observable;\n\nimport', 138), ('done;\n\n', 138), ('s;\n', 137), ('io.reactivex.internal.operators.flowable;\n\nimport', 137), ('this.s', 136), ('TestSubscriber<Integer>', 136), ('downstream', 135), ('this.source', 135), ('Exceptions.throwIfFatal(e);\n', 135), ('multiple', 134), ('name', 134), ('subscribeActual(Subscriber<?', 133), ('0', 133), ('5,', 132), ('Consumer<?', 132), ('@Benchmark\n', 132), ('unit,', 131), ('Observer<?', 131), ('expected', 131), ('cancelled', 131), ('Integer>()', 130), ('only', 130), ('test', 130), ('{\n//', 129), ('.assertFailure(TestException.class);\n', 127), ('source;\n\n', 127), ('Integer,', 127), ('["', 126), ('If', 126), ('via', 126), ('exception', 125), ('(ex', 125), ('Action', 124), (';\n', 123), ('Observable<Integer>', 122), ('before', 122), ('sources', 122), ('using', 122), ('subscribeActual(Observer<?', 121), ('io.reactivex.internal.disposables.DisposableHelper;\nimport', 121), ('null,', 121), ('io.reactivex.internal.functions.ObjectHelper;\nimport', 120), ('return\n', 120), ('a,', 117), ('missed', 116), ('io.reactivex.functions.Function;\nimport', 116), ('sequence', 116), ('empty', 116), ('true', 116), ('.test();\n\n', 116), ('@NonNull\n', 115), ('methods', 115), ('count', 115), ('(d', 115), ('TestException.class);\n', 114), ('(getAndIncrement()', 114), ('call', 114), ('org.junit.Assert.*;\n\nimport', 114), ('@author', 113), ('R', 113), ('elements)', 111), ('Flowable.range(1,', 111), ('Java', 111), ('org.reactivestreams.Publisher;\nimport', 110), ('io.reactivex.tck;\n\nimport', 110), ('org.testng.annotations.Test;\n\nimport', 110), ('was', 110), ('same', 110), ('verify(observer,', 110), ('pattern', 110), ('io.reactivex.plugins.RxJavaPlugins;\nimport', 109), ('then', 109), ('java.util.concurrent.atomic.AtomicReference;\n\nimport', 109), ('value;\n', 108), ('TestObserver<Integer>', 108), ('java.util.concurrent.atomic.*;\n\nimport', 108), ('Single<T>', 108), ('TestException());\n', 108), ('false,', 108), ('abstract', 107), ('been', 107), ('request(long', 106), ('bh)', 106), ('r', 106), ('java.util.List;\n\nimport', 105), ('to\n', 105), ('assertEquals(0,', 105), ('run', 105), ('io.reactivex.plugins.RxJavaPlugins;\n\n/**\n', 104), ('c', 104), ('Disposables.empty();\n\n', 103), ('ObservableSource<?', 103), ('MaybeSource', 103), ('signals', 102), ('io.reactivex.exceptions.TestException;\nimport', 101), ('an\n', 101), ('DisposableHelper.dispose(this);\n', 101), ('java.util.concurrent.TimeUnit;\n\nimport', 101), ('d.dispose();\n', 101), ('java.io.IOException;\nimport', 100), ('task', 100), ('@Test(expected', 99), ('inner', 99), ('scheduler;\n', 99), ('signal', 99), ('T>>', 99), ('parent;\n', 99), ('(InterruptedException', 99), ('U', 99), ('synchronized', 98), ('Maybe<T>', 98), ('java.util.ArrayList;\nimport', 98), ('implementation', 98), ('n', 98), ('pp', 98), ('java.util.Arrays;\nimport', 98), ('1)', 97), ('Logger', 97), ('1);\n', 97), ('so', 97), ('work', 96), ('success', 96), ('set', 96), ('experimental\n', 96), ('Throwable>', 95), ('Flowable<Integer>', 95), ('observer', 95), ('Map<String,', 95), ('jdx', 95), ('until', 94), ('contributor', 93), ('unit;\n', 93), ('a\n', 93), ('one\n', 93), ('null\n', 92), ('null;\n\n', 92), ('information', 92), ('subscription', 92), ('line', 91), ('mapper;\n', 91), ('s.dispose();\n', 91), ('d);\n', 91), ('actual.onError(e);\n', 90), ('array', 90), ('Publisher', 90), ('In', 89), ('TestException())\n', 89), ('TimeUnit.MILLISECONDS);\n', 89), ('next', 88), ('CountDownLatch', 88), ('timeout,', 88), ('args)', 88), ('Test', 87), ('List<String>', 87), ('(v', 87), ('RxJavaPlugins.onError(ex);\n', 86), ('additional', 86), ('Single\n', 85), ('state', 85), ('element', 85), ('f', 85), ('parent', 85), ('CompletableObserver', 85), ('w', 85), ('1', 85), ('RxJavaPlugins.onError(e);\n', 85), ('PublishProcessor.create();\n\n', 84), ('CompletableSource', 84), ('TestObserver<Void>', 84), ('backpressure', 84), ('>=', 84), ('this.parent', 84), ('<dt><b>Backpressure:</b></dt>\n', 84), ('with\n', 84), ('io.reactivex.functions.*;\nimport', 84), ('License;\n', 84), ('licensed', 84), ('target', 84), ('LOGGER', 83), ('SingleObserver<?', 83), ('Object>', 83), ('allowed', 83), ('"]', 83), ('TimeUnit.SECONDS)\n', 82), ('this.mapper', 82), ('createPublisher(long', 82), ('output', 82), ('PerfConsumer(bh));\n', 82), ('5)\n', 82), ('Create', 81), ('r1', 81), ('AtomicReference<Disposable>\n', 81), ('Observer<T>,', 81), ('resource', 81), ('o)', 81), ('List<Integer>', 81), ('InterruptedException', 80), ('t', 80), ('message', 80), ('must', 80), ('some', 80), ('j', 80), ('actual', 79), ('r2', 79), ('onSuccess(T', 79), ('Action()', 79), ('resulting', 79), ('TestHelper.race(r1,', 79), ('<dd>The', 79), ('FlowableSubscriber<T>,', 79), ('Observable', 79), ('subscriber', 78), ('io.reactivex.internal.subscriptions.SubscriptionHelper;\nimport', 78), ('value\n', 78), ('org.slf4j.Logger;\nimport', 78), ('AtomicLong', 78), ('onError', 77), ('PublishProcessor.create();\n', 77), ('TestException.class,', 77), ('.awaitDone(5,', 77), ('v;\n', 77), ('Flowable}', 77), ('AtomicReference<Disposable>', 77), ('example', 76), ('main', 76), ('mapper', 76), ('SingleSource', 76), ('null);\n', 76), ('scheduler)', 76), ('AtomicBoolean', 75), ('b)', 75), ('errors.terminate();\n', 75), ('actual)', 75), ('e);\n', 75), ('once', 75), ('cs', 75), ('two', 75), ('true,', 75), ('Flowable.range(0,', 75), ('Publisher<Integer>', 75), ('queue.clear();\n', 75), ('consumer', 74), ('than', 74), ('ArrayList<>();\n', 74), ('io.reactivex.internal.operators.maybe;\n\nimport', 74), ('io.reactivex.exceptions.*;\nimport', 74), ('events', 74), ('s);\n', 74), ('m', 74), ('p', 74), ('where', 73), ('applied', 73), ('b;\n', 73), ('index', 73), ('other;\n', 73), ('mapper;\n\n', 73), ('under\n', 72), ('2.0\n', 72), ('parent;\n\n', 72), ('Path', 72), ('field', 72), ('(e', 72), ('SubscriptionHelper.CANCELLED;\n', 72), ('.sequential()\n', 72), ('Predicate<?', 72), ('actual.onNext(t);\n', 72), ('AtomicThrowable', 71), ('mapper,', 71), ('(idx', 71), ('version', 71), ('MaybeSources', 71), ('inOrder.verify(w,', 71), ('results', 71), ('@BackpressureSupport(BackpressureKind.FULL)\n', 71), ('already', 71), ('source)', 70), ('DisposableHelper.DISPOSED)', 70), ('App', 70), ('TestScheduler', 70), ('TestHelper.trackPluginErrors();\n\n', 70), ('unit', 70), ('(cancelled)', 70), ('+\n', 70), ('(SubscriptionHelper.validate(this.s,', 69), ('entry', 69), ('allows', 69), ('name;\n', 68), ('NOTICE', 68), ('ownership.', 68), ('connection', 68), ('licenses', 68), ('create', 68), ('io.reactivex.Flowable;\nimport', 68), ('org.junit.jupiter.api.Test;\n\nimport', 67), ('CompletableSource>', 67), ('source\n', 67), ('source,\n', 67), ('io.reactivex.disposables.*;\nimport', 67), ('t;\n', 67), ('other)', 67), ('may\n', 67), ("can't", 67), ('.assertResult(1);\n', 66), ('ExceptionHelper.wrapOrThrow(ex);\n', 66), ('(o', 66), ('io.reactivex.internal.functions.Functions;\nimport', 66), ('d;\n\n', 66), ('timeout', 66), ('second', 66), ('service', 66), ('org.slf4j.LoggerFactory;\n\nimport', 66), ('fail("Should', 66), ('U,', 65), ('objects', 65), ('queue;\n', 65), ('0);\n', 65), ('0L)', 65), ('Jeroen', 65), ('Meulemeester\n', 65), ('/', 65), ('Date:', 65), ('honors', 65), ('Class<?>', 65), ('user', 64), ('io.reactivex.")\n', 64), ('It', 64), ('Integer>>()', 64), ('io.reactivex;\n\nimport', 64), ('n);\n', 64), ('assertEquals(2,', 64), ('provided', 64), ('TestHelper.RACE_DEFAULT_LOOPS;', 64), ('AbstractFlowableWithUpstream<T,', 64), ('PublishSubject<Integer>', 63), ("doesn't", 63), ('this.scheduler', 63), ('io.reactivex.internal.operators.single;\n\nimport', 63), ('.assertResult(1,', 63), ('main(String[]', 63), ('case', 63), ('out', 63), ('handler', 63), ('TestException());\n\n', 62), ('(Exception', 62), ('subscribers', 62), ('Callable<?', 62), ('.map(new', 62), ('Observable.range(1,', 62), ('disposed', 62), ('this.other', 62), ('MaybeSource\n', 62), ('get', 61), ('observer.onComplete();\n', 61), ('java.util.concurrent.Callable;\n\nimport', 61), ('need', 61), ('TimeUnit.SECONDS);\n\n', 61), ('delay,', 61), ('toString()', 61), ('regarding', 61), ('error;\n', 60), ('parent)', 60), ('args', 60), ('false', 60), ('writing,\n', 60), ('CompositeDisposable', 60), ('input', 60), ('()', 60), ('ANY\n', 60), ('there', 60), ('limitations\n', 60), ('onError}', 60), ('java.util.*;\nimport', 59), ('d))', 59), ('idx)', 59), ('/*', 59), ('contributor\n', 59), ('io.reactivex.Flowable;\n\n@Test\npublic', 59), ('ps', 59), ('read', 59), ('this.unit', 59), ('copyright\n', 59), ('queue;\n\n', 58), ('{\n\n\n', 58), ('ExecutorService', 58), ('|', 58), ('(empty)', 58), ('because', 58), ('continue;\n', 58), ('Object[]{new', 58), ('DisposableHelper.isDisposed(get());\n', 58), ('BaseTck<Integer>', 58), ('CompletableSubject', 58), ('=\n', 58), ('actual.onError(ex);\n', 57), ('String>', 57), ('last', 57), ('onSubscribe', 57), ('(missed', 57), ('.assertNoErrors()\n', 57), ('mapper)', 57), ('2);\n', 57), ('error;\n\n', 57), ('AbstractObservableWithUpstream<T,', 57), ('DisposableHelper.DISPOSED;\n', 57), ('java.util.Collections;\nimport', 57), ('PM\n', 57), ('make', 57), ('drain()', 56), ('common', 56), ('subscribeActual(SingleObserver<?', 56), ('plugin', 56), ('running', 56), ('to.assertEmpty();\n\n', 56), ('subscribed', 56), ('emit', 56), ('//\n', 56), ('s,', 56), ('up', 56), ('other;\n\n', 56), ('(this)', 55), ('setup()', 55), ('An', 55), ('sources)', 55), ('io.reactivex.observers.TestObserver;\nimport', 55), ('true))', 55), ('request', 55), ('Worker', 55), ('times', 55), ('path', 54), ('q.clear();\n', 54), ('source1,', 54), ('true;\n\n', 54), ('also', 54), ('r2);\n\n', 54), ('s.request(Long.MAX_VALUE);\n', 54), ('e;\n', 54), ('(s', 54), ('callback', 54), ('struct', 53), ('TimeUnit.SECONDS);\n', 53), ('onError(ex);\n', 53), (')\n', 53), ('StringBuilder', 53), ('application', 53), ('expected\n', 53), ('addAndGet(-missed);\n', 53), ('index,', 53), ('access', 53), ('subscribeActual(MaybeObserver<?', 53), ('T>[]', 53), ('(r', 53), ('they', 53), ('java.util.concurrent.atomic.AtomicInteger;\n\nimport', 52), ('predicate;\n', 52), ('Type', 52), ('dispose', 52), ('this;\n', 52), ('transform', 52), ('emitting', 51), ('Throwable}', 51), ('tasks', 51), ('DisposableHelper.setOnce(this,', 51), ('iterator', 51), ('Observable<?', 51), ('io.reactivex.internal.operators.completable;\n\nimport', 51), ('TestScheduler();\n\n', 51), ('command', 51), ('TestException', 51), ('Observable<T>', 51), ('cdl.countDown();\n', 51), ('(n', 51), ('onNext(Integer', 51), ('index)', 51), ('<U>', 50), ('(t', 50), ('B>', 50), ('Note', 50), ('e.append("java.lang.RuntimeException:', 50), ('terminal', 50), ('date', 50), ('V>', 50), ('TimeUnit.MILLISECONDS,', 50), ('count;\n', 50), ('String[]', 50), ('value");\n', 50), ('emitter', 50), ('point\n', 50), ('ParallelFlowable', 50), ('.filter(Functions.alwaysTrue())\n', 50), ('such', 49), ('between', 49), ('software\n', 49), ('a.onComplete();\n', 49), ('wait', 49), ('Flowable.just(1)\n', 49), ('Object>()', 49), ('onComplete', 49), ('value.\n', 49), ('Integer[]', 49), ('index;\n', 49), ('actual.onError(new', 49), ('threads', 49), ('terminate', 49), ('method.\n', 49), ('reactive', 49), ('sure', 49), ('org.junit.jupiter.api.Assertions.assertEquals;\nimport', 49), ('(IOException', 48), ('E', 48), ('RuntimeException();\n', 48), ('.assertResult();\n\n', 48), ('generally', 48), ('Iterable<?', 48), ('parameters', 48), ('jdx);\n', 48), ('Iterable', 48), ('get();\n', 48), ('them', 48), ('get()', 48), ('int[]', 48), ('count;\n\n', 47), ('Program', 47), ('height="380"', 47), ('through', 47), ('buffer', 47), ('t1,', 47), ('Creates', 47), ('Scheduler}', 47), ('downstream.onError(ex);\n', 47), ('Maybe\n', 47), ('just', 47), ('base', 47), ('",', 47), ('their', 47), ('b,', 47), (');\n', 47), ('testData.add(new', 46), ('6,', 46), ('unit)', 46), ('SingleSource<Integer>>()', 46), ('SequentialDisposable', 46), ('@SuppressWarnings({', 46), ('constructor', 46), ('6;\n', 46), ('SingleSource<Integer>', 46), ('name,', 46), ('doubleOnSubscribe()', 46), ('2014', 46), ('InMemoryAppender', 46), ('(a', 46), ('Observable<String>', 46), ('cdl', 46), ('assertTrue(d.isDisposed());\n', 46), ("Single's", 46), ('Null', 46), ('{}",', 46), ('2.x', 45), ('requested', 45), ('Boolean>', 45), ('1).append(")\\r\\n\\r\\n");\n', 45), ('AtomicInteger();\n', 45), ('sent', 45), ('due', 45), ('lineNumber(m.javadoc,', 45), ('executor', 45), ('ErrorMode', 45), ('Long', 45), ('io.reactivex.internal.disposables.*;\nimport', 45), ('predicate)', 45), ('pp.onNext(1);\n\n', 45), ('action', 45), ('available', 45), ('MaybeObserver<?', 45), ('never()).onError(any(Throwable.class));\n', 45), ('java.util.List;\n\n/**\n', 45), ('error,', 45), ('global', 45), ('subscribes', 45), ('n;', 44), ('.assertResult(1);\n\n', 44), ('doc', 44), ('handle', 44), ('org.junit.Test;\nimport', 44), ('scheduler;\n\n', 44), ('Disposable,', 44), ('subscribeActual(CompletableObserver', 44), ('subscribe', 44), ('BASIS,\n', 44), ('Observable.just(1,', 44), ('(current', 44), ('containing', 44), ('Check', 44), ('(DisposableHelper.validate(this.s,', 44), ('Subscriber', 44), ('means', 44), ('implied.\n', 44), ('cancelled;\n\n', 44), ('account', 44), ('"License");\n', 44), ('response', 44), ('Collection<?', 44), ('created', 44), ('(q', 43), ('}\n//', 43), ('during', 43), ('contains', 43), ('Observer', 43), ('consumed', 43), ('dispose();\n', 43), ('IllegalStateException.class,', 43), ('since', 43), ('accept(Integer', 43), ('previous', 43), ('based', 43), ('Callable', 43), ('lottery', 43), ('.assertComplete();\n', 43), ('prefetch', 43), ('AtomicInteger\n', 43), ('being', 43), ('PublishSubject.create();\n', 42), ('AtomicThrowable();\n', 42), ('java.util.*;\n\nimport', 42), ('thrown");\n', 42), ('io.reactivex.internal.util.*;\nimport', 42), ('(get()', 42), ('calling', 42), ('JVM', 42), ('this);\n', 42), ('key', 42), ('BiFunction<Integer,', 42), ('mapper,\n', 42), ('<=', 42), ('CountDownLatch(1);\n\n', 42), ('promise', 42), ('assertEquals(3,', 42), ('@BeforeEach\n', 41), ('another', 41), ('this.d', 41), ('BooleanSubscription', 41), ('(decrementAndGet()', 41), ('@Param({', 41), ('Object[]', 41), ('way', 41), ('t2)', 41), ('mentions', 41), ('value;\n\n', 41), ('(final', 41), ('verify(w,', 41), ('check', 41), ('java.util.concurrent.TimeUnit;\nimport', 41), ('terminated', 41), ('.parallel(1)\n', 41), ('100,', 41), ('r)', 41), ('period,', 41), ('source.subscribe(parent);\n', 41), ('set!");\n', 41), ('s.onComplete();\n', 40), ('9,', 40), ('this.value', 40), ('.assertResult();\n', 40), ('File', 40), ('done;\n', 40), ('TimeUnit.MILLISECONDS);\n\n', 40), ('@Test(timeout', 40), ('HashMap<>();\n', 40), ('observer.onError(new', 40), ('source2\n', 40), ('@Nullable\n', 40), ('test(Integer', 40), ('Single.just(1)\n', 40), ('a.onError(ex);\n', 40), ('AtomicLong();\n', 40), ('method\n', 40), ('ts.assertEmpty();\n\n', 40), ('&', 40), ('java.util.Map;\nimport', 40), ('(!done)', 40), ('setUp()', 40), ('10)\n', 40), ('@Setup\n', 40), ('1))', 39), ('customer', 39), ('org.junit.jupiter.api.BeforeEach;\nimport', 39), ('(SubscriptionHelper.validate(n))', 39), ('system', 39), ('operations', 39), ('Painless', 39), ('object\n', 39), ('merged\n', 39), ('@Experimental\n', 39), ('within', 39), ('actual,\n', 39), ('write', 39), ('2)\n', 39), ('delay', 39), ('RuntimeException', 39), ('PLAYERS.add(new', 39), ('failure', 39), ('"1000",', 39), ('RxJavaPlugins.onError(new', 39), ('log', 39), ('sources;\n', 39), ('Use', 38), ('MaybeSource<Integer>', 38), ('2', 38), ('java.util.HashMap;\nimport', 38), ('org.openjdk.jmh.annotations.*;\nimport', 38), ('Person', 38), ('timeout;\n', 38), ('possible', 38), ('CompletableSubject.create();\n\n', 38), ('container', 38), ('timeUnit', 38), ('t);\n', 38), ('@Override\n//', 38), ('custom', 38), ('Calls', 38), ('java.util.Collection;\nimport', 38), ('MaybeSource<Integer>>()', 38), ('java.util.concurrent.*;\nimport', 38), ('TestHelper.mockObserver();\n\n', 38), ('"1",', 38), ('source2,', 38), ('disposed?",', 38), ('.assertFailure(TestException.class);\n\n', 38), ('5)\n@Measurement(iterations', 38), ('8,', 38), ('io.reactivex.Observer;\nimport', 37), ('null.', 37), ('org.reactivestreams.Subscriber;\n\nimport', 37), ('Publisher<Long>', 37), ('CompositeDisposable();\n', 37), ('Observable.just(1)\n', 37), ('empty)', 37), ('instances', 37), ('TestObserver<Object>', 37), ('s.onError(new', 37), ('false);\n', 37), ('drainLoop();\n', 37), ('args\n', 37), ('SingleSubject<Integer>', 37), ('TestHelper.assertError(errors,', 37), ('thrown', 37), ('Maps', 37), ('completed', 37), ('produced', 37), ('TimeUnit.SECONDS)\n@OutputTimeUnit(TimeUnit.SECONDS)\n@Fork(value', 37), ('(m', 37), (')', 37), ('this,', 37), ('it.\n', 37), ('>>', 36), ('source1\n', 36), ('both', 36), ('times(1)).onComplete();\n', 36), ('mode', 36), ('channel', 36), ('upstream;\n\n', 36), ('factory', 36), ('Callable<U>', 36), ('Disposables.empty();\n', 36), ('e.printStackTrace();\n', 36), ('to.cancel();\n\n', 36), ('SimplePlainQueue<T>', 36), ('ms', 36), ('worker.dispose();\n', 36), ('actual.onSubscribe(this);\n\n', 36), ('BaseTck<Long>', 36), ('Predicate<Integer>()', 36), ('os', 36), ('1)\n@State(Scope.Thread)\npublic', 36), ('transformed', 36), ('support', 36), ('or\n', 36), ('different', 36), ('uses', 36), ('f)', 35), ('Long.MAX_VALUE)', 35), ('sources.");\n', 35), ('Throwable,', 35), ('ObjectHelper.requireNonNull(source1,', 35), ('onNext(Object', 35), ('underlying', 35), ('"source1', 35), ('result;\n', 35), ('C>', 35), ('ObjectHelper.requireNonNull(source2,', 35), ('TimeUnit.SECONDS));\n', 35), ('code', 35), ('"1000000"', 35), ('TERMINATED', 35), ('scheduler,', 35), ('error\n', 35), ('that,', 35), ('receive', 35), ('Event', 35), ('<T,', 35), ('7,', 35), ('by\n', 35), ('operation', 35), ('start', 35), ('@NonNull', 35), ('"source2', 35), ('onError(e);\n', 35), ('inOrder', 34), ('upstream.cancel();\n', 34), ('execution', 34), ('subscribeActual(final', 34), ('exceptions', 34), ('Functions.emptyConsumer(),\n', 34), ('UnsupportedOperationException();\n', 34), ('instead', 34), ('clear()', 34), ('predicate', 34), ('classes', 34), ('"100",', 34), ('this.predicate', 34), ('InOrder', 34), ('Verify', 34), ('cancel();\n', 34), ('this.queue', 34), ('Single}', 34), ('SingleObserver', 34), ('Boolean[]', 34), ('When', 34), ('Long>', 34), ('error.\n', 34), ('of\n', 34), ('BackpressureHelper.add(requested,', 34), ('NullPointerException.class)\n', 34), ('m;\n', 34), ('error()', 34), ('unit);\n', 34), ('lock', 34), ('it\n', 33), ('bufferSize;\n', 33), ('provides', 33), ('delayErrors;\n', 33), ('Consumer<Integer>()', 33), ('(p', 33), ('777);\n\n', 33), ('accept(Throwable', 33), ('LoggerFactory.getLogger(App.class);\n\n', 33), ('student', 33), ('SingleSubject.create();\n\n', 33), ('standard', 33), ('name)', 33), ('io.reactivex.disposables.Disposables;\nimport', 33), ('java.nio.file.Path;\nimport', 33), ('set.dispose();\n', 33), ('<li>{@link', 33), ('DisposableHelper.replace(this,', 33), ('java.util.concurrent.Callable;\nimport', 33), ('end', 33), ('@SuppressWarnings("rawtypes")\n', 33), ('SQLException', 33), ('back', 33), ('elements', 33), ('this.name', 33), ('actual.onSuccess(value);\n', 33), ('u', 33), ('d2', 33), ('PublishSubject.create();\n\n', 33), ('simple', 33), ('hashCode()', 33), ('index;\n\n', 33), ('d1', 33), ('"10",', 33), ('this.error', 33), ('layer', 33), ('R>\n', 32), ('AtomicInteger();\n\n', 32), ('Single.error(new', 32), ('Consumer<Throwable>()', 32), ('followed', 32), ('T2,', 32), ('.subscribeOn(Schedulers.computation())\n', 32), ('obs', 32), ('result\n', 32), ('never', 32), ('this.delayErrors', 32), ('clazz)', 32), ('time,', 32), ('BooleanSubscription();\n\n', 32), ('Tests', 32), ('async', 32), ('properties', 32), ('errors;\n\n', 32), ('Utility', 32), ('operator\n', 32), ('onError(new', 32), ('event.\n', 32), ('cache', 32), ('Get', 32), ('Callable<Object>()', 32), ('asynchronous', 32), ('equals(Object', 32), ('1;\n\n', 32), ('(DisposableHelper.validate(this.d,', 32), ('received', 32), ('TimeUnit.SECONDS,', 31), ("don't", 31), ('resources', 31), ('trackPluginErrors();\n', 31), ('poll()', 31), ('(!d.isDisposed())', 31), ('org.junit.jupiter.api.AfterEach;\nimport', 31), ('@Override', 31), ('scheduler));\n', 31), ('5);\n', 31), ('TERMINATED)', 31), ('this.index', 31), ('requests', 31), ('sources,', 31), ('allow', 31), ('true);\n', 31), ('via\n', 31), ('ScheduledRunnable', 31), ('java.util.concurrent.atomic.AtomicBoolean;\n\nimport', 31), ('MaybeSubject<Integer>', 31), ('Indicates', 31), ('Flowable.error(new', 31), ('io.reactivex.internal.subscriptions.*;\nimport', 31), ('io.reactivex.processors.PublishProcessor;\nimport', 31), ('java.io.IOException;\n\n/**\n', 31), ('3);\n', 31), ('@AfterEach\n', 31), ('MaybeObserver<T>,', 31), ('types', 31), ('terminates', 31), ('execute', 31), ('how', 30), ('NullPointerException', 30), ('*/\n@Experimental\npublic', 30), ('scheduler.advanceTimeBy(1,', 30), ('java.util.concurrent.*;\n\nimport', 30), ('Constructor\n', 30), ('map', 30), ('environment)', 30), ('like', 30), ('enum', 30), ('"100000",', 30), ('BooleanSubscription());\n', 30), ('inOrder.verify(observer,', 30), ('.subscribe(to);\n\n', 30), ('source3\n', 30), ('active', 30), ('Disposable}', 30), ('mapper));\n', 30), ('eagerly', 30), ('s.isDisposed();\n', 30), ('worker', 30), ('this.errors', 30), ('.subscribe(new', 30), ('b;\n\n', 30), ('(this', 30), ('Object[],', 30), ('Method', 30), ('io.reactivex.TestHelper;\nimport', 30), ('parent,', 30), ('io.reactivex.Observable;\nimport', 30), ('org.mockito.Mockito.*;\n\nimport', 30), ('source3,', 30), ('"10000",', 30), ('System.arraycopy(a,', 30), ('10,', 30), ('client', 30), ('InterruptedException,', 29), ('"rawtypes"', 29), ('.parallel()\n', 29), ('third', 29), ('e.onError(new', 29), ('Struct', 29), ('errors.isEmpty());\n', 29), ('"unchecked",', 29), ('runs', 29), ('o;\n', 29), ('All', 29), ('CountDownLatch(1);\n', 29), ('e.onComplete();\n', 29), ('emission', 29), ('this.sources', 29), ('requested;\n\n', 29), ('next()', 29), ('Represents', 29), ('m,', 29), ('t2;\n', 29), ('<ul>\n', 29), ('value,', 29), ('find', 29), ('(c', 29), ('merged', 29), ('Thread', 29), ('notification', 29), ('upstream.dispose();\n', 29), ('q;\n', 29), ('</ul>\n', 29), ('MaybeSubject.create();\n\n', 29), ('cannot', 29), ('(!delayErrors)', 29), ('database', 29), ('Scheduler.Worker', 29), ('AtomicReference<Subscription>', 29), ('Flowable,', 29), ('org.slf4j.LoggerFactory;\n\n/**\n', 29), ('accept(Object', 29), ('TestHelper.assertError(ce,', 29), ('Publishers', 28), ('zipper\n', 28), ('MaybeObserver', 28), ('SequentialDisposable();\n', 28), ('many', 28), ('onComplete}', 28), ('K>', 28), ('org.reactivestreams.Publisher;\n\nimport', 28), ('(errorMode', 28), ('prefetch)', 28), ('normal()', 28), ('io.reactivex.functions.Function;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 28), ('this.requested', 28), ('Movie', 28), ('Flowable<String>', 28), ('false)', 28), ('Sets', 28), ('T3,', 28), ('assertError(errors,', 28), ('BufferedReader', 28), ('org.junit.jupiter.api.Test;\nimport', 28), ('reports', 28), ('io.reactivex.subjects.PublishSubject;\n\npublic', 28), ('observable', 28), ('prefetch;\n\n', 28), ('ExecutionException', 28), ('.assertNotComplete();\n', 28), ('assertTrue(errors.toString(),', 28), ('clazz', 28), ('stop', 28), ('deliver', 28), ('SingleSource<T>', 28), ('java.util.concurrent.ExecutorService;\nimport', 28), ('verify(o,', 28), ('see', 28), ('ObservableSource', 28), ('delayErrors;\n\n', 28), ('all\n', 28), ('CompletableObserver,', 28), ('handler.\n', 28), ('io.reactivex.internal.subscriptions.BooleanSubscription;\nimport', 28), ('3)\n', 28), ('gets', 28), ('interrupted', 28), ('most', 28), ('waiting', 28), ('safe', 27), ('</li>\n', 27), ('Observable.error(new', 27), ('"]");\n', 27), ('cdl.await(5,', 27), ('iterator()', 27), ('this.prefetch', 27), ('delayError)', 27), ('inner)', 27), ('(i', 27), ('java.nio.file.Files;\nimport', 27), ('assertTrue(d.isDisposed());\n\n', 27), ('super.onNext(t);\n', 27), ('b[0]);\n', 27), ('0L,', 27), ('io.reactivex.internal.util;\n\nimport', 27), ('prefetch,', 27), ('fallback', 27), ('SubscriptionArbiter', 27), ('(!cancelled)', 27), ('message)', 27), ('assertTrue("Timed', 27), ('-1;\n', 27), ('onNext', 27), ('Single<Integer>', 27), ('?>', 27), ('downstream.onComplete();\n', 27), ('collection', 27), ('TestException()))\n', 27), ('thread-safe.\n', 27), ('out",', 27), ('throw")\n', 27), ('correct', 27), ('mergeDelayError}', 27), ('completes', 27), ('List<T>', 27), ('be\n', 27), ('(value', 27), ('window', 27), ('byte[]', 27), ('observer;\n', 27), ('Atomically', 27), ('verify', 27), ('hasNext()', 27), ('b[1]', 27), ('over', 27), ('ScheduledExecutorService', 27), ('zipped', 27), ('AtomicBoolean();\n', 27), ('amount', 27), ('these', 27), ('b[0]', 27), ('Character', 27), ('shared', 26), ('<dd>This', 26), ('skip\n', 26), ('longer', 26), ('downstream;\n', 26), ('ObjectHelper.requireNonNull(source3,', 26), ('tearDown()', 26), ('Integer[count];\n', 26), ('happens', 26), ('now', 26), ('1];\n', 26), ('start();\n', 26), ('exec', 26), ('(String', 26), ('ex);\n', 26), ('domain', 26), ('java.util.concurrent.Executors;\nimport', 26), ('Subscribes', 26), ('For', 26), ("'rail'", 26), ('SubscriptionHelper.CANCELLED)', 26), ('ts.assertNoErrors();\n', 26), ('offer(T', 26), ('java.util.LinkedList;\nimport', 26), ('...\n', 26), ('drive', 26), ('UserAccount', 26), ('1)\n', 26), ('writer', 26), ('pp1', 26), ('Completable>()', 26), ('delayError;\n', 26), ('to.assertFailure(TestException.class);\n', 26), ('io.reactivex.internal.fuseable.*;\nimport', 26), ('class\n', 26), ('(!errors.isEmpty())', 26), ('singleItem', 26), ('receives', 26), ('supplied', 26), ('values,', 26), ('ObservableSource<T>', 26), ('consumer.</dd>\n', 26), ('"source3', 26), ('found', 26), ('type.\n', 26), ('item\n', 26), ('bufferSupplier;\n', 26), ('io.reactivex.internal.operators.mixed;\n\nimport', 26), ('sources\n', 26), ('this.bufferSize', 26), ('<p>The', 26), ('BiFunction<R,', 25), ('atomicInteger', 25), ('2)', 25), ('"Disposable', 25), ('reset', 25), ('(count', 25), ('isEmpty()', 25), ('LinkedList<>();\n\n', 25), ('ObjectHelper.requireNonNull(mapper,', 25), ('((Logger)', 25), ('defaultValue;\n', 25), ('RxJavaPlugins.setFailOnNonBlockingScheduler(true);\n\n', 25), ('value);\n', 25), ('passed', 25), ('TestException();\n\n', 25), ('Observable<Integer>()', 25), ('org.junit.Assert.*;\nimport', 25), ('io.reactivex.subscribers.TestSubscriber;\n\npublic', 25), ('unit;\n\n', 25), ('StringBuilder();\n', 25), ('signature\\r\\n', 25), ('prefetch;\n', 25), ('a;\n', 25), ('v;\n\n', 25), ('io.reactivex.functions.Action;\nimport', 25), ('%', 25), ('createPublisher(final', 25), ('pp.onComplete();\n\n', 25), ('this.upstream', 25), ('Object,', 25), ('<T>\n', 25), ('maxElementsFromPublisher()', 25), ('this.timeout', 25), ('MaybeSource}', 25), ('actions', 25), ('appender.getLogSize());\n', 25), ('add', 25), ('d;\n', 25), ('ParallelFlowable<T>', 25), ('Environment', 24), ('R>(this,', 24), ('Maybe<?', 24), ('appender', 24), ('C', 24), ('SingleSources', 24), ('BiFunction<?', 24), ('Maybe<R>', 24), ('org.reactivestreams.Subscription;\n\nimport', 24), ('observer.onSubscribe(Disposables.empty());\n', 24), ('Iterator<?', 24), ('never()).onComplete();\n', 24), ('c;\n', 24), ('fourth', 24), ('tested', 24), ('mode)', 24), ('task.dispose();\n\n', 24), ('TRight,', 24), ('reader', 24), ('cause', 24), ('cancelAll();\n', 24), ('@interface', 24), ('appender.stop();\n', 24), ('singleton', 24), ('Publisher\n', 24), ('this.downstream', 24), ('port', 24), ('otherwise', 24), ('transform)', 24), ('io.reactivex.internal.schedulers;\n\nimport', 24), ('pattern.', 24), ('BiConsumer<?', 24), ('concatenated\n', 24), ('countDown();\n', 24), ('appender;\n\n', 24), ('s.onSubscribe(Disposables.empty());\n', 24), ('TimeUnit.MILLISECONDS)\n', 24), ('context', 24), ('occurs.\n', 24), ('R>(s,', 24), ('Single<R>', 24), ('tests', 24), ('31', 24), ('subscribe(Observer<?', 24), ('T4,', 24), ('fields', 24), ('Completable.error(new', 24), ('d.isDisposed();\n', 24), ('could', 24), ('({@link', 24), ('appender.getLastMessage());\n', 23), ('starting', 23), ('ticket', 23), ('onStart()', 23), ('org.junit.*;\nimport', 23), ('assertFalse(d.isDisposed());\n\n', 23), ('io.reactivex.annotations.Nullable;\nimport', 23), ('e));\n', 23), ('(b', 23), ('downstream.</dd>\n', 23), ('bufferSize,', 23), ('cancelled;\n', 23), ('sources;\n\n', 23), ('.assertFailure(IllegalStateException.class);\n', 23), ('perform', 23), ('ce', 23), ('LotteryNumbers', 23), ('EmptyDisposable.error(e,', 23), ('send', 23), ('exception.\n', 23), ('io.reactivex.schedulers.Schedulers;\n\npublic', 23), ('}\n}', 23), ('MaybeSource<T>', 23), ('r2);\n', 23), ('to,', 23), ('Customer', 23), ('set,', 23), ('assertEquals("Second', 23), ('(DisposableHelper.setOnce(this,', 23), ('initialDelay,', 23), ('assertTrue(ms.hasObservers());\n\n', 23), ('Single.<Integer>error(new', 23), ('FlowableSubscriber<T>', 23), ('transform.apply(source);\n\n', 23), ('java.util.HashSet;\nimport', 23), ('BiFunction<T,', 23), ('<E>', 23), ('test\n', 23), ('even', 23), ('count)', 23), ('for\n', 23), ('test()', 23), ('(w', 23), ('cake', 23), ('inner,', 23), ('onError;\n', 23), ('io.reactivex.xmapz;\n\nimport', 23), ('out.subscribe(NoOpConsumer.INSTANCE);\n\n', 23), ('b[1]);\n\n', 23), ('org.openjdk.jmh.infra.Blackhole;\n\nimport', 23), ('delivered', 23), ('Calling', 23), ('sourceArray', 23), ('ps.onNext(1);\n\n', 23), ('concurrency', 23), ('assertEquals("First', 23), ('RxJavaPlugins.\n', 23), ('CompositeException(t,', 23), ('itself', 23), ('"b",', 23), ('@SchedulerSupport(SchedulerSupport.CUSTOM)\n', 23), ('Arrays.fill(sourceArray,', 23), ('policy', 23), ('Observer<Object>', 23), ('emitted\n', 23), ('stream', 23), ('parameter', 22), ('unit\n', 22), ('(once.compareAndSet(false,', 22), ('@ParameterizedTest\n', 22), ('a.add(b);\n', 22), ('eventObject)', 22), ('ex.getCause()', 22), ('1000)\n', 22), ('onError},', 22), ('observer.onSubscribe(d2);\n\n', 22), ('source4\n', 22), ('requestFusion(int', 22), ('delay;\n', 22), ('AppenderBase<ILoggingEvent>', 22), ('cancel', 22), ('Publisher}', 22), ('I/O', 22), ('s.onSubscribe(new', 22), ('io.reactivex.annotations.Experimental;\nimport', 22), ('downstream;\n\n', 22), ('Spell', 22), ('log.add(eventObject);\n', 22), ('onComplete;\n', 22), ('ch.qos.logback.core.AppenderBase;\nimport', 22), ('thrown!");\n', 22), ('checked', 22), ('cd', 22), ('Subscription,', 22), ('remove()', 22), ('composite', 22), ('EmptyDisposable.INSTANCE;\n', 22), ('Maybe.just(v);\n', 22), ('requested.get();\n', 22), ('io.reactivex.functions.Consumer;\nimport', 22), ('creating', 22), ('maxConcurrency;\n', 22), ('append(ILoggingEvent', 22), ('ch.qos.logback.classic.Logger;\nimport', 22), ('requested,', 22), ('List<ILoggingEvent>', 22), ('UnsupportedOperationException("Should', 22), ('subscriber)', 22), ('your', 22), ('Disposable>', 22), ('io.reactivex.internal.disposables.EmptyDisposable;\nimport', 22), ('"mapper', 22), ('disposable', 22), ('retry', 22), ('optionally', 22), ('Callable<List<Integer>>()', 22), ('observer.onSubscribe(d1);\n\n', 22), ('EmptyDisposable.error(ex,', 22), ('io.reactivex.annotations.NonNull;\nimport', 22), ('Interface', 22), ('runFinally();\n', 22), ('s.onSubscribe(parent);\n', 22), ('ch.qos.logback.classic.spi.ILoggingEvent;\nimport', 22), ('numbers', 22), ('exc)', 22), ('Maybe}', 22), ('resource,', 22), ('delayErrors)', 22), ('io.reactivex.annotations.*;\nimport', 21), ('(NullPointerException', 21), ('limit)', 21), ('key)', 21), ('file\n', 21), ('U>>', 21), ('indicating', 21), ('io.reactivex.internal.queue.SpscLinkedArrayQueue;\nimport', 21), ('unbounded', 21), ('option', 21), ('SpscLinkedArrayQueue<R>', 21), ('results\n', 21), ('converted', 21), ('TestException);\n', 21), ('Document', 21), ('t,', 21), ('CrashDummy', 21), ('.subscribeOn(Schedulers.io())\n', 21), ('lazySet(DisposableHelper.DISPOSED);\n', 21), ('able', 21), ('Maybe,', 21), ('predicate));\n', 21), ('handling:</b></dt>\n', 21), ('@Before\n', 21), ('printed', 21), ('unit));\n', 21), ('API', 21), ('receiving', 21), ('Flowable<Integer>()', 21), ('sets', 21), ('component', 21), ('id', 21), ('Properties', 21), ('operates', 21), ('org.junit.jupiter.api.Assertions.assertTrue;\n\n/**\n', 21), ('ObjectHelper.requireNonNull(mapper.apply(t),', 21), ('0;\n\n', 21), ('java.util.Iterator;\nimport', 21), ('scheduler.advanceTimeBy(100,', 21), ('creates', 21), ('(!b)', 21), ('Completable.complete()\n', 21), ('.assertValues(1,', 21), ('business', 21), ('}).test();\n\n', 21), ('logic', 21), ('""});\n', 21), ('S>', 21), ('initial', 21), ('time;\n', 21), ('(clazz', 21), ('ds', 21), ('<dt><b>Error', 21), ('about', 21), ('BiConsumer<Object,', 21), ('SimpleQueue<T>', 21), ('}\n\n}', 21), ('combiner', 21), ('downstream.onSubscribe(this);\n', 21), ('maxConcurrency,', 21), ('a.length;\n', 21), ('CompletableSource>()', 21), ('parent.drain();\n', 21), ('worked\n', 21), ('store', 21), ('this.delayError', 21), ('Signals', 21), ('");\n', 21), ('exactly', 21), ('Observer<T>', 21), ('.assertFailureAndMessage(TestException.class,', 21), ('completes.\n', 21), ('Future<?>', 20), ('onSuccess(Object', 20), ('io.reactivex.internal.observers;\n\nimport', 20), ('java.lang.annotation.Retention;\nimport', 20), ('4);\n', 20), ('T5,', 20), ('Flattens', 20), ('AtomicReference<Throwable>', 20), ('this\n', 20), ('s.request(n);\n', 20), ('failed', 20), ('java', 20), ('tc.start);\n', 20), ('ObservableSource<Integer>', 20), ('assertEquals(5,', 20), ('fifth', 20), ('to.assertEmpty();\n', 20), ('takes', 20), ('Open,', 20), ('it.next());\n\n', 20), ('Cancellable}', 20), ('initialized', 20), ('Add', 20), ('s.onNext(1);\n', 20), ('Zip</a>\n', 20), ('o,', 20), ('subscribe(Subscriber<?', 20), ('No', 20), ('o.subscribe();\n', 20), ('.assertNoValues()\n', 20), ('Merge</a>\n', 20), ('io.reactivex.annotations.*;\n\n/**\n', 20), ('white-listed', 20), ('whether', 20), ('Observable.create(new', 20), ('pass', 20), ('error.get();\n', 20), ('applying', 20), ('onComplete();\n', 20), ('control', 20), ('idx,', 20), ('href="http://reactivex.io/documentation/operators/zip.html">ReactiveX', 20), ('innerError(Throwable', 20), ('will\n', 20), ('assertTrue(ex.toString(),', 20), ('{};\n', 20), ('would', 20), ('java.util.Set;\nimport', 20), ('v1,', 20), ('accept(List<Integer>', 20), ('complete', 20), ('method,', 20), ('(compareAndSet(false,', 20), ('represents', 20), ('various', 20), ('set\n', 20), ('invokes', 20), ('zipper)', 20), ('Wraps', 20), ('QueueSubscription<T>', 20), ('other,', 20), ('Flowable.just(1,', 20), ('immediately', 20), ('w.dispose();\n', 20), ('once.\n', 20), ('Future}', 20), ('name\n', 20), ('AppTest', 20), ('run,', 20), ('observer);\n', 20), ('Callable<Integer>()', 20), ('currently', 20), ('b))', 20), ('reading', 20), ('functional', 20), ('5', 20), ('null));\n', 20), ('href="http://reactivex.io/documentation/operators/merge.html">ReactiveX', 20), ('tc', 20), ('amount\n', 20), ('ObservableSource<Integer>>()', 20), ('SingleObserver<T>,', 20), ('source2,\n', 20), ('assertEquals(Long.MAX_VALUE,', 20), ('IllegalStateException("No', 20), ('server', 20), ('established', 20), ('flow', 20), ('successful,', 20), ('Long.MAX_VALUE', 20), ('height="310"', 20), ('finished', 20), ('Single.just(v);\n', 20), ('observer.onNext(1);\n', 20), ('pp2', 20), ('1));\n', 20), ('incoming', 20), ('ArrayList<Integer>();\n', 20), ('ts.cancel();\n\n', 20), ('downstream.\n', 20), ('io.reactivex.Scheduler.Worker;\nimport', 20), ('accept(Disposable', 20), ('io.reactivex.functions.Predicate;\nimport', 20), ('(errors.addThrowable(t))', 20), ('Single,', 19), ('parameters.add(new', 19), ('ignored\n', 19), ('Boolean', 19), ('href="http://reactivex.io/documentation/operators/flatmap.html">ReactiveX', 19), ('src', 19), ('depending', 19), ('v2)', 19), ('null);\n\n', 19), ('p;\n\n', 19), ('Iterator<E>', 19), ('t1', 19), ('contents', 19), ('(TestException', 19), ('#onError(Throwable)}', 19), ('added', 19), ('log.size();\n', 19), ('2L,', 19), ('super(actual);\n', 19), ('SafeSubscriber<Integer>', 19), ('q.poll();\n', 19), ('T>,', 19), ('fusion', 19), ('apply(Observable<Object>', 19), ('SelectionKey', 19), ('supports', 19), ('c)', 19), ('FlatMap</a>\n', 19), ("didn't", 19), ('counter', 19), ('id;\n', 19), ('.concatMapMaybe(new', 19), ('requires', 19), ('always', 19), ('Long>()', 19), ('existing', 19), ('AtomicReference<Disposable>();\n\n', 19), ('Subscribers', 19), ('no-op\n', 19), ('"other', 19), ('design', 19), ('Subscriber<String>', 19), ('TestScheduler();\n', 19), ('configuration', 19), ('Observable<Long>', 19), ('Function<Observable<Object>,', 19), ('node', 19), ('getLogSize()', 19), ('Constructs', 19), ('TestHelper.RACE_LONG_LOOPS;', 19), ('1L,', 19), ('n,', 19), ('merge}', 19), ('converter', 19), ('exception)', 19), ('mapper\n', 19), ('<li>{@code', 19), ('queue.poll();\n', 19), ('org.openjdk.jmh.infra.Blackhole;\nimport', 19), ('this.count', 19), ('this.bufferSupplier', 19), ('(errors.addThrowable(e))', 19), ('inner.dispose();\n', 19), ('delayError;\n\n', 19), ('Integer.MAX_VALUE)', 19), ('to.cancel();\n', 19), ('process', 19), ('V>>', 19), ('want', 19), ('@SuppressForbidden(reason', 19), ('org.junit.jupiter.api.Assertions.assertEquals;\n\n/**\n', 19), ('U>(this,', 19), ('actual.onError(error.terminate());\n', 19), ('other));\n', 19), ('our', 19), ('upstream\n', 19), ("it's", 19), ('i;\n', 19), ('type,', 19), ('TestSubscriber<Object>', 19), ('Functions.emptyConsumer(),', 19), ('actual.onNext(value);\n', 19), ('text', 18), ('ObjectHelper.requireNonNull(other,', 18), ('error);\n', 18), ('names', 18), ('}));\n', 18), ('this.set', 18), ('TimeoutException', 18), ('instances!");\n', 18), ('o2', 18), ('only\n', 18), ('character', 18), ('d1.isDisposed();\n', 18), ('HashSet<>();\n', 18), ('synchronous', 18), ('"source4', 18), ('executed', 18), ('automatically', 18), ('},\n', 18), ('blocking', 18), ('d.dispose();\n\n', 18), ('FluentIterable', 18), ('Thread.sleep(SLEEP_AFTER_CANCEL);\n\n', 18), ('Pattern', 18), ('ts.assertComplete();\n', 18), ('Function<Flowable<Object>,', 18), ('convert', 18), ('1L);\n', 18), ('Maybe.just(1)\n', 18), ('notify', 18), ('(j', 18), ('</dd>\n', 18), ('org.junit.jupiter.api.Assertions.assertNotNull;\nimport', 18), ('apply(Flowable<Object>', 18), ('mainError()', 18), ('deliberately', 18), ('(iterator.hasNext())', 18), ('item)', 18), ('lines', 18), ('happen', 18), ('TestingDeferredScalarSubscriber', 18), ('concurrent', 18), ('));\n', 18), ('CANCELLED)', 18), ('Gets', 18), ('cb.await();\n\n', 18), ('{}', 18), ('producer', 18), ('AtomicReference<Disposable>();\n', 18), ('Iterable\n', 18), ('Flowable<Long>', 18), ('App.main(args);\n', 18), ('b.append("java.lang.RuntimeException:', 18), ('SafeSubscriber<Object>', 18), ('rather', 18), ('supported', 18), ('remaining', 18), ('count,', 18), ('to.assertFailure(TestException.class);\n\n', 18), ('{}\n\n', 18), ('program', 18), ('assertEquals("one",', 18), ('SafeSubscriberTestException);\n', 18), ('still', 18), ('Iterator<Long>', 18), ('step', 18), ('list);\n', 18), ('java.util.Map;\n\nimport', 18), ('ts.assertResult(1,', 18), ('never()).onNext(anyString());\n', 18), ('otherState', 18), ('obj)', 18), ('delaying', 18), ('needs', 18), ('actual.onSuccess(v);\n', 18), ('event\n', 18), ('org.junit.*;\n\nimport', 18), ('Observable<Object>', 18), ('channel.\n', 18), ('ObjectHelper.requireNonNull(source4,', 18), ('subscriptions', 18), ('class.', 18), ('IllegalStateException', 18), ('d2.isDisposed();\n', 18), ('Iterable<Long>', 18), ('this.state', 18), ('User', 18), ('sleep();\n', 18), ('java.util.Map;\n\n/**\n', 18), ('else\n', 18), ('<p>This', 18), ('B,', 18), ('implementing', 18), ('getClass()', 18), ('assertTrue(pp.hasSubscribers());\n\n', 18), ('throwable', 18), ('were', 18), ('applies', 18), ('ESTestCase', 18), ('zip}', 18), ('":', 18), ('whose', 18), ('Flowable.empty();\n', 18), ('class.\n', 18), ('status', 18), ('errorMode;\n\n', 18), ('BiConsumer<List<Integer>,', 18), ('RuntimeException.class)\n', 18), ('message\n', 18), ('onError\n', 18), ('SpscLinkedArrayQueue<Object>', 18), ('onXXX', 18), ('other\n', 18), ('Single.fromCallable(new', 18), ('p;\n', 18), ('positive', 17), ('this.errorMode', 17), ('order', 17), ('List', 17), ('io.reactivex.internal.subscribers;\n\nimport', 17), ('count);\n', 17), ('on\n', 17), ('List<E>', 17), ('func', 17), ('that\n', 17), ('.filter(new', 17), ('owner', 17), ('encounters', 17), ('<T1>', 17), ('Completable.complete();\n', 17), ('1);\n\n', 17), ('"Subscription', 17), ('type;\n', 17), ('produced;\n\n', 17), ('Step', 17), ('scalar', 17), ('performed', 17), ('1;', 17), ('false;\n\n', 17), ('Consumer<Disposable>()', 17), ('generated', 17), ('ts.cancel();\n', 17), ('assertEquals(Arrays.asList(1,', 17), (';\n\n', 17), ('ScheduledRunnable(Functions.EMPTY_RUNNABLE,', 17), ('actual);\n', 17), ('CompositeException(ex,', 17), ('(").append(fileName).append(":").append(i).append(")\\r\\n");\n', 17), ('assertFalse(pp.hasSubscribers());\n', 17), ('part', 17), ('maximum', 17), ('buffer;\n', 17), ('CompositeException', 17), ('Publisher<U>', 17), ('&#64;Override\n', 17), ('timeout}', 17), ('BiPredicate<?', 17), ('(not', 17), ('-&gt;', 17), ('@MethodSource("dataProvider")\n', 17), ('Class<?', 17), ('"unchecked"', 17), ('AppendOnlyLinkedArrayList<Object>', 17), ('.append(className).append("', 17), ('ObjectHelper.requireNonNull(sources,', 17), ('apply(Object', 17), ('k', 17), ('SubscriptionHelper.cancel(this);\n', 17), ('0L;\n', 17), ('FutureTask<Void>(Functions.EMPTY_RUNNABLE,', 17), ("upstream's", 17), ('specify', 17), ('br', 17), ('TestHelper.assertError(list,', 17), ('bufferSize;\n\n', 17), ('timeout\n', 17), ('Thread.currentThread().interrupt();\n', 17), ('T2>', 17), ('empty.\n', 17), ('(!isDisposed())', 17), ('Merges', 17), ('apply', 17), ('iter', 17), ('io.reactivex.internal.disposables.DisposableHelper;\n\n/**\n', 17), ('(IllegalArgumentException', 17), ('Completable()', 17), ('(maxConcurrency', 17), ('</code></pre>\n', 17), ('Lock', 17), ('MaybeSources,', 17), ('left', 17), ('designed', 17), ('require', 17), ('equivalent', 17), ('again', 17), ('holds', 17), ('not\n', 17), ('instance.\n', 17), ('goes', 17), ('size', 17), ('indicate', 17), ('avoid', 17), ('Flowable.fromIterable(iterate(elements', 17), ('member', 17), ('deliver\n', 17), ('observer.onNext(2);\n', 17), ('wraps', 17), ('merge', 17), ('<T2>', 17), ('<br>\n', 17), ('three', 17), ('callable', 17), ('active.decrementAndGet();\n', 17), ('errorMode;\n', 17), ('bufferSize)', 17), ('onNext;\n', 17), ('disposing', 17), ('pp.onNext(1);\n', 17), ('values.\n', 17), ('ex;\n', 17), ('count[0]);\n', 17), ('logging', 17), ('s.onError(e);\n', 17), ('handling', 17), ('propagating', 17), ('Service', 17), ('source.concatMap(new', 17), ('.doOnNext(new', 17), ('exception");\n', 17), ('error)', 17), ('subscribe(ObservableEmitter<Object>', 16), ('instead.\n', 16), ('T1,', 16), ('Cancellable', 16), ('Iterator<T>', 16), ('to.assertResult();\n', 16), ('list.size());\n', 16), ('Checks', 16), ('List<Object>', 16), ('Map<Integer,', 16), ('zip(\n', 16), ('observers?",', 16), ('NONE;\n', 16), ('methods,', 16), ('spellbookDao,', 16), ('money', 16), ('zipArray(Functions.toFunction(zipper),', 16), ('successfully', 16), ('MaybeSource}s', 16), ('Iterable<Integer>', 16), ('it.next());\n', 16), ('cancelled.\n', 16), ('T1>', 16), ('iter.iterator();\n\n', 16), ('(if', 16), ('might', 16), ('e.getCause();\n', 16), ('AtomicReference<Subscription>();\n', 16), ('io.reactivex.internal.util.AtomicThrowable;\nimport', 16), ('R>(observer,', 16), ('period;\n', 16), ('(enter())', 16), ('action)', 16), ('items\n', 16), ('example,', 16), ("'\\''\n", 16), ('TestingDeferredScalarSubscriber(ts);\n', 16), ('assertTrue(cs.hasObservers());\n\n', 16), ('ZipCoordinator<T,', 16), ('sending', 16), ('point', 16), ('(subscribers.get()', 16), ('TestException("Forced', 16), ('Scheduler>()', 16), ('java.util.Optional;\nimport', 16), ('iterator.next();\n', 16), ('fashion', 16), ('ObservableOnSubscribe<Object>()', 16), ('chain', 16), ('defined', 16), ('url', 16), ('T6,', 16), ('against', 16), ('passing', 16), ('implement', 16), ('address', 16), ('i,', 16), ('List<Path>', 16), ('sixth', 16), ('Maybe<Integer>', 16), ('source5,', 16), ('disposed;\n\n', 16), ('TestSubscriber<Integer>()', 16), ('HorrorMovie());\n\n', 16), ('times(1)).onNext("a");\n', 16), ('till', 16), ('implementations', 16), ('source.switchMap(new', 16), ('adds', 16), ('holder', 16), ('JavaVersion', 16), ('overload', 16), ('disposeInner();\n', 16), ('Flowable<T>>', 16), ('org.junit.Assert.assertEquals;\n\nimport', 16), ('o;\n\n', 16), ('lack', 16), ('errors.get();\n', 16), ('w;\n', 16), ('this.defaultValue', 16), ('org.mockito.Mockito.mock;\nimport', 16), ('.append("', 16), ('3', 16), ('processing', 16), ('TLeft,', 16), ('future', 16), ('returning', 16), ('empty,', 16), ('Observable}', 16), ('io.reactivex.schedulers.Schedulers;\nimport', 16), ('")\n', 16), ('(disposed)', 16), ('set;\n', 16), ('predicate,', 16), ('predicate.test(t);\n', 16), ('caller', 16), ('completion', 16), ('child', 16), ('jar', 16), ('predicate;\n\n', 16), ('Object>>()', 16), ('accept', 16), ('<T1,', 16), ('object.', 16), ('using\n', 16), ('Observable.unsafeCreate(new', 16), ('representing', 16), ('(ExecutionException', 16), ('(d)', 16), ('own', 16), ('update', 16), ('SingleObserver<T>', 16), ('?>[]', 16), ('.onTerminateDetach()\n', 16), ('SimpleQueue<U>', 16), ('AbstractMaybeWithUpstream<T,', 16), ('signals.\n', 16), ('demonstrates', 16), ('per', 16), ('latch.countDown();\n', 16), ('provide', 16), ('e++;\n', 16), ('pp.onError(new', 15), ('reducer;\n\n', 15), ('size;\n', 15), ('individual', 15), ('Base', 15), ('""', 15), ('IllegalArgumentException', 15), ('delayError', 15), ('runnable', 15), ('inOrder.verifyNoMoreInteractions();\n', 15), ('reducer)', 15), ('java.io.InputStream;\nimport', 15), ('Executor', 15), ('reducer;\n', 15), ('wip', 15), ('original', 15), ('list.\n', 15), ('TestSubscriber<Integer>();\n\n', 15), ('call[0]);\n', 15), ('here', 15), ('.assertFailure(NullPointerException.class);\n', 15), ('Set<String>', 15), ('io.reactivex.internal.functions.Functions;\n\n@Test\npublic', 15), ('flag', 15), ('Can', 15), ('requests"));\n', 15), ('Should', 15), ('io.reactivex.functions.BiFunction;\nimport', 15), ('it.hasNext());\n', 15), ('<dd>If', 15), ('BufferedReader(new', 15), ('separate', 15), ('Flowable.<Integer>error(new', 15), ('Node', 15), ('ErrorMode.IMMEDIATE)', 15), ('Function<Scheduler,', 15), ('latest', 15), ('called\n', 15), ('empty()', 15), ('Observable<T>>', 15), ('fusionMode', 15), ('Observer<Integer>', 15), ('FluentIterable<E>', 15), ('Created', 15), ('e,', 15), ('subscribers)', 15), ('onSuccess', 15), ('words.add(new', 15), ('call[0]++;\n', 15), ('ID', 15), ('tasks.add(new', 15), ('0L;\n\n', 15), ('CompositeException(e,', 15), ('computation}', 15), ('state;\n\n', 15), ('instance,', 15), ('MaybeSources\n', 15), ('ObjectHelper.requireNonNull(bufferSupplier.call(),', 15), ('wrapping', 15), ('Spellbook', 15), ('"Pool', 15), ('name);\n', 15), ('sa', 15), ('@SchedulerSupport(SchedulerSupport.COMPUTATION)\n', 15), ('function\n', 15), ('behavior\n', 15), ('"sources', 15), ('otherwise.\n', 15), ('disposes', 15), ('BlockingHelper.verifyNonBlocking();\n', 15), ('take', 15), ('bs', 15), ('TimeUnit.MILLISECONDS));\n', 15), ('Word(Arrays.asList(new', 15), ('Account', 15), ('BooleanSupplier', 15), ('assertFalse(cs.hasObservers());\n', 15), ('messages', 15), ('four', 15), ('list,', 15), ('source4,', 15), ('Single<Boolean>', 15), ('this.onError', 15), ('badSource()', 15), ('iterable', 15), ('(compareAndSet(0,', 15), ('observer.onSubscribe(Disposables.empty());\n\n', 15), ('InMemoryAppender();\n', 15), ('5);\n\n', 15), ('throwable)', 15), ('Called', 15), ('handles', 15), ('"c",', 15), ('java.nio.charset.StandardCharsets;\nimport', 15), ('Heavy', 15), ('field\n', 15), ('random', 15), ('TimeUnit.SECONDS));\n\n', 15), ('this.reducer', 15), ('change', 15), ('mapping', 15), ('path,', 15), ('checks', 15), ('source.flatMap(new', 15), ('QueueDisposable<T>', 15), ('verify(subscribedObserver,', 15), ('fail', 15), ('assertEquals(pool.toString(),', 15), ('RuntimeException(e);\n', 15), ('onSuccess}', 15), ('day', 15), ('every', 15), ('BackpressureHelper.produced(requested,', 15), ('field,', 15), ('observer,', 14), ('LotteryTicket', 14), ('io.reactivex.processors.PublishProcessor;\n\npublic', 14), ('AtomicLong();\n\n', 14), ('Queue', 14), ('object,', 14), ('called!");\n', 14), ('emitted;\n', 14), ('ex.getMessage());\n', 14), ('StringBuilder();\n\n', 14), ('.flatMapSingle(new', 14), ('events\n', 14), ('InnerObserver', 14), ('S', 14), ('list.add(v);\n', 14), ('T3>', 14), ('set.delete(inner);\n', 14), ('LoggerFactory.getLogger("root")).addAppender(this);\n', 14), ('signaled', 14), ('(sourceMode', 14), ('apply(Long', 14), ('Movie>()', 14), ('.assertFailure(CompositeException.class);\n\n', 14), ('ExceptionHelper.TERMINATED)', 14), ('report', 14), ('defaultValue;\n\n', 14), ('(checkTerminate())', 14), ('reference', 14), ('Callable<R>', 14), ('observers;\n\n', 14), ('initialization', 14), ('argument', 14), ('trust', 14), ('"rawtypes",', 14), ('errors.\n', 14), ('mock(Disposable.class);\n', 14), ('current;\n', 14), ('Disposable\n', 14), ('thread.\n', 14), ('Thread.sleep(500);\n\n', 14), ('first\n', 14), ('apply(Scheduler', 14), ('OTHER_STATE_CONSUMED_OR_EMPTY;\n', 14), ('this.inner', 14), ('DateFormatRunnalbe.', 14), ('continue', 14), ('query', 14), ('lazy', 14), ('u;\n\n', 14), ('assert', 14), ('Similarly,', 14), ('Functions.EMPTY_ACTION,\n', 14), ('limit;\n', 14), ('getLastMessage()', 14), ('Movie,', 14), ('this.maxConcurrency', 14), ('this.onComplete', 14), ('errors.addThrowable(ex);\n', 14), ('INSTANCE', 14), ('sequence,', 14), ('disconnect', 14), ('Observable\n', 14), ('verifyNoMoreInteractions(observer);\n', 14), ('ParallelFlowable<R>', 14), ('NullPointerException\n', 14), ('integers', 14), ('this.task', 14), ('AtomicBoolean();\n\n', 14), ('assertSame(s,', 14), ('o1', 14), ('obs.toFuture();\n', 14), ('(MIT)\n', 14), ('appender.getLogSize());\n\n', 14), ('this.id', 14), ('count.get());\n', 14), ('if\n', 14), ('to.dispose();\n\n', 14), ('CompositeException}', 14), ('(RuntimeException', 14), ('Singles,', 14), ('unique', 14), ('assertTrue(pp1.hasSubscribers());\n', 14), ('socket', 14), ('InMemoryAppender()', 14), ('deal', 14), ('?,', 14), ('(windows.decrementAndGet()', 14), ('#poll()}', 14), ('other);\n', 14), ('Future<String>', 14), ('0L', 14), ('written', 14), ('adding', 14), ('builder', 14), ('outer', 14), ('2;\n\n', 14), ('&#64;Override', 14), ('trigger', 14), ('though', 14), ('Timed<Integer>(1,', 14), ('string', 14), ('.append(baseTypeName)\n', 14), ('java.util.concurrent.atomic.AtomicLong;\n\nimport', 14), ('initialize', 14), ('a.onError(errors.terminate());\n', 14), ('Google', 14), ('allowed\n', 14), ('<T3>', 14), ('keep', 14), ('Wait', 14), ('statement', 14), ('log.get(log.size()', 14), ('consumed;\n\n', 14), ('io.reactivex.FlowableSubscriber;\nimport', 14), ('reactor', 14), ('assertTrue(pp2.hasSubscribers());\n\n', 14), ('f)\n', 14), ('them\n', 14), ('this.limit', 14), ('e.getMessage());\n', 14), ('onError,', 14), ('Delays', 14), ('subscribers.get()', 14), ('10);\n', 14), ('actual.onComplete();\n\n', 14), ('<li>', 14), ('IOException());\n', 14), ('Publisher");\n', 14), ('pool', 14), ('(b)', 14), ('4', 14), ('implemented', 14), ('zipper', 14), ('options', 14), ('Maybe.empty();\n', 14), ('(result', 14), ('task;\n\n', 14), ('.doOnComplete(new', 14), ('given\n', 14), ('Message', 14), ('*/\nclass', 14), ('ObjectHelper.requireNonNull(scheduler,', 14), ('io.reactivex.flowable;\n\nimport', 14), ('#onComplete()}', 14), ('parameters\n', 14), ('List<Object[]>', 14), ('directory', 14), ('invoke', 14), ('2);\n\n', 14), ('apply(Movie', 14), ('run.dispose();\n', 14), ('inner;\n\n', 14), ('ms;\n', 14), ('terminating', 14), ('BiFunction<Movie,', 14), ('<p>History:', 14), ('failure");\n', 14), ('beforeCancelSleep(to);\n\n', 14), ('Publisher<Integer>>()', 14), ('ps.onComplete();\n\n', 14), ('Maybe.error(new', 13), ('bufferSupplier)', 13), ('Field', 13), ('io.reactivex.observers;\n\nimport', 13), ('(sources.length', 13), ('set);\n', 13), ('n;\n', 13), ('AtomicReference<Throwable>();\n', 13), ('RxJavaPlugins.setErrorHandler(new', 13), ('thread.', 13), ('w.schedule(new', 13), ('MaybeObserver}', 13), ('onSubscribe;\n', 13), ('e.setDisposable(d);\n\n', 13), ('wrapped', 13), ('items;\n', 13), ('AtomicInteger(0);\n\n', 13), ('list;\n', 13), ('Singles', 13), ('Dispatcher', 13), ('total', 13), ('parameters.\n', 13), ('org.junit.jupiter.params.ParameterizedTest;\nimport', 13), ('timing', 13), ('function.\n', 13), ('QueueSubscription.SYNC)', 13), ('t;\n\n', 13), ('assertEquals("two",', 13), ('System.gc();\n', 13), ('times(1)).onNext("b");\n', 13), ('type)', 13), ('array)', 13), ('u;\n', 13), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/zip.png"', 13), ('time.\n', 13), ('a)', 13), ('clazz,', 13), ('take()', 13), ('Since', 13), ('worker;\n', 13), ('test(String', 13), ('ArrayList<>();\n\n', 13), ('"onError', 13), ('notified', 13), ('count[0]++;\n', 13), ('(int)elements)\n', 13), ('ObservableSource<B>', 13), ('old', 13), ('(RejectedExecutionException', 13), ('height="305"', 13), ('ts.request(1);\n\n', 13), ('Reader', 13), ('priority', 13), ('to.assertResult(1,', 13), ('task.dispose();\n', 13), ('onSuccess\n', 13), ('Publisher<B>', 13), ('this.delay', 13), ('Single.just(2),', 13), ('null))', 13), ('err', 13), ('MaybeSource");\n', 13), ('empty\n', 13), ('downstream,\n', 13), ('observers', 13), ('java.io.File;\nimport', 13), ('TestObserver<Long>', 13), ('rights', 13), ('org.junit.Assert.assertTrue;\n\nimport', 13), ('R,', 13), ('e.onNext(1);\n', 13), ('apply(@NonNull', 13), ('before()', 13), ('indicates', 13), ('"scheduler', 13), ('pattern.\n', 13), ('missing', 13), ('disposed()', 13), ('as\n', 13), ('.reduce(new', 13), ('Converts', 13), ('atomicInteger.get());\n', 13), ('size,', 13), ('LOGGER.info("#', 13), ('it.hasNext();\n', 13), ('emit\n', 13), ('D>', 13), ('optional', 13), ('errors.', 13), ('relays', 13), ('(once)', 13), ('io.reactivex.exceptions.MissingBackpressureException;\nimport', 13), ('what', 13), ('AtomicLong\n', 13), ('it.next();\n', 13), ('Consumer', 13), ('description', 13), ('count.incrementAndGet();\n', 13), ('latch', 13), ('-1)', 13), ('null.\n', 13), ('data\n', 13), ('time.', 13), ('iteration', 13), ('subscriber,', 13), ('m)', 13), ('AtomicReference<Subscription>\n', 13), ('java.util.Objects;\nimport', 13), ('HashMap<>();\n\n', 13), ('java.lang.annotation.Target;\n\nimport', 13), ('exception\n', 13), ('internal', 13), ('bad', 13), ('PerfSubscriber', 13), ('o.getClass())', 13), ('SingleSource}s', 13), ('i)', 13), ('queue\n', 13), ('org.mockito.ArgumentMatchers.any;\nimport', 13), ('accumulator;\n', 13), ('file.\n', 13), ('<pre><code>\n', 13), ('fs', 13), ('Author', 13), ('onNext,', 13), ('Reduce', 13), ('onFinally)', 13), ('nothing', 13), ('atomicInteger.incrementAndGet();\n', 13), ('Simple', 13), ('assembly', 13), ('works', 13), ('connect', 13), ('.concatMapSingle(new', 13), ('id)', 13), ('sr', 13), ('10;', 13), ('.assertFailure(TestException.class,', 13), ('aOrAn(e,', 13), ('We', 13), ('can\n', 13), ('named', 13), ('Serializable', 13), ('</p>\n', 13), ('(source', 13), ('ObjectHelper.requireNonNull(mapper.apply(value),', 13), ('actual.onNext(t);\n\n', 13), ('#onError(Throwable)},', 13), ('java.util.function.Function;\nimport', 13), ('basic', 13), ('Schedulers.computation());\n', 13), ('observer.onSubscribe(new', 13), ('accept(final', 13), ('.test(true)\n', 13), ('Object();\n', 13), ('Object();\n\n', 13), ('cast', 13), ('other.\n', 13), ('(wip.decrementAndGet()', 13), ('wr', 13), ('key,', 13), ('delayed', 13), ('BiFunction<Object,', 13), ('(f', 13), ('available\n', 13), ('concat}', 13), ('io.reactivex.parallel;\n\nimport', 13), ('format', 13), ('super.cancel();\n', 13), ('This\n', 13), ('Thread.sleep(200);\n\n', 13), ('Throwable>()', 13), ('CompletableSource");\n', 13), ('Maybe.create(new', 13), ('parallelism', 13), ('receiver', 13), ('};\n//\n//', 13), ('sa,', 12), ('TestObserver', 12), ("won't", 12), ('getAndSet(DisposableHelper.DISPOSED);\n', 12), ('FIXME', 12), ('RainbowFish', 12), ('ArrayList<Throwable>();\n\n', 12), ('j);\n', 12), ('thread\n', 12), ('concatenation', 12), ('directly', 12), ('s.onSubscribe(parent);\n\n', 12), ('T4>', 12), ('work.\n', 12), ('UndeliverableException}', 12), ('sequence.\n', 12), ('onError,\n', 12), ('(C)', 12), ('(error)', 12), ('org.junit.Assert.assertEquals;\nimport', 12), ('TestException("Second"));\n', 12), ('Ensure', 12), ('DisposableHelper.dispose(upstream);\n', 12), ('qs', 12), ('.assertResult(0L,', 12), ('Function<String,', 12), ('exit', 12), ('form', 12), ('&&\n', 12), ('NoSuchElementException());\n', 12), ('size;\n\n', 12), ('CrashDummy(false,', 12), ('.test()', 12), ('.collect(callableListCreator(),', 12), ('Optional<LotteryTicketId>', 12), ('observableDedicated(Blackhole', 12), ('E>', 12), ('T>...', 12), ('Single}\n', 12), ('subscription\n', 12), ('<T4>', 12), ('bufferSupplier;\n\n', 12), ('innerError()', 12), ('all.\n', 12), ('Application', 12), ('Emitter<T>,', 12), ('Data', 12), ('NoSuchElementException.class)\n', 12), ('seventh', 12), ('instances\n', 12), ('subscribers.get();\n', 12), ('block', 12), ('immediately.\n', 12), ('testing', 12), ('T7,', 12), ('observableDedicated', 12), ('*/\n\n/**\n', 12), ('false))\n', 12), ('whole', 12), ('null}', 12), ('TestSubscriber<String>', 12), ('range', 12), ('buffers', 12), ('this.queue;\n', 12), ('io.reactivex.internal.fuseable.SimplePlainQueue;\nimport', 12), ('java.util.Optional;\n\n/**\n', 12), ('lazySet(SubscriptionHelper.CANCELLED);\n', 12), ('NullPointerException("One', 12), ('"]";\n', 12), ('t);\n\n', 12), ('defaultValue)', 12), ('bh;\n', 12), ('fuseToFlowable()', 12), ('LocalDateTime', 12), ('io.reactivex.internal.fuseable;\n\nimport', 12), ('3;', 12), ('observer.onSubscribe(parent);\n\n', 12), ('Instructs', 12), ('io.reactivex.functions.Function;\n\n@Test\npublic', 12), ('TestHelper.checkDoubleOnSubscribeMaybe(new', 12), ('EmptySubscription.error(ex,', 12), ('WindowBoundaryMainObserver<T,', 12), ('However,', 12), ('less', 12), ('Integer>>', 12), ('items.\n', 12), ('observers.get();\n', 12), ('disconnecting', 12), ('Observable<Integer>>()', 12), ('MergeWithObserver<T>', 12), ('innerComplete()', 12), ('WindowBoundaryMainSubscriber<T,', 12), ('.distinct()\n', 12), ('augmented', 12), ('set;\n\n', 12), ('generate', 12), ('ArrayList<String>();\n', 12), ('notifications', 12), ('setting', 12), ('isCancelled()', 12), ('Observable.fromArray(1,', 12), ('hold', 12), ('Concatenate', 12), ('(prefetch', 12), ('drainLoop()', 12), ('Synchronous', 12), ('headers', 12), ('Notification<T>', 12), ('MethodHandle', 12), ('QueueSubscription)', 12), ('instead.', 12), ('is.\n', 12), ('errors)', 12), ('observablePlain.subscribeWith(new', 12), ('Publisher.\n', 12), ('TestHelper.mockObserver();\n', 12), ('background', 12), ('callback\n', 12), ('observablePlain;\n\n', 12), ('MaybeObserver<T>', 12), ('sell', 12), ('Student', 12), ('exceptions\n', 12), ('conversion', 12), ('observableDedicated.subscribeWith(new', 12), ('(individually)', 12), ('values\n', 12), ('.subscribeWith(to)\n', 12), ('numberOfSubscribeCalls.incrementAndGet();\n\n', 12), ('"Second");\n', 12), ('numberOfSubscribeCalls.get());\n', 12), ('RxJavaPlugins#onError(Throwable)}', 12), ('Throwable}s\n', 12), ('scheduler);\n', 12), ('them.\n', 12), ('observableConvert(Blackhole', 12), ('Even', 12), ('"["', 12), ('successful', 12), ('ParallelFailureHandling.ERROR)\n', 12), ('Callable)', 12), ('Long.MAX_VALUE);\n', 12), ('timeout;\n\n', 12), ('Class', 12), ('produced;\n', 12), ('fallback;\n', 12), ('LOGGER.info(AppManager.printCacheContent());\n', 12), ('ps)', 12), ('Integer.MAX_VALUE);\n', 12), ('io.reactivex.observers.*;\nimport', 12), ('(composite)', 12), ('observableDedicated;\n\n', 12), ('Single}.\n', 12), ('look', 12), ('times(1)).onNext(new', 12), ('Blackhole', 12), ('schedule(@NonNull', 12), ('assertFalse(tc.isDisposed());\n', 12), ('.assertErrorMessage("error")\n', 12), ('2.1.14', 12), ('validation', 12), ('ts.assertNoValues();\n\n', 12), ('Throwable}s', 12), ('BufferBoundaryObserver<T,', 12), ('resulting\n', 12), ('boundary', 12), ('Observable.fromArray(sourceArray);\n\n', 12), ('events.', 12), ('Callable<C>', 12), ('current;\n\n', 12), ('verified)\n', 12), ('BufferBoundarySubscriber<T,', 12), ('delayErrors,', 12), ('MERCHANTABILITY,', 12), ('"Forced', 12), ('Cancellation', 12), ('MaybeOnSubscribe<Object>()', 12), ('onSuccess(R', 12), ('TimeoutSupport', 12), ('connects', 12), ('f;\n', 12), ('1000,', 12), ('open;\n', 12), ('inOrder(w);\n', 12), ('io.reactivex.internal.util.BackpressureHelper;\nimport', 12), ('UI', 12), ('Observable.just("one",', 12), ('Applies', 12), ('defaultValue,', 12), ('Maybe.fromCallable(new', 12), ('TestHelper.race(r,', 12), ('CompletableOnSubscribe()', 12), ('count++;\n', 12), ("one's", 12), ('io.reactivex.subjects.*;\n\npublic', 12), ('from\n', 12), ('"a",', 12), ('Observable<Movie>', 12), ('1).getFormattedMessage();\n', 12), ('behavior', 12), ('onSuccess,', 12), ('SingleObserver}', 12), ('operation.\n', 12), ('pp.onNext(2);\n', 12), ('Long.MAX_VALUE))', 12), ('hasNext', 12), ('subscribe(CompletableEmitter', 12), ('collector;\n', 12), ('3;\n', 12), ('calls[0]);\n', 12), ('refCount}', 12), ('onAfterTerminate.run();\n', 12), ('s.request(1);\n', 12), ('Optional.empty();\n', 12), ('});\n//\n//', 12), ('observablePlain(Blackhole', 12), ('Observable.empty();\n', 12), ('emitter)', 12), ('subscribe(MaybeEmitter<Object>', 12), ('remote', 12), ('(getAndSet(DisposableHelper.DISPOSED)', 12), ('Single.\n', 12), ('assertFalse(ps.hasObservers());\n', 12), ('dependent', 12), ('queue.offer(t);\n', 12), ('input)', 12), ('tc.onSubscribe(d);\n\n', 12), ('switch', 12), ('java.util.Objects;\n\n/**\n', 12), ('reducer', 12), ('transfer', 12), ('fallback)', 12), ('regular', 12), ('java.security.AccessController;\nimport', 12), ('compareAndSet(0,', 12), ('qd', 12), ('request\n', 12), ('dataProvider()', 12), ('ExecutionException,', 12), ('generic', 12), ('Observable.empty()\n', 12), ('assertFalse(pp2.hasSubscribers());\n\n', 12), ('User}', 12), ('observablePlain', 12), ('sa;\n', 12), ('source(s)', 12), ('special', 12), ('TestSubscriber.create();\n', 12), ('video', 12), ('TestHelper.mockSubscriber();\n\n', 12), ('just(new', 12), ('io.reactivex.schedulers;\n\nimport', 12), ('(atomicInteger.decrementAndGet()', 12), ('content', 12), ('Inc.\n', 12), ('Future}\n', 12), ('numberOfSubscribeCalls', 12), ('view', 12), ('DTO', 12), ('.assertNotComplete()\n', 12), ('collect', 12), ('appear', 12), ('removed', 12), ('or,', 12), ('nulls', 11), ('onFinally;\n\n', 11), ('org.elasticsearch.common.Nullable;\nimport', 11), ('valid', 11), ('java.io.BufferedReader;\nimport', 11), ('2;\n', 11), ('userId)', 11), ('fresh', 11), ('MpscLinkedQueue<Object>', 11), ('ByteBuffer', 11), ('flowableDedicated.subscribeWith(new', 11), ('SubscriptionHelper.cancel(other);\n', 11), ('TestHelper.checkDoubleOnSubscribeObservable(new', 11), ('assertSame(ex,', 11), ('fail("expects', 11), ('Integer.MAX_VALUE', 11), ('flowableDedicated', 11), ('parent.innerComplete();\n', 11), ('CakeLayerInfo', 11), ('setResource(Disposable', 11), ('connection.\n', 11), ('flowableDedicated(Blackhole', 11), ('sourcesIterable)', 11), ('InstantPeriodicTask', 11), ('(wip.getAndIncrement()', 11), ('Collections.emptyList();\n', 11), ('(which', 11), ('writing', 11), ('Single.zip(Single.just(1),', 11), ('SingleSubject}', 11), ('are\n', 11), ('dates', 11), ('subscriber\n', 11), ('reaches', 11), ('TestSubscriber<Long>', 11), ('io.reactivex.observable;\n\nimport', 11), ('.collect(new', 11), ('components', 11), ('list)', 11), ('this.onFinally', 11), ('scheduler.advanceTimeTo(2,', 11), ('structs', 11), ('methods\n', 11), ('io.reactivex.internal.queue.MpscLinkedQueue;\nimport', 11), ('scheduler\n', 11), ('delayErrors));\n', 11), ('t;\n//', 11), ('QueueDisposable)', 11), ('while\n', 11), ('<p>Note', 11), ('resource\n', 11), ('r);\n', 11), ('SubscriptionHelper.cancel(upstream);\n', 11), ('settings', 11), ('registered', 11), ('8', 11), ('accumulator', 11), ('SubscriptionHelper.setOnce(this,', 11), ('io.reactivex.SingleObserver;\nimport', 11), ('this.type', 11), ('observer;\n\n', 11), ('handled', 11), ('Single<?', 11), ('Write', 11), ('</pre>\n', 11), ('collector)', 11), ('LOGGER.info("Find', 11), ('Predicate<String>()', 11), ('inner.get();\n', 11), ('Run', 11), ('MaybeObserver#onError', 11), ('this.downstream;\n', 11), ('Flowable.fromArray(sourceArray);\n\n', 11), ('http', 11), ('ObservableSource<Integer>()', 11), ('Properties();\n', 11), ('readString(scanner);\n', 11), ('java.net.InetAddress;\nimport', 11), ('set.add(run);\n\n', 11), ('...', 11), ('err;\n', 11), ('members', 11), ('fashion,', 11), ('usage', 11), ('FileNotFoundException', 11), ('EMPTY', 11), ('2.1.11', 11), ('Maybe<Integer>()', 11), ('ParallelInvalid()\n', 11), ('environment', 11), ('InputStream', 11), ('observableConvert.subscribeWith(new', 11), ('1000;', 11), ('duration', 11), ('org.junit.Test;\n\npublic', 11), ('Flowable.just(v);\n', 11), ('assertTrue(pp.hasSubscribers());\n', 11), ('(int):', 11), ('.take(1)\n', 11), ('TestObserver<Void>();\n\n', 11), ('AssertionError', 11), ('(delayError)', 11), ('Starts', 11), ('idx;\n', 11), ('full', 11), ('Locale.ROOT,\n', 11), ('evaluated', 11), ('exec.shutdownNow();\n', 11), ('flowablePlain;\n\n', 11), ('flowablePlain(Blackhole', 11), ('org.elasticsearch.env.Environment;\nimport', 11), ('AsyncSubject}', 11), ('to.assertNotComplete();\n', 11), ('assertable\n//', 11), ('*/\nfinal', 11), ('observableConvert', 11), ('Callable<Scheduler>', 11), ('Flowable.empty()\n', 11), ('<li>\n', 11), ('major', 11), ('IllegalArgumentException.class)\n', 11), ('ready', 11), ('org.elasticsearch.common.SuppressForbidden;\nimport', 11), ('specified\n', 11), ('time\n', 11), ('(getAndSet(0)', 11), ('(DisposableHelper.validate(upstream,', 11), ('forward', 11), ('CompositeException.class);\n', 11), ('extending', 11), ('(u', 11), ('LoggerFactory.getLogger(clazz)).addAppender(this);\n', 11), ('There', 11), ('java.util.concurrent.CountDownLatch;\n\nimport', 11), ('DatagramPacket', 11), ('.subscribe(observer);\n\n', 11), ('index);\n', 11), ('List<SimpleObject>', 11), ('ObservableSource");\n', 11), ('set.add(d);\n', 11), ('InnerObserver<?,', 11), ('URL', 11), ('Long.MAX_VALUE;\n', 11), ('TestObserver<Object>();\n\n', 11), ('Executors.newSingleThreadExecutor();\n', 11), ('Publisher<?>>', 11), ('org.junit.jupiter.api.Assertions.assertFalse;\nimport', 11), ('onFinally;\n', 11), ('publisher', 11), ('well', 11), ('Wizard', 11), ('java.util.concurrent.TimeUnit;\n\n/**\n', 11), ('Reactor', 11), ('session', 11), ('zipper;\n', 11), ('.flatMap(new', 11), ('working', 11), ('capacityHint;\n', 11), ('timer', 11), ('this.worker', 11), ('a.onNext(v);\n\n', 11), ('flowableConvert(Blackhole', 11), ('assertEquals(6,', 11), ('compare(Integer', 11), ('submitted', 11), ('serialized', 11), ('first,', 11), ('close()', 11), ('skip;\n', 11), ('io.reactivex.internal.fuseable.FuseToFlowable;\nimport', 11), ('closing', 11), ('onComplete\n', 11), ('flowablePlain', 11), ('actual.onError(errors.terminate());\n', 11), ('CakeToppingInfo', 11), ('information.\n', 11), ('Observer}', 11), ('calls[0]++;\n', 11), ('MaybeSources.\n', 11), ('LOGGER.info("{}', 11), ('userAccount)', 11), ('emit();\n', 11), ('Construct', 11), ('sourceMode', 11), ('Thomas', 11), ('a.onError(e);\n', 11), ('response\n', 11), ('full?!"));\n', 11), ('InMemoryAppender(Class', 11), ('customers', 11), ('flowableDedicated;\n\n', 11), ('.assertSubscribed()\n', 11), ('List<Wizard>', 11), ('Completable.create(new', 11), ('end;\n', 11), ('Thread.sleep(1);\n', 11), ('going', 11), ('Is', 11), ('IllegalArgumentException(\n', 11), ('id,', 11), ('flowablePlain.subscribeWith(new', 11), ('Exception;\n}\n', 11), ('3);\n\n', 11), ('PublishSubject}', 11), ('observer\n', 11), ('+=', 11), ('Writes', 11), ('Consumer<Object>()', 11), ('this)', 11), ('Scheduler,', 11), ('downstream\n', 11), ('Exceptions.throwIfFatal(exc);\n', 11), ('active;\n\n', 11), ('so.onSubscribe(cd);\n\n', 11), ('security', 11), ('Adds', 11), ('ownerStructName', 11), ('t1)', 11), ('defines', 11), ('ObserverFusion.newTest(QueueFuseable.ANY);\n\n', 11), ('customer)', 11), ('Comparator<Integer>()', 11), ('password', 11), ('javaClass', 11), ('Flowable.fromArray(1,', 11), ('whitelistMethod.javaMethodName', 11), ('ds.onComplete();\n\n', 11), ('very', 11), ('inner.cancel();\n', 11), ('inside', 11), ('to.assertNoErrors();\n', 11), ('Subscriber<Integer>', 11), ('TrustConfig', 11), ('Flowable<R>', 11), ('produced++;\n', 11), ('FutureTask<Void>', 11), ('org.junit.jupiter.params.provider.MethodSource;\n\nimport', 11), ('d,', 11), ('(emitting)', 11), ('contain', 11), ('ParallelFailureHandling', 11), ('InnerSubscriber<?,', 11), ('TestHelper.mockSubscriber();\n', 11), ('callbacks', 11), ('qs;\n', 11), ('AtomicReference', 11), ('String.format(\n', 11), ('Predicate<Throwable>()', 11), ('Handle', 11), ('Future', 11), ('TODO', 11), ('[{}]', 11), ('observableConvert;\n\n', 11), ('TestHelper.compositeList(list.get(0));\n', 11), ('Signal', 11), ('combine', 11), ('prevent', 11), ('m.javadoc.indexOf("', 11), ('Flowable<Movie>', 11), ('retry}', 11), ('2.0.1', 11), ('Flowable.just(1).delay(10,', 11), ('album', 11), ('actual.onNext(v);\n', 11), ('requested.get())', 10), ('explicit,', 10), ('Emitter<Object>', 10), ('apply(Completable', 10), ('parent.otherComplete();\n', 10), ('INNER_DISPOSED)', 10), ('dispose/cancel', 10), ('ts.assertValues(1,', 10), ('"Potion', 10), ('io.reactivex.Scheduler;\nimport', 10), ('username', 10), ('needed', 10), ('Iterator<Integer>', 10), ('(observers.compareAndSet(a,', 10), ('this.onNext', 10), ('STATE_INACTIVE;\n', 10), ('digger', 10), ('certificate', 10), ('Callable<Object>', 10), ('local', 10), ('buf', 10), ('Letter(\n', 10), ('loop', 10), ('e1)', 10), ('TestResourceMaybeObserver<Integer>', 10), ('maxConcurrency;\n\n', 10), ('ConnectableFlowable}', 10), ('onSubscribe(@NonNull', 10), ('B>\n', 10), ('TestHelper.checkDoubleOnSubscribeFlowable(new', 10), ('Unlike', 10), ('subscribers;\n\n', 10), ('subscribeNext();\n', 10), ('java.sql.SQLException;\nimport', 10), ('TestException("Inner");\n', 10), ('DB', 10), ('lead', 10), ('javaRegex,', 10), ('Schedulers.computation(),', 10), ('Result', 10), ('((mode', 10), ('then\n', 10), ('Connects', 10), ('(other', 10), ('DataType', 10), ('better', 10), ('level', 10), ('observer.onSubscribe(wr.get());\n', 10), ('Thread.currentThread());\n', 10), ('contained', 10), ('Observable.wrap(new', 10), ('onComplete.', 10), ('assertTrue(e.isDisposed());\n', 10), ('constructors,', 10), ('invoked', 10), ('other.subscribe(new', 10), ('listener)', 10), ('Flowable\\r\\n', 10), ('IllegalArgumentException("invalid', 10), ('io.reactivex.internal.functions.ObjectHelper;\n\n/**\n', 10), ('certain', 10), ('dragon', 10), ('PermissionCollection', 10), ('capacityHint)', 10), ('point.\n', 10), ('onNext,\n', 10), ('times(1)).onNext("one");\n', 10), ('terry', 10), ("isn't", 10), ('HTTP', 10), ('TestException("outer"));\n', 10), ('handler)', 10), ('unsubscribed.\n', 10), ('loading', 10), ('terminated\n', 10), ('Print', 10), ('MaybeSource,', 10), ('Observable.fromCallable(new', 10), ("'null'", 10), ('subscribing', 10), ('i);\n', 10), ('j++)', 10), ('actual));\n', 10), ('this.fallback', 10), ('takeUntil}', 10), ('AtomicReference<T>', 10), ('10000;', 10), ('duplicate', 10), ('e)\n', 10), ('executorService.shutdown();\n', 10), ('DisposableHelper.dispose(other);\n', 10), ('welcome', 10), ('}).subscribe(new', 10), ('EMPTY;\n', 10), ('org.elasticsearch.common.settings.Settings;\nimport', 10), ('items.add(new', 10), ('source);\n', 10), ('runtime', 10), ('Item(ItemType.POTION,', 10), ('source.blockingLatest();\n\n', 10), ('IOException,', 10), ('(StringReader', 10), ('BufferedReader(sr))', 10), ('Update', 10), ('RefConnection', 10), ('default,', 10), ('dematerialize', 10), ('The\n', 10), ('tx', 10), ('verify(sideEffectObserver,', 10), ('.switchMapMaybe(new', 10), ('non', 10), ('run.run();\n', 10), ('this.observers', 10), ("that's", 10), ('ex));\n', 10), ('according', 10), ('.toObservable()\n', 10), ('1000);\n', 10), ('SwitchMapInnerObserver', 10), ('(a[i]', 10), ('X509ExtendedTrustManager', 10), ('onComplete.run();\n', 10), ('c,', 10), ('(mode', 10), ('Flowable.generate(new', 10), ('Filters', 10), ('.doFinally(this)\n', 10), ('run)', 10), ('responsibility', 10), ('io.reactivex.Single;\nimport', 10), ('assertTrue(appender.logContains("Dwarf', 10), ('non-null', 10), ('transformation.\n', 10), ('assertNull(wr.get());\n', 10), ('BiFunction<S,', 10), ('9', 10), ('java.lang.annotation.RetentionPolicy.RUNTIME;\n\n/**\n', 10), ('<U>\n', 10), ('Module', 10), ('Expression', 10), ('(subscribers.compareAndSet(a,', 10), ('org.elasticsearch.xpack.core.ssl;\n\nimport', 10), ('spellDao);\n', 10), ('delays', 10), ('"source5', 10), ('Assert.assertEquals(false,', 10), ('Singleton', 10), ('Arrays.asList(1,', 10), ('(ParallelFailureHandling', 10), ('onComplete)', 10), ('accept(Subscription', 10), ('IOException();\n', 10), ('BuildStep', 10), ('sd;\n', 10), ('"\n', 10), ('Generates', 10), ('12/30/15', 10), ('use.</dd>\n', 10), ('Date().getTime(),', 10), ('region', 10), ('subscribe(SingleEmitter<Object>', 10), ('String>()', 10), ('Runnable,', 10), ('Function<Object[],', 10), ('ArrayList<Object>();\n\n', 10), ('endregion\n\n', 10), ('(eager)', 10), ('rmo', 10), ('onNext(U', 10), ('enumeration', 10), ('com.iluwatar.layers;\n\nimport', 10), ('execute(Runnable', 10), ('flowableConvert', 10), ('mock(Callable.class);\n\n', 10), ('super(actual,', 10), ('w;\n\n', 10), ('worker;\n\n', 10), ('horrorMovies', 10), ('({@code', 10), ('npe', 10), ('cs.onError(new', 10), ('this.zipper', 10), ('executor.submit(callableDf);\n', 10), ('(expected', 10), ('2.1.10', 10), ('Execute', 10), ('spell', 10), ('emitted,', 10), ('having', 10), ('inOrder(observer);\n\n', 10), ('connection)', 10), ('stopping', 10), ('double', 10), ('Flowable<Object>', 10), ('SafeSubscriber<Integer>(ts);\n\n', 10), ('.concatMapDelayError(new', 10), ('onComplete,\n', 10), ('(state', 10), ('x', 10), ('userAccount);\n', 10), ('errorAll(a);\n', 10), ('seed', 10), ('condition', 10), ('ParallelFailureHandling.values())', 10), ('disposed;\n', 10), ('FlatMapMaybeObserver<T,', 10), ('ObjectHelper.requireNonNull(source5,', 10), ('.append("Completable', 10), ('U>\n', 10), ('(Maybe.java:").append(m.javadocLine', 10), ('cancellation\n', 10), ('Convenience', 10), ('FileLoggerModule', 10), ('when\n', 10), ('further', 10), ('getAndSet(this);\n', 10), ('child)', 10), ('load', 10), ('this.time', 10), ('Observable<R>', 10), ('override', 10), ('makes', 10), ('apply(Object[]', 10), ('IndexOutOfBoundsException.class)\n', 10), ('source5\n', 10), ('SingleOnSubscribe<Object>()', 10), ('3)', 10), ('TestObserver<Integer>()', 10), ('onNext(B', 10), ('Maybe.<Integer>error(new', 10), ('executorService', 10), ('NONE)', 10), ('intended', 10), ('So', 10), ('concrete', 10), ('getOrCreateQueue();\n', 10), ('onAfterTerminate;\n', 10), ('item;\n', 10), ('assertTrue(e', 10), ('s.cancel();\n\n', 10), ('considered', 10), ('signalled', 10), ('expect', 10), ('page', 10), ('emitter;', 10), ('requests.\n', 10), ('BiConsumer<Integer,', 10), ('succeeded,', 10), ('cd.toSafe();\n', 10), ('allCustomers', 10), ('List<CakeLayerInfo>', 10), ('work\n', 10), ('this.collector', 10), ('TimeoutConsumer', 10), ('T5>', 10), ('delayError,', 10), ('subscribed\n', 10), ('Maybe.\n', 10), ('apply(Flowable', 10), ('prefetch);\n', 10), ('qd;\n', 10), ('upstream);\n}\n', 10), ('observer.onError(ex);\n', 10), ('NoSuchElementException();\n', 10), ('assertFalse(pp1.hasSubscribers());\n', 10), ('WeakReference<Disposable>', 10), ('constructors', 10), ('method.', 10), ('onAfterTerminate)', 10), ('put', 10), ('current.dispose();\n', 10), ('Emitter<Object>>()', 10), ('1024)\n', 10), ('To', 10), ('serialization', 10), ('TimeoutSelectorSupport', 10), ('Book', 10), ('lifetime', 10), ('eventProcessor.process(new', 10), ('.subscribeWith(new', 10), ('(Completable.java:").append(m.javadocLine', 10), ('key\n', 10), ('children', 10), ('(errors.get()', 10), ('Map<Long,', 10), ('cancels', 10), ('once;\n\n', 10), ('Observable.range(v,', 10), ('remaining;\n', 10), ('called.\n', 10), ('<T5>', 10), ('java.security.PrivilegedAction;\nimport', 10), ('2016', 10), ('BigInteger', 10), ('||\n', 10), ('After', 10), ('ObjectHelper.requireNonNull(mapper.apply(v),', 10), ('flowableConvert;\n\n', 10), ('java.lang.annotation.ElementType;\nimport', 10), ('onTimeout(long', 10), ('collection;\n', 10), ('other}', 10), ('comparator', 10), ('WeakReference<Disposable>(d);\n\n', 10), ('ThreadLocal', 10), ('ensure', 10), ('SpecialPermission.check();\n', 10), ('j,', 10), ('values)', 10), ('io.reactivex.internal.subscriptions;\n\nimport', 10), ('java.util.Set;\n\n/**\n', 10), ('concurrently', 10), ('clazz;\n', 10), ('flowableConvert.subscribeWith(new', 10), ('onSubscribe)', 10), ('honor', 10), ('resource.\n', 10), ('id\n', 10), ('Future<Result>', 10), ('class,', 10), ('(error.addThrowable(ex))', 10), ('.append("Maybe', 10), ('Consumer<Subscription>()', 10), ('w.onComplete();\n', 10), ('Functions.EMPTY_ACTION,', 10), ('"First");\n\n', 10), ('Paul', 10), ('once;\n', 10), ('marked', 10), ('io.reactivex.internal.queue.SpscArrayQueue;\nimport', 10), ('info', 10), ('(!eager)', 10), ('TestException.class)\n', 10), ('b[n]', 10), ('dispatcher', 10), ('thread-safe', 10), ('3L);\n\n', 10), ('org.mockito.Mockito.verify;\nimport', 10), ('calls);\n', 10), ('combinations', 10), ('events.\n', 10), ('(DisposableHelper.dispose(this))', 9), ('ObservableSource<Object>()', 9), ('org.elasticsearch.common.inject;\n\nimport', 9), ('Runs', 9), ('(ASF)', 9), ('ConnectableFlowable\n', 9), ('described', 9), ('otherError(Throwable', 9), ('Iterable<T>', 9), ('task;\n', 9), ('s.get();\n', 9), ('EmptyDisposable.error(new', 9), ('serial', 9), ('disposed.\n', 9), ('items)', 9), ('ConnectableObservable\n', 9), ('TestResourceCompletableObserver', 9), ('io.reactivex.functions.Cancellable;\nimport', 9), ("'rails'", 9), ('5),', 9), ('.assertNotComplete();\n\n', 9), ('acquired', 9), ('(Connection', 9), ('Injector', 9), ('Collection<Object[]>', 9), ('limit;\n\n', 9), ('(pcampbell@kemitix.net)\n', 9), ('SingleSubject', 9), ('got', 9), ('buffer;\n\n', 9), ('headers;\n', 9), ('fails\n', 9), ('manner', 9), ('complete()', 9), ('errors.get()', 9), ('parent.innerError(this,', 9), ('.toFlowable()\n', 9), ('connection;\n', 9), ('Observable.just("a",', 9), ('(inner.compareAndSet(sender,', 9), ('errorHandler', 9), ('occurred', 9), ('task\n', 9), ('calls\n', 9), ('allowing', 9), ('AND\n', 9), ('default:\n', 9), ('ASF', 9), ('AtomicInteger(1);\n', 9), ('consumer\n', 9), ('Cache', 9), ('channel,', 9), ('computation', 9), ('matches', 9), ('(errors.addThrowable(ex))', 9), ('next;\n', 9), ('closed', 9), ('Publisher<Object>', 9), ('non-blocking', 9), ('BUT\n', 9), ('.mergeWith(Single.just(100))\n', 9), ('sender', 9), ('versions', 9), ('ss', 9), ('lastName;\n', 9), ('logs', 9), ('item;\n\n', 9), ('subscribeNext()', 9), ('java.util.NoSuchElementException;\n\nimport', 9), ('(SubscriptionHelper.validate(upstream,', 9), ('Foundation', 9), ('fuseable', 9), ('cancellation', 9), ('org.junit.jupiter.api.Assertions.assertNotNull;\n\n/**\n', 9), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.zip.png"', 9), ('concurrently.\n', 9), ('onError()', 9), ('io.reactivex.internal.disposables.EmptyDisposable;\n\npublic', 9), ('AbilityStep', 9), ('entity', 9), ('Concatenates', 9), ('{\n}\n', 9), ('Flowable.interval(1,', 9), ('throwing', 9), ('assertTrue(promise.isDone());\n', 9), ('String...', 9), ('primitive', 9), ('AlbumPage', 9), ('list.size());\n\n', 9), ('TestSubscriber', 9), ('org.junit.jupiter.api.Assertions.assertTrue;\nimport', 9), ('classpath', 9), ('chest', 9), ('resource)', 9), ('io.reactivex.disposables;\n\nimport', 9), ('AtomicBoolean(false);\n', 9), ('SingleSource,', 9), ('sender)', 9), ('Observable.just(1).delay(10,', 9), ('}\n\n//', 9), ('<p>If', 9), ('TestHelper.compositeList(to.errors().get(0));\n\n', 9), ('TestHelper.assertUndeliverable(list,', 9), ('data.', 9), ('prepare', 9), ('overhead', 9), ('there\n', 9), ('this.capacityHint', 9), ('Asynchronous', 9), ('definition:', 9), ('down', 9), ('s.request(prefetch);\n', 9), ('users', 9), ('null));\n\n', 9), ('ignore', 9), ('java.util.Arrays;\n\nimport', 9), ('Appender', 9), ('restriction,\n', 9), ('(in', 9), ('Functions.alwaysTrue())\n', 9), ('Single.create(new', 9), ('2.1.7', 9), ('performs', 9), ('<pre>\n', 9), ('2.0.8', 9), ("rail's", 9), ('100);\n', 9), ('SingleSource");\n', 9), ('Expected', 9), ("'", 9), ('MissingBackpressureException("Could', 9), ('Page', 9), ('CLAIM,\n', 9), ('responsible', 9), ('Settings', 9), ('io.reactivex.plugins.RxJavaPlugins#onError(Throwable)}.\n', 9), ('SingleSource\n', 9), ('(resource', 9), ('accumulated', 9), ('amount.\n', 9), ('Functions.emptyConsumer())\n', 9), ('match', 9), ('this.onSubscribe', 9), ('}})\n', 9), ('non-overlapping', 9), ('mapperCrash()', 9), ('functions', 9), ('Singles.\n', 9), ('org.elasticsearch.ElasticsearchException;\nimport', 9), ('terminate.\n', 9), ('e2', 9), ('add\n', 9), ('no\n', 9), ('usually', 9), ('createWorker()', 9), ('observers)', 9), ('delay\n', 9), ('"onSubscribe', 9), ('asyncResult', 9), ('utilityClass()', 9), ('signature', 9), ('height="315"', 9), ('this.onAfterTerminate', 9), ('providing', 9), ('throw\n', 9), ('.subscribe();\n', 9), ('delay.\n', 9), ('routed', 9), ('LinkedQueueNode<T>', 9), ('available=0', 9), ('(!empty)', 9), ('List<CustomerDto>', 9), ('CompletableObserver()', 9), ('onError)', 9), ('shows', 9), ('javaMajorVersion', 9), ('Throwables', 9), ('Maybe<Object>', 9), ('EmptySubscription.error(e,', 9), ('count;', 9), ('decoratedRun', 9), ('lifecycle', 9), ('fuseToObservable()', 9), ('(inner', 9), ('(InputStream', 9), ('io.reactivex.disposables.Disposable;\n\n/**\n', 9), ('initialSupplier;\n', 9), ('v2', 9), ('properly.\n', 9), ('fromCallableObservable', 9), ('this.skip', 9), ('collection.', 9), ('a.onNext(v);\n', 9), ('onError(@NonNull', 9), ('memory', 9), ('(', 9), ('Thread.currentThread().interrupt();\n\n', 9), ('idx);\n\n', 9), ('ConnectableObservable}', 9), ('Function<T,', 9), ('normally.\n', 9), ('io.reactivex.schedulers.Schedulers;\n\n/**\n', 9), ('details', 9), ('disposeBoundary();\n', 9), ('java.util.Set;\n\nimport', 9), ('w)', 9), ('onError.\n', 9), ('real', 9), ('Example', 9), ('initialSupplier,', 9), ('BiFunction<Long,', 9), ('errors\n', 9), ('integer', 9), ('Callable}', 9), ('Cake', 9), ('errorMode)', 9), ('necessary', 9), ('ts.request(2);\n', 9), ('plugins', 9), ('(getCount()', 9), ('size)', 9), ('key);\n', 9), ('cs.onComplete();\n\n', 9), ('IllegalStateException}', 9), ('evaluates', 9), ('ms.onSuccess(1);\n\n', 9), ('2))\n', 9), ('ObjectHelper.verifyPositive(prefetch,', 9), ('RxJavaPlugins.setComputationSchedulerHandler(new', 9), ('(the\n', 9), ('GroupedFlowable<K,', 9), ('built', 9), ('delayTime,', 9), ('Executors.newFixedThreadPool(2);\n', 9), ('false)\n', 9), ('.mergeWith(Maybe.just(100))\n', 9), ('temporary', 9), ('appropriate', 9), ('{@linkplain', 9), ('generator', 9), ('readObject,', 9), ('subsequent', 9), ('ExceptionHelper.addThrowable(error,', 9), ('2.1\n', 9), ('each\n', 9), ('methods.\n', 9), ('assertEquals(Disposables.disposed(),', 9), ('goNextSource', 9), ('subscribes.\n', 9), ('Subscription>', 9), ('.doOnError(new', 9), ('AtomicInteger(3);\n', 9), ('org.mockito.Matchers.eq;\nimport', 9), ('12/27/15', 9), ('Campbell', 9), ('zipper;\n\n', 9), ('Callable<Boolean>()', 9), ('c.lazySet(null);\n', 9), ('java.io.InputStreamReader;\nimport', 9), ('apply(Maybe<Object>', 9), ('backpressure.</dd>\n', 9), ('s.onError(ex);\n', 9), ('once,', 9), ('ThreadAsyncExecutor', 9), ('thus', 9), ('Single<Integer>()', 9), ('RxJavaPlugins', 9), ('ds.setupDownstream();\n\n', 9), ('simple()', 9), ('io.reactivex.ObservableSource;\nimport', 9), ('know', 9), ('maxConcurrency)', 9), ('invoked\n', 9), ('NOPMD\n', 9), ('Observable.interval(1,', 9), ('c;\n\n', 9), ('null"),', 9), ('Timed<Integer>', 9), ('email', 9), ('Implementation', 9), ('published', 9), ('list.add(t);\n', 9), ('Iterator<Object>', 9), ('CompletableSource[]', 9), ('this.bh', 9), ('this.accumulator', 9), ('.append("Single', 9), ('NullPointerException("onError', 9), ('assertTrue(cdl.await(5,', 9), ('to.assertOf(ObserverFusion.<Integer>assertFuseable())\n', 9), ('parse', 9), ('null");\n\n', 9), ('app', 9), ('ObjectHelper.requireNonNull(unit,', 9), ('Disposable.\n', 9), ('java.util.Optional;\n\nimport', 9), ('"two",', 9), ('which\n', 9), ('GroupedUnicast<K,', 9), ('NullPointerException.class,', 9), ('such\n', 9), ('completion.\n', 9), ('onNext(R', 9), ('"unit', 9), ('object.\n', 9), ('mocked', 9), ('behaves', 9), ('Observable.<Integer>error(new', 9), ('Schedulers}', 9), ('addition,', 9), ('this.sources;\n', 9), ('(line', 9), ('firstName;\n', 9), ('downstream,', 9), ('q.offer(t);\n', 9), ('cleanup', 9), ('@Ignore("Subscribers', 9), ('changes', 9), ('(error', 9), ('age', 9), ('Function<Maybe<Object>,', 9), ('BooleanSubscription());\n\n', 9), ('IllegalArgumentException();\n', 9), ('simply', 9), ('Provides', 9), ('@Ignore("v2', 9), ('(fusionMode', 9), ('us', 9), ('(s.contains("', 9), ('onNext(Long', 9), ('assertFalse(promise.isCancelled());\n', 9), ('variables', 9), ('true}', 9), ('io.reactivex.Maybe;\nimport', 9), ('distribute,\n', 9), ('entries', 9), ('"onNext', 9), ('fails', 9), ('field.get();\n', 9), ('Collection<CertificateInfo>', 9), ('good', 9), ('Next', 9), ('across', 9), ('q.poll()', 9), ('(set.isDisposed())', 9), ('collectionSupplier', 9), ('fallback;\n\n', 9), ('representation', 9), ('java.io.ByteArrayOutputStream;\nimport', 9), ('org.elasticsearch.test.ESTestCase;\nimport', 9), ('emitted;\n\n', 9), ('g', 9), ('atomicInteger.get());\n\n', 9), ('connection\n', 9), ('obj;\n', 9), ('(delayErrors)', 9), ('sd', 9), ('assertTrue(""', 9), ('prime', 9), ('(Single.java:").append(m.javadocLine', 9), ('remove', 9), ('Objects\n', 9), ('C,', 9), ('"Inner");\n', 9), ('getName()', 9), ('q);\n', 9), ("'}';\n", 9), ('expects', 9), ('(!(ex.getCause()', 9), ('11,', 9), ('.doOnSubscribe(new', 9), ('behavior.</dd>\n', 8), ('LOGGER.error(e.getMessage());\n', 8), ('inner;\n', 8), ('represent', 8), ('pattern\n', 8), ('InetSocketAddress', 8), ('Instantiate', 8), ('white-list', 8), ('log.stream().anyMatch(event', 8), ('href="http://reactivex.io/documentation/operators/subscribe.html">ReactiveX', 8), ('j;\n', 8), ('h', 8), ('ChannelHandler', 8), ('href="http://reactivex.io/documentation/operators/catch.html">ReactiveX', 8), ('properly', 8), ('head', 8), ('Default', 8), ('T>>\n', 8), ('BigDecimal', 8), ('Hamzaogullari', 8), ('Subscribe', 8), ('resources.dispose();\n', 8), ('Assert.assertEquals(Long.valueOf(i),', 8), ('{@inheritDoc}\n', 8), ('Thread#NORM_PRIORITY}</li>\n', 8), ('Publisher<T>', 8), ('Publisher<B>>', 8), ('weather', 8), ('certificates(Environment', 8), ('s.length()', 8), ('normally,', 8), ('hobbits', 8), ('ParallelFailureHandling>()', 8), ('horrorMovies.reduce(new', 8), ('ParallelPeek<T>(this,\n', 8), ('terminal,', 8), ('onSubscribe}', 8), ('startOnce()', 8), ('getAndSet(null);\n', 8), ('service.execute(new', 8), ('Function<Completable,', 8), ('params', 8), ('easily', 8), ('PlayerDetails', 8), ('locking', 8), ('com.iluwatar.reactor.framework;\n\nimport', 8), ('assertFalse(errors.isEmpty());\n', 8), ('(!m.signature.contains("Publisher")\n', 8), ('hasThrowable()', 8), ('certificates', 8), ('code\n', 8), ('2)),\n', 8), ('Each', 8), ('Observable.just(v);\n', 8), ('actual.onSuccess(t);\n', 8), ('prefetch));\n', 8), ('io.reactivex.parallel.ParallelFlowable;\nimport', 8), ('target,', 8), ('Exceptions.throwIfFatal(t);\n', 8), ('error.terminate();\n', 8), ('TestObserver<String>', 8), ('.assertEmpty();\n\n', 8), ('assertEquals("Scheduler', 8), ('behaviour', 8), ('bs1', 8), ('this.errors;\n', 8), ('LongConsumer', 8), ('assertTrue(it.hasNext());\n', 8), ('System.out.println(e);\n\n', 8), ('}),', 8), ('ps.onNext(2);\n', 8), ('disposed\n', 8), ('assertNotSame(ImmediateThinScheduler.INSTANCE,', 8), ('observable;\n\n', 8), ('}).apply(new', 8), ('Map<LotteryTicketId,', 8), ('parallel', 8), ('encountered.\n', 8), ('close;\n', 8), ('order.\n', 8), ('won', 8), ('ts.assertNotComplete();\n', 8), ('constructor.', 8), ('runner', 8), ('scheduler.\n', 8), ('Observer,', 8), ('WireTransfers', 8), ('null",', 8), ('SpellbookDao', 8), ('w.onError(ex);\n', 8), ('2.0")\n', 8), ('sb', 8), ('list\n', 8), ('item.\n', 8), ('happens.\n', 8), ('failed,', 8), ('io.reactivex.schedulers.*;\n\npublic', 8), ('Observer<Integer>()', 8), ('onErrorResumeNext}', 8), ('--', 8), ('(index', 8), ('NullPointerException("onNext', 8), ('Iterable<Integer>>()', 8), ('sources.length)', 8), ('Tries', 8), ('to.assertSubscribed();\n\n', 8), ('right', 8), ('inOrder(observer);\n', 8), ('b.add(t);\n', 8), ('java.io.Serializable;\n\n/**\n', 8), ('v,', 8), ('useful', 8), ('getAsBoolean()', 8), ('java.util.stream.Stream;\n\n/**\n', 8), ("downstream's", 8), ('active\n', 8), ('fail("Expected', 8), ('.unsubscribeOn(Schedulers.single())\n', 8), ('org.objectweb.asm.Type', 8), ('Writer', 8), ('java.time.Duration.ofMillis;\nimport', 8), ('once\n', 8), ('T8,', 8), ('BackpressureHelper.produced(this,', 8), ('Allows', 8), ('"rawtypes"})\n', 8), ('struct,', 8), ('Only', 8), ('keySelector,', 8), ('unsubscribed\n', 8), ('logContains(String', 8), ('stored', 8), ('Object[20]);\n', 8), ('java.lang.annotation.Documented;\nimport', 8), ('"].");\n', 8), ('.build();\n\n', 8), ('performance', 8), ('HorrorMovie);\n', 8), ('express\n', 8), ('TestObserver<Integer>();\n', 8), ('apply(Observable<Integer>', 8), ('consumes', 8), ('0L);\n', 8), ('iterable)', 8), ('this.collectionSupplier', 8), ('manner.\n', 8), ('ds.onNext(1);\n\n', 8), ('context,', 8), ('Eager', 8), ('RxJavaPlugins.reset();\n//', 8), ('org.elasticsearch.test.ESTestCase;\n\nimport', 8), ('DebounceEmitter<T>', 8), ('dispatch', 8), ('super(1);\n', 8), ('money;\n', 8), ('parallelism()', 8), ('s.onSubscribe(set);\n\n', 8), ('TestResourceObserver<Integer>', 8), ('Function<Observable<Integer>,', 8), ('bean', 8), ('LotteryTicket(new', 8), ('Executes', 8), ('Thread.sleep(100);\n', 8), ('data,', 8), ('source6\n', 8), ('io.reactivex.plugins.RxJavaPlugins#onError(Throwable)}', 8), ('"Outer");\n', 8), ('IOException.class);\n', 8), ('source.subscribe(this);\n\n', 8), ('assertSame(ImmediateThinScheduler.INSTANCE,', 8), ('Object>>', 8), ('main.hasObservers());\n', 8), ('rco', 8), ('data)', 8), ('Function<Timed<Integer>,', 8), ('onComplete.\n', 8), ('Concat</a>\n', 8), ('java.util.NoSuchElementException;\nimport', 8), ('this.values', 8), ('List<Person>', 8), ('to.assertNoErrors().assertComplete();\n', 8), ('io.reactivex.*;\n\n@Test\npublic', 8), ('(task.replace(consumer))', 8), ('Cast', 8), ('in.close();\n', 8), ('ByteArrayOutputStream();\n', 8), ('start;\n\n', 8), ('property', 8), ('Publisher<Object>>()', 8), ('SingleSource<Object>', 8), ('origin', 8), ('interfaces', 8), ('types\n', 8), ('java.net.URL;\nimport', 8), ('to.awaitDone(5,', 8), ('executorService.execute(()', 8), ('called,', 8), ('inOrder.verify(task,', 8), ('v.time();\n', 8), ('UnicastSubject<T>', 8), ('TimeUnit.DAYS)\n', 8), ('this.period', 8), ('buffers;\n', 8), ('application.\n', 8), ('stop()', 8), ('power', 8), ('TimeUnit.MILLISECONDS));\n\n', 8), ('io.reactivex.internal.util.EndConsumerHelper;\nimport', 8), ('test(Throwable', 8), ('Observers', 8), ('release', 8), ('capacityHint;\n\n', 8), ('.assertOf(ObserverFusion.<Integer>assertFusionMode(QueueFuseable.SYNC))\n', 8), ('AppendOnlyLinkedArrayList<Object>(4);\n', 8), ('clear();\n', 8), ('NullPointerException");\n', 8), ('collector;\n\n', 8), ('Optional<String>', 8), ('InstantPeriodicTask(new', 8), ('org.junit.Test;\n\n/**\n', 8), ('external', 8), ('keystore', 8), ('globalMutex', 8), ('observers.getAndSet(TERMINATED))', 8), ('print', 8), ('"and', 8), ('to.assertError(TestException.class)\n', 8), ('apply(Timed<Integer>', 8), ('"source6', 8), ('lazySet(list.size());\n', 8), ('type;\n\n', 8), ('.timeout(1,', 8), ('produce', 8), ('Log', 8), ('-7098360935104053232L;\n\n', 8), ('Iterator', 8), ('SchedulerRunnableIntrospection', 8), ('Following', 8), ('interface\n', 8), ('Order', 8), ('cs.onSuccess(1);\n', 8), ('assertTrue(appender.logContains("Reader', 8), ('AsyncResult<Object>', 8), ('create()', 8), ('.doOnSuccess(new', 8), ('ObservableSource<Object>', 8), ('Function<Disposable,', 8), ('UnicastSubject<Integer>', 8), ('sends', 8), ('href="http://reactivex.io/documentation/operators/concat.html">ReactiveX', 8), ('(e.length()', 8), ('start()', 8), ('cancelling', 8), ('act', 8), ('Function<Flowable<Integer>,', 8), ('ws)', 8), ('fail(exc,', 8), ('(s.compareAndSet(a,', 8), ('values;\n\n', 8), ('}\n//\n//', 8), ('a.onError(error.terminate());\n', 8), ('scheduler).take(10);\n\n', 8), ('begin"));\n', 8), ('isDone()', 8), ('this.observer', 8), ('javaMajorVersion,\n', 8), ('Media(),', 8), ('below', 8), ('(getAndSet(Long.MAX_VALUE)', 8), ('Open>', 8), ('started', 8), ('ms;\n\n', 8), ('Constructor', 8), ('value);\n\n', 8), ('TestResourceMaybeObserver<Integer>();\n\n', 8), ('Functions.EMPTY_ACTION\n', 8), ('window;\n\n', 8), ('regarding\n', 8), ('called");\n', 8), ('npe.getMessage());\n', 8), ('ts.request(1);\n', 8), ('List<CakeInfo>', 8), ('Exceptions.throwIfFatal(e1);\n', 8), ('<li>If', 8), ('provided.\n', 8), ('dispose(s);\n', 8), ('package', 8), ('false).test();\n\n', 8), ('supply', 8), ('addString)\n', 8), ('eighth', 8), ('ts.assertNoValues();\n', 8), ('fail(ex.toString()', 8), ('.map(Functions.identity(),', 8), ('license\n', 8), ('EventDoesNotExistException', 8), ('IllegalStateException();\n', 8), ('itemTimeoutIndicator;\n', 8), ('assertNotNull(reduceResult2);\n', 8), ('50,', 8), ('HeroStat', 8), ('checkInternalOperatorNaming("Observable",', 8), ('response;\n', 8), ('ObservableEmitter<T>', 8), ('filesToMonitor(@Nullable', 8), ('SpellDao', 8), ('ThreadFactory', 8), ('sequence,\n', 8), ("shouldn't", 8), ('q))', 8), ('((line', 8), ('<T6>', 8), ('emitLast)', 8), ('Callback', 8), ('randomIntBetween(8,', 8), ('assertTestException(list,', 8), ('generator;\n', 8), ('getThrowable()', 8), ('order,', 8), ('.runOn(ImmediateThinScheduler.INSTANCE)\n', 8), ('io.reactivex.functions.BiConsumer;\nimport', 8), ('TestSubscriber.create(0L);\n', 8), ('bh.consume(t);\n', 8), ('parts', 8), ('d.isDisposed();\n\n', 8), ('least', 8), ('times;\n\n', 8), ('source3,\n', 8), ('"next', 8), ('errorMode,', 8), ('pp\n', 8), ('npe)', 8), ('rs.subscribeNext();\n', 8), ('Lee)\n', 8), ('verify(task,', 8), ('finish"));\n', 8), ('TLeftEnd,', 8), ('possibly', 8), ('clients', 8), ('createTrustManager(@Nullable', 8), ('to1.assertValues(0L,', 8), ('2014-2017', 8), ('ex2', 8), ('writes', 8), ('LOGGER.error("Error', 8), ('java.util.stream.Stream;\n\nimport', 8), ('source6,\n', 8), ('QueueSubscription.ASYNC)', 8), ('AM\n', 8), ('account\n', 8), ('s.onNext(2);\n', 8), ('.assertError(e)', 8), ('(list', 8), ('@Ignore("Observers', 8), ('TestHelper.assertError(error,', 8), ('tokens', 8), ('q.poll();\n\n', 8), ('TestHelper.checkDoubleOnSubscribeSingle(new', 8), ('6', 8), ('ex.printStackTrace();\n', 8), ('loader', 8), ('verify(observer).onSubscribe((Disposable)any());\n', 8), ('DisposableHelper.set(this,', 8), ('source7,', 8), ('this.once', 8), ('round-robin', 8), ('similar', 8), ('assertTrue(appender.logContains("Writer', 8), ('TimeUnit.SECONDS))', 8), ('Maybe.empty()\n', 8), ('Functions.toFunction(new', 8), ('signalConsumer();\n', 8), ('1\n', 8), ('MaybeSource<Object>', 8), ('Arrays.fill(array,', 8), ('io.reactivex.internal.fuseable.FuseToObservable;\nimport', 8), ('Also', 8), ('this.actual;\n', 8), ('times(0)).onNext(any(Integer.class));\n', 8), ('true));\n', 8), ("SingleObserver's", 8), ('Callable<T>', 8), ('IO', 8), ('CompletableSubject}', 8), ('}).toObservable();\n\n', 8), ('occur', 8), ('@Mock\n', 8), ('.hide()\n', 8), ('occurs', 8), ('threw', 8), ('eventId', 8), ('scheduler);\n\n', 8), ('this.subscribers', 8), ('otherwise\n', 8), ('Subject', 8), ('trampolining.\n', 8), ('com.iluwatar.hexagonal.domain.LotteryTicket;\nimport', 8), ('SocketAddress', 8), ('api', 8), ('Catch</a>\n', 8), ('200,', 8), ('ObjectHelper.requireNonNull(source6,', 8), ('undefined', 8), ('backing', 8), ('(")\n', 8), ('TRightEnd,', 8), ('it;\n\n', 8), ('io.reactivex.internal.disposables.SequentialDisposable;\nimport', 8), ('crazybob@google.com', 8), ('java.net.InetSocketAddress;\nimport', 8), ('transformer', 8), ('audio', 8), ('sources."));\n', 8), ('12/28/15', 8), ('(SQLException', 8), ('dematerialize.subscribe(observer);\n\n', 8), ('MaybeSource<Object>>()', 8), ('rs', 8), ('build', 8), ('modules', 8), ('ObservableSource<B>>', 8), ('List<Media>', 8), ('assertTimeout(ofMillis(5000),', 8), ('SubscriptionArbiter();\n\n', 8), ('On', 8), ('sch', 8), ('ts1.assertValues(0L,', 8), ('plugin\n', 8), ('"prefetch");\n', 8), ('subscribe}', 8), ('o2)', 8), ('assertTrue(RxJavaPlugins.isBug(new', 8), ('f,', 8), ('T6>', 8), ('reader\n', 8), ('classes\n', 8), ('Single<Object>', 8), ('Functions.EMPTY_LONG_CONSUMER,\n', 8), ('(cachingPolicy', 8), ('other.hasObservers());\n\n', 8), ('subscribe(@NonNull', 8), ('LotteryTicket>', 8), ('TestObserver<T>', 8), ('.filter(Functions.alwaysTrue(),', 8), ('.flatMapCompletable(new', 8), ('.doAfterTerminate(new', 8), ('Properties}', 8), ('accepts', 8), ('SwitchMapMaybeObserver<R>', 8), ('records\n', 8), ('.append("\\r\\n', 8), ('O', 8), ('late', 8), ('javax.net.ssl.X509ExtendedTrustManager;\n\nimport', 8), ('Subscribe</a>\n', 8), ('Serdar', 8), ('corrupt', 8), ('(++c', 8), ('pp.mergeWith(cs).subscribeWith(new', 8), ('(<a', 8), ('path);\n', 8), ('causes', 8), ('java.io.*;\nimport', 8), ('o1,', 8), ('}\n\n\n}\n', 8), ('Flowable.fromIterable(iterate(elements))\n', 8), ('initialDelay;\n', 8), ('Emits', 8), ('os.subscribe(to);\n\n', 8), ('to.assertValues(expected);\n', 8), ('(upstream', 8), ('Observer}s', 8), ('pp.switchMapSingleDelayError(new', 8), ('parent.innerComplete(this);\n', 8), ('ts.assertFailure(TestException.class);\n', 8), ('Builder', 8), ('allowed")\n', 8), ("actual's", 8), ('pending', 8), ('AtomicReference<Subscription>();\n\n', 8), ('start++;\n', 8), ('UnicastProcessor<T>', 8), ('SNIPPET:', 8), ('Long.MAX_VALUE));\n', 8), ('Executors.newSingleThreadScheduledExecutor();\n', 8), ('onAfterTerminate;\n\n', 8), ('error(new', 8), ('wip;\n\n', 8), ('onError(final', 8), ('TimeoutMainMaybeObserver<T,', 8), ('scheduler.advanceTimeTo(4,', 8), ('loaded', 8), ('ft', 8), ('assertEquals("default",', 8), ('Timed<T>>', 8), ('s.onSuccess(1);\n', 8), ('pp.switchMapMaybeDelayError(new', 8), ('(index.getAndSet(Long.MAX_VALUE)', 8), ('(Bob', 8), ('(bufs', 8), ('next)', 8), ('apply(Flowable<Integer>', 8), ('@SuppressWarnings({"unchecked",', 8), ('ts\n', 8), ('times(1)).onNext("c");\n', 8), ('Close>>', 8), ('respective', 8), ('field.\n', 8), ('helps', 8), ('.test(0L);\n\n', 8), ('feature', 8), ('disposables;\n\n', 8), ('assertEquals("The', 8), ('@DynamoDBAttribute(attributeName', 8), ('skip', 8), ('obs.all(new', 8), ('cel', 8), ('invoking\n', 8), ('timeout(long', 8), ('Servant', 8), ('Reactive', 8), ('u,', 8), ('ZipSubscriber<T,', 8), ('ObservableSource<Object>>()', 8), ('client\n', 8), ('ObjectHelper.requireNonNull(t,', 8), ('keySelector;\n', 8), ('(File', 8), ('result.\n', 8), ('race', 8), ('actual.onError(t);\n\n', 8), ('e.serialize();\n\n', 8), ('reduceResult2', 8), ('cs.onSuccess(2);\n', 8), ('idx;\n\n', 8), ('affect', 8), ('corresponding', 8), ('assertEquals(4,', 8), ('exec.shutdown();\n', 8), ('fail("Fetching', 8), ('TODO:', 8), ('parent.otherError(e);\n', 8), ('potion', 8), ('subscription.', 8), ('Executor()', 8), ('help', 8), ('FlowableSubscriber<Object>,', 8), ('List<Item>', 8), ('onFinally));\n', 8), ('org.mockito.InOrder;\n\nimport', 8), ('cancelled?",', 8), ('Function<Throwable,', 8), ('TestSubscriber.create();\n//\n//', 8), ('painlessTypeName', 8), ('Data-Bus', 8), ('Such', 8), ('known', 8), ('nextSupplier;\n', 8), ('bufs', 8), ('OtherObserver<T>', 8), ('exec);\n\n', 8), ('use\n', 8), ('readers', 7), ('executor.shutdown();\n', 7), ('java.nio.ByteBuffer;\nimport', 7), ('baseClassName)', 7), ('ObservableSource<?>>', 7), ('exp', 7), ('ObservableSource<U>', 7), ('TreasureChest', 7), ('SingleSource<Object>>()', 7), ('repository', 7), ('rules', 7), ('interface.', 7), ('source4,\n', 7), ('parents[i]', 7), ('java.util.Queue;\nimport', 7), ('called.', 7), ('paths', 7), ('returns,', 7), ('complex', 7), ('Langote\n', 7), ('end)', 7), ('AtomicReference<Disposable>\nimplements', 7), ('skip)', 7), ('HashSet<Integer>(Arrays.asList(1,', 7), ('assertTrue(ps.hasObservers());\n', 7), ('onError}\n', 7), ('@Inject\n', 7), ('(c.get()', 7), ('happy', 7), ('go', 7), ('generating', 7), ('NIO', 7), ('TestException("First"));\n', 7), ('FlowableSubscriber<Object>', 7), ('callable)', 7), ('CertificateException', 7), ('ones', 7), ('asyncResult.getValue();\n', 7), ('super.onStart();\n\n', 7), ('execution\n', 7), ('line);\n', 7), ('parent.remove(this);\n', 7), ('resolve', 7), ('"property', 7), ('(such', 7), ('this.items', 7), ('Once', 7), ('equality', 7), ('equal', 7), ('delaying\n', 7), ('constant', 7), ('another\n', 7), ('WindowOperation<T,', 7), ('SubscriptionHelper.cancel(s);\n', 7), ('fail(e.toString());\n', 7), ('input.newLatchedObserver();\n', 7), ('actually', 7), ('Tenant', 7), ('eager)', 7), ('java.util.function.Predicate;\n\nimport', 7), ('Read', 7), ('TestSubscriber<Object>();\n\n', 7), ('than\n', 7), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.merge.png"', 7), ('(isCancelled())', 7), ('invocation', 7), ('c.decrementAndGet();\n', 7), ('acts', 7), ('DefaultSubscriber<String>()', 7), ('CakeBakingException', 7), ('small', 7), ('observer.onError(e);\n', 7), ('tryOnNext(T', 7), ('dao', 7), ('e.onSuccess(1);\n', 7), ('System.lineSeparator()', 7), ('java.util.stream.Collectors;\n\n/**\n', 7), ('t),', 7), ('subscribers,', 7), ('yet")', 7), ('changed', 7), ('cancelled,', 7), ('io.reactivex.subscribers.*;\n\npublic', 7), ('version;\n', 7), ('operator/class', 7), ('MaybeSource}s\n', 7), ('io.reactivex.schedulers.TestScheduler;\nimport', 7), ('executing', 7), ('FuseToFlowable<T>', 7), ('run.get(ScheduledRunnable.FUTURE_INDEX));\n', 7), ('onSubscribe\n', 7), ('assertSame(EmptyDisposable.INSTANCE,', 7), ('sequence\n', 7), ('cd.toSafe();\n\n', 7), ('String&gt;', 7), ('Call', 7), ('signal.\n', 7), ('workers', 7), ('completed\n', 7), ('parsing', 7), ('happens\n', 7), ('money\n', 7), ('qs;\n\n', 7), ('Event}', 7), ('onComplete,', 7), ('TestException("First");\n', 7), ('integer)', 7), ('parent.innerError(e);\n', 7), ('associate', 7), ('overwrite', 7), ('disposeResourceAfter();\n', 7), ('action,', 7), ('3764492702657003550L;\n\n', 7), ('implementation.\n', 7), ('SecureString', 7), ('U>(t,', 7), ('RuntimeException(ex);\n', 7), ('decide/implement', 7), ('(e.g.', 7), ('Throwables\n', 7), ('Set', 7), ('DAO', 7), ('sa.getAndIncrement();\n\n', 7), ('actual.onNext(b);\n', 7), ('com.iluwatar.reader.writer.lock;\n\nimport', 7), ('Iterable.', 7), ('item,', 7), ('@deprecated', 7), ('Flowable.just(new', 7), ('manages', 7), ('java.security.PermissionCollection;\nimport', 7), ('ordered', 7), ('task,', 7), ('CANCELLED', 7), ('onError.accept(t);\n', 7), ('found");\n', 7), ('onNext(String', 7), ('environment);\n', 7), ('.concatMap(new', 7), ('ignoring', 7), ('Gopinath', 7), ('callable;\n', 7), ('HalfSerializer.onError(actual,', 7), ('CustomerDto', 7), ('java.security.GeneralSecurityException;\nimport', 7), ('turning', 7), ("user's", 7), ('next;\n\n', 7), ('CakeBakingServiceImpl', 7), ('Stops', 7), ('gold', 7), ('w,', 7), ('.switchMapSingle(new', 7), ('dynamic', 7), ('sources.length;\n', 7), ('Single<Integer>>()', 7), ('UnicastSubject.create();\n\n', 7), ('2006', 7), ('LOGGER.info("The', 7), ('issues,', 7), ('connect();\n', 7), ('determined', 7), ('checking', 7), ('abilities', 7), ('TestException())))\n', 7), ('timed', 7), ('this.wip', 7), ('PreparedStatement', 7), ('(error.get()', 7), ('6);\n', 7), ('latest.lazySet(null);\n', 7), ('Void', 7), ('Cancellable()', 7), ('reduced', 7), ('sourcesIterable;\n', 7), ('<p>All', 7), ('Subscriber,', 7), ('<dd>You', 7), ('Any', 7), ('presenter', 7), ('Waits', 7), ('fn', 7), ('Character}', 7), ('job', 7), ('body)', 7), ('filter', 7), ('Therefore,', 7), ("hasn't", 7), ('allocation', 7), ('made', 7), ('Spellbook("Book', 7), ('schedule', 7), ('06.08.2017.\n', 7), ('assertFalse(cs.hasObservers());\n\n', 7), ('v1', 7), ('List<Long>', 7), ('fatal', 7), ('EventManager', 7), ('protocol', 7), ('func}', 7), ('recommended', 7), ('hasComplete()', 7), ('disposable,', 7), (',', 7), ('TCP', 7), ('Exceptions', 7), ('become', 7), ('SubscriptionArbiter();\n', 7), ('(null', 7), ('e1));\n', 7), ('before\n', 7), ('io.reactivex.schedulers.*;\nimport', 7), ('ObjectHelper.requireNonNull(onSubscribe,', 7), ('token', 7), ('fs.get(5,', 7), ('resourceSupplier,\n', 7), ('errorMode));\n', 7), ('(output.txt', 7), ('ChannelHandler}', 7), ('connect()', 7), ('exc);\n', 7), ('this.size', 7), ('bound', 7), ('0),', 7), ('run.call();\n', 7), ('rmo.start);\n', 7), ('heavy', 7), ('notifications,', 7), ('4)\n', 7), ('resubscription', 7), ('MaybeObserver<R>', 7), ('U>(s,', 7), ('queue.\n', 7), ('path)', 7), ('onto', 7), ('DISPOSED;\n', 7), ('observer.onSubscribe(parent);\n', 7), ('java.lang.annotation.RetentionPolicy;\nimport', 7), ('verify(singleObserver,', 7), ('super();\n', 7), ('t2,', 7), ('ElasticsearchException("failed', 7), ('MaybeObserver<Object>()', 7), ('cache\n', 7), ('By', 7), ('target\n', 7), ('it.hasNext());\n\n', 7), ('exposes', 7), ('File[]', 7), ('scheduleDirect(@NonNull', 7), ('requiring', 7), ('onSubscribe.\n', 7), ('disposeInner()', 7), ('ObservableOnSubscribe<Integer>()', 7), ('BackpressureHelper.add(this,', 7), ('occurs\n', 7), ('underlying\n', 7), ('get().cancel();\n', 7), ('FROM', 7), ('ByteArrayOutputStream', 7), ('.assertOf(new', 7), ('save', 7), ('groups', 7), ('error.txt)\n', 7), ('1L;\n\n', 7), ('Action}', 7), ('future,', 7), ('please', 7), ('top', 7), ('SYNC)', 7), ('<Boolean>', 7), ('Factory', 7), ('BallThread', 7), ('{\n\n}\n', 7), ('s)\n', 7), ('disposeRace()', 7), ('<dd>you', 7), ('structure', 7), ('org.junit.jupiter.api.Assertions.assertThrows;\nimport', 7), ('SafeSubscriber<Integer>(ts);\n', 7), ('subscription.\n', 7), ('sub', 7), ('disposer,', 7), ('tenant.\n', 7), ('Expression>', 7), ('Some', 7), ('Subscriber#onError', 7), ('SYNC;\n', 7), ('ballThread', 7), ('userAccount;\n', 7), ('value,\n', 7), ('overridden', 7), ('@Ignore("Fusion', 7), ('implementation\n', 7), ('5)', 7), ('.subscribe(ts);\n\n', 7), ('too', 7), ('fusionMode;\n\n', 7), ('ExceptionHelper.wrapOrThrow(e);\n', 7), ('assertFalse(pp.hasSubscribers());\n\n', 7), ('(IOException)', 7), ('Console', 7), ('100;', 7), ('this.idx', 7), ('its\n', 7), ('#', 7), ('org.elasticsearch.bootstrap;\n\nimport', 7), ('q)', 7), ('simulated', 7), ('verify(o).onNext(1);\n', 7), ('rethrow', 7), ('.test(0)\n', 7), ('errorSupplier;\n', 7), ('newline.', 7), ('apply(Single<Object>', 7), ('terminal.println(Verbosity.NORMAL,', 7), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/mergeDelayError.png"', 7), ('ps.onError(new', 7), ('"."', 7), ('2000);\n', 7), ('database\n', 7), ('CompositeException;\n', 7), ('task.setFuture(f);\n', 7), ('1",', 7), ('thrown\n', 7), ('<<', 7), ('annotations', 7), ('doubleError()', 7), ('scheduler)\n', 7), ('error(Throwable', 7), ('so.onComplete();\n\n', 7), ('INSTANCE;\n\n', 7), ('Subscriber[]', 7), ('Completable}', 7), ('methods.', 7), ('Function<Single<Object>,', 7), ('mirrors', 7), ('WizardDao', 7), ('pp.onNext(2);\n\n', 7), ('K,', 7), ('perms.add(new', 7), ('.reduce(0,', 7), ('modified', 7), ('tickets', 7), ('DISPOSED)', 7), ('Subscription()', 7), ('//TLTL\n', 7), ('Response', 7), ('field.javaName,', 7), ('solution', 7), ('(int)elements', 7), ('runnable)', 7), ('Single<String>', 7), ('paid', 7), ('actual.onSuccess(false);\n', 7), ('10))\n', 7), ('it;\n', 7), ('AlbumPage}\n', 7), ('br,', 7), ('reached', 7), ('disposeAll();\n', 7), ('UDP', 7), ('CakeBakingServiceImpl();\n\n', 7), ('Observable.just(new', 7), ('ImmutableOpenMap<String,', 7), ('AtomicReference<Object>', 7), ('(!active)', 7), ('org.mockito.InOrder;\nimport', 7), ('"]",', 7), ('completed.\n', 7), ('start,', 7), ('attempt', 7), ('maxConcurrency', 7), ('group', 7), ('cs;\n\n', 7), ('innerError(this,', 7), ('consume', 7), ('QueueDisposable.ASYNC)', 7), ('Promise<>();\n', 7), ('org.junit.Assert.assertEquals;\n\npublic', 7), ('in-memory', 7), ('out\n', 7), ('Producer', 7), ('Callable<Scheduler>()', 7), ('32)\n', 7), ('owner;\n', 7), ('.doOnRequest(this)\n', 7), ('collection\n', 7), ('dimensions', 7), ('s2', 7), ('delaySubscription}', 7), ('@Param({"1",', 7), ('disposer;\n', 7), ('header', 7), ('Observable<Object>>()', 7), ('scheduled', 7), ('DataSource', 7), ('initialSupplier', 7), ('flowable', 7), ('this.remaining', 7), ('layers', 7), ('fusion\n', 7), ('skip;\n\n', 7), ('GeneralSecurityException,', 7), ('once)', 7), ('accounts', 7), ('timeUnit,', 7), ('Iterator<String>', 7), ('body\n', 7), ('DateFormatCallable', 7), ('Schedulers.io(),', 7), ('AtomicInteger(2);\n', 7), ('m.subscribe(observer);\n\n', 7), ('org.elasticsearch.xpack.core.ssl.cert.CertificateInfo;\n\nimport', 7), ('list.add(100);\n', 7), ('Prevent', 7), ('pp2.onComplete();\n\n', 7), ('capacity)', 7), ('"name', 7), ('native', 7), ('mammoth', 7), ('retrieved', 7), ('guaranteed', 7), ('subscriber.\n', 7), ('leak', 7), ('Parses', 7), ('indication', 7), ('array;\n', 7), ('<O>', 7), ('@Ignore("Not', 7), ('assertTrue(tc.errors.isEmpty());\n', 7), ('"with', 7), ('syntax', 7), ('Build', 7), ('Observer<String>', 7), ('(lock)', 7), ('downstream.onError(t);\n', 7), ('List<RxMethod>', 7), ('whitelistField.javaFieldName', 7), ('factory,', 7), ('key;\n', 7), ('body;\n', 7), ('opening', 7), ('TestScheduler()));\n', 7), ('pp0', 7), ('fixed', 7), ('getOrCreateQueue()', 7), ('java.util.concurrent.ExecutionException;\nimport', 7), ('LotteryTicketRepository', 7), ('delayError));\n', 7), ('LongRunningEventException', 7), ('4)));\n', 7), ('assertTrue(tc.values.isEmpty());\n', 7), ('SingleSource}', 7), ('array.\n', 7), ('List<Potion>', 7), ('subscribe(ObservableEmitter<Integer>', 7), ('DisposableHelper.dispose(resource);\n', 7), ('ObjectHelper.requireNonNull(onError,', 7), ('.cancel();\n\n', 7), ("'rail',", 7), ('io.reactivex.internal.subscriptions.SubscriptionHelper;\n\n/**\n', 7), ('<E', 7), ('onDispose)', 7), ('deferred', 7), ('inspired', 7), ('UnsupportedOperationException.class)\n', 7), ('com.iluwatar.hexagonal.domain;\n\nimport', 7), ('ParallelFlowable.\n', 7), ('String.format("%d",', 7), ('!m.javadoc.substring(idx', 7), ('communication', 7), ('(input.size', 7), ('Prepare', 7), ('LotteryTicketId(),', 7), ('Singles\n', 7), ('Flowable<T>()', 7), ('}))\n', 7), ('10;\n', 7), ('sender,', 7), ('applications', 7), ('wrapper', 7), ('.elementAt(1,', 7), ('Timed<Integer>(2,', 7), ('upstream.\n', 7), ('CakeTopping', 7), ('org.junit.jupiter.api.Assertions.assertSame;\nimport', 7), ('subscribeActual(\n', 7), ('ps.onNext(1);\n', 7), ('onSubscribe(final', 7), ('12/12/15', 7), ('sourceMode;\n\n', 7), ('io.reactivex.schedulers.TestScheduler;\n\npublic', 7), ('string\n', 7), ('!m.signature.contains("Flowable")\n', 7), ('"B",', 7), ('tests\n', 7), ('CompositeDisposable();\n\n', 7), ('8);\n', 6), ('│\xa0\xa0', 6), ('any)', 6), ('Schedulers.io())\n', 6), ('executor;\n', 6), ('implementor', 6), ('from,', 6), ('B>(this);\n', 6), ('EventObserver', 6), ('model', 6), ('action.run();\n', 6), ('safe.onSubscribe(new', 6), ('SwitchMapInnerObserver<T,', 6), ('newer', 6), ('queue.isEmpty();\n', 6), ('CancellationException();\n', 6), ('otherComplete()', 6), ('actual.onSubscribe(this)}', 6), ('s.onSubscribe(sa);\n\n', 6), ('"source7', 6), ('aste', 6), ('onNext(Notification<T>', 6), ('(hasNext())', 6), ('times(0)).onComplete();\n', 6), ('ConcatInnerObserver', 6), ('ReduceSeedObserver<T,', 6), ("source's", 6), ('completable', 6), ('unsubscribed/cancelled.\n', 6), ('(at', 6), ('publishers', 6), ('Cake();\n', 6), ('converts', 6), ('Arrays.asList(\n', 6), ('Integer.MAX_VALUE;\n', 6), ('work-in-progress', 6), ('io.reactivex.observers.LambdaConsumerIntrospection;\nimport', 6), ('onSuccess(final', 6), ('QueueDisposable.SYNC)', 6), ('clear', 6), ('innerCompleted', 6), ('SubscriptionHelper.cancel(upstream);\n\n', 6), ('Abstract', 6), ('manager', 6), ('current\n', 6), ('accept(long', 6), ('observed', 6), ('false));\n', 6), ('factory;\n\n', 6), ('"errorHandler', 6), ('Streams', 6), ('subscribe()}', 6), ('source2);\n', 6), ('java.lang.annotation.Target;\n\n/**\n', 6), ('directory\n', 6), ('descriptor', 6), ('subscription.dispose();\n', 6), ('resubscribe', 6), ('.to(ObserverFusion.<Integer>test(QueueFuseable.ANY,', 6), ('#onNext(Object)}', 6), ('Client', 6), ('types,', 6), ('cancel(boolean', 6), ('#refCount()}', 6), ('MaybeSource.\n', 6), ('(callback)', 6), ('invoking', 6), ('entities', 6), ('bs2', 6), ('assertTrue(ps.hasObservers());\n\n', 6), ('predicate\n', 6), ('backed', 6), ('flowable;\n\n', 6), ('2017', 6), ('These', 6), ('"],', 6), ('AsyncResult<T>', 6), ('OTHER_STATE_HAS_VALUE;\n', 6), ('len;', 6), ('org.junit.jupiter.api.Assertions.assertNull;\nimport', 6), ('times(1)).onError(any(TestException.class));\n', 6), ('runnable.run();\n', 6), ('without\n', 6), ('proxy', 6), ('subject.onNext(1);\n', 6), ('o.onNext(6);', 6), ('in.readString();\n', 6), ('operators,', 6), ('AtomicReference<SingleObserver<?', 6), ('Flowable.unsafeCreate(new', 6), ('TestSubscriber<Long>();\n\n', 6), ('p)', 6), ('rc)', 6), ('destination', 6), ('iterator.hasNext();\n', 6), ('Item(ItemType.WEAPON,', 6), ('gate', 6), ('LetterComposite', 6), ('calling\n', 6), ('amount);\n', 6), ('DeferredScalarSubscription<T>', 6), ('compose', 6), ('ObjectHelper.requireNonNull(source,', 6), ('BooleanSubscription();\n', 6), ('towards', 6), ('verify(o).onComplete();\n', 6), ('RxMethod', 6), ('world', 6), ('errors.addThrowable(e);\n', 6), ('(i.e.', 6), ('collection.clear();\n', 6), ('java.util.stream.Collectors;\n\nimport', 6), ('ts.getOnErrorEvents().get(0);\n//\n//', 6), ('source7\n', 6), ('snapshot', 6), ('set!");\n\n', 6), ('await();\n', 6), ('posted', 6), ('CompositeException)', 6), ('@Deprecated\n', 6), ('atomically\n', 6), ('e.onNext(2);\n', 6), ('ObservableSource<R>>', 6), ('assertTrue(tc.errors.isEmpty());\n\n', 6), ('scenario', 6), ('Subscriber<T>', 6), ('ts1.assertNoErrors();\n', 6), ('Example:\n', 6), ('argument\n', 6), ('(obj', 6), ('.requestMore(2)\n', 6), ('AssemblyStackTraceException.find(ex);\n//\n//', 6), ('o.onNext(1);', 6), ('InnerObserver();\n\n', 6), ('just()', 6), ('"15.11.2015",', 6), ('spellbookDao', 6), ('!m.signature.contains("Observable")\n', 6), ('ASYNC;\n', 6), ('ballItem', 6), ('to.assertValues(0L,', 6), ('annotation', 6), ('inetSocketAddress.getHostString()', 6), ('CakeInfo', 6), ('com.iluwatar.hexagonal.domain.LotteryTicketId;\nimport', 6), ('collectionSupplier;\n', 6), ('taken', 6), ('EndConsumerHelper.composeMessage(tc.getClass().getName()));\n', 6), ('.runOn(Schedulers.computation())\n', 6), ('java.util.regex.Pattern;\n\n/**\n', 6), ('interrupted.get());\n', 6), ('AtomicReference<MaybeObserver<?', 6), ('updating', 6), ('ArrayList<T>();\n\n', 6), ('creation', 6), ('limit', 6), ('Maybe.fromAction(new', 6), ('src.distinct().subscribe(w);\n\n', 6), ('href="https://github.com/reactive-streams/reactive-streams-jvm#2.13">Rule', 6), ('org.mockito.Mockito.verifyNoMoreInteractions;\nimport', 6), ('src.distinct(TO_UPPER_WITH_EXCEPTION).subscribe(w);\n\n', 6), ('Schedulers', 6), ('publishNext(observer,', 6), ('CompletableOperator', 6), ('ExceptionHelper.wrapOrThrow(error);\n', 6), ('10;\n\n', 6), ('other.subscribe(parent.other);\n\n', 6), ('PublishSubject<T>', 6), ('Certificate[]', 6), ('candidate', 6), ('instantiation', 6), ('TestSubscriber<Integer>(1)', 6), ('Writing', 6), ('TRight>', 6), ('.elementAtOrError(0)\n', 6), ('deposit', 6), ('policy.add(new', 6), ('CRUD', 6), ('exists', 6), ('drains', 6), ('onFinally.run();\n', 6), ('io.reactivex.internal.operators.parallel;\n\nimport', 6), ('repository.deleteAll();\n', 6), ('fulfilled', 6), ('BooleanSupplier()', 6), ('Exception;\n\n', 6), ('.just(1)\n', 6), ('future\n', 6), ('reason', 6), ('to)', 6), ('values.get(2));\n', 6), ('Maybe.fromRunnable(new', 6), ('Single<Long>', 6), ('null").apply(this);\n', 6), ('cs.observerCount());\n\n', 6), ('t3,', 6), ('ps.onComplete();\n', 6), ('md', 6), ('null"));\n', 6), ('ex1', 6), ('"Displaying', 6), ('Name', 6), ('fluently.\n', 6), ('sb.toString();\n', 6), ('lowest', 6), ('java.nio.file.Paths;\nimport', 6), ('(s.contains("An', 6), ("Scheduler's", 6), ('emission\n', 6), ('reactor.\n', 6), ('io.reactivex.Completable;\nimport', 6), ('twice', 6), ('Observable.just(5,', 6), ('collection)', 6), ('serialDisposable.dispose();\n', 6), ('list2', 6), ('to1.assertNotComplete();\n\n', 6), ('actual.onSuccess(true);\n', 6), ('permissions));\n', 6), ('25);\n', 6), ('io.reactivex.subjects;\n\nimport', 6), ('i.e.', 6), ('ThreadSafeDoubleCheckLocking', 6), ('null)\n', 6), ('onSubscribeCrash()', 6), ('windows.getAndIncrement();\n\n', 6), ('run;\n', 6), ('this.sourcesIterable', 6), ('@BackpressureSupport(BackpressureKind.PASS_THROUGH)\n', 6), ('(onSuccess', 6), ('assertSame(result,', 6), ('Trampoline<T>', 6), ('javaMajorVersion);\n', 6), ('accumulator)', 6), ('LotteryTicketCheckResult', 6), ('As', 6), ('timeoutIndicator,', 6), ('(sources', 6), ('2)];\n', 6), ('LOGGER.info(star.toString());\n', 6), ('unless', 6), ('io.reactivex.internal.util.BackpressureHelper;\n\npublic', 6), ('diff', 6), ('java.util.concurrent.atomic.AtomicReference;\n\n/**\n', 6), ('During', 6), ('9L);\n', 6), ('emitLast;\n', 6), ("subscriber's", 6), ('Flowable.bufferSize());\n', 6), ('errorHandler));\n', 6), ('Flowable.intervalRange(1,', 6), ('parent.onTimeout(idx);\n', 6), ('def.class)', 6), ('HorrorMovie(),', 6), ('TIME_UNIT));\n', 6), ('false.\n', 6), ('boundary;\n', 6), ('interrupted.set(true);\n', 6), ('List}', 6), ('.collect(Collectors.toList());\n', 6), ('writer,', 6), ('supplier', 6), ('merge(\n', 6), ('ConsoleLoggerModule', 6), ('assertNotNull(character.toString());\n\n', 6), ('query,', 6), ('min', 6), ('picks', 6), ('emitLast;\n\n', 6), ('checkTerminated(boolean', 6), ('12/14/15', 6), ('times(1)).onError(exception);\n', 6), ('org.elasticsearch.xpack.sql.client.shared;\n\nimport', 6), ('colliding', 6), ('this.emitLast', 6), ('fromFuture(Future<?', 6), ('inOrder.verify(observer).onNext(7);\n', 6), ('com.iluwatar.repository;\n\nimport', 6), ('e1', 6), ('.assertFailure(RuntimeException.class);\n\n', 6), ("'An", 6), ('source.\n', 6), ('Flowable<Media>', 6), ('Maybe,\n', 6), ('Observable.just(1).hide()\n', 6), ('cmp', 6), ('(compareAndSet(idx,', 6), ('10', 6), ('persistence', 6), ('setDisposable(Disposable', 6), ('Holds', 6), ('executor)', 6), ('@Nested\n', 6), ('Bauer,', 6), ('.toList()\n', 6), ('^=', 6), ('charge', 6), ('wrap', 6), ('AmbCoordinator<T>', 6), ('bh;\n\n', 6), ('collectionSupplier;\n\n', 6), ('java.security.NoSuchAlgorithmException;\nimport', 6), ('s.assertNoErrors();\n', 6), ('s.advanceTimeTo(501,', 6), ('pp1.onComplete();\n\n', 6), ('LambdaConsumerIntrospection', 6), ('times(1)).onNext(\n', 6), ('io.reactivex.functions.BiFunction;\n\n@Test\npublic', 6), ('20);\n', 6), ('@BackpressureSupport(BackpressureKind.UNBOUNDED_IN)\n', 6), ('BallItem', 6), ('org.mockito.ArgumentMatchers.*;\nimport', 6), ('ElementType.METHOD,', 6), ('this))', 6), ('source6,', 6), ('indicates\n', 6), ('reads', 6), ('this.end', 6), ('ps.mergeWith(cs).subscribeWith(new', 6), ('bufferOpen;\n', 6), ('FilePermission', 6), ('java.util.Date;\nimport', 6), ('covariance.\n', 6), ('NullPointerException("Subscription', 6), ('iteratorNotification', 6), ('runtime.\n', 6), ('TestSubscriber.create(0);\n', 6), ('set.add(inner))', 6), ('x509Certificates,', 6), ('ts)', 6), ('actual.onNext(v);\n\n', 6), ('12/29/15', 6), ('ThreadAsyncExecutor();\n\n', 6), ('"");\n', 6), ('.assertResult(2);\n', 6), ('lists', 6), ('8L,', 6), ('idx);\n', 6), ('so.onNext(1);\n\n', 6), ('TestException()),', 6), ('this.w', 6), ('serialDisposable.update(underlying);\n', 6), ('<K,', 6), ('ObservableSource<V>>', 6), ('(Method', 6), ('SingleObserver<Object>()', 6), ('apply(Disposable', 6), ('nextSupplier,', 6), ('writeFile(workingDirectory,', 6), ('MongoClient', 6), ('prefix,', 6), ('RuntimeException("Forced', 6), ('caching', 6), ('assertNotNull(e.getMessage());\n', 6), ('s.advanceTimeTo(0,', 6), ('evaluated\n', 6), ('CharacterStepBuilder.newBuilder()\n', 6), ('manifest', 6), ('mainDone;\n', 6), ('DepositFilter(),', 6), ('#mergeDelayError(SingleSource,', 6), ('.subscribeOn(Schedulers.single())\n', 6), ('writer\n', 6), ('multiple\n', 6), ('NotificationLite.COMPLETE)', 6), ('source.onNext(3);\n\n', 6), ('trying', 6), ('(Stream<Customer>', 6), ('HalfSerializer.onComplete(actual,', 6), ('invalid', 6), ('R>[]', 6), ('User\n', 6), ('java.util.function.Consumer;\nimport', 6), ('cmp.<String>toFlowable().subscribe(subscriber);\n\n', 6), ('(from', 6), ('it,', 6), ('produces', 6), ('queue.offer(NEXT_WINDOW);\n', 6), ('assertSame(oop,', 6), ('List<Student>', 6), ('source));\n', 6), ('queue.get();\n', 6), ('onErrorMapper;\n', 6), ('.doOnDispose(new', 6), ('to2', 6), ('qs.poll();\n', 6), ('Maybe.just(2))\n', 6), ("It's", 6), ('student)', 6), ('renewed,', 6), ('bufferSize));\n', 6), ('tc.start);\n\n', 6), ('Blocks', 6), ('com.iluwatar.async.method.invocation;\n\nimport', 6), ('increments\n', 6), ('Single,\n', 6), ('(CompositeException)', 6), ('(isDisposed())', 6), ('.asList();\n\n', 6), ('finish', 6), ('TakeUntilMainMaybeObserver<T,', 6), ('PublishProcessor<T>', 6), ('OrderFilter(),', 6), ('NameFilter(),', 6), ('collection;\n\n', 6), ('java.security.cert.X509Certificate;\nimport', 6), ('Verifies', 6), ('parent.onError(t);\n', 6), ('.assertEmpty();\n', 6), ('result,', 6), ('source.subscribe(observer);\n', 6), ('Disposable}\n', 6), ('TestObserver<Integer>();\n\n', 6), ('eager;\n', 6), ('rails', 6), ('Future<Object>', 6), ('java.util.concurrent.Future;\nimport', 6), ('performed.', 6), ('promise.\n', 6), ('subscribers.getAndSet(TERMINATED))', 6), ('requested.addAndGet(-e);\n', 6), ('SimplePlainQueue<U>', 6), ('s.request(r);\n', 6), ('Publisher<V>>', 6), ('threads\n', 6), ('ExecutionException(ex);\n', 6), ('35);\n', 6), ('cakeBakingService.saveNewLayer(new', 6), ('TestResourceObserver<Integer>();\n\n', 6), ('s.assertUnsubscribed();\n', 6), ('subscriberCount,', 6), ('specification', 6), ('targetName', 6), ('byte', 6), ('p.subscribe(this);\n', 6), ('7L,', 6), ('ObjectHelper.requireNonNull(collectionSupplier.call(),', 6), ('#onNext(Object)},', 6), ('web', 6), ('Set<CakeLayer>', 6), ('Publisher<?>', 6), ('this.combiner', 6), ('io.reactivex.internal.disposables.SequentialDisposable;\n\npublic', 6), ('add,', 6), ('Timed<Integer>(3,', 6), ('<p/>\n', 6), ('.elementAt(0)\n', 6), ('Optional<LotteryTicket>', 6), ('IOException())\n', 6), ('MaybePeek<T>(this,\n', 6), ('CompletableObserver}', 6), ('java.util.concurrent.TimeoutException;\nimport', 6), ('onTimeoutError(long', 6), ('ContactFilter(),', 6), ('java.util.Objects;\n\nimport', 6), ('record', 6), ('ObservableEmitter<Object>', 6), ('state.\n', 6), ('s.advanceTimeTo(600,', 6), ('.assertValue(1);\n', 6), ('turn', 6), ('exception);\n', 6), ('2));\n', 6), ('Set<Integer>', 6), ('@Ignore("Null', 6), ('open,', 6), ('wip,', 6), ('related', 6), ('.doAfterSuccess(afterSuccess)\n', 6), ('this.factory', 6), ('java.security.Permissions;\nimport', 6), ('9;', 6), ('ts.assertError(TestException.class);\n//\n//', 6), ('org.elasticsearch.action.ActionListener;\nimport', 6), ('this.otherObserver', 6), ('eager;\n\n', 6), ('#mergeDelayError(MaybeSource,', 6), ('interface,', 6), ('atomicLong.get());\n\n', 6), ('}).toObservable()\n', 6), ('doing', 6), ('testData', 6), ('Observable<T>()', 6), ("ConnectableFlowable}'s", 6), ('simulate', 6), ('0L}', 6), ('parenthesis,', 6), ('.assertFailure(UnsupportedOperationException.class);\n', 6), ('provided\n', 6), ('Future#get}', 6), ('requested:', 6), ('ComputationScheduler.cap(8,', 6), ('this.itemTimeoutIndicator', 6), ('mayInterruptIfRunning)', 6), ('CountDownLatch\nimplements', 6), ('student.getName());\n', 6), ('2.1.15\n', 6), ('o.onNext(5);', 6), ('source.onNext(2);\n', 6), ('List<String>>', 6), ('repeat', 6), ('word,', 6), ('yield', 6), ('collectionSupplier)', 6), ('"inner");\n\n', 6), ('WindowBoundaryInnerSubscriber<T,', 6), ('timer;\n', 6), ('periodic', 6), ('obs)', 6), ('plugins\n', 6), ('state.', 6), ('nextDD', 6), ('com.iluwatar.poison.pill;\n\nimport', 6), ('firstName', 6), ('Connection', 6), ('terminates\n', 6), ('encountered', 6), ('Our', 6), ('Permissions();\n', 6), ('io.reactivex.internal.disposables;\n\nimport', 6), ('blocks', 6), ('queue.poll();\n\n', 6), ('located', 6), ('o.onNext(2);', 6), ('s1', 6), ('entity.\n', 6), ('T7>', 6), ('really', 6), ('this.open', 6), ('properties)', 6), ('counter/indicator\n', 6), ('MpscLinkedQueue<Object>();\n', 6), ('o.onComplete();\n\n', 6), ('AbstractNioChannel', 6), ('request,', 6), ('converting', 6), ('java.lang.Thread.UncaughtExceptionHandler}.\n', 6), ('short', 6), ('InnerCompletableCache[]', 6), ('tc.dispose();\n\n', 6), ('subscribes,', 6), ('TimeoutOtherMaybeObserver<T,', 6), ('assertEquals(8,', 6), ('issues.\n', 6), ('(!done', 6), ('dest;\n', 6), ('come\n', 6), ('.lift(new', 6), ('Flowable.just("one",', 6), ('refCount(int', 6), ('present', 6), ('com.iluwatar.tls;\n\nimport', 6), ('errorSupplier)', 6), ('testScheduler.advanceTimeBy(1,', 6), ('Command', 6), ('elements\n', 6), ('isActive;\n', 6), ('combiner;\n', 6), ('DisposableHelper.dispose(mainDisposable);\n', 6), ('uncaughtException(Thread', 6), ('executes', 6), ('assertFalse(result);\n', 6), ('Throwable\n', 6), ('(error.addThrowable(t))', 6), ('observers\n', 6), ('3L);\n', 6), ('MongoCollection<Document>', 6), ('WindowBoundaryInnerObserver<T,', 6), ('errorHandler)', 6), ('reportError', 6), ('RejectedExecutionException.class);\n', 6), ('to;\n', 6), ('BackpressureHelper.addCancel(requested,', 6), ('renew', 6), ('values.get(0));\n', 6), ('qs.clear();\n', 6), ('Stream<Arguments>', 6), ('3L,', 6), ('Scanner', 6), ('START', 6), ('s.advanceTimeTo(700,', 6), ('character.getName());\n', 6), ('href="http://reactivex.io/documentation/operators/from.html">ReactiveX', 6), ('badRequest()', 6), ('2.1.9', 6), ('data.\n', 6), ('(cause', 6), ('B>(this);\n\n', 6), ('cancelTimer();\n', 6), ('variable', 6), ('non-null\n', 6), ('(array.length', 6), ('Completable.fromAction(new', 6), ('(index.compareAndSet(idx,', 6), ('false\n', 6), ('PrintWriter', 6), ('CompletableSubject.create();\n', 6), ('head;\n', 6), ('RuntimeException());\n', 6), ('t2', 6), ('to.\n', 6), ('SingleSource)\n', 6), ('Builder<T>', 6), ('IOException;\n\n', 6), ('scanner)', 6), ('queues', 6), ('otherName', 6), ('o.onNext(3);', 6), ('consuming', 6), ('skip,', 6), ('line)', 6), ('matter', 6), ('consumerIndex;\n', 6), ('until;\n', 6), ('hasNativeController', 6), ('q.poll());\n', 6), ('suppress', 6), ('s.assertTerminated();\n', 6), ('ts,', 6), ('From</a>\n', 6), ('ts1.assertNotComplete();\n\n', 6), ('Subscribers.\n', 6), ('to1', 6), ('XContentBuilder', 6), ('stealing', 6), ('o.latch.await();\n', 6), ('f.get();\n', 6), ('MessageQueue', 6), ('(x', 6), ('UserDto', 6), ('6L,', 6), ('com.iluwatar.lazy.loading;\n\nimport', 6), ('interfere', 6), ('java.util.Locale;\nimport', 6), ('":"', 6), ('treated', 6), ('ObservableSource\n', 6), ('https://github.com/ReactiveX/RxJava/issues/360#issuecomment-24203016\n', 6), ('null}s', 6), ('Disposable[]', 6), ('wiki:', 6), ('o.onNext(7);', 6), ('inOrder.verify(observer).onComplete();\n', 6), ('publishNext(innerObserver,', 6), ('set.dispose();\n\n', 6), ('Array', 6), ('proper', 6), ('onNext.accept(t);\n', 6), ('exception,', 6), ('io.reactivex.internal.functions.*;\nimport', 6), ('ts.assertValues(0L,', 6), ('ObjectHelper.requireNonNull(predicate,', 6), ('mapped', 6), ('e++;\n\n', 6), ('Weekday', 6), ('cs.subscribe(inner);\n', 6), ('subscriberCount', 6), ('qs.isEmpty();\n', 6), ('attributes\n', 6), ('FlatMapObserver<T,', 6), ('CustomerResource', 6), ('Long.MIN_VALUE)', 6), ('Parse', 6), ('<V>', 6), ('inetSocketAddress.getPort();\n', 6), ('Observable<Media>', 6), ('System.getSecurityManager()', 6), ('NullPointerException}.\n', 6), ('InMemory', 6), ('service.bakeNewCake(new', 6), ('factory;\n', 6), ('root', 6), ('exist', 6), ('io.reactivex.functions;\n\n/**\n', 6), ('Subject<Integer>', 6), ('o1.compareTo(o2);\n', 6), ('stat)', 6), ('QueueFuseable.ANY,', 6), ('.assertFailure(NoSuchElementException.class);\n', 6), ('pool.checkOut();\n', 6), ('Comparator<?', 6), ('apply(T', 6), ('hasCustomOnError()', 6), ('(o.latch.getCount()', 6), ('512)\n', 6), ('com.iluwatar.interpreter;\n\nimport', 6), ('(true)', 6), ('offer(R', 6), ('name;\n\n', 6), ('ts.assertValue(1);\n', 6), ('(won)', 6), ('BOUNDARY)', 6), ('testThrottle()', 6), ('java.sql.Connection;\nimport', 6), ('source.', 6), ('SingleObserver<R>', 6), ('reducer,', 6), ('ErrorMode.END)', 6), ('CompletableDisposable[]', 6), ('TimeoutException());\n', 6), ('parent.next();\n', 6), ('AtomicReference<SpscLinkedArrayQueue<R>>', 6), ('boundarySupplier;\n', 6), ('System.arraycopy(sources,', 6), ('Mockito.never()).onError(any(Throwable.class));\n', 6), ('#onComplete}', 6), ('CustomerDao', 6), ('D', 6), ('mapper);\n', 6), ('merges', 6), ('"source', 6), ('assertEquals(i,', 6), ('subscriber.', 6), ('ownerStruct.name', 6), ('setup', 6), ('assertTrue(asyncResult.isCompleted());\n\n', 6), ('SpscLinkedArrayQueue<T>', 6), ('SingletonArrayFunc', 6), ('"outer");\n\n', 6), ('HashSet<>(Arrays.asList(1,', 6), ('interested', 6), ('matching', 6), ('AtomicReference<Subscriber<?', 6), ('terminates,', 6), ('parameter.\n', 6), ('this.eager', 6), ('LOGGER.info("What', 6), ('});\n//', 6), ('isNextConsumed', 6), ('those', 6), ('io.reactivex.SingleSource;\nimport', 6), ('verify(studentDatabase,', 6), ('onAfterSuccess)', 6), ('inventory', 6), ('assertThat(e.getHeaders(definition),', 6), ('visited', 6), ('Allow', 6), ('%.3f', 6), ('start;\n', 6), ('stores', 6), ('io.reactivex.exceptions.TestException;\n\npublic', 6), ('d);\n\n', 6), ('assertTrue("Not', 6), ('this.keySelector', 6), ('TestHelper.assertError(cel,', 6), ('propagate', 6), ('well.\n', 6), ('isActive', 6), ('parent.innerError(t);\n', 6), ('capacityHint', 6), ('subscribe(Publisher<?', 6), ('ObjectHelper.requireNonNull(errorHandler,', 6), ('TimerDisposable', 6), ('ScheduledExecutorService}', 6), ('TIME_UNIT);\n', 6), ('otherObserver;\n\n', 6), ('datagram', 6), ('com.iluwatar.dao;\n\nimport', 6), ('.to(SubscriberFusion.<Integer>test(Long.MAX_VALUE,', 6), ('intermediate', 6), ('actual.onError(e);\n\n', 6), ('logically', 6), ('to1.assertNoErrors();\n', 6), ('true)\n', 6), ('(PrivilegedActionException', 6), ('baseTypeName);\n', 6), ('role', 6), ('Reader("Reader', 6), ('io.reactivex.exceptions;\n\nimport', 6), ('sources[count++]', 6), ('createFluentIterable(integers)\n', 6), ('errorMode', 6), ('(parent.win(index))', 6), ('subject.\n', 6), ('"inner");\n', 6), ('SubscriptionHelper.cancel(mainSubscription);\n', 6), ('com.iluwatar.hexagonal.domain.LotteryNumbers;\nimport', 6), ('java.nio.file.StandardCopyOption;\nimport', 6), ('<T7>', 6), ('wizardDao', 6), ('.limit(5)\n', 6), ('allowFatal;\n', 6), ('pp.onComplete();\n', 6), ('refrain', 6), ('InterruptedException);\n', 6), ('(checkTerminated(d,', 6), ('derived', 6), ('repository.findByName("Terry");\n', 6), ('counter.get());\n', 6), ('removes', 6), ('interrupted\n', 6), ('collector));\n', 6), ('MethodWriter.getType(field.clazz));\n', 6), ('.take(3)\n', 6), ('boundary;\n\n', 6), ('com.iluwatar.caching;\n\nimport', 6), ('ObjectHelper.requireNonNull(next,', 6), ('ReaderWriterLock', 6), ('ElementType.CONSTRUCTOR,', 6), ('go.', 6), ('runFinally()', 6), ('javadocEnd', 6), ('Annotation', 6), ('objects.', 6), ('MaybeSource)}', 6), ('sequential', 6), ('defaultValue));\n', 6), ('ASYNC)', 6), ('onSubscribe,\n', 6), ('pp1.singleElement().takeUntil(pp2).test();\n\n', 6), ('overloading', 6), ('studentRepository.commit();\n\n', 6), ('success\n', 6), ('handler\n', 6), ('bufferSupplier', 6), ('4L,', 6), ('constructorShouldBePrivate()', 6), ('timeoutIndicator}', 6), ('assertTimeout(ofMillis(3000),', 6), ('MagicServiceImpl', 6), ('IllegalArgumentException("struct', 6), ('o.onNext(4);', 6), ('this.sa', 6), ('Logging', 6), ('held', 6), ('Integer>>();\n\n', 6), ('Optional<E>', 6), ('ts.assertEmpty();\n', 6), ('DisposableHelper.dispose(debouncer);\n', 6), ('rest', 6), ('com.iluwatar.abstractdocument.domain;\n\nimport', 6), ('NodeImpl', 6), ('Closeable', 6), ('(!get())', 6), ('Session', 6), ('others', 6), ('accessed', 6), ('but\n', 6), ('subscribe(final', 6), ('q.isEmpty()))', 6), ('4109457741734051389L;\n\n', 6), ('ObjectHelper.requireNonNull(source7,', 6), ('LoggerFactory.getLogger(App.class);\n', 6), ('compare', 6), ('timerFired', 6), ('innerError(InnerObserver', 6), ('AddressFilter(),', 6), ('Assert.assertEquals(true,', 6), ('Used', 6), ('10th', 6), ('worker)', 6), ('m.invoke(null,', 6), ('Customer(2,', 6), ('threads.', 6), ('Promise<Void>', 6), ('exceptions.\n', 6), ('running.\n', 6), ('url;\n', 6), ('get(long', 6), ('Override', 6), ('RxJavaPlugins.onSchedule(run);\n', 6), ('emits\n', 6), ('Size', 6), ('address)', 6), ('java.io.OutputStream;\nimport', 6), ('NoSuchElementException', 6), ('verify(observer).onSubscribe(any(Disposable.class));\n', 6), ('TestResourceCompletableObserver();\n\n', 6), ('choice', 6), ('take(10)', 6), ('"Invalid', 6), ('spellDao', 6), ('Oliphaunt', 6), ('DisposableHelper.replace(parent,', 6), ('Util.\n', 6), ('userAccount', 6), ('Single.just(3),\n', 6), ('innerScheduler.schedule(new', 6), ('.assertValueCount(513)\n', 6), ('queue.offer(b);\n', 6), ('route', 5), ('testScheduler', 5), ('Delay</a>\n', 5), ('Validator#validate(Function,', 5), ('jvmOption', 5), ('io.reactivex.disposables.CompositeDisposable;\nimport', 5), ('objects.\n', 5), ('disposer', 5), ('Queue<Object>', 5), ('testData;\n', 5), ('Single.just(1);\n', 5), ('error.addThrowable(ex);\n', 5), ('ClientException("Cannot', 5), ('interactions', 5), ('statusCode;\n', 5), ('.append(word)\n', 5), ('problems', 5), ('next);\n', 5), ('prevents', 5), ('respectively.', 5), ('tasks\n', 5), ('ConditionalSubscriber<T>,', 5), ('however,', 5), ('(it.hasNext())', 5), ('JButton', 5), ('counter[0]++;\n//', 5), ('(requested.get()', 5), ('set.\n', 5), ('arity', 5), ('mock(Royalty.class);\n', 5), ('Observable.<Movie>', 5), ('MessageCollectorMember', 5), ('ps1', 5), ('impl', 5), ('present,', 5), ('waiting\n', 5), ('Address', 5), ('entity\n', 5), ('com.iluwatar.visitor;\n\nimport', 5), ('//when\n', 5), ('date:', 5), ('ex.getCause();\n', 5), ('t.onError(e);\n', 5), ('DisposableSubscriber<B>', 5), ('calls;\n', 5), ('java.text.ParseException:', 5), ('Value', 5), ('calls++;\n', 5), ('javax.sql.DataSource;\n\nimport', 5), ('this.callable', 5), ('sensitive', 5), ('io.reactivex.internal.util.*;\n\npublic', 5), ('well.</dd>\n', 5), ('missingClosingDD(e,', 5), ('subscribe(observer);\n', 5), ('onErrorNull()', 5), ('DisposableHelper.dispose(upstream);\n\n', 5), ('Thread(r,', 5), ('indexWildcard,', 5), ('newFirstname', 5), ('Flowable.fromIterable(iterate(elements)),\n', 5), ('generated\n', 5), ('AtomicThrowable();\n\n', 5), ('toString', 5), ('lock.unlock();\n', 5), ('unsubscribed', 5), ('(next', 5), ('ParallelFlowableTest.checkSubscriberCount(Flowable.range(1,', 5), ('IllegalArgumentException);\n', 5), ('immediate', 5), ('Object...', 5), ('fileLoggerModule.unprepare();\n', 5), ('bufferedReader', 5), ('WRONG_DEPOSIT,', 5), ('BackpressureOverflowStrategy', 5), ('-10.0f);\n', 5), ('ObjectHelper.requireNonNull(initialSupplier.call(),', 5), ('username)', 5), ('AbstractDocument', 5), ('arguments\n', 5), ('enhanced', 5), ('element\n', 5), ('source2)', 5), ('expected)', 5), ('("', 5), ('Consumer<T>}', 5), ('event,', 5), ('fixture', 5), ('(sd.isDisposed())', 5), ("'\\''", 5), ('<Upstream>', 5), ('Observable<U>', 5), ('href="http://reactivex.io/documentation/operators/delay.html">ReactiveX', 5), ('LeftRightEndObserver', 5), ('utilized', 5), ('Flowable>()', 5), ('AtomicReferenceArray<Object>', 5), ('executor)\n', 5), ("'\\n'\n", 5), ('cs.onError(ex);\n', 5), ('painlessParametersTypes', 5), ('2:', 5), ('assertThrows(Exception.class,', 5), ('answer(InvocationOnMock', 5), ('caught.",', 5), ('LotteryNumbers.create(\n', 5), ('onAfterTerminate();\n', 5), ('AsynchronousService', 5), ('Observable.<Integer>create(new', 5), ('fluent', 5), ('iterator();\n', 5), ('Schedulers.from(exec)', 5), ('java.nio.channels.SelectionKey;\nimport', 5), ('this.money', 5), ('call.\n', 5), ('calculate', 5), ('catching', 5), ('assertTrue(rmo.isDisposed());\n\n', 5), ('Schedulers.from(new', 5), ('serial;\n', 5), ('disposeAll();\n\n', 5), ('defaultItem)', 5), ('Schedulers.single(),', 5), ('java.util.concurrent.Callable;\n\n/**\n', 5), ('Single.just(1),\n', 5), ('java.security.PrivilegedActionException;\nimport', 5), ('io.reactivex.disposables.CompositeDisposable}\n', 5), ('compatible', 5), ('components).', 5), ('onRequest;\n', 5), ('SpscLinkedArrayQueue<GroupedFlowable<K,', 5), ('Single},', 5), ('scheduler.now(unit);\n\n', 5), ('sent\n', 5), ('scheduler.scheduleDirect(this));\n', 5), ('*/', 5), ('(QueueDisposable<T>)', 5), ('"\\""', 5), ('never()).onNext(any());\n', 5), ('callable\n', 5), ('accumulator;\n\n', 5), ('2.1.1', 5), ('n);\n\n', 5), ('exception;\n', 5), ('Subscriber}s', 5), ('sa.drainLoop();\n\n', 5), ('exps)', 5), ('org.objectweb.asm.commons.Method', 5), ('Downstream>', 5), ('memento', 5), ('operation)', 5), ('qs.requestFusion(mode);\n', 5), ('InitializingOnDemandHolderIdiom', 5), ('#create()}', 5), ('source.parallelism();\n', 5), ('subscribe(SingleObserver<?', 5), ('service.\n', 5), ('(inner.compareAndSet(current,', 5), ('Plugin', 5), ('Makes', 5), ('.mergeWith(Maybe.error(new', 5), ('constructor,', 5), ('getSessionFactory().openSession();\n', 5), ('(OutputStream', 5), ('count\n', 5), ('"12345678901",', 5), ('values;\n', 5), ('Subject<T>', 5), ('SingleSubject.create();\n', 5), ('java.util.concurrent.atomic.AtomicInteger;\nimport', 5), ('ensureOpen();\n', 5), ('function)', 5), ('concat(\n', 5), ('hasObservers()', 5), ('MethodKey', 5), ('ss;\n\n', 5), ('available=1', 5), ('j++;\n', 5), ('io.reactivex.processors.UnicastProcessor;\nimport', 5), ('Debug.proxy(new', 5), ('.subscribeOn(scheduler)\n', 5), ('t);\n}\n', 5), ('ClassPermission', 5), ('f.cancel(true);\n', 5), ('painlessReturnClass', 5), ('getId()', 5), ('IllegalArgumentException("original', 5), ('Order("name",', 5), ('temp', 5), ('source.subscribe(this);\n', 5), ('unlike', 5), ('fromIterator.next();\n', 5), ('ArrayCompositeDisposable', 5), ('further\n', 5), ('MongoDB', 5), ('single.toFlowable().subscribe(subscriber);\n\n', 5), ('(!delayErrors', 5), ('composing', 5), ('getValue()', 5), ('randomIntBetween(7,', 5), ('n));\n', 5), ('Schedulers.trampoline().createWorker();\n', 5), ('V1', 5), ('{\n//\n//', 5), ('monadic', 5), ('Member', 5), ('AccessController.doPrivileged(operation);\n', 5), ("File(parent.getAbsolutePath().replace('\\\\',", 5), ('Standard', 5), ('2.0.6', 5), ('Iterable<E>', 5), ('System.out.println("testStartIdempotence', 5), ('cancellation-safe', 5), ('zero', 5), ('this.disposer', 5), ('Mocks', 5), ('org.mockito.invocation.InvocationOnMock;\nimport', 5), ('base64Encoded', 5), ('io.reactivex.internal.disposables.DisposableHelper;\n\npublic', 5), ('lift)', 5), ('subscriber.onSubscribe(d2);\n\n', 5), ('ready.decrementAndGet();\n', 5), ('CakeLayerInfo("Layer1",', 5), ('available.\n', 5), ('operator)', 5), ('a/an', 5), ('accept(String', 5), ('ObjectHelper.requireNonNull(onComplete,', 5), ('assertEquals(message,', 5), ('computeNext()', 5), ('this.errorSupplier', 5), ('null"),\n', 5), ('reduce', 5), ('amount,', 5), ('inUse=1");\n\n', 5), ('TestException("Outer"))\n', 5), ('Information', 5), ('(m.javadoc', 5), ('again.");\n', 5), ('setCancellable(@Nullable', 5), ('.assertFailure(CompositeException.class)\n', 5), ('-1;\n\n', 5), ('subscriberCount()', 5), ('composer', 5), ('delay}\n', 5), ('f1', 5), ('painlessMethodKey', 5), ('Expects', 5), ('series', 5), ('t.onSubscribe(d);\n', 5), ('Block', 5), ('referenced', 5), ('saves', 5), ('Unit', 5), ('registration', 5), ('configured', 5), ('Unparseable', 5), ('Connect', 5), ('r.run();\n', 5), ('target)', 5), ('execute\n', 5), ('Single<U>', 5), ('*/\n@Retention(RetentionPolicy.CLASS)\n@Target({', 5), ('(Observable.java:").append(m.javadocLine', 5), ('fail.\n', 5), ('(option', 5), ('expression', 5), ('(for', 5), ('List<Book>', 5), ('completes,', 5), ('CopyOnWriteArrayList<Throwable>();\n', 5), ('observer2', 5), ('XContentParser', 5), ('line;\n', 5), ('Server("localhost",', 5), ('poison();\n', 5), ('unit);\n\n', 5), ('2");\n', 5), ('MergerBiFunction<Integer>(new', 5), ('used\n', 5), ('NullPointerException.class);\n', 5), ('subscriber.assertNoValues();\n', 5), ('StudentRepository', 5), ('testedCreature,', 5), ('list.get(index);\n', 5), ('(BufferedReader', 5), ('Subject.\n', 5), ('specifies', 5), ('books', 5), ('important', 5), ('Single.using(Functions.justCallable(d),', 5), ('"It', 5), ('WRONG_ADDRESS,', 5), ('K', 5), ('all));\n\n', 5), ('countries', 5), ('john', 5), ('complete;\n\n', 5), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/takeUntil.png"', 5), ('Handles', 5), ('child.onComplete();\n', 5), ('succeeds.\n', 5), ('verifyZeroInteractions(wizardDao,', 5), ('break', 5), ('students', 5), ('*/\n@Beta\npublic', 5), ('TestObserver<Long>();\n', 5), ('InnerSubscriber<T,', 5), ('round', 5), ('session.beginTransaction();\n', 5), ('frequency', 5), ('this.lock', 5), ('state\n', 5), ('times\n', 5), ('(QueueSubscription<T>)s;\n', 5), ('times(1)).onNext(null);\n', 5), ('"value', 5), ('builder,', 5), ('ObjectHelper.requireNonNull(iterator.next(),', 5), ('Attempts', 5), ('typically', 5), ('defaultItem;\n', 5), ('javaClassName', 5), ('objects\n', 5), ('Subscriber[n];\n\n', 5), ('wants', 5), ('java.util.concurrent.ExecutionException}', 5), ('resourceSupplier;\n', 5), ('merger', 5), ('address.\n', 5), ('//then\n', 5), ('necessarily', 5), ('e.onNext(3);\n', 5), ('selector.\n', 5), ('ObservableSource<String>()', 5), ('source4);\n', 5), ('dispatching', 5), ('LeftRightEndSubscriber', 5), ('.assertError(TestException.class);\n', 5), ('List<CakeToppingInfo>', 5), ('8;', 5), ('throwing\n', 5), ('toggle', 5), ('q.isEmpty();\n\n', 5), ('email;\n', 5), ('Objects', 5), ('})\npublic', 5), ('Bauer\n', 5), ('together', 5), ('unsubscribe', 5), ('values.add(value);\n', 5), ('fail(e);\n', 5), ('io.reactivex.subjects.UnicastSubject;\n\npublic', 5), ('Prototype', 5), ('ObjectHelper.requireNonNull(errorSupplier.call(),', 5), ('(iteratorNotification', 5), ('mapper}', 5), ('otherError()', 5), ('fs.onComplete();\n', 5), ('DisposableHelper.dispose(s);\n', 5), ('height="356"', 5), ('register', 5), ('assertNull(q.poll());\n', 5), ('Abstraction', 5), ('to.assertResult(1);\n\n', 5), ('#tryOnError(Throwable)}.\n', 5), ('apply(List<Integer>', 5), ('scheduler.scheduleDirect(this);\n', 5), ('MergerBiFunction<Integer>', 5), ('tryOnError(@NonNull', 5), ('scheduler.now(unit);\n', 5), ('sqlQuery', 5), ('ItemQueue', 5), ('java.util.ArrayDeque;\nimport', 5), ('ex))', 5), ('max', 5), ('TakeUntil</a>\n', 5), ('#autoConnect(int,', 5), ('io.reactivex.internal.fuseable.ConditionalSubscriber;\nimport', 5), ('Take', 5), ('Promise', 5), ('CakeLayerInfo("Layer2",', 5), ('wizardClass;\n', 5), ('TestObserver<Long>();\n\n', 5), ('onComplete}.\n', 5), ('Schedulers.from(exec);\n', 5), ('responseCode', 5), ('iterator.remove();\n', 5), ('FuseToObservable<T>', 5), ('LRU', 5), ('assertFalse(((Disposable)observer).isDisposed());\n\n', 5), ('files.\n', 5), ('NumberCrunchingTask(),', 5), ('adapter', 5), ('getConnection();\n', 5), ('parents', 5), ('disposables.dispose();\n', 5), ('innerComplete(this);\n', 5), ('-8948264376121066672L;\n\n', 5), ('show', 5), ('newFirstname,', 5), ('name.\n', 5), ('defaultItem;\n\n', 5), ('ObjectHelper.requireNonNull(it.next(),', 5), ('count}', 5), ('to.assertError(new', 5), ('set.size());\n', 5), ('MongoDatabase', 5), ('typo', 5), ('(!validate(subscribers))', 5), ('obj.getClass())', 5), ('java.net.URISyntaxException;\nimport', 5), ('f.onNext(1);\n', 5), ("RxJava's", 5), ('12/19/15', 5), ('V', 5), ('lets', 5), ('whenever', 5), ('origin,', 5), ('asynchronously', 5), ('com.iluwatar.observer;\n\nimport', 5), ('Annotates', 5), ('pp1.onError(ex);\n', 5), ('4;\n\n', 5), ('operator.\n', 5), ('Number', 5), ('ignored', 5), ('ObjectHelper.requireNonNull(reducer.apply(v,', 5), ('Functions.EMPTY_ACTION', 5), ('fileLoggerModule', 5), ('java.util.concurrent.ConcurrentLinkedQueue;\nimport', 5), ('pushing\n', 5), ('Callable<String>', 5), ('(!p.matcher(m.javadoc).find())', 5), ('ElementType.TYPE', 5), ('assertTrue(task.isDisposed());\n', 5), ('this));\n', 5), ('beta\n', 5), ('io.reactivex.internal.subscriptions.SubscriptionArbiter;\n\npublic', 5), ('hash', 5), ('strategies', 5), ('source.subscribe(parents);\n', 5), ('Flowable.<Movie>', 5), ('MagicServiceImpl(wizardDao,', 5), ('data);\n', 5), ('channel\n', 5), ('GameObject', 5), ('err.initCause(list.get(index));\n', 5), ('accessing', 5), ('r;\n', 5), ('ce.getExceptions();\n', 5), ('JDK', 5), ('delayError))', 5), ('normally', 5), ('upstream.', 5), ('terminated,', 5), ('.append("Flowable', 5), ("Thread's", 5), ('Instantiates', 5), ('observers[i].dispose();\n', 5), ('path\n', 5), ('assertFalse(d1.isDisposed());\n\n', 5), ('RxJavaPlugins.onError', 5), ('that.', 5), ('#setCancellable(Cancellable)}\n', 5), ('call[1]++;\n', 5), ('calculated', 5), ('emit()', 5), ('hell', 5), ('apply(String', 5), ('R}.\n', 5), ('currentlyRunningSyncEvent', 5), ('Method>', 5), ('a(n)', 5), ('createdTime,', 5), ('safe.', 5), ('this.sd', 5), ('%s",', 5), ('System.out.print("', 5), ('(tokens.length', 5), ('Scheduler[]', 5), ('remove\n', 5), ('TimeoutFallbackObserver<T>', 5), ('collision\n', 5), ('Function<Flowable,', 5), ('through.\n', 5), ('observer.onSubscribe(d);\n\n', 5), ('FutureTask<Object>', 5), ('ObjectHelper.requireNonNull(onNext,', 5), ('DB\n', 5), ('source()', 5), ('ts.request(2);\n\n', 5), ('CompletableSource}', 5), ('subscribing\n', 5), ('account,', 5), ('Iterable.\n', 5), ('Integer[times];\n', 5), ('words', 5), ('close', 5), ('source();\n}\n', 5), ('subscribers.length;\n', 5), ('PrintStream', 5), ('number\n', 5), ('TestObservable', 5), ('(C', 5), ('whichever', 5), ('(SubscriptionHelper.setOnce(this,', 5), ('++dimensions;\n', 5), ('ConditionalSubscriber<?', 5), ('specified.\n', 5), ('Schedulers.newThread(),', 5), ('#tryOnError(Throwable)}', 5), ('note:</em>', 5), ('com.iluwatar.tolerantreader;\n\nimport', 5), ('assertTrue(tc.isDisposed());\n\n', 5), ('get().request(p);\n', 5), ('assertEquals(true,', 5), ('assertTrue(errors.isEmpty());\n', 5), ('Flowable<U>', 5), ('WRONG_ORDER,', 5), ('.switchMapCompletable(new', 5), ('java.util.List;\n\npublic', 5), ('next,', 5), ('potions.put(type,', 5), ('FlowableSubscriber<Object>()', 5), ('CakeToppingInfo("Topping1",', 5), ('tryOnError(Throwable', 5), ('PublishSubscription<T>[]', 5), ('assumeTrue("test', 5), ('onCompleteSupplier)', 5), ('signalling', 5), ('channels', 5), ('}));\n\n', 5), ('s.onSubscribe(bs);\n', 5), ('#computation()}', 5), ('com.iluwatar.abstractdocument;\n\nimport', 5), ('href="http://reactivex.io/documentation/operators/takeuntil.html">ReactiveX', 5), ('to.assertNoValues();\n', 5), ('newThread(Runnable', 5), ('reports\n', 5), ('operations.\n', 5), ('to.assertResult(1);\n', 5), ('2.1', 5), ('safe.onError(new', 5), ('org.elasticsearch.tools.launchers;\n\nimport', 5), ('error(s)', 5), ('this.testFolder.newFile();\n', 5), ('(T', 5), ('sourcesIterable;\n\n', 5), ('tree', 5), ('SerializedObserver<T>', 5), ('fs.onNext(1);\n', 5), ('io.reactivex.functions.*;\n\npublic', 5), ('"onComplete', 5), ('(!tryOnError(t))', 5), ('downstream.onNext(t);\n', 5), ('it.', 5), ('mock(Callable.class);\n', 5), ('App()', 5), ('c);\n\n', 5), ('dragonSlayer.goToBattle();\n', 5), ('java.net.SocketPermission;\nimport', 5), ('Observer<Object>,', 5), ('SimpleDateFormat', 5), ('.sorted(Functions.<Integer>naturalComparator())\n', 5), ('Emitter<T>', 5), ('mechanism', 5), ('com.iluwatar.servicelayer.spell.Spell;\nimport', 5), ('0);\n\n', 5), ('q.offer(value);\n', 5), ('poll();\n', 5), ('Consumer<Object>', 5), ('getInstance()', 5), ('Schedulers.trampoline())\n', 5), ('Otherwise,', 5), ('globals)', 5), ('(qs', 5), ('(ParseException', 5), ('driver', 5), ('<em>Important', 5), ('ScheduledDirectPeriodicTask', 5), ('dispose\n', 5), ('mock(SpellbookDao.class);\n', 5), ('this.\n', 5), ('ownerStruct,', 5), ('up\n', 5), ('state,', 5), ('ResumeSingleObserver<T>(this,', 5), ('mappings', 5), ('Promise<Integer>', 5), ('Predicate,', 5), ('(Flowable.java:").append(m.javadocLine', 5), ('emitLoop();\n', 5), ('Single.just(1))\n', 5), ('spell;\n', 5), ('java.security.cert.Certificate;\nimport', 5), ('e.getCause().getClass());\n', 5), ('assertSame(o,', 5), ('close()}', 5), ('object)', 5), ('maybe', 5), ('Fruit', 5), ('br,\n', 5), ('e.onNext(4);\n', 5), ('message.\n', 5), ('io.reactivex.internal.util.ExceptionHelper;\nimport', 5), ('exclusive', 5), ('Subscriber>()', 5), ('TimeUnit.DAYS));\n', 5), ('composition', 5), ('Collections.emptyList());\n', 5), ('t.printStackTrace();\n', 5), ('#setDisposable(Disposable)}', 5), ('about\n', 5), ('flag\n', 5), ('received\n', 5), ('response[0]', 5), ('sd,', 5), ('times(1)).onNext(1);\n', 5), ('unsubscribed.set(true);\n', 5), ('flatMap', 5), ('setCancellable(Cancellable', 5), ('potion);\n', 5), ('communicate', 5), ('day,', 5), ('com.iluwatar.hexagonal.database;\n\nimport', 5), ('submit', 5), ('tunnel', 5), ('<Downstream>', 5), ('RainbowFish}', 5), ('st', 5), ('Store', 5), ('TestException("inner"));\n\n', 5), ('inner.queue;\n', 5), ('DisposableHelper.DISPOSED;\n\n', 5), ('inheritance', 5), ('panel.add(new', 5), ('Burst.items(1,', 5), ('w.schedule(task);\n', 5), ('extendedPlugins', 5), ('cancellable', 5), ('Observable.range(10,', 5), ('Promise<T>', 5), ('iterable.iterator();\n', 5), ('much', 5), ('starts', 5), ('calls;\n\n', 5), ('connected', 5), ('Since\n', 5), ('settings,', 5), ('DisposableHelper.DISPOSED))', 5), ('executeService.shutdown();\n', 5), ('hook', 5), ('FlowableProcessor<T>', 5), ('element!"));\n', 5), ('Single.just(4),', 5), ('t4,', 5), ('observer.\n', 5), ('Arrays.asList("-Xms1g",', 5), ('future.\n', 5), ('Collections.singletonList(student1));\n', 5), ('holding', 5), ('ElementType.FIELD,', 5), ('hard', 5), ('count,\n', 5), ('OnErrorFailedSubscriber());\n', 5), ('check,', 5), ('SQLQuery', 5), ('TestHelper.mockSingleObserver();\n\n', 5), ('//given\n', 5), ('dispose.\n', 5), ('rco.start);\n', 5), ("'.');\n", 5), ('item.', 5), ('Pattern.compile("@see\\\\s+#[A-Za-z0-9', 5), ('Entry', 5), ('(parent.isDisposed())', 5), ('WITHOUT\n', 5), ('cart', 5), ('safeguard', 5), ('.timeout(100,', 5), ('timerInterruptible()', 5), ('asyncResult.await();', 5), ('this.initialSupplier', 5), ('"Callable', 5), ('call[1]);\n', 5), ('boundary,', 5), ('chain\n', 5), ('tail', 5), ('AsyncSubscription<T>[]', 5), ('Cast(from,', 5), ('message,', 5), ('tc.values.get(0).intValue());\n', 5), ('Movement', 5), ('assertTrue(s.getClass().getSimpleName(),', 5), ('s2)', 5), ('com.iluwatar.module;\n\nimport', 5), ('wizards', 5), ('++id));\n', 5), ('SubscriptionHelper.CANCELLED;\n\n', 5), ('BiFunction<Flowable,', 5), ('hooks', 5), ('1000));\n', 5), ('set}', 5), ('DataBus', 5), ('collected', 5), ('instantiated', 5), ('ts.assertFailure(TestException.class,', 5), ('zipper));\n', 5), ('null;', 5), ('Files.createTempFile(dir,', 5), ('(cancelled.get())', 5), ('Flowable<Object>>()', 5), ('happened.\n', 5), ('cancelAndClear();\n', 5), ('{}\n', 5), ('lazily', 5), ('fire', 5), ('jdx;\n', 5), ('giving', 5), ('Similar', 5), ('issue', 5), ('docs', 5), ('com.iluwatar.execute.around;\n\nimport', 5), ('WRONG_NAME,', 5), ('{@literal', 5), ('this.qs;\n', 5), ('element;\n', 5), ('User("Jamie', 5), ('usage:\n', 5), ('assertNotNull(asyncResult);\n', 5), ('dirty', 5), ('future;\n', 5), ('catches\n', 5), ('grant', 5), ('found\n', 5), ('Single.using(Functions.justCallable(1),', 5), ('Long.MAX_VALUE;\n\n', 5), ('assertNull(rmo.value);\n', 5), ('delivered.\n', 5), ('this.disposables', 5), ('.mergeWith(Single.error(new', 5), ('open', 5), ('something', 5), ('tc.onSubscribe(Disposables.empty());\n\n', 5), ('along', 5), ('com.iluwatar.throttling;\n\nimport', 5), ('"dep",', 5), ('BasicIntQueueSubscription<T>', 5), ('\'/\').replace("src/main/java",', 5), ('FutureTask<Object>(Functions.EMPTY_RUNNABLE,', 5), ('Consumer<Disposable>', 5), ('an",', 5), ('LOGGER.info("Enumerating', 5), ('times,', 5), ('buf;\n', 5), ('DisposableObserver<B>', 5), ('qd;\n\n', 5), ('o.reduce(new', 5), ('def', 5), ('session.close();\n', 5), ('java.io.IOException;\n\nimport', 5), ('sum', 5), ('periodically', 5), ('mongoClient;\n', 5), ('org.junit.jupiter.api.Assertions.assertTimeout;\nimport', 5), ('resultSelector)', 5), ('.assertFailure(MissingBackpressureException.class);\n', 5), ('this.observers;\n', 5), ('secure', 5), ('e.tryOnError(new', 5), ('Writer("Writer', 5), ('backpressureMentionedWithoutAnnotation(e,', 5), ('SubscriptionHelper.deferredRequest(s,', 5), ('yet.', 5), ('newLastname', 5), ('onComplete}\n', 5), ('comment', 5), ('#source()}', 5), ('accountNo;\n', 5), ('errors.add(e);\n', 5), ('verify(secondObserver,', 5), ('"Disposer");\n', 5), ('verify(o).onError(any(TestException.class));\n', 5), ('RxJavaPlugins.onError}', 5), ('(observers.get()', 5), ('await', 5), ('.unsubscribeOn(scheduler)\n', 5), ('captain', 5), ('(field.compareAndSet(current,', 5), ('20', 5), ('assertTrue(appender.logContains("Dwarven', 5), ('ScheduledDirectTask', 5), ('path;\n', 5), ('Observer<U>', 5), ('verify(firstObserver,', 5), ('DefaultObserver<Long>()', 5), ('ms.subscribe(inner);\n', 5), ('Compares', 5), ('pattern)', 5), ('Function<Long,', 5), ('Long,', 5), ('assertFalse(list.isEmpty());\n\n', 5), ('AsyncDisposable<T>[]', 5), ('Schedulers.io().createWorker();\n', 5), ('java.util.concurrent.ConcurrentHashMap;\nimport', 5), ('grade', 5), ('them.', 5), ('discovering', 5), ('#onSuccess(Object)}', 5), ('result.subscribe(o);\n\n', 5), ('(or', 5), ('this.qs', 5), ('sessionFactory.openSession())', 5), ('address;\n', 5), ('safeguards', 5), ('customer.\n', 5), ('"found', 5), ('Monad', 5), ('java.io.Closeable;\nimport', 5), ('gets\n', 5), ('TestException()),\n', 5), ('errorOnFewer)', 5), ('1]', 5), ('io.reactivex.annotations.NonNull;\n\n/**\n', 5), ('onErrorMapper,\n', 5), ('Ensures', 5), ('dispose().\n', 5), ('WRONG_CONTACT,', 5), ('InterruptedException}', 5), ('Royalty', 5), ('customerResource.getAllCustomers();\n', 5), ('this.active', 5), ('application.', 5), ('fs.onError(new', 5), ('com.iluwatar.composite;\n\nimport', 5), ('filter(Predicate<?', 5), ('Flowable\n', 5), ('SingleSource}s\n', 5), ('off', 5), ('pattern,', 5), ('shutdown",', 5), ('frc.dispose();\n', 5), ('b);\n', 5), ('verifyNoMoreInteractions(wizardDao,', 5), ('ResultSet', 5), ('DelayedRunnable', 5), ('soon', 5), ('list.get(index));\n', 5), ('Maybe<Integer>>()', 5), ('lock.lock();\n', 5), ('com.iluwatar.event.sourcing.state.AccountAggregate;\nimport', 5), ('java.util.Iterator;\n\nimport', 5), ('setDisposable(@Nullable', 5), (');\n\n', 5), ('behavior.', 5), ('cases', 5), ('SimpleObject', 5), ("'null'\n", 5), ('fighterClass;\n', 5), ('logic.\n', 5), ('(RxMethod', 5), ('dirs.offer(new', 5), ('SimpleObjects', 5), ('cs.test();\n\n', 5), ('service,', 5), ('Lottery', 5), ('state;\n', 5), ('parent.onComplete();\n', 5), ('List<Integer>>()', 5), ('ci', 5), ('headers\n', 5), ('parser)', 5), ('io.reactivex.plugins.RxJavaPlugins;\n\nimport', 5), ('.scan(new', 5), ('assertFalse(response[0]);\n\n', 5), ('executor;\n\n', 5), ('"1000"', 5), ('%s', 5), ('Transaction', 5), ('store\n', 5), ('SinglePostCompleteSubscriber<T,', 5), ('builder.toString();\n', 5), ('begin', 5), ('Domain', 5), ('Maybe<T>()', 5), ('"addr",', 5), ('d2.isCancelled();\n', 5), ('numInstances)', 5), ('FileStore', 5), ('TestSubscriber<Integer>();\n', 5), ('f.listFiles();\n', 5), ('InnerObserver<T,', 5), ('3;\n\n', 5), ('port,', 5), ('DISPOSED', 5), ('(Thread', 5), ('<p>Allows', 5), ('"He', 5), ('5).parallel()\n', 5), ('.append("Observable', 5), ('logic,', 5), ('Observable<List<Integer>>', 5), ('value();\n}\n', 5), ('")",', 5), ('composed', 5), ('spellbook', 5), ('mock', 5), ('class:\n', 5), ('receives\n', 5), ('.take(10)\n', 5), ('.parallel(2)\n', 5), ('SimpleQueueWithConsumerIndex<Object>', 5), ('servers.add(new', 5), ('Exception;\n}\n\n', 5), ('io.reactivex.MaybeObserver;\nimport', 5), ('i++;\n', 5), ('BiFunction<List<Integer>,', 5), ('Document("_id",', 5), ('utility', 5), ('Executors.newCachedThreadPool();\n', 5), ('main(final', 5), ('running.', 5), ('(SchedulerRunnableIntrospection)', 5), ('possible\n', 5), ('upstream)', 5), ('.append(".java:").append(m.javadocLine', 5), ('assertSame(all,', 5), ('resources,', 5), ('threads,', 5), ('Random', 5), ('java.util.function.Supplier;\n\n/**\n', 5), ('Item', 5), ('io.reactivex.subscribers.SerializedSubscriber;\n\npublic', 5), ('"]"', 5), ('#onError(Throwable)},\n', 5), ('executeService', 5), ('validated', 5), ('org.junit.jupiter.api.Disabled;\nimport', 5), ('R>(actual,', 5), ('yet,', 5), ('java.util.function.Supplier;\n\nimport', 5), ('(ready.get()', 5), ('tx.rollback();\n', 5), ('callable()', 5), ('d1.isCancelled();\n', 5), ('ObjectHelper.requireNonNull(callable.call(),', 5), ('pp.concatMapCompletable(\n', 5), ('16,', 5), ('Thread.sleep(3000);\n', 5), ('call\n', 5), ('resource;\n\n', 5), ('(IllegalAccessException', 5), ('lastName', 5), ('any\n', 5), ('SequentialDisposable();\n\n', 5), ('Set<URL>', 5), ('io.reactivex.subscribers;\n\nimport', 5), ('ensures', 5), ('TestSubscriber<Integer>(0L);\n\n', 5), ('State<T,', 5), ('observer);\n\n', 5), ('com.iluwatar.halfsynchalfasync;\n\nimport', 5), ('java.util.function.Function;\n\nimport', 5), ('cache.get(userId);\n', 5), ('apply(Observable', 5), ('succeed', 5), ('restrictions.\n', 5), ('(Scheduler', 5), ('blockingGet()', 5), ('give', 5), ('IQueryService', 5), ('spy(new', 5), ('StandardCopyOption.ATOMIC_MOVE);\n', 5), ('DomainEvent', 5), ('types.\n', 5), ('Globals', 5), ('SlotPair<T>', 5), ('System.exit(1);\n', 5), ('org.mockito.Mockito.times;\nimport', 5), ('queue)', 5), ('title', 5), ('associating\n', 5), ('here\n', 5), ('5));\n', 5), ('this.collection', 5), ('shutdown()', 5), ('io.reactivex.annotations;\n\nimport', 5), ('Observer<Object>()', 5), ('Functions.EMPTY_ACTION);\n\n', 5), ('ObservableSource<?>', 5), ('capacity', 5), ('result[1]', 5), ('CrashDummy(true,', 5), ('source.onNext(1);\n', 5), ('onAfterTerminate));\n', 5), ('mapper))', 5), ('List<Class<?>>', 5), ('Document("userID",', 5), ('(Session', 5), ('subscriber.onSubscribe(d1);\n\n', 5), ('(q)', 5), ('Make', 5), ('(++calls', 5), ('sequences', 5), ('getHeavy()', 5), ('DefaultObserver<Integer>()', 5), ('mode\n', 5), ('IllegalArgumentException("Sequence', 5), ('map(Function<?', 5), ('ps2', 5), ('non-cancelled', 5), ('reporting', 5), ('verify(observer).onComplete();\n', 5), ('property\n', 5), ('java.io.UncheckedIOException;\nimport', 5), ('org.mockito.Mockito.when;\n\n/**\n', 5), ('(error.addThrowable(e))', 5), ('PERFECT_ORDER,', 5), ('buffers;\n\n', 5), ('io.reactivex.internal.disposables.*;\n\npublic', 5), ('manager",', 5), ('INSTANCE;\n', 5), ('Integer.MAX_VALUE,', 5), ('indices', 5), ('Maybe.mergeDelayError(\n', 5), ('channel;\n', 5), ('source3);\n', 5), ('LOGGER.error("Exception', 5), ('INNER_DISPOSED', 5), ('System.getProperty()}):</strong>\n', 5), ('trampoline', 5), ('lineNumber,', 5), ('IndexType', 5), ('execution.\n', 5), ('weapon;\n', 5), ('size()', 5), ('})', 5), ('(tx', 5), ('fail(Throwable', 5), ('QueueDisposable.NONE)', 5), ('interface.\n', 5), ('cancelled\n', 5), ('format:', 5), ('com.iluwatar.promise;\n\nimport', 5), ('out)', 5), ('(ClassNotFoundException', 5), ('purge', 5), ('(!queue.offer(t))', 5), ('(PublishSubscription<T>', 5), ('references', 5), ('fetch', 5), ('io.reactivex.functions.Cancellable;\n\n/**\n', 5), ('a.dispose();\n', 5), ('CANCELLED;\n', 4), ('(\n', 4), ('Collection', 4), ('mappings)', 4), ("wasn't", 4), ('<D>', 4), ('["\n', 4), ('n;\n\n', 4), ('B>\nextends', 4), ('painlessParameterTypeName', 4), ('ParallelFlowable<List<T>>', 4), ('END', 4), ('NEXT_WINDOW)', 4), ('onErrorReturn}', 4), ('removeInner(is);\n', 4), ('(!m.signature.contains("Observable"))', 4), ('delayed.\n', 4), ('UnsupportedOperationException("Read', 4), ('disposeState;\n\n', 4), ('null}.', 4), ('TestException();\n//', 4), ('MaybeCallbackObserver<Object>', 4), ('beforeCancelSleep(ts);\n\n', 4), ('source.materialize().dematerialize();\n\n', 4), ('single()', 4), ('com.iluwatar.model.view.presenter;\n\nimport', 4), ('ApiGatewayResponseBuilder', 4), ('apply(Single', 4), ('Mongo', 4), ('onError;\n\n', 4), ('this.onCompleteSupplier', 4), ('.limit(3)\n', 4), ('RxJavaPlugins.setOnFlowableAssembly(new', 4), ('java.util.Spliterator;\nimport', 4), ('repository.count());\n\n', 4), ('this.otherArray', 4), ('decimated', 4), ('.doFinally(new', 4), ('serve', 4), ('ex.getMessage()', 4), ('.forEachWhile(new', 4), ('subscriber.get().onError(new', 4), ('Task', 4), ('cancelNoConcurrentClean()', 4), ('this.close', 4), ('single-threaded', 4), ('this.initialDelay', 4), ('ObjectHelper.requireNonNull(onSuccess,', 4), ('timeoutIndicator', 4), ('}).takeLast(1);\n\n', 4), ('System.out.println("testShutdown', 4), ('Close>', 4), ('qd.isEmpty();\n', 4), ('Set<PosixFilePermission>', 4), ('(!m.signature.contains("ObservableSource"))', 4), ('this.exception', 4), ('Wilson)\n', 4), ('com.iluwatar.event.aggregator;\n\nimport', 4), ('non-positive', 4), ('this.dao.findAll();\n', 4), ('this.body', 4), ('href="http://reactivex.io/documentation/operators/repeat.html">ReactiveX', 4), ('org.mockito.Mockito.inOrder;\n\nimport', 4), ('Field>', 4), ('cdl2.await(5,', 4), ('weapon', 4), ('Queue}', 4), ('21,', 4), ('strategy,', 4), ('npe,', 4), ('TestHelper.checkDoubleOnSubscribeObservable(\n', 4), (').test();\n\n', 4), ('onWorker(int', 4), ('Collection<Object>', 4), ('pp2.onError(ex2);\n', 4), ('SimpleMessage', 4), ('Complete', 4), ('star.timePasses();\n', 4), ('!index.compareAndSet(idx,', 4), ('eventProcessor', 4), ('java.net.Inet6Address;\nimport', 4), ('assertAfterTerminateCalledOnce();\n', 4), ('AsynchronousService(new', 4), ('delay;\n\n', 4), ('HorrorMovie());\n', 4), ('customerResource', 4), ('(clazz.isArray())', 4), ('interruption\n\n', 4), ('slow', 4), ('result.subscribe(singleObserver);\n\n', 4), ('selector', 4), ('type/class', 4), ('LinkedBlockingQueue<>());\n', 4), ('from.', 4), ('Cancel', 4), ('older', 4), ('messages.', 4), ('-2809475196591179431L;\n\n', 4), ('Code"));\n', 4), ('length={}', 4), ('database.', 4), ('Observable.fromCallable(func);\n\n', 4), ('(firstTimeoutIndicator', 4), ('notification\n', 4), ('(System.currentTimeMillis()', 4), ('who', 4), ('e.printStackTrace();\n\n', 4), ('underneath', 4), ('7', 4), ('Restoring', 4), ('Runnable}', 4), ('assertExpectedJvmOptions(javaMajorVersion,', 4), ('reduceResult', 4), ('AttributeSet', 4), ('s.advanceTimeTo(1001,', 4), ('weather."});\n', 4), ('TestException("Main"))\n', 4), ('onErrorOtherOverflow()', 4), ('constructor.\n', 4), ('.assertValueCount(1024)\n', 4), ('parent.startFirstTimeout(firstTimeoutIndicator);\n', 4), ('2)));\n', 4), ('Params', 4), ('-9140123220065488293L;\n\n', 4), ('otherState;\n\n', 4), ('calories;\n', 4), ('funcLatch.await();\n', 4), ('io.reactivex.schedulers.Schedulers;\n\n@Test\npublic', 4), ('occurred.\n', 4), ('mapperThrows,', 4), ('f.subscribe(new', 4), ('@BeforeAll\n', 4), ('java.util.Properties;\nimport', 4), ('java.util.concurrent.CountDownLatch;\nimport', 4), ('essential', 4), ('java.util.regex.Matcher;\nimport', 4), ('instances.\n', 4), ('main;\n', 4), ('innerComplete(InnerObserver', 4), ('o.onSubscribe(THROWING_DISPOSABLE);\n', 4), ('verify(ballItem,', 4), ("Letter('h'),", 4), ('done)', 4), ('}).toFlowable()\n', 4), ('STATE_INACTIVE)', 4), ('MappingMetaData>>', 4), ('signaling', 4), ('2).create()', 4), ('comparator)', 4), ('IOException()))\n', 4), ('org.junit.Assert.assertTrue;\n\npublic', 4), ('subscribe(Consumer<?', 4), ('}).subscribeOn(Schedulers.single()).test();\n\n', 4), ('r,', 4), ('Operators</a>\n', 4), ('RxJavaPlugins.setErrorHandler(addToList(list));\n', 4), ('.requestMore(1)\n', 4), ('run.setFuture(ft);\n', 4), ('"source8', 4), ('(Reader', 4), ('t5,', 4), ('result[0]', 4), ('define', 4), ('assertFalse("Other', 4), ('OtherObserver(MergeWithObserver<T>', 4), ('dis', 4), ('href="http://reactivex.io/documentation/operators/timeout.html">ReactiveX', 4), ('pp.onNext(3);\n', 4), ('EmptyDisposable.error(error,', 4), ('as.complete(v);\n', 4), ('this.singletonInstanceMethod.get();\n', 4), ('org.apache.http.client.methods.CloseableHttpResponse;\nimport', 4), ('SuppressForbidden', 4), ('group\n', 4), ('s.onNext(3);\n', 4), ('#single()}', 4), ('schedule()', 4), ('assertEquals(e2,', 4), ('(t.isOnError())', 4), ('getScheduler()', 4), ('test.\n', 4), ('writer1', 4), ('(os', 4), ('ms2;\n', 4), ('Student(1,', 4), ('def)\n', 4), ('disposeState;\n', 4), ('combiner;\n\n', 4), ('ArrayDeque<File>();\n\n', 4), ('method);\n', 4), ('assertEquals("Didn\'t', 4), ('memoryMXBean.getHeapMemoryUsage();\n', 4), ('NullNode.getInstance(),', 4), ('2.12</a>)\n', 4), ('STATE_INACTIVE', 4), ('.assertFailure(ArithmeticException.class);\n', 4), ('list.get(0).intValue());\n', 4), ('m.javadoc.indexOf("Subscriber",', 4), ('Inet6Address)', 4), ('Scheduler.', 4), ('gWeather.timePasses();\n', 4), ('io.reactivex.internal.util.*;\n\n/**\n', 4), ('NumberFormatException', 4), ('here,', 4), ('this.bufferOpen', 4), ('coll', 4), ('topping', 4), ('RxThreadFactory', 4), ('inner.request(1);\n', 4), ('coll;\n', 4), ('assertTrue(ms2.hasObservers());\n\n', 4), ('(multiple', 4), ('!compareAndSet(idx,', 4), ('onComplete)\n', 4), ('lastIndex;\n\n', 4), ('Single<List<Integer>>', 4), ('AtomicLong(1);\n\n', 4), ('assertFalse(operator.queue.isEmpty());\n\n', 4), ('.takeLast(1)\n', 4), ('(component', 4), ('<T8>', 4), ('((CompositeException)', 4), ('simpleLong()', 4), ('downstream.onNext(w);\n\n', 4), ('"You', 4), ('OTHER_STATE_CONSUMED_OR_EMPTY', 4), ('Apply', 4), ('scheduler.scheduleDirect(new', 4), ('resultSet', 4), ('"class', 4), ('delay}', 4), ('microservice\n', 4), ('several', 4), ('fulfilled,\n', 4), ('refCount(long', 4), ('sb.append(v);\n', 4), ('combiner,', 4), ('this.actual;\n\n', 4), ('Person\n', 4), ('source.safeSubscribe(new', 4), ('DateFormatCallable}', 4), ('org.apache.http.client.methods.HttpGet;\nimport', 4), ('com.iluwatar.servicelayer.spellbook.Spellbook;\nimport', 4), ('until,', 4), ('newLastname);\n', 4), ('Optional<Customer>', 4), ('Processor}', 4), ('cold', 4), ('org.junit.jupiter.api.Assertions.fail;\n\n/**\n', 4), ('decide', 4), ('instanceId;\n', 4), ('pp.mergeWith(cs).test();\n\n', 4), ('java.util.concurrent.TimeUnit)},', 4), ('36);\n\n', 4), ('r.intValue());\n', 4), ('complete\n', 4), ('java.io.FileInputStream;\nimport', 4), ('Objects::nonNull,', 4), ('trait', 4), ('service\n', 4), ('Schedulers.trampoline());\n', 4), ('io.reactivex.exceptions.ProtocolViolationException;\nimport', 4), ('entries\n', 4), ('cert', 4), ('.blockingForEach(new', 4), ('io.reactivex.disposables.Disposable;\n\npublic', 4), ('sort', 4), ('observable.subscribe(observer);\n', 4), ('assertTrue(css[1].hasObservers());\n\n', 4), ('(i.e.,', 4), ('this.origin', 4), ('cases,', 4), ('TimeUnit.NANOSECONDS,', 4), ('"123-12312",', 4), ('Item(ItemType.RING,', 4), ('com.iluwatar.producer.consumer;\n\nimport', 4), ('active;\n', 4), ('Supplier<O>', 4), ('(!empty', 4), ('Guarded', 4), ('runnable\n', 4), ('lastIndex', 4), ("'rail'.\n", 4), ('Painless.', 4), ('ok,', 4), ('bufferClose;\n\n', 4), ('PropertiesFeatureToggleVersion(properties);\n', 4), ('assertTrue(cdl1.await(5,', 4), ('Thread.currentThread();\n', 4), ('difference', 4), ('assertEquals(null,', 4), ('TestHelper.checkDoubleOnSubscribeCompletable(new', 4), ('w.dispose();\n\n', 4), ('com.iluwatar.reactor.app;\n\nimport', 4), ('nonExistingCustomer', 4), ('Thread.sleep(150);\n', 4), ('Thread.sleep(150);\n\n', 4), ('this.defaultItem', 4), ('res', 4), ('unsubscription', 4), ('consumed;\n', 4), ('.assertError(e1)', 4), ('flush', 4), ('ex.getCause(),', 4), ('lastId', 4), ('Functions.justCallable(Maybe.just(1)))\n', 4), ('.timeInterval()\n', 4), ('CakeBakingService', 4), ('ExceptionHelper.terminate(error);\n\n', 4), ('switchOver()', 4), ('relay', 4), ('Scheduler}\n', 4), ('lower', 4), ('"Englund");\n', 4), ('10000)\n', 4), ('b[1]);\n', 4), ('building', 4), ('classes.length;', 4), ('}).subscribe(o);\n\n', 4), ('is.setResource(worker);\n', 4), ('type()', 4), ('task.get().dispose();\n\n', 4), ('whitelistField.painlessFieldTypeName', 4), ('ConcurrentHashMap<>();\n', 4), ('tryOnError()', 4), ('executorService.submit(()', 4), ('queries', 4), ('parent.otherSuccess(t);\n', 4), ('(terminate)', 4), ('LotteryService', 4), ('U>(source,', 4), ('WithLatestInnerObserver[]', 4), ('establish', 4), ('assertTrue(values.get(1)', 4), ('"Kuzminova",', 4), ('(executor', 4), ('Objects.requireNonNull(origin);\n', 4), ('(dq)', 4), ('ArrayList<Object>();\n', 4), ('TimeoutFallbackMaybeObserver<T>', 4), ('ObserverFusion.assertFusion(to,', 4), ('byteBuffer.getInt();\n', 4), ('upstream.isDisposed();\n', 4), ('"six");\n\n', 4), ('RepeatSubscriber<T>', 4), ('assertEquals(NullPointerException.class,', 4), ('ParallelFailureHandling.SKIP)\n', 4), ('ConcatMapInnerObserver', 4), ('SingleSource<Integer>()', 4), ('Contains', 4), ('active.decrementAndGet()', 4), ('bufferSupplier,\n', 4), ('s.scheduleDirect(r,', 4), ('java.lang.annotation.ElementType.FIELD;\nimport', 4), ('manual', 4), ('io.reactivex.*;\n\npublic', 4), ('io.reactivex.functions.Function;\n\npublic', 4), ('volume', 4), ('onSubscribe}\n', 4), ('params)', 4), ('jsonElement', 4), ('DebounceInnerSubscriber<T,', 4), ('Publisher<Boolean>', 4), ('assertEquals(i', 4), ('downstream.onNext(w);\n', 4), ('(CancellationException', 4), ('resourceDisposer,', 4), ('injection', 4), ('Thread\n', 4), ('OnComplete', 4), ('refCount(1,', 4), ('(name', 4), ('source.throttleFirst(400,', 4), ('transitiveBoundaryFusion(mode);\n', 4), ('6)\n', 4), ('demonstrate', 4), ('constructor\n', 4), ('timeIntervalDefaultSchedulerCustomUnit()', 4), ('Maybe.just(1);\n', 4), ('timerRunning', 4), ('cached', 4), ('o);\n', 4), ('Wrapper', 4), ('fit', 4), ('right);\n', 4), ('ObservableSource<R>', 4), ('shortHash;\n', 4), ('fileLoggerModule.prepare();\n\n', 4), ('Sorts', 4), ('wizards.add(mock(Wizard.class));\n', 4), ('check\n', 4), ('ArrayDeque<T>', 4), ('throwOnFirstOnly', 4), ('ACCOUNT_OF_JON,', 4), ('io.reactivex.annotations.SchedulerSupport', 4), ('expires.\n', 4), ('java.util.function.Predicate;\n\n/**\n', 4), ('validated)\n', 4), ('MaybeSource<U>', 4), ('retrieveIndices,', 4), ('OTHER_STATE_HAS_VALUE)', 4), ('assertEquals(21,', 4), ('WashingMachine', 4), ('operator.addAndGet(-2);\n\n', 4), ('qd.clear();\n\n', 4), ('resultSelector;\n\n', 4), ('href="https://github.com/reactive-streams/reactive-streams-jvm#2.12">Rule', 4), ('CollectObserver<T,', 4), ('Amit', 4), ('Static', 4), ('(can', 4), ('PathUtils.get(url.toURI());\n', 4), ('this.rightEnd', 4), ('NullNode.getInstance());\n', 4), ('Flowable.timer(1,', 4), ('bracket,', 4), ('ZoneOffset.UTC))\n', 4), ('PerfObserver(bh));\n', 4), ('source.timestamp(scheduler);\n', 4), ('RuntimeException);\n', 4), ('UnsupportedAudioFileException', 4), ('NextSubscriber<T>', 4), ('*/\n@Component\npublic', 4), ('Map', 4), ("Letter('i'),", 4), ('whitelist', 4), ('ps;\n\n', 4), ('fromCallableObservable.subscribe(observer);\n\n', 4), ('caught', 4), ('observers.get()', 4), ('emitted.\n', 4), ('named)', 4), ('ro', 4), ('de', 4), ('CompositeException);\n', 4), ('TestHelper.checkBadSourceFlowable(new', 4), ('(Expression', 4), ('TimeUnit,', 4), ('innerSuccess(R', 4), ('nextIndex)', 4), ('SingleSource<R>', 4), ('nine', 4), ('number?");\n', 4), ('conn', 4), ('assertFalse(bs2.isCancelled());\n', 4), ('TestObservable();\n', 4), ('.assertComplete();\n\n', 4), ('assertTrue(d2.isDisposed());\n\n', 4), ('timeUnit\n', 4), ('studentId;\n', 4), ('result));\n', 4), ('SchedulerSupport}({@link', 4), ('ObjectHelper.requireNonNull(item,', 4), ('DateFormatRunnalbe\n', 4), ('assertFalse(RxJavaPlugins.isBug(new', 4), ('SwitchMapSingleObserver<R>', 4), ('empty"));\n', 4), ('(i++', 4), ('Future.get()', 4), ('sb,', 4), ('org.elasticsearch.common.io.PathUtils;\n\nimport', 4), ('idiom', 4), ('Nazgul', 4), ('count));\n', 4), ('fromFuture}', 4), ('cancelAllBut(-1);\n', 4), ('errorOnFewer;\n', 4), ('arbiter;\n\n', 4), ('second.clear();\n', 4), ('#onSubscribe(Disposable)}', 4), ('Consumer<String>()', 4), ('2.1.14;', 4), ('mongo', 4), ('OtherSubscriber<T,', 4), ('command,', 4), ('otherSuccess(T', 4), ('.distinct(Functions.identity(),', 4), ('resultSelector;\n', 4), ('accept(StringBuilder', 4), ('onNextMapper;\n', 4), ('RepeatObserver<T>', 4), ('assertEquals("onErrorFail",', 4), ('continue;\n//', 4), ('IllegalArgumentException("illegal', 4), ('customScheduler.shutdown();\n', 4), ('ArrayList<Worker>();\n\n', 4), ('Do', 4), ('5L,', 4), ('"timeoutIndicator', 4), ('Mapper', 4), ('Publisher<U>>', 4), ('r;\n\n', 4), ('started.\n', 4), ('assertFalse(cs.hasComplete());\n', 4), ('prepareParameters((f,', 4), ('UnsupportedOperationException("this', 4), ('"Ring', 4), ('specification,\n', 4), ('expressionProvider()', 4), ('lock.notifyAll();\n', 4), ('atomically', 4), ('signal,', 4), ('this.errorMode;\n', 4), ('pair', 4), ('field)', 4), ('subscriber.set(s);\n', 4), ('AssertionError(fail.toString());\n', 4), ('this.u', 4), ('PosixFileAttributeView', 4), ('(winner.get()', 4), ('result.subscribe(observer);\n\n', 4), ('newChildren)', 4), ('service.', 4), ('right),', 4), ('factory\n', 4), ('previously', 4), ('(URISyntaxException', 4), ('ConditionalSubscriber)', 4), ('composer)', 4), ('converter)', 4), ('org.apache.http.util.EntityUtils;\nimport', 4), ('ObjectHelper.requireNonNull(\n', 4), ('CompletableSubject.create()\n', 4), ('consumer.\n', 4), ('isDisposed();\n\n', 4), ('CompositeException");\n', 4), ('attempts', 4), ('determine', 4), ('randomIntBetween(javaMajorVersion', 4), ('toObservable()', 4), ('>>>', 4), ('"Robert",', 4), ('1024;\n', 4), ('Exceptions.throwIfFatal(ex);\n\n', 4), ('OTHER_STATE_HAS_VALUE', 4), ('NoSuchAlgorithmException', 4), ('list.length', 4), ('break;', 4), ('ProtocolViolationException', 4), ('2000)\n', 4), ('normal', 4), ('versions\n', 4), ('Flowable.bufferSize()}.\n', 4), ('getSettings()', 4), ('biConsumerThrows(e))', 4), ('FIFO', 4), ('assertTrue(operator.queue.isEmpty());\n', 4), ('Flowable.rangeLong(1,', 4), ('org.junit.Assert.fail;\n\nimport', 4), ('clazz.getComponentType();\n', 4), ('SubscriptionCancelThrows());\n\n', 4), ('errors[1]', 4), ('needed\n', 4), ('sch.createWorker();\n', 4), ('Movie);\n', 4), ('Optional<Integer>', 4), ('rethrown', 4), ('runnable;\n', 4), ('java.io.FileWriter;\nimport', 4), ('DefaultSubscriber<Long>()', 4), ('FutureSubscriber<Integer>', 4), ('(!disposed)', 4), ('creatures', 4), ('workDone));\n', 4), ('"cancel()");\n', 4), ('Resource', 4), ('STATE_INACTIVE))', 4), ('Visitor', 4), ('STATE_RESULT_VALUE;\n', 4), ('pp1.onError(new', 4), ('method,\n', 4), ('plugin.\n', 4), ('database.\n', 4), ('fail("unexpected', 4), ('4;', 4), ('operations\n', 4), ('PluginInfo', 4), ('fuse', 4), ('Single.just(1).subscribe(new', 4), ('propagated', 4), ('(J2EE)', 4), ('finite', 4), ('CapturingUncaughtExceptionHandler', 4), ('IOException))', 4), ('delegates', 4), ('this();\n', 4), ('dao.update(customer);\n\n', 4), ('conceptionally', 4), ('UnsupportedOperationException("This', 4), ('javadocEnd)', 4), ('innerErrorAfterMainError()', 4), ('statusCode', 4), ('`this`', 4), ('12:08', 4), ('firstTimeoutIndicator;\n', 4), ('java.util.Enumeration;\nimport', 4), ('#refCount(int,', 4), ('errorOnFewer;\n\n', 4), ('invocation)', 4), ('IndexResolution', 4), ('observer.onNext(3);\n', 4), ('subj', 4), ('ThreadFactory,', 4), ('larger', 4), ('this.generator', 4), ('apply(Throwable', 4), ('lefts.clear();\n', 4), ('tasks,', 4), ('Person("Peter",', 4), ('#item}.', 4), ('connections.', 4), ('io.reactivex.internal.util.QueueDrainHelper;\nimport', 4), ('s.add(v);\n', 4), ('(ExceptionHelper.addThrowable(error,', 4), ('child.onError(e);\n', 4), ('customScheduler', 4), ('(Person', 4), ('repeat}', 4), ('bf', 4), ('ce.getExceptions().size());\n', 4), ('otherArray;\n', 4), ('Single.just(6),\n', 4), ('Consumer}', 4), ('getHeaders()', 4), ('onSubscribed.get());\n', 4), ('subscriber.onSubscribe(new', 4), ('manually,', 4), ('outputFused', 4), ('trustStoreType,', 4), ('countAfter.get());\n', 4), ('.subscribe(outer);\n\n', 4), ('message);\n', 4), ('mo', 4), ('"c");\n', 4), ('Report', 4), ('ArithmeticException.class,', 4), ('event)', 4), ('startTimeout(idx', 4), ('counterDateValues', 4), ('getValue();\n', 4), ('Thread.currentThread().setUncaughtExceptionHandler(new', 4), ('Observable,', 4), ('onStart();\n', 4), ('Instead', 4), ('java.sql.ResultSet;\nimport', 4), ('worker.schedulePeriodically(is,', 4), ('entity)', 4), ("'r'),", 4), ('rightEnd;\n', 4), ('this.version', 4), ('goodCompany.add(goodMoodRoyalty);\n', 4), ('CURRENT', 4), ('bufferClose;\n', 4), ('JavadocForAnnotations.lineNumber(b,', 4), ('main.ambWith(other).test();\n\n', 4), ('ClassCastException}.\n', 4), ('Observer.onNext', 4), ('name.length()', 4), ('assertNull(character.getAbilities());\n', 4), ('case\n', 4), ('Unprepare', 4), ('this.bufferClose', 4), ('Consumer)}', 4), ('org.apache.log4j.Logger;\n\n/**\n', 4), ('ignore\n', 4), ('assertTrue(disposable[0].isDisposed());\n', 4), ('names;\n', 4), ('5).switchMapCompletable(new', 4), ('TimeUnit)\n', 4), ('book', 4), ('arbitrary', 4), ('not.', 4), ('STATE_RESULT_VALUE)', 4), ('repeats', 4), ('.intValue());\n', 4), ('example:\n', 4), ('observer.onNext(value);\n', 4), ('"n', 4), ('.blockingGet();\n', 4), ('iterator.\n', 4), ('TimeoutSubscriber<T>', 4), ('instances,', 4), ('f2', 4), ('OnError(Throwable', 4), ('java.math.BigInteger;\nimport', 4), ('commands', 4), ('PARENT_DISPOSED', 4), ('list2.size());\n', 4), ('5;\n\n', 4), ('"two");', 4), ('"item', 4), ('s.onNext(Completable.never());\n', 4), ('Collections.singletonList(student1));\n\n', 4), ('HashMap<String,', 4), ('seedSupplier;\n', 4), ('SpscLinkedArrayQueue<C>', 4), ('observerLatch.await();\n\n', 4), ('Subject\n', 4), ('actionThrows()', 4), ('((Disposable)source).dispose();\n', 4), ('firstTimeoutIndicator.subscribe(consumer);\n', 4), ('asyncResult.getValue());\n', 4), ('bufferSupplier));\n', 4), ('o2).toList().blockingGet();\n\n', 4), ('accept(Subscriber<?', 4), ('funcLatch.countDown();\n\n', 4), ('Access', 4), ('annotation,', 4), ('List<CertificateInfo>', 4), ('java.lang.annotation.ElementType.METHOD;\nimport', 4), ('Pattern\n', 4), ('to2.assertValues(0L,', 4), ('trampolining', 4), ('io.reactivex.CompletableObserver;\nimport', 4), ('OtherObserver<T>(this);\n', 4), ('a.onNext(w);\n', 4), ('Statement', 4), ('.assertFailure(IOException.class)\n', 4), ('testToString()', 4), ('Find', 4), ('capacityHint,', 4), ('assertTrue(((Disposable)observer).isDisposed());\n', 4), ('(CloseableHttpClient', 4), ('Error', 4), ('html', 4), ('observer.onSuccess(2);\n', 4), ('f.get());\n', 4), ('assertFalse(errors.isEmpty());\n\n', 4), ('LOGGER.info("InterruptedException', 4), ('(pattern', 4), ('makeDone', 4), ('List<UserAccount>', 4), ('onSuccessSlowPath()', 4), ('assertFalse(cs.hasThrowable());\n', 4), ('Deque<T>', 4), ('m.javadoc.indexOf(wrongPre', 4), ('long,', 4), ('returnValue', 4), ('ErrorMode.IMMEDIATE));\n', 4), ('ObjectHelper.requireNonNull(sources.iterator(),', 4), ('timer;\n\n', 4), ('id;\n\n', 4), ('failed:', 4), ('Flowable.fromArray(array)\n', 4), ('Iterator<U>', 4), ('"order");\n', 4), ('spell\n', 4), ('obs.get().onError(new', 4), ('.assertResult(10);\n', 4), ('.subscribe(Functions.emptyConsumer());\n', 4), ('1000;\n', 4), ('(svq', 4), ('timer()', 4), ('SimpleMessage();\n', 4), ('to.assertTerminated();\n', 4), ('RUNNING;\n', 4), ('list.get(1).intValue());\n', 4), ('<dd>Backpressure', 4), ('queue.offer(NotificationLite.next(t));\n', 4), ('lift()}', 4), ('char', 4), ('aliases,', 4), ('code,', 4), ('SourceObserver<T,', 4), ('innerExceptions.size());\n\n', 4), ('ms2.onError(new', 4), ('SpscLinkedArrayQueue<Object>(bufferSize);\n', 4), ('(UnicastSubject<T>', 4), ('Observer.\n', 4), ('timeout0(timeout,', 4), ('ExceptionHelper.<Exception>throwIfThrowable(ex);\n', 4), ('12)\n', 4), ('this.debounceSelector', 4), ('log.info("customerDao.getAllCustomers():', 4), ('ex.getCause().getMessage());\n', 4), ('latest.getAndSet(null);\n', 4), ('queuing', 4), ('12,', 4), ('io.reactivex.flowables.ConnectableFlowable;\nimport', 4), ('io.reactivex.exceptions.OnErrorNotImplementedException', 4), ('15,', 4), ('queue.offer(isLeft', 4), ('null),', 4), ('t3);\n', 4), ('"zipper', 4), ('validation.\n', 4), ('org.springframework.stereotype.Component;\n\nimport', 4), ('stopWindows;\n\n', 4), ('scheduler.createWorker(),', 4), ('DateFormatCallable("dd/MM/yyyy",', 4), ('re-emitted', 4), ('java.security.cert.CertificateException;\nimport', 4), ('}).subscribe(ts);\n\n', 4), ('wizard', 4), ('Customer(1,', 4), ('"Expected', 4), ('DISPOSED))', 4), ('@Test\n//', 4), ('added.set(true);\n', 4), ('fallback);\n', 4), ('task.replace(worker.schedule(new', 4), ('B>(new', 4), ('TrampolineScheduler)', 4), ('s.scheduleDirect(Functions.EMPTY_RUNNABLE);\n\n', 4), ('t1);\n', 4), ('assertTrue(m.getClass().toString(),', 4), ('.elementAtOrError(1)\n', 4), ('src;\n', 4), ('subscribers;\n', 4), ('Throwable[]', 4), ('System.out.println("Start!");\n', 4), ('completing', 4), ('assertNotNull(result);\n', 4), ('to.assertResult();\n\n', 4), ('msg)', 4), ('instanceMethodDef', 4), ('Functions.ON_ERROR_MISSING;\n', 4), ('throttleFirstDefaultScheduler()', 4), ('extracted', 4), ('#onError(Throwable)}.\n', 4), ('pre-implemented', 4), ('caughtError.set(e);\n', 4), ('AtomicInteger(2);\n\n', 4), ('state-peeking', 4), ('service.getAllCakes();\n', 4), ('#getValue()}', 4), ('assertEquals("alpha",', 4), ('onSuccess(Integer', 4), ('assertNotEquals(t5,', 4), ('e3.getMessage());\n\n', 4), ('At', 4), ('TimeoutConsumer(0L,', 4), ('bufferClose,', 4), ('InputThousand', 4), ('9);\n', 4), ('Set<Wizard>', 4), ('Observable.just(1);\n\n', 4), ('times."}.\n', 4), ('UnsupportedAudioFileException,', 4), ('headers,', 4), ('SingleObserver.\n', 4), ('Threading', 4), ('unsafe', 4), ('(o1', 4), ('Thread.currentThread().getName();\n', 4), ('schema.\n', 4), ('Hero}', 4), ('consists', 4), ('source.flatMapMaybe(new', 4), ('mainDone;\n\n', 4), ('shouldNotDeliverResultIfSubscriberUnsubscribedBeforeEmission()', 4), ('.assertOf(ObserverFusion.<Integer>assertFusionMode(QueueFuseable.NONE))\n', 4), ('.onBackpressureLatest()\n', 4), ('list.add(e);\n', 4), ('blocks.\n', 4), ('com.iluwatar.cqrs.dto.Author;\nimport', 4), ('FileSelectorPresenter', 4), ('null")\n', 4), ('Disposable)', 4), ('cycles,', 4), ('#connect(Consumer)}.', 4), ('QueueSubscription', 4), ('Optional.empty(),\n', 4), ('ts2.assertValues(0L,', 4), ('few', 4), ('command)', 4), ('fusion</b>,', 4), ('HashSet<Integer>(),', 4), ("'null',", 4), ('Proxy', 4), ('list2.get(0).intValue());\n', 4), ('port);\n', 4), ('Examples</a>\n', 4), ('completeRace()', 4), ('CancellableDisposable', 4), ('items,', 4), ('inOrder.verify(observer).onError(any(TestException.class));\n', 4), ('(count++', 4), ('account.\n', 4), ('resource))', 4), ('sch.schedulePeriodicallyDirect(is,', 4), ('happyCase()', 4), ('list.get(0).getCause());\n', 4), ('com.iluwatar.event.sourcing.event.MoneyDepositEvent;\nimport', 4), ('"onSuccess', 4), ('ApiGatewayResponseBuilder\n', 4), ('disposer.accept((D)resource);\n', 4), ('fixtureScripts.runFixtureScript(fs,', 4), ('seed;\n\n', 4), ('debounceSelector;\n', 4), ('pp1.onError(ex1);\n', 4), ('this.requested;\n', 4), ('observerLatch.countDown();\n\n', 4), ('Person("Terry",', 4), ('exist.");\n', 4), ('2).elementAt(2,', 4), ('regardless', 4), ('tickets\n', 4), ('TestSubscriber<Long>();\n', 4), ('NioReactor}', 4), ('Validator<T>', 4), ('replaced', 4), ('notifications;\n', 4), ('flattens', 4), ('managed', 4), ('ObjectHelper.requireNonNull(boundarySupplier.call(),', 4), ('calories)', 4), ('DTOs', 4), ('org.junit.Assert.assertFalse;\nimport', 4), ('Single.using(Functions.justCallable(Disposables.empty()),', 4), ('combines', 4), ('false}', 4), ('assembled', 4), ('CUSTOMERS', 4), ('pid', 4), ('apply(Maybe', 4), ('SingleObserver,', 4), ('coll));\n', 4), ('.assertValues(100,', 4), ('fusedAsync()', 4), ('debouncer.get();\n', 4), ('Maybe<Movie>', 4), ('assertNull(cs.getThrowable());\n', 4), ('AsyncCallback<T>', 4), ('ObjectHelper.requireNonNull(zipper.apply(new', 4), ('delay(long', 4), ('AppManager', 4), ('keySelector;\n\n', 4), ('parent.error(t);\n', 4), ('s);\n\n', 4), ('300,', 4), ('assertInvalidLines(br,', 4), ('(InternalError', 4), ('Person("John",', 4), ('this.fileName', 4), ('initialValue;\n', 4), ('java.util.concurrent.BlockingQueue;\nimport', 4), ('assertTrue(values.get(0)', 4), ('BaseTck<Boolean>', 4), ('is.setResource(d);\n', 4), ('getAndIncrement();\n\n', 4), ('lambda', 4), ('ClassLoader', 4), ('java.time.LocalDateTime;\nimport', 4), ('CancellableDisposable(c));\n', 4), ('guarantee\n', 4), ('SecuritySettingsSourceField.TEST_PASSWORD);\n', 4), ('next))', 4), ('1));\n\n', 4), ('strength;\n', 4), ('Callable<Collection<Object>>()', 4), ('ObjectHelper.requireNonNull(source8,', 4), ('serves', 4), ('(q.isEmpty())', 4), ('returned\n', 4), ('assertEquals("Reports', 4), ('Map<Object,', 4), ('.doAfterTerminate(afterTerminate)\n', 4), ('OnErrorNotImplementedException', 4), ('leftEnd,\n', 4), ('Promise<V>', 4), ('clear(dq);\n', 4), ('initialValue,', 4), ('inner.getAndSet((SwitchMapMaybeObserver)INNER_DISPOSED);\n', 4), ('httpGet', 4), ('factory)', 4), ('search', 4), ('this.onAfterSuccess', 4), ('age={}', 4), ('s.onSubscribe(is);\n\n', 4), ('getInternalHeavyValue()', 4), ('(skip', 4), ('Re-subscribes', 4), ('eventId)', 4), ('s).subscribe(observer);\n\n', 4), ('Flowable.<Integer>empty()\n', 4), ('AudioInputStream', 4), ('-5677354903406201275L;\n', 4), ('(windows.get()', 4), ('bufferSize,\n', 4), ('output\n', 4), ('array\n', 4), ('modifiers;\n', 4), ('FUSED_CONSUMED', 4), ('available.', 4), ('numberOfSubscribers', 4), ('onComplete;\n\n', 4), ('is.queue;\n', 4), ('onFinally}', 4), ('BasicFuseableSubscriber<T,', 4), ('org.junit.jupiter.api.Assertions.assertTrue;\n\nimport', 4), ('assertTrue("Other', 4), ('href="http://reactivex.io/documentation/operators/connect.html">ReactiveX', 4), ('io.reactivex.Scheduler}', 4), ('100),', 4), ('assertError(list,', 4), ('isLeft,', 4), ('cs.subscribe(this);\n', 4), ('this.t', 4), ('Integer>(\n', 4), ('e.getMessage());\n\n', 4), ('org.junit.Before;\nimport', 4), ('mergeWith}', 4), ('level,', 4), ('Function<Operator,', 4), ('ms1;\n', 4), ('org.mockito.Mockito.verifyNoMoreInteractions;\n\n/**\n', 4), ('funcLatch', 4), ('org.elasticsearch.common.xcontent.XContentBuilder;\nimport', 4), ('proceed.\n', 4), ('AlbumListPage', 4), ('ObservableSource<TLeftEnd>>', 4), ('(InetSocketAddress)', 4), ('related\n', 4), ('DisposableHelper.dispose(otherObserver);\n', 4), ('bind', 4), ('user\n', 4), ('Flowable<Integer>>()', 4), ('(EndConsumerHelper.setOnce(this.s,', 4), ('retry(long', 4), ('com.iluwatar.event.sourcing.event.MoneyTransferEvent;\nimport', 4), ('AsyncProcessor<T>', 4), ('ps.mergeWith(cs).test();\n\n', 4), ('rightEnd;\n\n', 4), ('failure!")).subscribeOn(scheduler);\n\n', 4), ('java.util.Base64;\nimport', 4), ('output);\n', 4), ('accept(HashSet<Integer>', 4), ('R>(sources,', 4), ('s.onSuccess(value);\n', 4), ('NioReactor', 4), ('encoded', 4), ('Queue<GroupedUnicast<K,', 4), ('servant', 4), ('context.getBean(CakeToppingDao.class);\n', 4), ('emitterHasToString()', 4), ('setSubscription(s);\n', 4), ('inner[j].id;\n', 4), ('to1.assertEmpty();\n', 4), ('TestHelper.assertCompositeExceptions(ts,', 4), ('io.reactivex.MaybeSource;\nimport', 4), ('"outer");\n', 4), ('after\n', 4), ('Subscriber}s.\n', 4), ('after?",', 4), ('(timeout--', 4), ('alias', 4), ('accumulator,', 4), ('Schedules', 4), ('misbehaving', 4), ('operator.queue.offer(1);\n\n', 4), ('callableDf', 4), ('array[0]', 4), ('MoneyDepositEvent(\n', 4), ('getClass().getSimpleName(),', 4), ('char[]', 4), ('noErrorLoss()', 4), ('in.readLine();\n', 4), ('4);\n\n', 4), ('bit', 4), ('.assertFailure(TimeoutException.class);\n', 4), ('Collections.emptyMap(),', 4), ('"e");\n', 4), ('.fulfillInAsync(new', 4), ('errors.isEmpty())', 4), ('wrapper.getWrappedRunnable());\n', 4), ('io.reactivex.internal.fuseable.QueueFuseable;\nimport', 4), ('request)', 4), ('npe;\n', 4), ('times(1)).call();\n', 4), ('CertificateException,', 4), ('element)', 4), ('this.resultSelector', 4), ('InetSocketAddress(InetAddress.getLoopbackAddress(),', 4), ('index;', 4), ('pushed\n', 4), ('disposed/cancelled.\n', 4), ('boundary.subscribe(bs);\n', 4), ('error}', 4), ('.assertResult(1)\n', 4), ('wrap,', 4), ('java.lang.reflect.Method', 4), ('queue.', 4), ('classes.\n', 4), ('initialized,', 4), ('name={}', 4), ('cleared', 4), ('T\n', 4), ('notifies', 4), ('caughtError', 4), ('Emitting', 4), ('T9,', 4), ('e2).getExceptions();\n', 4), ('name()', 4), ('Subscriber<Object>', 4), ('states.add(star.getMemento());\n', 4), ('supporting', 4), ('host', 4), ('retries', 4), ('ps.ignoreElements()\n', 4), ('values);\n', 4), ('this.seedSupplier', 4), ('this.errorOnFewer', 4), ('values.length;', 4), ('port));\n', 4), ('RuntimeException();\n\n', 4), ('singleton\n', 4), ('onError.accept(ex);\n', 4), ('parent.close(this,', 4), ('m.javadoc.indexOf("Publisher",', 4), ('m.javadoc.indexOf("Observer",', 4), ('synchronously', 4), ('LoginPage', 4), ('e3', 4), ('java.security.PrivilegedExceptionAction;\n\n/**\n', 4), ('t1;\n', 4), ('item.getAge()', 4), ('itemTimeoutIndicator', 4), ('this.leftEnd', 4), ('(component.isArray())', 4), ('requests.', 4), ('to2.assertNoErrors();\n', 4), ('true}\n', 4), ('mp', 4), ('mock(WizardDao.class);\n', 4), ('u))', 4), ('TestHelper.emit(up,', 4), ('zipper);\n\n', 4), ('disconnecting\n', 4), ('many\n', 4), ('throwable.', 4), ('initialValue;\n\n', 4), ('this.item', 4), ('parse(String', 4), ('SingleSubject<T>', 4), ('SingleObserver#onError', 4), ('filter\n', 4), ('TestObserver<String>(observer);\n\n', 4), ('arguments', 4), ('ParallelFailureHandling.RETRY)\n', 4), ('java.security.AccessControlContext;\nimport', 4), ('resets', 4), ('Flowable.range(10,', 4), ('s1)', 4), ('TimeoutTask(nextIndex,', 4), ('flatMap(\n', 4), ('APIGatewayProxyResponseEvent', 4), ('throwOnFirstOnly)//\n', 4), ('assertTrue(cancelled);', 4), ('for.\n', 4), ('LinkedHashMap<Integer,', 4), ('fish', 4), ('#get(long,', 4), ('st.subscribe(new', 4), ('com.iluwatar.partialresponse;\n\nimport', 4), ('when(func.call()).thenAnswer(new', 4), ('Exception("test");\n', 4), ('Piyush', 4), ('shelf', 4), ('6);\n\n', 4), ('LEFT_VALUE', 4), ('from(@NonNull', 4), ('verify(func).call();\n\n', 4), ('dimensions);\n', 4), ('PersonSpecifications.AgeBetweenSpec(20,', 4), ('lastId;\n', 4), ('source.switchMapMaybe(new', 4), ('MissingBackpressureException', 4), ('Queue<File>', 4), ('student\n', 4), ('CakeLayerDao', 4), ('TestHelper.checkBadSourceObservable(new', 4), ('delayAllErrors()', 4), ('cs.onSuccess(3);\n\n', 4), ('accept(ArrayList<Integer>', 4), ('assertFalse(added.get());\n', 4), ('CollectSubscriber<T,', 4), ('2.0.7', 4), ('nextTransaction();\n\n', 4), ('assertEquals(7,', 4), ('@SuppressWarnings("unused")\n', 4), ('Atomically:', 4), ('Implementation\n', 4), ('validated\n', 4), ('RxJavaPlugins.reset();\n\n', 4), ('SingleSource<R>>', 4), ('org.elasticsearch.plugins;\n\nimport', 4), ('tenantName', 4), ('LOGGER.info(person.toString());\n', 4), ('PersonRepository', 4), ('replace");\n', 4), ('dir,', 4), ('"First");\n', 4), ('roles', 4), ('subscribes\n', 4), ('this.arbiter', 4), ('singleItem;\n', 4), ('username);\n', 4), ('firstTimeoutIndicator)', 4), ('Video>', 4), ('Completable.fromCallable(new', 4), ('blocking;', 4), ('<pre>permission', 4), ('{@link\n', 4), ('11:44', 4), ('Optional.of(id);\n', 4), ('HtmlTextInput', 4), ('Unsubscribing', 4), ('NullPointerException}', 4), ('com.iluwatar.databus.members;\n\nimport', 4), ('appender.getLastMessage());\n\n', 4), ('eight', 4), ('idx2', 4), ('this.boundarySupplier', 4), ('overload\n', 4), ('cancelAllBut(index);\n', 4), ('when;\n', 4), ('bufs.values())', 4), ('(Long)a[0];\n', 4), ('java.security.ProtectionDomain;\nimport', 4), ('occurred\n', 4), ('<dd>When', 4), ('AsyncResult', 4), ('buffered', 4), ('warrior', 4), ('dir)', 4), ('BallThread}', 4), ('bank', 4), ('o.dispose();\n', 4), ('rails.\n', 4), ('isActive,', 4), ('annotation.\n', 4), ('sa.requested);\n\n', 4), ("operator's", 4), ('\\"15.12.2015\\"",\n', 4), ('com.iluwatar.unitofwork;\n\nimport', 4), ('T.\n', 4), ('CoffeeMakingTask(2));\n', 4), ('sa.requested', 4), ('dropped\n', 4), ('version\n', 4), ('exists.\n', 4), ('dbName,', 4), ('origin;\n\n', 4), ('Burst.item(1).create()', 4), ('fs.onComplete();\n\n', 4), ('ThreadFactory()', 4), ('get(index);\n', 4), ('size())', 4), ('NumberExpression', 4), ('TestCompletable', 4), ('s.createWorker();\n', 4), ('pp.onError(ex);\n', 4), ('operation\n', 4), ('read-only', 4), ('refCount(subscriberCount,', 4), ('trusted', 4), ('okay,', 4), ('"Law",', 4), ('InnerObserver());\n', 4), ('scheduler.createWorker()));\n', 4), ('t.sendOnNext("one");\n', 4), ('.assertError(NoSuchElementException.class);\n', 4), ('(compareAndSet(index,', 4), ('counterExceptions', 4), ('w.onNext((T)v);\n', 4), ('five', 4), ('AccessController#doPrivileged(PrivilegedAction)}', 4), ('IOException\n', 4), ('counter;\n', 4), ('observers.\n', 4), ('Socket', 4), ('label.\n', 4), ('Single.unsafeCreate(new', 4), ('reply', 4), ('filepath', 4), ('onNextSlowPath()', 4), ('list.get(2).intValue());\n\n', 4), ('httpClient.execute(httpGet))', 4), ('inner.setDone();\n', 4), ('Long.MIN_VALUE;\n', 4), ('user)', 4), ('location,', 4), ('MaybeNo2Dot0Since.findSource("Flowable");\n', 4), ('negative', 4), ('sb.append("-");\n', 4), ('Single.just(2))\n', 4), ('height="490"', 4), ('mainBoundaryErrorInnerSuccess()', 4), ('ts.assertResult(1);\n', 4), ('Unhandled', 4), ('javaVersion', 4), ('formatted', 4), ('this.executor', 4), ('<p><strong>Supported', 4), ('Map<Headers,', 4), ('UncaughtExceptionHandler()', 4), ('interruption', 4), ('org.junit.jupiter.api.BeforeAll;\nimport', 4), ('assertTrue(rco.isDisposed());\n\n', 4), ('windows;\n\n', 4), ('scheduler,\n', 4), ('again.\n', 4), ('thrown,', 4), ('iterator;\n', 4), ('<U,', 4), ('Maybe}.\n', 4), ('Delete', 4), ('GetIndexRequest', 4), ('com.iluwatar.event.sourcing.event.AccountCreateEvent;\nimport', 4), ('java.lang.management.ManagementFactory;\nimport', 4), ('onCompleteSupplier;\n', 4), ('CakeLayer', 4), ('Maybe.just(2),', 4), ('Observer<R>,', 4), ('TestHelper.checkInvalidParallelSubscribers(\n', 4), ('possibility', 4), ('track', 4), ('wrapped\n', 4), ('Flowable.just(1).parallel(1)\n', 4), ('io.reactivex.internal.util.EndConsumerHelper;\n\n/**\n', 4), ('lastTime', 4), ('STATE_RESULT_VALUE', 4), ('(connection', 4), ('.assertResult(new', 4), ('Publisher<Integer>()', 4), ('#getThrowable()}', 4), ('seedSupplier,', 4), ('Repeatedly', 4), ('emission,\n', 4), ('&#64;{@link', 4), ('MergeWithObserver<T>(observer);\n', 4), ('innerExceptions.get(0);\n', 4), ('(!useMongoDB)', 4), ('Publisher<List<Long>>', 4), ('personalised', 4), ('org.apache.http.impl.client.HttpClients;\nimport', 4), ('.delay(5,', 4), ('org.elasticsearch.xpack.ml.job.process.autodetect.writer;\n\nimport', 4), ('money.\n', 4), ('painlessStruct', 4), ('PotatoPeelingTask(4));\n', 4), ('scheduler-returning', 4), ('org.hamcrest.Matchers.equalTo;\nimport', 4), ('this.disposeState', 4), ('o.blockingLast();\n\n', 4), ('Return', 4), ('es', 4), ('requested.get();\n\n', 4), ('CustomException(ex.getMessage(),', 4), ('other.subscribe(parent.otherObserver);\n', 4), ('onDisposed(@NonNull', 4), ('parsed', 4), ('arguments.size();', 4), ('pp.parallel(1)\n', 4), ('io.reactivex.internal.util.ErrorMode;\nimport', 4), ('execution");\n', 4), ('CancellationException.class)\n', 4), ('"She', 4), ('.autoConnect()\n', 4), ('fail("Didn\'t', 4), ('Files.write(tmp,', 4), ('onDispose;\n', 4), ('LOGGER.info("Count', 4), ('"English"));\n', 4), ('pp1.onNext(1);\n\n', 4), ('SubscribeOnObserver<T>', 4), ('memHeap', 4), ('declarations)', 4), ('2233020065421370272L;\n\n', 4), ('money)', 4), ('this.stopWindows', 4), ('testing.\n', 4), ('inUse=0");\n\n', 4), ('com.iluwatar.observer.generic;\n\nimport', 4), ('intelligence;\n', 4), ('CustomerDto("1",', 4), ('@Rule\n', 4), ('Serializes', 4), ('concat(Publisher<?', 4), ('once).\n', 4), ('damaged', 4), ('name>', 4), ('ObservableSource<U>>', 4), ('12:07', 4), ('invalidLineConsumer.accept(lineNumber,', 4), ('owning', 4), ('specify.</dd>\n', 4), ('ts2.assertNoErrors();\n', 4), ('BlockingObservableIterator<Integer>', 4), ('left,', 4), ('assertTrue("Main', 4), ('ToListSubscriber<T,', 4), ('injected', 4), ('SingleInternalHelper.toFlowable(),', 4), ('BiConsumer<StringBuilder,', 4), ('TERMINATED.', 4), ('studentRepository', 4), ('Dixit\n', 4), ('ts.assertNoErrors()\n', 4), ('Completable.complete())\n', 4), ('ThreadAsyncExecutor#startProcess(Callable,', 4), ('publish', 4), ('WorkerCallback()', 4), ('@State(Scope.Thread)\n', 4), ('propagates', 4), ('IllegalStateException("Should', 4), ('List<CakeTopping>', 4), ('subscribers.', 4), ('DisposableHelper.setOnce(upstream,', 4), ('java.util.Collections.emptyList;\n\npublic', 4), ('details.\n', 4), ('TrustManagerFactory",', 4), ('cdl2', 4), ('Answer<String>()', 4), ('Calculate', 4), ('valueSelector;\n', 4), ('java.net.SocketAddress;\nimport', 4), ('Request', 4), ('ArrayList<Integer>();\n\n', 4), ('EmptyDisposable.complete(s);\n', 4), ('DataFetcher', 4), ('correctly', 4), ('title\n', 4), ('s.get()', 4), ('first.clear();\n', 4), ('this.onErrorMapper', 4), ('(UnsupportedOperationException', 4), ('Schedulers.single());\n', 4), ('eager));\n', 4), ('subscribeActual();\n\n', 4), ('cakeToppingInfo,', 4), ('onErrorRace()', 4), ('Flowable.just(1L),\n', 4), ('-99");\n', 4), ('resultSelector', 4), ('TestHelper.checkDoubleOnSubscribeFlowable(\n', 4), ('unsubscribe",', 4), ('context.getBean(CakeLayerDao.class);\n', 4), ('nasta', 4), (':\n', 4), ('System.out.println("completed");\n', 4), ('promise\n', 4), ('itemTimeoutIndicator,\n', 4), ('org.slf4j.LoggerFactory;\nimport', 4), ('NextObserver<T>', 4), ('parent.startTimeout(0L);\n', 4), ('(cancelling\n', 4), ('StringReader(\n', 4), ('seedSupplier;\n\n', 4), ('(T)q.poll();\n\n', 4), ('java.nio.channels.SelectionKey;\n\n/**\n', 4), ('jessewilson@google.com', 4), ('mainDone', 4), ('with.\n', 4), ('rc.subscriberCount', 4), ('assertTrue(values.get(3)', 4), ('enter', 4), ('svq', 4), ('s.advanceTimeTo(1501,', 4), ('functionality', 4), ('CakeToppingDao', 4), ('domainapp.dom.modules.simple.SimpleObject;\nimport', 4), ('xs)', 4), ('reason();\n}\n', 4), ('personalized\n', 4), ('pos', 4), ('boundarySubscriber.dispose();\n', 4), ('innerErrorRace()', 4), ('struct.', 4), ('modules,', 4), ('View', 4), ('org.mockito.Mockito.verify;\n\n/**\n', 4), ('"two")\n', 4), ('result.length;', 4), ('disposeState,', 4), ('EmptySubscription.complete(s);\n', 4), ('#refCount(long,', 4), ('timestamp)', 4), ('domainEvent', 4), ('2).elementAt(1,', 4), ('org.junit.Assert.assertTrue;\nimport', 4), ('Scheduler)\n', 4), ('B', 4), ('}).test().assertEmpty();\n', 4), ('ACCOUNT_OF_DAENERYS,', 4), ('Random();\n', 4), ('NEXT_WINDOW', 4), ('amount)', 4), ('noPermissions', 4), ('data;\n', 4), ('binding', 4), ('(stopWindows.compareAndSet(false,', 4), ('ObjectHelper.requireNonNull(value,', 4), ('compare\n', 4), ('cfg)', 4), ('terminates.\n', 4), ('seed));\n', 4), ('K>>', 4), ('Arrays.asList(new', 4), ('ts.request(3);\n', 4), ('toOffer', 4), ('this),', 4), ('encounters\n', 4), ('40));\n\n', 4), ('ps.onNext(4);\n', 4), ('ExecutorWorker', 4), ('upfront.\n', 4), ('keyPath', 4), ('Flowable<Flowable<Integer>>', 4), ('SocketPermission}', 4), ('assertTrue(values.get(2)', 4), ('clusterName', 4), ('o.blockingGet();\n\n', 4), ('super(location,', 4), ('(currentIndex', 4), ('-4592979584110982903L;\n\n', 4), ('MulticastProcessor<Integer>', 4), ('IllegalArgumentException.class,', 4), ('Matcher', 4), ('final:', 4), ('0).blockingGet().intValue());\n', 4), ('-2935427570954647017L;\n\n', 4), ('Integer[3]),', 4), ('onNext(@NonNull', 4), ('sampled.subscribe(observer);\n\n', 4), ('java.util.LinkedHashSet;\nimport', 4), ('assertNotNull(new', 4), ('unload', 4), ('counts', 4), ('onAfterSuccess;\n\n', 4), ('Function3<Object,', 4), ('List<Creature>', 4), ('s.onSubscribe(d);\n', 4), ('Scheduler>', 4), ('defaults', 4), ('RuntimeException("Barf!");\n', 4), ('leftEnd;\n\n', 4), ('Notification<T>>', 4), ('BiConsumer<ArrayList<Integer>,', 4), ('failure"));\n\n', 4), ('(!clazz.isInstance(ex))', 4), ('separated', 4), ('GuardedQueue', 4), ('pool\n', 4), ('e4', 4), ('error2()', 4), ('.assertValues(10,', 4), ('BaseTck<List<Long>>', 4), ('ts.assertTerminated();\n', 4), ('ParallelFailureHandling.STOP)\n', 4), ('enables', 4), ('(CloseableHttpResponse', 4), ('sampled', 4), ('Delegate', 4), ('kdx', 4), ('bufferSupplier,', 4), ('list2.get(1).intValue());\n', 4), ('enable', 4), ('accessible', 4), ('Weather', 4), ('are:', 4), ('assertSame(NullNode.getInstance(),', 4), ('flatMap}', 4), ('Flowable.fromPublisher(new', 4), ('maxConcurrency));\n', 4), ('OperationNeverComplete', 4), ('assertTrue(ms1.hasObservers());\n\n', 4), ('AccessController.doPrivileged((PrivilegedAction<Void>)', 4), ('#onSuccess(Object)},', 4), ('ms1', 4), ('lock;\n\n', 4), ('ArrayList<Long>();\n\n', 4), ('enters', 4), ('limit()', 4), ('peter', 4), ('(subclass)', 4), ('queryParam', 4), ('5000)\n', 4), ('"Adam",', 4), ('backpressure()', 4), ('1L);\n\n', 4), ('assertTrue(result);\n\n', 4), ('StudentDatabase', 4), ('unicast', 4), ('executeService.awaitTermination(10,', 4), ('lottery\n', 4), ('onSubscribe;\n\n', 4), ('<class', 4), ('javaAugmentedClass', 4), ('RxJavaPlugins.setOnFlowableSubscribe(new', 4), ('event.getFormattedMessage().equals(message));\n', 4), ('FileReader(f));\n', 4), ('Single.mergeDelayError(\n', 4), ('(it', 4), ("Letter('o'),", 4), ('fine', 4), ('NullPointerException);\n', 4), ('itemTimeoutIndicator;\n\n', 4), ('callbackThrows()', 4), ('PublishDisposable<T>[]', 4), ('(!q.offer(value))', 4), ('one.\n', 4), ('customScheduler;\n', 4), ('bufferSupplier\n', 4), ('FileLoggerModule.getSingleton();\n\n', 4), ('classes)', 4), ('Scheduler#shutdown()}', 4), ('ts.assertFailureAndMessage(TestException.class,', 4), ('1024.0', 4), ('Flowable.unsafeCreate(t);\n\n', 4), ('onError()}\n', 4), ('Chaudhari\n', 4), ('is:', 4), ('"if', 4), ('painlessField', 4), ('index.get();\n', 4), ('(sb.length()', 4), ('res)', 4), ('onDispose', 4), ('io.reactivex.observers.DisposableObserver;\nimport', 4), ('(kdx', 4), ('fulfills', 4), ('flattening', 4), ('disposer.accept(resource);\n', 4), ('same-order', 4), ('AbstractHolderTest', 4), ('specialDay,', 4), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/onErrorResumeNext.png"', 4), ('p.subscribe(end);\n\n', 4), ('debounceSelector)', 4), ('times(1)).onNext(2);\n', 4), ('users.\n', 4), ('org.mockito.Matchers.any;\nimport', 4), ('this.windows', 4), ('meaning', 4), ('io.reactivex.internal.functions.Functions;\n\npublic', 4), ('assertTrue(bs.isDisposed());\n\n', 4), ('ask', 4), ('<R>\n', 4), ('org.apache.http.impl.client.CloseableHttpClient;\nimport', 4), ('Model', 4), ('dest,', 4), ('inOrder.verify(observer).onNext(2);\n', 4), ('InputWithIncrementingInteger', 4), ('getClass()))', 4), ('"should_not_be_delivered";\n', 4), ('gives', 4), ('linked', 4), ('names,', 4), ('DecoratingIterator<E>(iterable.iterator())', 4), ('leftEnd;\n', 4), ('assertEquals("failure', 4), ('singletong', 4), ('depends', 4), ('(sch', 4), ('TimeoutObserver<T>', 4), ('ArrayList<String>();\n\n', 4), ('AtomicReference<SwitchMapMaybeObserver<R>>', 4), ('(javaClassName', 4), ('ninth', 4), ('sa.produced(p);\n', 4), ("method's", 4), ('simultaneous', 4), ('dataSource', 4), ('created.', 4), ('"lawrence",', 4), ('others\n', 4), ('combiner)', 4), ('easy', 4), ('test}', 4), ('startProcess(Callable<T>', 4), ('List<Student>>', 4), ('(remaining', 4), ('sa.setSubscription(s);\n', 4), ('li', 4), ('code.\n', 4), ('setDisposable(new', 4), ('options\n', 4), ('Violating', 4), ('privileges', 4), ('Timeout</a>\n', 4), ('MB%n",', 4), ('assertNotEquals(t3,', 4), ('NoSuchElementException("The', 4), ('Condition', 4), ('(UnicastProcessor<T>', 4), ('innerExceptions.get(1);\n', 4), ('parent.innerSuccess(t);\n', 4), ('PROPERTY', 4), ('Object[]}', 4), ('when)', 4), ('clazz.isInstance(cel.get(index)));\n', 4), ('assertTrue(e2', 4), ('connection;\n\n', 4), ('Functional', 4), ('RuntimeException("forced', 4), ('socket.\n', 4), ('cdl1.countDown();\n', 4), ('disposables.remove(end);\n', 4), ('happen\n', 4), ('values.size());\n', 4), ('ErrorMode.IMMEDIATE);\n\n', 4), ('#onStart()},', 4), ('));\n\n', 4), ('true.\n', 4), ('"one");', 4), ('FlowableFlatMapPublisher(sources,', 4), ('"onSubscribe()");\n', 4), ('parent.open(t);\n', 4), ('href="http://www.grahamlea.com/2014/07/rxjava-threading-examples/">RxJava', 4), ('16);\n', 4), ('IllegalStateException("jar', 4), ('t.onComplete();\n', 4), ('SimpleQueue<R>', 4), ('introduce', 4), ('com.iluwatar.event.sourcing.domain.Account;\nimport', 4), ('T[]},', 4), ('offer(t);\n', 4), ('17);\n', 4), ('listener);\n', 4), ('InnerQueuedSubscriber<R>', 4), ('custom\n', 4), ('ObjectHelper.requireNonNull(timeoutIndicator,', 4), ('gain', 4), ('this.boundary', 4), ('this.connection', 4), ('Object[]{WeatherType.COLD,', 4), ('jobs\n', 4), ('WithLatestInnerSubscriber[]', 4), ('IOException);\n', 4), ('checkInternalOperatorNaming("Flowable",', 4), ('height="602"', 4), ('autoConnect(int', 4), ('invoked.\n', 4), ('String.format("%s{%s}",', 4), ('TimeUnit.MILLISECONDS))\n', 4), ("Letter('u'),", 4), ('s.scheduleDirect(Functions.EMPTY_RUNNABLE,', 4), ('inOrder.verify(observer).onNext(6);\n', 4), ('assertEquals("1-2-3",', 4), ('Thread.currentThread().setUncaughtExceptionHandler(null);\n', 4), ('as.onComplete();\n', 4), ('current.lazySet(NotificationLite.COMPLETE);\n', 4), ('pp.mergeWith(cs)\n', 4), ('generator,\n', 4), ('OnError', 4), ('parent.onError(ex);\n', 4), ('com.mongodb.MongoClient;\nimport', 4), ('queue);\n', 4), ('subscriber.onComplete();\n', 4), ('DeferredScalarDisposable<T>', 4), ('com.iluwatar.threadpool;\n\nimport', 4), ('pp0.onError(ex);\n', 4), ('TimeoutConsumer(idx', 4), ('database;\n', 4), ('executor\n', 4), ('n.get()', 4), ('Publisher<TLeftEnd>>', 4), ('Retry</a>\n', 4), ('tx.commit();\n', 4), ('setting)', 4), ('(InvocationTargetException', 4), ('args.\n', 4), ('termination', 4), ('T8>', 4), ('Observable.<Integer>just(1).hide()\n', 4), ('outstanding', 4), ('orcs', 4), ('baseTypeName)', 4), ('Part', 4), ('fires', 4), ('so.onSubscribe(d);\n\n', 4), ('SingletonArrayFunc()));\n', 4), ('Long.MAX_VALUE.\n', 4), ('Map<K,', 4), ('Reads', 4), ('observables.\n', 4), ('(sa.isCancelled())', 4), ('(HtmlTextInput)', 4), ('PotionFactory', 4), ('ArrayList<String>', 4), ('iae);\n', 4), ('ObjectHelper.requireNonNull(resultSelector.apply(left,', 4), ('Terminal', 4), ('this.errors;\n\n', 4), ('keySelector', 4), ('Single<Object>>()', 4), ('assertTrue(e3', 4), ('@Test(/*', 4), ('interrupted",', 4), ('-8498650778633225126L;\n\n', 4), ('unchecked', 4), ('enum")\n', 4), ('RxJavaPlugins.enableAssemblyTracking();\n//', 4), ('value.', 4), ('System.out.println("error:', 4), ('so.onError(new', 4), ('get(String', 4), ('App}', 4), ('D,', 4), ('LambdaInfo', 4), ('other}\n', 4), ('link', 4), ('""});\n\n', 4), ('fail(ex.getCause().toString()', 4), ('.assertError(CompositeException.class)\n', 4), ('onErrorMainOverflow()', 4), ('12/13/15', 4), ('CacheDisposable<T>[]', 4), ('repository.findAll(new', 4), ('org.mockito.runners.MockitoJUnitRunner;\n\nimport', 4), ('2007', 4), ('jvmOption)', 4), ('fully-qualified', 4), ('alternate', 4), ('this.otherIterable', 4), ('(db', 4), ('java.util.concurrent.ExecutionException;\n\n/**\n', 4), ('RuntimeException}', 4), ('Query', 4), ('TimeUnit}', 4), ('Publishers\n', 4), ('future)', 4), ('io.reactivex.internal.fuseable.SimpleQueue;\nimport', 4), ('ObjectHelper.requireNonNull(zipper,', 4), ('com.iluwatar.specification.creature.Creature;\nimport', 4), ('List<Worker>', 4), ('numberOfSubscribers,', 4), ('TestSubscriber<String>(w)));\n\n', 4), ('.publish()\n', 4), ('BiConsumer<HashSet<Integer>,', 4), ('finished\n', 4), ('assertEquals("beta",', 4), ('.elementAt(0,', 4), ('<p>Like', 4), ('AccountCreateEvent(\n', 4), ('Reduces', 4), ('onAfterSuccess;\n', 4), ('java.io.FileNotFoundException;\nimport', 4), ('otherState;\n', 4), ('MaybeSource<R>', 4), ('org.junit.runner.RunWith;\nimport', 4), ('Long.MAX_VALUE,', 4), ('accept(Observer<?', 4), ('-8565274649390031272L;\n\n', 4), ('hostName', 4), ('repository.count());\n', 4), ('100', 4), ('however', 4), ('assertTrue(e4', 4), ('java.io.FileReader;\nimport', 4), ('ObservableSource}', 4), ('possible)\n', 4), ('assertTrue(cel.get(index).toString(),', 4), ('source.concatMapMaybe(new', 4), ('this.current', 4), ('.blockingSubscribe(new', 4), ('mock(Future.class);\n', 4), ('Using', 4), ('does\n', 4), ('.cancel();\n', 4), ('(!stopWindows.get())', 4), ('iters', 4), ('onError.accept(e);\n', 4), ('getInstance', 4), ('standalone', 4), ('stays', 4), ('TimeoutFallbackSubscriber<T>', 4), ('environment));\n', 4), ('1024', 4), ('com.iluwatar.databus.data.StartingData;\nimport', 4), ('countBefore.get());\n', 4), ('repository;\n', 4), ('Object[]{WeatherType.WINDY,', 4), ('java.io.PrintStream;\n\nimport', 4), ('mongoClient', 4), ('ds.setupDownstream();\n', 4), ('cleaned', 4), ('-7139995637533111443L;\n\n', 4), ('executorService.awaitTermination(10,', 4), ('Object[]{WeatherType.RAINY,', 4), ('records:', 4), ('Disposable}s,', 4), ('.flatMap(Functions.justFunction(Maybe.just(1)),\n', 4), ('(!terminate)', 4), ('child;\n', 4), ('(parent', 4), ('BiPredicate<Integer,', 4), ('ConcatMapDelayErrorObserver<?,', 4), ('immediately.', 4), ('Arrays.asList(layer1,', 4), ('collector', 4), ('height="373"', 4), ('Flowable.just("Hello', 4), ('assertFalse(rmo.isDisposed());\n\n', 4), ('price', 4), ('java.util.regex.Pattern;\n\nimport', 4), ('first;\n', 4), ('downloaded', 4), ('HttpClients.createDefault())', 4), ('obs.set(observer);\n', 4), ('packet', 4), ('OnErrorNotImplementedException}\n', 4), ('"converter', 4), ('list2.get(2).intValue());\n', 4), ('latch.await(2000,', 4), ('note', 4), ('(randomBoolean())', 4), ('design;', 4), ('.assertNoValues()', 4), ('connection.createStatement())', 4), ('Optional<Exception>', 4), ('unit,\n', 4), ('testEmpty()', 4), ('k);\n', 4), ('forbidden-apis', 4), ('SingleDisposable<T>[]', 4), ('values.get(3));\n', 4), ('"]:"', 4), ('o2);\n\n', 4), ('io.reactivex.internal.util.BackpressureHelper;\n\n/**\n', 4), ('ToListObserver<T,', 4), ('response)', 4), ('supplier;\n', 4), ('SafeSubscriberTestException("error!"));\n', 4), ('(!m.signature.contains("Publisher"))', 4), ('io.reactivex.functions.BiPredicate;\nimport', 4), ('instance;\n', 4), ('Function<Integer[],', 4), ('assertEquals("onNextFail",', 4), ('SelectableChannel', 4), ('architectural', 4), ('com.iluwatar.databus.data.MessageData;\nimport', 4), ('3.x\n', 4), ('assertNotEquals(t4,', 4), ('invoked.</dd>\n', 4), ('caps', 4), ('STATE_ACTIVE;\n', 4), ('hell!"', 4), ('ReaderWriterLock();\n\n', 4), ('assertTrue(values.isEmpty());\n', 4), ('OTHER_STATE_CONSUMED_OR_EMPTY)', 4), ('reads\n', 4), ('sources.', 4), ('.all(new', 4), ('isDisposed', 4), ('Color', 4), ('<p>Example<pre><code>\n', 4), ('Maybe<Object>>()', 4), ('ms2', 4), ('tries', 4), ('Object[]{WeatherType.SUNNY,', 4), ('AppManager.find("002");\n', 4), ('begins', 4), ('rmo.add(d);\n\n', 4), ('seven', 4), ('colon', 4), ('dispatcher.\n', 4), ('prompt', 4), ('itemTimeoutIndicator.apply(t),\n', 4), ('iface)', 4), ('doubleOnSubscribeMain()', 4), ('Single.just(5),', 4), ('supplier)', 4), ('s.schedulePeriodicallyDirect(r,', 4), ('(get())', 4), ('outer.cancel();\n\n', 4), ('*/\n\npublic', 4), ('factory.\n', 4), ('HttpGet', 4), ('timeIntervalDefault()', 4), ('emit(long', 4), ('visitor\n', 4), ('subj.timeout(1,', 4), ('-3051469169682093892L;\n\n', 4), ('cancelAll()', 4), ('hongshuwei@gmail.com\n', 4), ('rest).\n', 4), ('userId;\n', 4), ('ParallelFailureHandling.RETRY', 4), ('DebounceInnerObserver<T,', 4), ('href="http://reactivex.io/documentation/operators/retry.html">ReactiveX', 4), ('Movie());\n', 4), ('<p>Operators', 4), ('care', 4), ('observer.onSubscribe(d);\n', 4), ('horrorMovies.scan(new', 4), ('this.first', 4), ('consumers,', 4), ('ps\n', 4), ('stateSupplier;\n', 4), ('ts.assertValue(1);\n\n', 4), ('this.nextSupplier', 4), ('node)', 4), ('ObjectHelper.requireNonNull(accumulator.apply(v,', 4), ('startId)', 4), ('component.getComponentType();\n', 4), ('ts.dispose();\n', 4), ('Notifies', 4), ('repository.save(terry);\n\n', 4), ('subscribers.get().length', 4), ('writer)', 4), ('this.buffers', 4), ('FlatMapSingleObserver<T,', 4), ('honored', 4), ('normalLong()', 4), ('Single<T>()', 4), ('terminated.\n', 4), ('super.toString());\n', 4), ('likely', 4), ('source8\n', 4), ('requests);\n', 4), ('onAfterSuccess));\n', 4), ('item,\n', 4), ('DEFAULT', 4), ('Repeat</a>\n', 4), ('threadFactory)', 4), ('p.subscribe(inner);\n', 4), ('previous\n', 4), ('Callable\n', 4), ('8663801314800248617L;\n\n', 4), ('sources.\n', 4), ('LongConsumer()', 4), ('probably', 4), ('subscribe\n', 4), ('dependentPromise', 4), ('caretaker', 4), ('(!m.signature.contains("Flowable"))', 4), ('ErrorMode.BOUNDARY', 4), ('using}', 4), ('{}\n}\n', 4), ('operator.getAndIncrement();\n\n', 4), ('Upon\n', 4), ('schema', 4), ('allowFatal)', 4), ('assertFalse(ms1.hasObservers());\n', 4), ('StatusMember', 4), ('options,', 4), ('ObjectHelper.requireNonNull(seedSupplier.call(),', 4), ('BallItem();\n', 4), ('assertFalse("Main', 4), ('DisposableHelper.DISPOSED', 4), ('op', 4), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/parallelflowable.sequential.png"', 4), ('LotteryEventLog', 4), ('callable.call();\n', 4), ('Burst.items(1).error(e2)', 4), ('to.assertComplete();\n', 4), ('((r', 4), ('dao.getAll())', 4), ('exists,', 4), ('ParallelFailureHandling.SKIP;\n', 4), ('changed.\n', 4), ('javadocStartNext', 4), ('outputFused;\n\n', 4), ('assertNotNull(caughtError.get());\n', 4), ('List<Job>', 4), ('ErrorMode.IMMEDIATE\n', 4), ('qr.get();\n', 4), ('staticMethodDef', 4), ('dto', 4), ('utilize', 4), ('operations,', 4), ('Callable<StringBuilder>()', 4), ('upstream,', 4), ('ObservableSource<TRightEnd>>', 4), ('six', 4), ('upfront?",', 4), ('FileReader(u));\n', 4), ('MpscLinkedQueue<U>());\n', 4), ('Subscription",', 4), ('onSuccess)', 4), ('*/expected', 4), ('Car', 4), ('ts.assertValues(1);\n', 4), ('file,', 4), ('buffer).write();\n\n', 4), ('org.elasticsearch.Version;\nimport', 4), ('assertEquals(singletonList("java.lang.String"),', 4), ('whitelistMethod.painlessParameterTypeNames);\n', 4), ('iterator");\n', 4), ('connect\n', 4), ('BlockingFirstSubscriber<Integer>', 4), ('layer1', 4), ('verifyNoMoreInteractions(task);\n', 4), ('internally', 4), ('this.n', 4), ('actual.onSubscribe(EmptySubscription.INSTANCE);\n', 4), ('AppClient', 4), ('.concatMapCompletable(completableComplete())\n', 4), ("'count'", 4), ('cleanup()', 4), ('this.calories', 4), ('httpClient', 4), ('jobs', 4), ('reader1', 4), ('subscribe()', 4), ('(Jesse', 4), ('queue.offer(new', 4), ('parameters;\n', 4), ('this.allowFatal', 4), ('task.get();\n', 4), ('Completable>', 4), ('Person("Nasta",', 4), ('String.format(Locale.ROOT,', 4), ('bufferOpen,\n', 4), ('concatenates', 4), ('tmp', 4), ('assertTrue(ro.isDisposed());\n\n', 4), ('<E>\n', 4), ('Unfortunately,', 4), ('libraries', 4), ('scheduler.schedulePeriodicallyDirect(new', 4), ('end.\n', 4), ('disposable[0]', 4), ('WeaponStep', 4), ('HalfSerializer.onNext(actual,', 4), ('delaySubscription(long', 4), ('ParameterListKey', 4), ('active.compareAndSet(inner,', 4), ('assertEquals(classes.length,', 4), ('pendingWrites', 4), ('InnerQueuedObserver<R>', 4), ('reducer));\n', 4), ('painlessMethod', 4), ('STATE_ACTIVE', 4), ('ObjectHelper.requireNonNull(fallback,', 4), ('Connect</a>\n', 4), ('result.add(new', 4), ('actual.onNext(null);\n', 4), ('API.\n', 4), ('disposables.add(end);\n\n', 4), ('PublishProcessor\n', 4), ('Generic', 4), ('onError(t);\n', 4), ('R>}', 4), ('li.add("alpha");\n', 4), ('persons)', 4), ('SafeSubscriber<String>(new', 4), ('com.iluwatar.mute;\n\nimport', 4), ('mergeDelayError(\n', 4), ('objects.add(new', 4), ('TestHelper.doubleOnSubscribe(new', 4), ('(permission', 4), ('just}', 4), ('defClassToObjectClass(arguments.get(i));\n', 4), ('values.length', 4), ('AsyncSubject<T>', 4), ('observerLatch', 4), ('(!m.signature.contains("ObservableSource")\n', 4), ('values[d].length;', 4), ('org.reactivestreams.Subscription;\n\n/**\n', 4), ('cdl1', 4), ('Subscriber<?>', 4), ('times(1)).onNext("e");\n', 4), ('AsyncExecutor', 4), ('(globalMutex)', 4), ('fromCallableObservable\n', 4), ('Event>', 4), ('startTimeout(long', 4), ('href="https://github.com/ReactiveX/RxJava/wiki/Writing-operators-for-2.0">RxJava', 4), ('(IllegalStateException', 4), ('rightEnd,\n', 4), ('assertCustomerCountIs(1);\n', 4), ('debounceSelector;\n\n', 4), ('FixtureScript', 4), ('org.elasticsearch.script.ClassPermission', 4), ('rail', 4), ('ps.onNext(3);\n', 4), ('<p>Implementation', 4), ('li.add("beta");\n', 4), ('Publisher<TRightEnd>>', 4), ('LEFT_CLOSE', 4), ('clusterName;\n', 4), ('innerExceptions', 4), ('signature:', 4), ('href="http://reactivex.io/documentation/operators/empty-never-throw.html">ReactiveX', 4), ('values.get(1));\n', 4), ('onCompleteSupplier;\n\n', 4), ('scheduler.advanceTimeBy(200,', 4), ('collector.accept(u,', 4), ('repository.findOne(new', 4), ('TimedRunnable', 4), ('singleItem;\n\n', 4), ('parent.boundaryError(this,', 4), ('bean.findAll().iterator();\n', 4), ('"Sagan",', 4), ('EmptyDisposable.complete(observer);\n', 4), ('?>[0];\n\n', 4), ('verifyNoMoreInteractions(studentDatabase);\n', 4), ('len', 4), ('transport', 4), ('subscriber;\n', 4), ('Your', 4), ('iae)', 4), ('.collectInto(new', 4), ('ticket\n', 4), ('log.debug("App.main(),', 4), ('q.offer(null);\n', 4), ('3).collect(new', 4), ('complete();\n', 4), ('meant', 4), ('appropriately', 4), ('tasks.', 4), ('sch,', 4), ('Promise<String>', 4), ('parent.terminated(connection);\n', 4), ('lastName,', 4), ('qd.requestFusion(QueueDisposable.ANY);\n', 4), ('ObjectHelper.requireNonNull(converter,', 4), ('queue.get();\n\n', 4), ('knowledge', 4), ('scanner);\n', 4), ('io.reactivex.observers.TestObserver;\n\npublic', 4), ('BlockingFirstSubscriber<Integer>();\n\n', 4), ('succeeded', 4), ('Thread.UncaughtExceptionHandler', 4), ('com.iluwatar.hexagonal.banking.WireTransfers;\nimport', 4), ('httpResponse', 4), ('seconds', 4), ('MaybeSource<R>>', 4), ('subscribe(to);\n', 4), ('close,', 4), ('EntityUtils.toString(httpResponse.getEntity());\n', 4), ('e.onError(null);\n', 4), ('parameterCount', 4), ('SimpleObjectsTest', 3), ('LotteryNumbers.create(new', 3), ('.assertComplete()\n', 3), ('scheduler.createWorker();\n\n', 3), ('org.elasticsearch.common.io.stream.StreamOutput;\nimport', 3), ('caches', 3), ('disposables.replace(d);\n', 3), ('io.reactivex.schedulers.Schedulers;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 3), ('have\n', 3), ('painlessParametersTypes),\n', 3), ('service.saveNewLayer(layer1);\n', 3), ('tokens.\n', 3), ('navigateToPage()', 3), ('money,', 3), ('port.', 3), ('2.13</a>)\n', 3), ('termination.\n', 3), ('Generally,', 3), ('TimeoutException();\n', 3), ('assertEquals(administration.getAllSubmittedTickets().size(),', 3), ('context.",', 3), ('allows\n', 3), ('com.iluwatar.servant;\n\nimport', 3), ('bh);\n', 3), ('addResources()', 3), ('PerfSubscriber(bh);\n\n', 3), ('smallerJavaMajorVersion', 3), ('this.value;\n', 3), ('mar;\n', 3), ('?"))', 3), ('topShelf.add(factory.createPotion(PotionType.INVISIBILITY));\n', 3), ('dt', 3), ('maps.\n', 3), ('"Paths#get', 3), ('console', 3), ('Maybe.just(v).toObservable();\n', 3), ('4)', 3), ('com.iluwatar.guarded.suspension;\n\nimport', 3), ('royalty', 3), ('next().\n', 3), ('ts2', 3), ('java.util.Collections.singleton;\nimport', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.from.Future.png"', 3), ('times(1)).onError(any(Throwable.class));\n', 3), ('NPE', 3), ('subscribers.dispose();\n', 3), ('accept(List<Object>', 3), ('t.join();\n', 3), ('-->', 3), ('<working', 3), ('AssemblyStackTraceException', 3), ('maxConcurrency);\n', 3), ('a.onNext(null);\n', 3), ('studentId', 3), ('LOGGER.info("Registering', 3), ('effect.\n', 3), ('retryTimesPredicateWithNotMatchingRetryAmount()', 3), ('io.reactivex.internal.subscriptions.SubscriptionHelper;\n\npublic', 3), ('sample', 3), ('AccountAggregate.putAccount(this);\n', 3), ('almost', 3), ('OperatorWindowBoundaryOpenObserver<T,', 3), ('Subscriptions.empty();\n//\n//', 3), ('com.iluwatar.hexagonal.domain.PlayerDetails;\nimport', 3), ('scalar()', 3), ('Observable.Operator', 3), ('potions\n', 3), ('o[0]', 3), ('FlatMapMaybeObserver(MaybeObserver<?', 3), ('javax.swing.JPanel;\nimport', 3), ('LOGGER.error("sleep', 3), ('CakeLayerInfo("strawberry",', 3), ('syncFused)', 3), ('(!it.hasNext())', 3), ('Single.just(3),', 3), ('new\n', 3), ('clientName;\n', 3), ('assertTrue(o.isUnsubscribed());\n\n', 3), ('List<CakeLayer>', 3), ('onXXX}', 3), ('first(int', 3), ("there's", 3), ('Ts', 3), ('simplified', 3), ('OperatorWindowBoundaryOpenSubscriber<T,', 3), ('io.reactivex.functions.BooleanSupplier;\nimport', 3), ('@SuppressWarnings("serial")\n', 3), ('newName', 3), ('elasticsearchVersion', 3), ('AsyncTask<Object>', 3), ('this.onCancel', 3), ('failures', 3), ('beforeDownstream()', 3), ('fromIterator.hasNext())', 3), ('enqueue', 3), ('augmentation;\n', 3), ('limited', 3), ('fail("expected', 3), ('TestSingle<Integer>', 3), ('ZoneId', 3), ('ESPolicy', 3), ('.elementAt(1)\n', 3), ('Flag', 3), ('assertEquals("alchemist",', 3), ('subject;\n', 3), ('fused', 3), ('height="483"', 3), ('everything', 3), ('Java8Holder', 3), ('gate;\n\n', 3), ('tempFile', 3), ('})).test();\n\n', 3), ('MaybeToFlowable<T>((MaybeSource<T>)sources[0]));\n', 3), ('testing\n', 3), ('SecureSettings', 3), ('bh.consume(true);\n', 3), ('objects,', 3), ('currentIndex++;\n', 3), ('FlatMapSingleObserver<R>', 3), ('SpscLinkedArrayQueue<U>(bufferSize);\n', 3), ('this.resourceSupplier', 3), ('shared\n', 3), ('org.elasticsearch.common.unit.TimeValue;\nimport', 3), ('java.util.Random;\nimport', 3), ('kind', 3), ('tillTheEnd', 3), ('com.amazonaws.services.lambda.runtime.Context;\nimport', 3), ('GoogleCloudStorageTestServer', 3), ('ConcatWithSubscriber<T>(s,', 3), ('TargetObserver<T,', 3), ('queue,', 3), ('threadFactory;\n', 3), ('otherErrors()', 3), ('publisher\n', 3), ('.test(0);\n\n', 3), ('mainErrorInnerErrorRace()', 3), ('TimerObserver', 3), ('doc)', 3), ('mock(BallThread.class);\n', 3), ('ts2.assertNotComplete();\n', 3), ('(n.isOnError())', 3), ('rail\n', 3), ('archers"});\n', 3), ('server.\n', 3), ('onErrorThrows()', 3), ('list.add(e);\n\n', 3), ('io.reactivex.internal.subscriptions.EmptySubscription;\n\npublic', 3), ('Maybe.concatArray(Maybe.just(1),', 3), ('handle(HttpExchange', 3), ('implementors', 3), ('showing', 3), ("Class.forName(type.getInternalName().replace('/',", 3), ('filled', 3), ('Flowable.<Long>', 3), ('onCancel;\n\n', 3), ('GroupOrJob', 3), ('Observable\\r\\n', 3), ('httpServer.createContext("/",', 3), ('u);\n', 3), ('"jBloch");\n', 3), ('BiFunction<Maybe,', 3), ('--------------------------------------------------------------\n', 3), ('scheduler}\n', 3), ('last(int', 3), ('options)', 3), ('javax.persistence.CascadeType;\nimport', 3), ('Registers', 3), ('signedContent', 3), ('apply(final', 3), ('lock\n', 3), ('(!dirs.isEmpty())', 3), ('super(name,', 3), ('Thread.getAllStackTraces().keySet())', 3), ('(em', 3), ('observe', 3), ('unprepare()', 3), ('error",', 3), ('Maybe.fromAction(run)\n', 3), ('ActionListener<Set<IndexInfo>>', 3), ('attacks', 3), ('frc;\n', 3), ('(HtmlSubmitInput)', 3), ('Optional.of(resultIterator.next())', 3), ('ObjectHelper.verifyPositive(maxConcurrency,', 3), ('takeUntil(final', 3), ('asyncResult.await();\n', 3), ('InterruptedException.class);\n', 3), ('lines.add(line);\n', 3), ('entry,', 3), ('DataMapperException("Student', 3), ('AtomicReference<Throwable>();\n\n', 3), ('Callable);\n\n', 3), ('io.reactivex.internal.subscriptions.BooleanSubscription;\n\npublic', 3), ('returns\n', 3), ('Completable.mergeDelayError(new', 3), ('remain', 3), ('index);\n\n', 3), ('mergeDelayError(Publisher<?', 3), ('LOGGER.info(new', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.toObservable.png"', 3), ('u1', 3), ('(");\n', 3), ('Observer>()', 3), ('author\n', 3), ('assertSame(cop,', 3), ('other.dispose();\n', 3), ('during\n', 3), ('times);\n\n', 3), ('whitelistStruct.javaClassName', 3), ('Observable<Boolean>', 3), ('encapsulating', 3), ('DatabaseReaderLazyLoader>', 3), ('MaybeNo2Dot0Since.findSource(baseClassName);\n', 3), ('BufferCloseSubscriber<T,', 3), ('java.net.Socket;\nimport', 3), ('Blocking', 3), ('welcomeMessage', 3), ('IOException>', 3), ('p,', 3), ('second)', 3), ('C>(s,', 3), ('inspect', 3), ('Signature', 3), ('lowestFrequencyChar', 3), ('MockHttpServer.createHttp(socketAddress,', 3), ('m.javadoc.indexOf("ObservableSource",', 3), ('assertUndeliverableTestException(list,', 3), ('call(Object', 3), ('consumer)', 3), ('in)', 3), ('Files.write(path,', 3), ('elements,', 3), ('org.hamcrest.Matchers.is;\n\npublic', 3), ('MergeObserver<T,', 3), ('this.clazz', 3), ('(args', 3), ('AlchemistShop', 3), ('List<Spell>', 3), ('afterDownstream();\n', 3), ('.assertOf(ObserverFusion.<Integer>assertFusionMode(QueueFuseable.ASYNC))\n', 3), ('state)', 3), ('Consumer<Throwable>}', 3), ('arguments)', 3), ('com.iluwatar.singleton;\n\n/**\n', 3), ('AtomicReference<SwitchMapInnerObserver<T,', 3), ('painlessMethod.rtn', 3), ('everybody', 3), ('}).subscribe(to);\n\n', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retry.png"', 3), ('to.dispose();\n', 3), ('(PublishDisposable<T>', 3), ('Thread()', 3), ('Completable\n', 3), ('Notify', 3), ('java.security.KeyStoreException;\nimport', 3), ('save(LotteryTicket', 3), ('caPaths', 3), ('non-serialized', 3), ('dimensions;\n', 3), ('AmbInnerObserver<T>[]', 3), ('service.getWelcomeMessage(new', 3), ('fields)', 3), ('assertEquals("No', 3), ('cluster', 3), ('RxJavaPlugins.onObservableLift(oop));\n//\n//', 3), ('io.reactivex.internal.queue;\n\nimport', 3), ('java.lang.ref.WeakReference;\n\nimport', 3), ('df.fetch();\n', 3), ('org.mockito.stubbing.Answer;\n\nimport', 3), ('drainNormal()', 3), ('"maxConcurrency");\n', 3), ('"Elven', 3), ('DynamoDBMapper', 3), ('method;\n', 3), ('isEqual;\n', 3), ('Publishers.\n', 3), ('get(PARENT_INDEX);\n', 3), ('Set<Thread>', 3), ('understand', 3), ('mode,', 3), ('Messenger', 3), ('950));\n', 3), ('120,', 3), ('source.onNext(6);\n\n', 3), ('PerfAsyncConsumer', 3), ('H2', 3), ('majorDeviceNumber', 3), ('"ports",', 3), ('completion.', 3), ('dir.resolve(fileName),', 3), ('io.reactivex.observables.ConnectableObservable;\nimport', 3), ('asynchronous,', 3), ('identifier', 3), ('requested(n);\n', 3), ('shut', 3), ('throw.\n', 3), ('turned', 3), ('(!await(timeout,', 3), ('used.', 3), ('subscriber);\n', 3), ('queueOverflow()', 3), ('15);\n', 3), ('specifically', 3), ('Put', 3), ('a.cancel();\n', 3), ('observable.subscribe(new', 3), ('wakes', 3), ('times)', 3), ('service.execute(task);\n\n', 3), ('permission)', 3), ('bottom', 3), ('2).elementAt(-1,', 3), ('Selector', 3), ('TimeUnit.SECONDS).blockingFirst();\n\n', 3), ('normalError()', 3), ('q.offer(1,', 3), ('button', 3), ('actual.onSuccess(value);\n\n', 3), ('callers', 3), ('cs.onComplete();\n', 3), ('main\n', 3), ('List<Royalty>', 3), ('this.onDrop', 3), ('///', 3), ('B2BService', 3), ('com.iluwatar.datatransfer;\n\nimport', 3), ('HasParts', 3), ('sources[i];\n', 3), ('city;\n', 3), ('basicWithCancellable()', 3), ('hasNativeController;\n', 3), ('LOG', 3), ('limit));\n', 3), ('(s.equals("x"))', 3), ('cleans', 3), ('statA', 3), ("Letter('s'))));\n", 3), ('height="358"', 3), ('org.springframework.data.jpa.domain.Specification}', 3), ('Operator>()', 3), ('log,', 3), ('well),', 3), ('originator', 3), ('</code>\n', 3), ('defaultValue', 3), ('TrampolineWorker', 3), ('3520831347801429610L;\n\n', 3), ('Cannot', 3), ('RxJavaPlugins.clearAssemblyTracking();\n//\n//', 3), ('(!SubscriptionHelper.validate(n))', 3), ('getJavaChannel()', 3), ('grade;\n', 3), ('right)', 3), ('InternalError();\n', 3), ('stop)', 3), ('transformation,', 3), ('FlowableEmitter<T>', 3), ('BorderLayout());\n', 3), ('optionalCaptor', 3), ('com.mongodb.client.MongoDatabase;\nimport', 3), ('not,', 3), ('leaving', 3), ('True,', 3), ('TO_UPPER_WITH_EXCEPTION', 3), ('guardedQueue', 3), ('isBase64Encoded;\n', 3), ('clientName', 3), ('InputMillion', 3), ('testFindByName()', 3), ('io.reactivex.functions;\n\nimport', 3), ('FlatMapSingleObserver<R>(this,', 3), ('RxThreadFactory(String', 3), ('mock(SpellDao.class);\n\n', 3), ('character.getWizardClass());\n', 3), ('SingleCache<T>', 3), ('context.put(IUnitOfWork.DELETE,', 3), ('TestObserver<Object>(o);\n\n', 3), ('MissingBackpressureException("Queue', 3), ('IllegalArgumentException("method', 3), ('ApiGatewayResponse\n', 3), ('day.\n', 3), ('dq.offer(t);\n', 3), ('getBody()', 3), ('Files.move(tempPidFile,', 3), ('BiFunction', 3), ('resource:', 3), ('element");\n', 3), ('f.cancel(runner', 3), ('this.serial', 3), ('com.iluwatar.cqrs.dto.Book;\nimport', 3), ('CukeGlueAbstract', 3), ('invalidLines', 3), ('lazySet(EmptyDisposable.INSTANCE);\n', 3), ('dataSource.getConnection();\n', 3), ('CustomDriftScheduler', 3), ('1]);\n', 3), ('java.nio.channels.Selector;\nimport', 3), ('super(message);\n', 3), ('iteration\n', 3), ('times(1)).onError(any(NullPointerException.class));\n', 3), ('javax.persistence.Id;\nimport', 3), ('Supplier<Heavy>', 3), ('emitted++;\n', 3), ('studentId)', 3), ('PID', 3), ('disposeExcept(index);\n', 3), ('Double', 3), ('nSources', 3), ('LOGGER.info("Sync', 3), ('org.mockito.Mock;\nimport', 3), ('"Flowable");\n', 3), ('ConcatMaybeObserver<T>', 3), ('Completable.CompletableOperator', 3), ('Creation', 3), ('negative,', 3), ('"foo";\n', 3), ('type);\n', 3), ('(CompletableSource', 3), ('item.toString();\n', 3), ('pp.ignoreElements())\n', 3), ('perform\n', 3), ('numInstances;\n', 3), ('javax.persistence.Entity;\nimport', 3), ('unexpected', 3), ('IllegalArgumentException))', 3), ('sourceSupplier,\n', 3), ('HttpServer', 3), ('com.iluwatar.queue.load.leveling;\n\nimport', 3), ('Maybe.<Integer>empty()\n', 3), ('register(student,', 3), ('Remove', 3), ('returned.\n', 3), ('influence', 3), ('safe.onComplete();\n', 3), ('addressToString(final', 3), ('subject.onComplete();\n\n', 3), ('subclass', 3), ('RxJavaPlugins.onSchedule(run);\n\n', 3), ('io.reactivex.Flowable;\n\npublic', 3), ('(!cancelled', 3), ('@Id\n', 3), ('OperatorWindowBoundaryCloseObserver<T,', 3), ('IO-bound', 3), ('com.iluwatar.converter;\n\nimport', 3), ('SimpleObjectsIntegTest', 3), ('ElementType.TYPE})\npublic', 3), ('MaybeSource)\n', 3), ("application's", 3), ('res.getDateList())', 3), ('AmbInnerSubscriber<T>[]', 3), ('.forEach(i', 3), ('header,', 3), ('createdTime', 3), ('ownerStruct', 3), ('FINISHED', 3), ('(updateThread', 3), ('Single.never()\n', 3), ('WashingMachine();\n', 3), ('ac', 3), ('\n}\n', 3), ('repeat()', 3), ('Functions.justFunction(Maybe.just(1)),\n', 3), ('merge(Publisher<?', 3), ('exchange)', 3), ('(bs.isCancelled())', 3), ('Observable.fromFuture(future).subscribe(to);\n\n', 3), ('this.', 3), ('Completable.CompletableOperator()', 3), ('layers.add(new', 3), ('repository,', 3), ('SubscriptionHelper.deferredSetOnce(this.s,', 3), ('lazySet(true);\n', 3), ('java.nio.file.SimpleFileVisitor;\nimport', 3), ('living', 3), ('Assert.assertNull("Object', 3), ('peer.\n', 3), ('errorConditional()', 3), ('1.', 3), ('Flowable.<Integer>', 3), ('hostname', 3), ('ScheduledExecutorService)', 3), ('8606673141535671828L;\n\n', 3), ('assertNotNull(aste);\n//\n//', 3), ('active.get()', 3), ('testCounterExceptions()', 3), ('BooleanRunnable', 3), ('X509Certificate)', 3), ('(domainEvent', 3), ('(MaybeSource<?', 3), ('InvocationTargetException(IllegalStateException)");\n', 3), ('to1.dispose();\n', 3), ('com.iluwatar.specification.selector;\n\nimport', 3), ('String}s', 3), ('Subscription}s.\n', 3), ('.compose(new', 3), ('#qs}', 3), ('Publisher,', 3), ('interact', 3), ('doAfterSuccess}', 3), ('layer2', 3), ('super(value);\n', 3), ('.assertResult(5);\n', 3), ('ignores', 3), ('s.shutdown();\n\n', 3), ('NullPointerException("A', 3), ('"Test', 3), ('dirs.poll();\n\n', 3), ('Disposable}s.\n', 3), ('mergeArray(source1,', 3), ('unbounded.onNext(1);\n', 3), ('length', 3), ('milliseconds)', 3), ('socketAddress', 3), ('finalization\n', 3), ('.assertOf(SubscriberFusion.<Integer>assertFusionMode(QueueFuseable.SYNC))\n', 3), ('firstLine', 3), ('delay(time,', 3), ('sr.setFuture(f);\n', 3), ('worker.schedule(this,', 3), ('JCTools', 3), ('non-fuseable', 3), ('ConnectConsumer', 3), ('9).equals("(Publisher"))', 3), ('unconditionally', 3), ('Reports', 3), ('times.\n', 3), ('addressLineOne;\n', 3), ('e.setDisposable(d1);\n', 3), ('MissingBackpressureException());\n', 3), ('flatMap(mapper,', 3), ('List<User>', 3), ('resubscribing', 3), ('Observable.error(exception);\n', 3), ('(Wizard', 3), ('Go', 3), ('(subscribes)', 3), ('methods:', 3), ('LOGGER.info("(1)', 3), ('delete', 3), ('network', 3), ('IntFunction<T>', 3), ('getSize()', 3), ('cdl.await();\n\n', 3), ('win', 3), ('!m.signature.contains("Single")\n', 3), ('GroupBySubscriber<?,', 3), ('submitting', 3), ('SingleSource)}', 3), ('raised', 3), ('this.emitted', 3), ('TestHelper.mockSingleObserver();\n', 3), ('test(final', 3), ('this.firstName', 3), ('<C>', 3), ('call(CompletableSubscriber', 3), ('-2467358622224974244L;\n\n', 3), ('syncFused', 3), ('Optional<Long>', 3), ('Subscribers\n', 3), ('"file:"', 3), ('8443155186132538303L;\n\n', 3), ('topping1', 3), ('@MethodSource("expressionProvider")\n', 3), ('.retry(1,', 3), ('changing', 3), ('.test(1)\n', 3), ('getAll()', 3), ('GuardedQueue();\n', 3), ('not.\n', 3), ('io.reactivex.internal.fuseable.QueueSubscription;\n\n/**\n', 3), ('InternalAggregation', 3), ('apiGatewayProxyResponseEvent', 3), ('mock(EventObserver.class);\n', 3), ('description,', 3), ('fs.cancel(false);\n', 3), ('behavior.\n', 3), ('downstream.onNext(v);\n', 3), ('pp2.ignoreElements()),', 3), ('JdbcDataSource', 3), ('AtomicReference<Thread>', 3), ('Future<T>,', 3), ('height="385"', 3), ('FlowableRefCount<T>', 3), ('transformation\n', 3), ('retained!",', 3), ('exceptionHandler', 3), ('assertTrue(e.getCause()', 3), ('LotteryAdministration', 3), ('task");\n', 3), ('fail("Setup', 3), ('event.getMessage().equals(message));\n', 3), ('getPrice()', 3), ('counter++;\n', 3), ('pp2.ignoreElements();\n', 3), ('ordinary', 3), ('console,', 3), ('Publisher<R>', 3), ('.distinctUntilChanged(new', 3), ('mock(AsyncCallback.class);\n', 3), ('inventory.', 3), ('(ostensibly)', 3), ('IOException;\n\n}\n', 3), ('f))', 3), ('Publisher<?>[]', 3), ('"/";\n', 3), ('observer.onSuccess(v);\n', 3), ('sees', 3), ('spell)', 3), ('ZipMaybeObserver<T>[]', 3), ('java.util.Properties;\n\n/**\n', 3), ('s.createWorker();\n\n', 3), ('observer2;\n\n', 3), ('Calendar', 3), ('!m.signature.contains("Publisher")\n', 3), ("Letter('e'),", 3), ('com.sun.net.httpserver.HttpHandler;\nimport', 3), ('definition.\n', 3), ('m.setAccessible(true);\n', 3), ('DisposableHelper.dispose(task);\n', 3), ('System.gc();\n\n', 3), ('assertTrue(run.isDisposed());\n', 3), ('DefaultSubscriber<T>', 3), ('creatures");\n', 3), ('QueueDrainSubscriber<T,', 3), ('cache.set(userId,', 3), ('concatDelayError}', 3), ('other,\n', 3), ('com.iluwatar.reader.writer.lock.utils.InMemoryAppender;\nimport', 3), ('properties.put("enhancedWelcome",', 3), ('attachment', 3), ('ClientException', 3), ('complete++;\n\n', 3), ('statement.setInt(1,', 3), ('super(webClient);\n', 3), ('weather.timePasses();\n', 3), ('LOGGER.info(c.toString()));\n', 3), ('increase', 3), ('}).dispose();\n', 3), ('what\n', 3), ('ie)', 3), ('Servant("test");\n', 3), ('PartyMember', 3), ('"invalid', 3), ('run.setFuture(new', 3), ('-----------------------------------------------------------\n', 3), ('FlowableEmitter}', 3), ('CancellationException}', 3), ('pause', 3), ('value),', 3), ('stopIndex', 3), ('LoginPage}\n', 3), ('IMPLEMENTATION', 3), ('com.iluwatar.retry;\n\nimport', 3), ('#sourceMode}', 3), ('verify(callback,', 3), ('evictedGroups;\n\n', 3), ('eventTime', 3), ('point,', 3), ('Strategy', 3), ('calls.get());\n', 3), ('io.reactivex.processors;\n\nimport', 3), ('postProcess(Object', 3), ('WeakReference<Object>(o);\n\n', 3), ('Operator', 3), ('caPaths)', 3), ('assertTrue(rmo.errors.isEmpty());\n\n', 3), ('Party', 3), ('s.request(maxConcurrency);\n', 3), ('this.executorService', 3), ('(java.lang.reflect.Modifier.isStatic(field.modifiers))', 3), ('interfaces.\n', 3), ('inUse=2");\n', 3), ('decorates', 3), ('assertTrue(aste.getMessage(),', 3), ('requested.decrementAndGet();\n', 3), ('o.onNext(2);\n', 3), ('this.lastName', 3), ('optimization', 3), ('observable()', 3), ('Sex.FEMALE,', 3), ('.assertEmpty()\n', 3), ('Future.\n', 3), ('TestException();\n//\n//', 3), ('Observable.Operator()', 3), ('nothing.\n', 3), ('WindowBoundaryMainObserver(Observer<?', 3), ('structsMap.get(ownerStructName);\n\n', 3), ('again:\n', 3), ('pointer', 3), ('errs.terminate();\n', 3), ('contained\n', 3), ('continueNextSource', 3), ('retry(Long.MAX_VALUE,', 3), ('party', 3), ('context.put(IUnitOfWork.MODIFY,', 3), ('verifies', 3), ('-7346385463600070225L;\n\n', 3), ('!m.signature.contains("TestObserver"))', 3), ('BufferExactBoundarySubscriber<T,', 3), ('java.net.MalformedURLException;\nimport', 3), ('Methods', 3), ('accepting', 3), ('started,', 3), ('installed', 3), ('TestException("One"));\n\n', 3), ('minorDeviceNumber', 3), ('(!m.signature.contains("Flowable")\n', 3), ('ArgumentCaptor<Optional<Exception>>', 3), ('classloader\n', 3), ('version,', 3), ('AtomicReference<SpscLinkedArrayQueue<R>>();\n', 3), ('this.fileName;\n', 3), ('ts2.assertNoValues();\n\n', 3), ('character.getFighterClass());\n', 3), ('disposer;\n\n', 3), ('assertTrue(list.toString(),', 3), ('AsyncCallback)}', 3), ('#merge(Publisher)}', 3), ('emitLoop()', 3), ('times(1)).onComplete();\n\n', 3), ('AUT_PATH', 3), ('java.nio.file.attribute.PosixFileAttributeView;\nimport', 3), ('Flowable<List<T>>', 3), ('Us.\n', 3), ('java.util.concurrent.Future;\n\nimport', 3), ('ops;\n', 3), ('@Ignore("No', 3), ('assertFalse(ms.hasObservers());\n', 3), ('f.onComplete();\n', 3), ('comma-delimited', 3), ('d2.dispose();\n', 3), ('ASYNC_DISPOSED', 3), ('propagated).\n', 3), ('OperatorWindowBoundaryCloseSubscriber<T,', 3), ('channel)', 3), ('setting\n', 3), ('s.request(c);\n', 3), ('com.iluwatar.event.sourcing.event;\n\nimport', 3), ('JPanel();\n', 3), ('disposer,\n', 3), ('serialized.\n', 3), ('services.', 3), ('layer.', 3), ('Maybe<Long>', 3), ('tested\n', 3), ('classpath\n', 3), ('winningNumbers);\n', 3), ('source}', 3), ('unknown', 3), ('com.iluwatar.serverless.baas.api;\n\nimport', 3), ('contains}', 3), ('us.onComplete();\n\n', 3), ('!cancelled.isDisposed())', 3), ('org.junit.Assert.assertNull;\n\nimport', 3), ('nullAction()', 3), ('s.nextLine();\n', 3), ('iterable;\n\n', 3), ('(FUSED_READY', 3), ('Thread.sleep(1500);\n', 3), ('s.onNext(t);\n', 3), ('subject.onComplete();\n', 3), ('cal.setTime(dt);\n', 3), ('(ObjectObjectCursor<String,', 3), ('(data', 3), ('CompletableSources', 3), ('ThreadAsyncExecutor#startProcess(Callable)}', 3), ('httpServer.stop(0);\n', 3), ('Thread.sleep(50);\n', 3), ('java.util.List;\n\n\n/**\n', 3), ('Single.just(v).toObservable();\n', 3), ('Flowable.bufferSize()', 3), ('}).blockingSingle();\n\n', 3), ('waiting();\n\n', 3), ('ReentrantLock();\n', 3), ('anything', 3), ('RxJavaPlugins.resetAssemblyTracking();\n//', 3), ('workingDirectory', 3), ('completed.', 3), ('.flatMap((Function)Functions.identity())\n', 3), ('fromCallableTwice()', 3), ('access\n', 3), ('java.lang.reflect.Field;\n\n/**\n', 3), ('tenant', 3), ('ParallelFailureHandling>', 3), ('Flowable.just(1);\n\n', 3), ('Replaces', 3), ('assertTrue(new', 3), ('elasticsearchVersion;\n', 3), ('With', 3), ('inventorySize)', 3), ("object's", 3), ('operators.\n', 3), ('BlockingBaseSubscriber<T>', 3), ('s.toUpperCase();\n', 3), ('purgePeriod', 3), ('finds', 3), ('first.\n', 3), ('things', 3), ('assertEquals(values[d].length,', 3), ('cause\n', 3), ('}).subscribe(s1);\n', 3), ('door', 3), ('disposeAll()', 3), ('onSuccess}\n', 3), ('OnComplete(),', 3), ('(MaxNumOfEventsAllowedException', 3), ('inner.done', 3), ('E#toString()}', 3), ('comes', 3), ('Generate', 3), ('rco.dispose();\n\n', 3), ('SimpleObjects\n', 3), ('(X509Certificate)', 3), ('parent.setFuture(scheduler.scheduleDirect(parent,', 3), ('"predicate");\n', 3), ('onCompleteCrash()', 3), ('max)', 3), ('Stores', 3), ('(blocking)', 3), ('observers.dispose();\n', 3), ('(!disposed', 3), ('winning', 3), ('),\n', 3), ('update;\n', 3), ('callback,', 3), ('"predicate', 3), ('mergeDelayError(Flowable.fromArray(source1,', 3), ('org.elasticsearch.common.inject.assistedinject;\n\nimport', 3), ('(t.getName().startsWith("Rx"))', 3), ('1000000;', 3), ('(type', 3), ('WHERE', 3), ('expectedLayers.add(new', 3), ('(ObservableScalarXMap.tryScalarXMapSubscribe(source,', 3), ('retrieving', 3), ('(Student', 3), ('items;\n\n', 3), ('title;\n', 3), ('source8,', 3), ('LOGGER.info("Async', 3), ('.onBackpressureBuffer()\n', 3), ('"Krueger");\n\n', 3), ('cache.', 3), ('assertNotNull(optionalException);\n', 3), ('callOnOverflow', 3), ('m);\n', 3), ('prefix)', 3), ('Read-through', 3), ('switches', 3), ('*/\nabstract', 3), ('"three");\n', 3), ('whitelistConstructors', 3), ('super(resource);\n', 3), ('operating', 3), ('FluentIterable<T>', 3), ('(where', 3), ('assertFalse(run.isDisposed());\n\n', 3), ('Whitelist.Struct', 3), ('args.length', 3), ('Sourcing', 3), ('actual.onError(throwable);\n', 3), ('.assertError(e)\n', 3), ('RS', 3), ('never()', 3), ('whitelistStructOrigin', 3), ('DONE', 3), ('"Error', 3), ('Trampoline\n', 3), ('Maybe.fromRunnable(run)\n', 3), ('b.add(t);\n\n', 3), ('3),', 3), ('.sorted(Functions.naturalComparator())\n', 3), ('Consumer<Emitter<Object>>()', 3), ('itself.\n', 3), ('httpServer.start();\n\n', 3), ('System.out.println("delay', 3), ('posix', 3), ('once.', 3), ('1:39', 3), ('JFrame', 3), ('memHeap.getUsed();\n', 3), ('flowable(Blackhole', 3), ('org.bson.Document;\n\nimport', 3), ('scheduler.triggerActions();\n\n', 3), ('.indicesOptions(IndicesOptions.lenientExpandOpen());\n', 3), ('Callable<Throwable>()', 3), ('(AsyncSubscription<T>', 3), ('reset()', 3), ('.test(0L)\n', 3), ('"");\n\n', 3), ('onSuccessMapper,\n', 3), ('DataFetcher();\n', 3), ('Observer}s.\n', 3), ('washingMachine', 3), ('java.nio.file.FileVisitResult;\nimport', 3), ('CakeInfo(new', 3), ('SubscriptionHelper.deferredSetOnce(this,', 3), ('BaseConcatMapSubscriber<T,', 3), ('ScheduledRunnable(new', 3), ('item.</dd>\n', 3), ('requirements.\n', 3), ('assertFalse(w.tasks.hasSubscriptions());\n//', 3), ('TestDisposableObserver<Integer>', 3), ('crashOnNext;\n\n', 3), ('for:', 3), ('max,', 3), ('numbers.\n', 3), ('PARAMETER,', 3), ('JavaVersion.parse("1.7.0");\n', 3), ('checkClientTrusted(X509Certificate[]', 3), ('BiPredicate<Object,', 3), ('blockingGet}', 3), ('charProto);\n', 3), ('Single.<Integer>create(new', 3), ('hasSubscribers()', 3), ('VideoResource', 3), ('DebounceSubscriber<T,', 3), ('AlbumListPage}\n', 3), ('(int)elements))\n', 3), ('itself\n', 3), ('apiGatewayProxyResponseEvent;\n', 3), ('parsers', 3), ('observer.onNext(t);\n', 3), ('DefaultSubscriber<Integer>()', 3), ('inner.queue', 3), ('ImmediateThinScheduler.INSTANCE;\n', 3), ('tillTheEnd)', 3), ('leads', 3), ('(!q.isEmpty())', 3), ('V2', 3), ('q.offer(now,', 3), ('BiFunction<Integer,Integer,Integer>()', 3), ('scalability', 3), ('#io()}', 3), ('.assertOf(SubscriberFusion.<Integer>assertFusionMode(QueueFuseable.NONE))\n', 3), ('task)', 3), ('next.cancel();\n', 3), ('to2.assertNoValues();\n\n', 3), ('BiFunction<Observable,', 3), ('assertEquals(integers.get(0),', 3), ('optionalCaptor.getValue();\n', 3), ('Function<Callable<Scheduler>,', 3), ('maybe()', 3), ('java.security.Permission;\nimport', 3), ('node\n', 3), ('ConcurrentMap<K,', 3), ('respect', 3), ('Completable.never()\n', 3), ('ExceptionHelper.terminate(error);\n', 3), ('t6,', 3), ('ConcatWithObserver<T>(observer,', 3), ('trustStorePath', 3), ('pooled', 3), ('(queue.compareAndSet(null,', 3), ('#merge(SingleSource,', 3), ('(args.length', 3), ('TestHelper.checkDisposed(Observable.<Integer>just(1).hide()\n', 3), ('Maybe.just(1);\n\n', 3), ('time)', 3), ('SwitchMapObserver<T,', 3), ('get().dispose();\n', 3), ('compareAndSet(d,', 3), ('com.iluwatar.datamapper;\n\nimport', 3), ('qr', 3), ('ElementAtObserver<T>(t,', 3), ('assertEquals(ScheduledRunnable.SYNC_DISPOSED,', 3), ('List<Tuple<String,', 3), ('"clazz', 3), ('assertThrows(CakeBakingException.class,', 3), ('readFile(File', 3), ('dispatchAction(new', 3), ('atomicLong.incrementAndGet();\n', 3), ('"-Xmx1g",', 3), ('Hero', 3), ('queue.take();\n', 3), ('aimed', 3), ('ObservableRefCount<T>', 3), ('java.io.ByteArrayInputStream;\nimport', 3), ('mws', 3), ('suitable', 3), ('java.util.EnumSet;\nimport', 3), ('emptyList();\n', 3), ('retry()', 3), ('env,', 3), ('href="http://reactivex.io/documentation/operators/filter.html">ReactiveX', 3), ('ManagementFactory.getRuntimeMXBean().getName().split("@")[0]);\n\n', 3), ('requests.get(0).intValue());\n', 3), ('displayMessage)', 3), ('└──', 3), ('Consumer<Throwable>', 3), ('found.', 3), ('entities\n', 3), ('last\n', 3), ('fieldString;\n', 3), ('Please', 3), ('annotated', 3), ('integration', 3), ('piece', 3), ('repository.findAll();\n', 3), ('AtomicBoolean\n', 3), ('writing\n', 3), ('ParallelFailureHandling}', 3), ('ObjectHelper.requireNonNull(clazz,', 3), ('e);\n\n', 3), ('Struct>', 3), ('Flowable.just("First",', 3), ('AtomicBoolean(false);\n\n', 3), ('ElementAtObserver<T>', 3), ('demonstrated', 3), ('Mute.mute(()', 3), ('prior', 3), ('pendingWrite,', 3), ('StartingData', 3), ('resumed\n', 3), ('AsyncResult#getValue', 3), ('synchronize', 3), ('holderField.get(this.holder);\n', 3), ('Whitelist', 3), ('SimpleFileWriter(temporaryFile.getPath(),', 3), ('(beforeDownstream())', 3), ('spellDao);\n\n', 3), ('Maybe.<Integer>empty().toFlowable();\n', 3), ('types)', 3), ('available,', 3), ('collects', 3), ('RuntimeException}s', 3), ('completes\n', 3), ('started;\n\n', 3), ('bh.consume(value);\n', 3), ('createFailedPublisher()', 3), ('disposeAfter();\n', 3), ('TestDisposableSubscriber<Integer>', 3), ('period', 3), ('Printed",', 3), ('Try', 3), ('cop', 3), ('std-out', 3), ('stream.', 3), ('reducerCrash()', 3), ('in.readBoolean();\n', 3), ('completed.countDown();\n', 3), ('owner,', 3), ('enabled,', 3), ('(immediate,', 3), ('calls.incrementAndGet();\n', 3), ('Flowable"))', 3), ('jmourits@google.com', 3), ('userDto', 3), ('terminates?\n', 3), ('checkServerTrusted(X509Certificate[]', 3), ('List<Map<String,', 3), ('Single.never();\n', 3), ('AutoCloseable', 3), ('variants', 3), ('"three",', 3), ('fail(e.getMessage());\n', 3), ('PAGE_URL', 3), ('get(PROPERTY));\n', 3), ('assertEquals(10,', 3), ('webClient)', 3), ('"onAfterTerminate', 3), ('although\n', 3), ('Flowable.empty().test();\n', 3), ('here")\n', 3), ('8571289934935992137L;\n\n', 3), ('counter[0]);\n', 3), ('List<FlushOperation>', 3), ('Functions.justFunction(Single.just(1)),', 3), ('logGroupName;\n', 3), ('Dispatches', 3), ('Original', 3), ('DD.MM.YYYY\n', 3), ('BufferedReader(reader))', 3), ('com.iluwatar.resource.acquisition.is.initialization;\n\nimport', 3), ('maps', 3), ('backpressureSpec', 3), ('baseClassName.toLowerCase()', 3), ('comparer;\n', 3), ('element,', 3), ('Completable.\n', 3), ('disposerThrows)\n', 3), ('com.iluwatar.dirtyflag;\n\nimport', 3), ('java.util.*;\n\n/**\n', 3), ("doesn't\n", 3), ('singleFunction,\n', 3), ('com.iluwatar.databus;\n\nimport', 3), ('Manifest', 3), ("Letter('w'),", 3), ('construct', 3), ('SpellStep', 3), ('"Orcish', 3), ('Delay', 3), ('FlushAcknowledgementHolder', 3), ('io.reactivex.processors.*;\nimport', 3), ('Functions.justFunction(cs)\n', 3), ('counter.getAndIncrement();\n', 3), ('(activeNodesPerCluster)', 3), ('setName(String', 3), ('SafeSubscriber<String>(o).onError(new', 3), ('Start', 3), ('sequenceId', 3), ('.name("Merlin")\n', 3), ('checkTerminated(done,', 3), ('Functions.justFunction(Single.error(new', 3), ('cakes', 3), ('"two");\n', 3), ('gson.toJsonTree(domainEvent,', 3), ('(b.length()', 3), ('await()', 3), ('CompletableSubscriber', 3), ('java.util.Collections.emptyList;\nimport', 3), ('member)', 3), ('update))', 3), ('page\n', 3), ('priority,', 3), ('KeyStoreException', 3), ('UndeliverableException', 3), ('onComplete();\n\n', 3), ('ParallelFlowable\n', 3), ('2.0.8\n', 3), ('java.util.ArrayDeque;\n\nimport', 3), ('contents.\n', 3), ('manage', 3), ('assertTrue(d1.isDisposed());\n', 3), ('.assertResult(0,', 3), ('javax.swing.JFrame;\nimport', 3), ('Integer.MAX_VALUE)\n', 3), ('src.distinctUntilChanged().subscribe(w);\n\n', 3), ('(element', 3), ('explain', 3), ('Disposables.fromAction(new', 3), ('call(Operator', 3), ('com.sun.net.httpserver.HttpServer;\nimport', 3), ('sqlQuery.setParameter("username",', 3), ('java.io.PrintWriter;\nimport', 3), ('flatMap(Blackhole', 3), ('a",', 3), ('he', 3), ('com.iluwatar.intercepting.filter;\n\nimport', 3), ('RxJavaPlugins.class.getMethods())', 3), ('org.springframework.test.context.ContextConfiguration;\nimport', 3), ('!(throwable', 3), ('permissions\n', 3), ('*/\n@TestInstance(TestInstance.Lifecycle.PER_CLASS)\npublic', 3), ('err.initCause(ex);\n', 3), ('getMoney()', 3), ('ts.assertNotComplete();\n\n', 3), ('fully', 3), ('drainFused();\n', 3), ('lazySet(ON_COMPLETE);\n', 3), ('toFlowable()', 3), ('filesystem', 3), ('testWrite()', 3), ('errorSupplier;\n\n', 3), ('absolute', 3), ('java.util.concurrent.atomic.AtomicInteger;\n\n/**\n', 3), ('Observable.intervalRange(1,', 3), ('rco.add(d);\n\n', 3), ('observer.onSubscribe(Disposables.disposed());\n', 3), ('Schedule', 3), ('createdTime;\n', 3), ('realTime)', 3), ('.retry(2,', 3), ('QueueDisposable', 3), ('userId,', 3), ('authors', 3), ('elements");\n', 3), ('m.handle);\n', 3), ('printerController', 3), ('Flowable.', 3), ('braces', 3), ('o.onNext(1);\n', 3), ('assertTrue(initialCakes.isEmpty());\n\n', 3), ('o.onSubscribe(d);\n', 3), ('org.junit.jupiter.api.TestInstance;\nimport', 3), ('pushing', 3), ('layer,', 3), ('shot', 3), ('JvmOptionsParser.JvmOptionConsumer()', 3), ('LazyFluentIterable<E>()', 3), ('assertTimeout(ofMillis(10000),', 3), ('SampleTimedSubscriber<T>', 3), ('com.iluwatar.stepbuilder;\n\nimport', 3), ('end;\n\n', 3), ('console.\n', 3), ('#%d', 3), ('s.scheduleDirect(r);\n\n', 3), ('prettyPrint("The', 3), ('s.dispose();\n\n', 3), ('subject.onNext(2);\n', 3), ('2000));\n\n', 3), ('a.username=:username");\n', 3), ('isAt()', 3), ('whitelistMethod.painlessParameterTypeNames,', 3), ('ability', 3), ('hasNext;\n\n', 3), ('goNextSource;\n', 3), ('delayError);\n', 3), ('SubscriptionArbiter\n', 3), ('Completable.merge(Flowable.just(pp.ignoreElements())).test();\n\n', 3), ('2).elementAt(-1);\n', 3), ('RxJavaPlugins.onError.\n', 3), ('source2));\n', 3), ('.assertError(err)\n', 3), ('designated', 3), ('port;\n', 3), ('numberOfSubscribers)', 3), ('5));\n\n', 3), ('LOGGER.info("Some', 3), ('super(properties);\n', 3), ('Object\n', 3), ('FROM,', 3), ('predicate);\n', 3), ('holderField', 3), ('TimeUnit.MILLISECONDS).blockingFirst();\n', 3), ('exists\n', 3), ('BufferBoundarySupplierSubscriber<T,', 3), ('values[index]', 3), ('accepted.', 3), ('this.owner', 3), ('PrivateKey', 3), ('DisposableHelper.setOnce(target,', 3), ('accountNoFrom;\n', 3), ('MergeSubscriber<T,', 3), ('satisfy\n', 3), ('io.reactivex.internal.observers;\n\n/**\n', 3), ('file.', 3), ('LotteryNumbers.createRandom();\n', 3), ('isolate', 3), ('getter', 3), ('queue.offer(value);\n', 3), ('observer.dispose();\n', 3), ('ThreadAsyncExecutor();\n', 3), ('RuntimeException("error");\n', 3), ('executor);\n', 3), ('life', 3), ('BallThread();\n\n', 3), ('follows', 3), ('actual.tryOnNext(t);\n', 3), ('Helper', 3), ('id.\n', 3), ('stop");\n', 3), ('this.crashOnNext', 3), ('2",', 3), ('resourceSupplier.call();\n', 3), ('java.util.Objects;\n\npublic', 3), ('com.google.inject.Guice;\nimport', 3), ('e\n', 3), ('Collections.unmodifiableList(Arrays.asList(\n', 3), ('handleChannelRead(AbstractNioChannel', 3), ('assertTrue(bs1.isCancelled());\n\n', 3), ('situation', 3), ('triggers', 3), ('Integer.parseInt(System.getProperty("mongo-port")));\n', 3), ('i;\n\n', 3), ('hot', 3), ('*/\n@RunWith(MockitoJUnitRunner.class)\npublic', 3), ('emitters.add(new', 3), ('intelligence,', 3), ('represented', 3), ('@After\n', 3), ('System.out.println("Done!");\n', 3), ('Optional', 3), ('height="422"', 3), ('Throw', 3), ('R>(\n', 3), ('realtime', 3), ('AtomicInteger(1);\n\n', 3), ('description;\n', 3), ('LOGGER.info("Egg', 3), ('display', 3), ('It\n', 3), ('promise.get(1000,', 3), ('efficient', 3), ('proxy));\n', 3), ('times.size()', 3), ('"Rita",', 3), ('Schedulers.single().scheduleDirect(new', 3), ('List<Document>', 3), ('videos', 3), ('TestExecutor', 3), ('DoFinallyObserver<T>(s,', 3), ('[%s]', 3), ('"Bernard";\n', 3), ('attributes', 3), ('map.\n', 3), ('t4);\n', 3), ('findById(LotteryTicketId', 3), ('org.junit.jupiter.api.extension.ExtendWith;\nimport', 3), ('first;\n\n', 3), ('(Heavy)', 3), ('observer.onSuccess(1);\n', 3), ('this.onDispose', 3), ('fileName,', 3), ('symbol', 3), ('optionalCaptor.capture());\n\n', 3), ('source8,\n', 3), ('App();\n', 3), ('FutureSubscriber<Integer>();\n\n', 3), ('filter(@NonNull', 3), ('dependentPromise.get();\n', 3), ('fiction', 3), ('forcefully', 3), ('Subject}', 3), ('4),', 3), ('interactive', 3), ('Scheduler.\n', 3), ('flowable()', 3), ('onError.set(e);\n', 3), ('mask;\n', 3), ('SingleDisposable<T>', 3), ('now,', 3), ('count.getAndIncrement();\n', 3), ('oliphaunt', 3), ('accept(Emitter<Object>', 3), ('CakeInfo(topping1,', 3), ('TestSubscriber<Object>(0L);\n\n', 3), ('technically', 3), ('MaxNumOfEventsAllowedException,', 3), ('serialize', 3), ('Rethrows', 3), ('java.lang.reflect.Constructor;\nimport', 3), ('Files.write(tempPidFile,', 3), ('assertFalse("The', 3), ('ConcurrentLinkedQueue<>();\n', 3), ('singleFunction', 3), ('d.request(Long.MAX_VALUE);\n', 3), ('Printer', 3), ('exc,', 3), ('com.iluwatar.flux.action.Action;\nimport', 3), ('TrustConfig}', 3), ('"",', 3), ('writeFile(final', 3), ('ConcatWithSubscriber(Subscriber<?', 3), ('((state', 3), ('Perform', 3), ('src.distinctUntilChanged(TO_UPPER_WITH_EXCEPTION).subscribe(w);\n\n', 3), ('extension', 3), ('cd.dispose();\n', 3), ('succeeded\n', 3), ('-----------------------------------------------------------\n\n', 3), ('debug', 3), ('(field.get()', 3), ('ScheduledDirectPeriodicTask(decoratedRun);\n', 3), ('JvmOptionsParser.InvalidLineConsumer()', 3), ('TestSubscriber<Object>();\n', 3), ('Maybe}\n', 3), ('long\n', 3), ('(wip', 3), ('AppendOnlyLinkedArrayList<Object>(QUEUE_LINK_SIZE);\n', 3), ('log("Result', 3), ('asserts', 3), ('socket,', 3), ('rxdir', 3), ('assertEquals(expectedCounterExceptions,', 3), ('you\n', 3), ('onSubscribeError(Throwable', 3), ('this.lazySet(1);\n', 3), ('ts.assertError(TestException.class);\n', 3), ('System.err.println("expected', 3), ('StoreStore\n', 3), ('org.junit.Rule;\nimport', 3), ('never()).onNext("three");\n', 3), ('rmo.complete);\n', 3), ('SigningConfiguration', 3), ('sender;\n', 3), ('InterruptedException;\n}\n', 3), ('cause");\n', 3), ('printerController.print(MESSAGE);\n\n', 3), ('io.reactivex.single;\n\nimport', 3), ('ballThread.start();\n\n', 3), ('!m.signature.contains("MaybeSource")\n', 3), ('mine."));\n', 3), ('setFileName(String', 3), ('FuseToFlowable<Boolean>', 3), ('Thread.sleep(2000);\n', 3), ('systems.', 3), ('w.subscribe(to2);\n\n', 3), ('.sequential(1)\n', 3), ('other},', 3), ('supposed', 3), ('force', 3), ('recursive', 3), ('(Worker', 3), ('Scheduler},', 3), ('to2.dispose();\n\n', 3), ('active.getAndIncrement();\n\n', 3), ('onErrorMapper,', 3), ('io.reactivex.subjects.CompletableSubject;\n\npublic', 3), ('assertNotNull(initialCakes);\n', 3), ('follow', 3), ('exist\n', 3), ('ParallelReduceFullMainSubscriber<T>', 3), ('reducer);\n', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.merge.png"', 3), ('entity);\n\n', 3), ('testErrorObservable()', 3), ('Calendar.getInstance();\n', 3), ('baseClassName);\n', 3), ('planned\n', 3), ('c.get());\n', 3), ('href="http://reactivex.io/documentation/operators/do.html">ReactiveX', 3), ('t2);\n', 3), ('.assertResult(2,', 3), ('(d.isDisposed())', 3), ('ObservableSource<?>[]', 3), ('upstream.request(limit);\n', 3), ("'connect'", 3), ('DwarvenGoldmineFacade', 3), ('MagicService', 3), ('looking', 3), ('JPanel', 3), ('com.iluwatar.servicelayer.common;\n\nimport', 3), ('listener::onFailure));\n', 3), ('io.reactivex.internal.observers.ResumeSingleObserver;\n\npublic', 3), ('StudentDataMapper', 3), ('sch.advanceTimeBy(1,', 3), ('temporaryFile', 3), ('features', 3), ('testDelete()', 3), ('ignoreElement()', 3), ('eventId);\n', 3), ('resource);\n', 3), ('t5);\n\n', 3), ('PublishProcessor.\n', 3), ('database.",', 3), ('comply', 3), ('Format', 3), ('Inventory', 3), ('subject.test();\n', 3), ('prefix', 3), ('never()).onSuccess(any());\n', 3), ('connection,', 3), ('Optional<Student>', 3), ('HasPrice', 3), ('second.\n', 3), ('actual.onSuccess(t);\n\n', 3), ('accountNo', 3), ('TestObserver.create();\n\n', 3), ('push-based', 3), ('come', 3), ('SHUTDOWN)', 3), ('(fail.length()', 3), ('dao.findAll();\n', 3), ('Observable.never();\n', 3), ('only.\n', 3), ('(s1', 3), ('array.length', 3), ('onRequest,\n', 3), ('WithLatestFromSubscriber<T,', 3), ('"Unknown";\n', 3), ('classes,', 3), ('MaybeTimeoutPublisher<T,', 3), ('2017-present,', 3), ('producerIndex.get();\n', 3), ('innerErrorDelayed()', 3), ('it)', 3), ('"-Xmx1g"));\n', 3), ('Observable<Timed<Integer>>', 3), ('this.df', 3), ('ok\n', 3), ('250', 3), ('upper', 3), ('fs.requestFusion(mode', 3), ('con', 3), ('complete(t);\n', 3), ('bufferSize', 3), ('subscription.cancel();\n', 3), ('error.addThrowable(exc);\n', 3), ('Executors.newScheduledThreadPool(1,', 3), ('expectedCounterExceptions', 3), ('iterator,', 3), ('from}', 3), ('SingleOperator}', 3), ('times(0)).onNext("four");\n', 3), ('this.delayError;\n', 3), ('(poll()', 3), ('(this.d', 3), ('source4));\n', 3), ('(!field.compareAndSet(null,', 3), ('io.reactivex.internal.subscribers.*;\nimport', 3), ('signalled.\n', 3), ('CertificateTrustRestrictions', 3), ('Evaluates', 3), ('"src/test/java")));\n\n', 3), ('init()', 3), ('fields.\n', 3), ('Observer<Long>', 3), ('content)', 3), ('mage', 3), ('view.\n', 3), ('source.onNext(4);\n', 3), ('algorithms', 3), ('blobNamePrefix', 3), ('assertEquals("error!",', 3), ('details,', 3), ('exec);\n', 3), ('lim', 3), ('assertTrue(task.isDisposed());\n\n', 3), ('optionalException', 3), ('assertSame(runnable,', 3), ('BufferExactBoundaryObserver<T,', 3), ('age;\n', 3), ('services', 3), ('defaultItem\n', 3), ('Optional.class);\n', 3), ('org.junit.jupiter.params.provider.Arguments;\n\nimport', 3), ('sd.replace(d);\n', 3), ('ClassStep', 3), ('eventPool.\n', 3), ('com.google.inject.Injector;\nimport', 3), ('(returned', 3), ('Function<Single,', 3), ('proxy)', 3), ('HtmlSubmitInput', 3), ('flatMap;\n\n', 3), ('child.onNext(o);\n\n', 3), ('Pattern.compile(javaRegex)', 3), ('acquire', 3), ('"user', 3), ('customer.getId());\n', 3), ('it);\n', 3), ('observer.onSuccess(value);\n', 3), ('<li>Checks', 3), ('Files.getFileAttributeView(path,', 3), ('size.', 3), ('sequenceId;\n', 3), ('org.reactivestreams.tck.*;\nimport', 3), ('importedPainlessTypeName', 3), ('Flowable.just("a",', 3), ('Observable.', 3), ('java.io.Reader;\nimport', 3), ('backpressured()', 3), ('"pid",', 3), ('end)\n', 3), ('ObjectHelper.requireNonNull(onAfterTerminate,', 3), ('#onError(Throwable)}\n', 3), ('times(1)).onNext("three");\n', 3), ('choose', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.concat.png"', 3), ('Trampoline', 3), ('ConnectableObservable', 3), ('(these', 3), ('PosixFileAttributeView.class);\n', 3), ('(goNextSource', 3), ('com.iluwatar.featuretoggle.pattern.Service;\nimport', 3), ('con;\n', 3), ('well.', 3), ('15.12.2015\n', 3), ('observable.blockingLast();\n', 3), ('testEmptyObservable()', 3), ('killed\n', 3), ('c.incrementAndGet();\n', 3), ('ESPolicy(Collections.emptyMap(),', 3), ('BasicFileAttributes', 3), ('next.\n', 3), ('JoinDisposable<TLeft,', 3), ('a.length)', 3), ('observer,\n', 3), ('M', 3), ('--------------------------------------------------------------\n\n', 3), ('ara', 3), ('interrupted()', 3), ('m);\n\n', 3), ('C>(this,', 3), ('ReplayProcessor<Integer>', 3), ('io.reactivex.internal.subscriptions.EmptySubscription;\nimport', 3), ('onChannelReadEvent(AbstractNioChannel', 3), ('this.second', 3), ('virtualDB.put(userAccount.getUserId(),', 3), ('com.iluwatar.flyweight;\n\nimport', 3), ('it.remove();\n', 3), ('ConcatMaybeObserver<T>(s,', 3), ('input,', 3), ('SINGLE', 3), ('Object>();\n', 3), ('sources);\n', 3), ('ParallelFlowable<?', 3), ('catapults"});\n', 3), ('taskCompleted();\n', 3), ('E,', 3), ('IllegalArgumentException("No', 3), ('#onError(Throwable)}.', 3), ('source3));\n', 3), ('to.errors().get(0);\n', 3), ('(cancelled.isDisposed())', 3), ('wrap\n', 3), ('second;\n\n', 3), ('(outputFused)', 3), ('Predicate<Creature>', 3), ('org.elasticsearch.env.Environment;\n\nimport', 3), ('formatter', 3), ('fashion.\n', 3), ('2.0.2', 3), ('Stream<Customer>', 3), ('SqlExceptionType', 3), ('unit))', 3), ('(iterator', 3), ('ZipSingleObserver<T>[]', 3), ('DEFAULT_URL', 3), ('second;\n', 3), ('scheduling', 3), ('BaseTck<List<Integer>>', 3), ('times(0)).onNext("two");\n', 3), ('java.math.BigDecimal;\nimport', 3), ('.assertFailure(IllegalArgumentException.class);\n\n', 3), ('ObjectMapper', 3), ('Schedulers.\n', 3), ('client.\n', 3), ('e.onNext(null);\n', 3), ('String.class);\n', 3), ('generator,', 3), ('flowable.subscribe(new', 3), ('drop', 3), ('bug.\n', 3), ('happens,', 3), ('setFuture(Disposable', 3), ('ballItem.setTwin(ballThread);\n\n', 3), ('org.objectweb.asm.Type.getType(descriptor);\n\n', 3), ('same\n', 3), ('Audio.playSound(Audio.getAudioStream("./etc/Bass-Drum-1.aif"),', 3), ('children)', 3), ('nodes', 3), ('signal\n', 3), ('disposer.accept((R)resource);\n', 3), ('initialization\n', 3), ('NOSONAR\n', 3), ('subscribe(SingleEmitter<Integer>', 3), ('ConcatMaybeObserver<T>\n', 3), ('ticket)', 3), ('map(@NonNull', 3), ('compute', 3), ('assertEquals("Error', 3), ('BlockingMultiObserver<T>', 3), ('TestException("inner"));\n', 3), ('innerObserver,', 3), ('bottomShelf.add(factory.createPotion(PotionType.POISON));\n', 3), ('implementation.', 3), ('tenantName)', 3), ('.assertFailure(IOException.class);\n\n', 3), ('2017\n', 3), ('java.util.Deque;\nimport', 3), ('T...', 3), ('(resource.get()', 3), ('MaybeCallbackObserver<Object>(\n', 3), ('BlobMetaData>', 3), ('Thread.sleep(1000);\n\n', 3), ('handler);\n', 3), ('List<DiscoveryNode>', 3), ('FlowableTransformer<T,', 3), ('1811839108042568751L;\n\n', 3), ('schedulePeriodicallyDirect(@NonNull', 3), ('java.util.Collections.singletonList;\n\n/**\n', 3), ('gateway', 3), ('scheduler}', 3), ('settings)', 3), ('current.lazySet(value);\n', 3), ('assertTrue(s2.isCancelled());\n\n', 3), ('errorMessage', 3), ('DomainEventProcessor();\n', 3), ('@SafeVarargs\n', 3), ('QueueDrainObserver<T,', 3), ('DataMapperException', 3), ('processFactory,', 3), ('science', 3), ('p);\n', 3), ('Declared', 3), ('matched', 3), ('Pass', 3), ('org.mockito.Mockito.timeout;\nimport', 3), ('processor', 3), ('s));\n', 3), ('e4.getMessage());\n', 3), ('"Montgomery";\n', 3), ('body', 3), ('get(FUTURE_INDEX);\n', 3), ('IllegalArgumentException("Invalid', 3), ('io.reactivex.internal.observers.QueueDrainObserver;\nimport', 3), ('singletonMap("a",', 3), ('assertEquals("three",', 3), ('(Jerome', 3), ('500"});\n', 3), ('pp.switchMapCompletableDelayError(Functions.justFunction(cs)).test();\n\n', 3), ('initialValue)', 3), ('error(e);\n', 3), ('HtmlPage', 3), ('(evictedGroups', 3), ('year', 3), ('V>\n', 3), ('crashOnNext;\n', 3), ('displayed', 3), ('future.get();\n', 3), ('specific\n', 3), ('dash', 3), ('java.lang.reflect.Method;\nimport', 3), ('org.junit.jupiter.api.Assertions.assertTimeout;\n\n/**\n', 3), ('resultIterator.hasNext()', 3), ('lookup', 3), ('HashSet<Thread>();\n', 3), ('to.assertFailureAndMessage(TestException.class,', 3), ('"C",', 3), ('hasValue()', 3), ('simpleObjects;\n\n', 3), ('.assertValueSet(Arrays.asList(1,', 3), ('Flowable.never()\n', 3), ('NoSuchElementException}', 3), ('Actions', 3), ('exit\n', 3), ('prepare()', 3), ('Object>,', 3), ('20,', 3), ('executor.startProcess(task);\n', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.concat.png"', 3), ('m.javadoc.indexOf("onNext",', 3), ('(next.getCake()', 3), ('documents\n', 3), ('retrying', 3), ('SocketAccess()', 3), ('inOrder(task);\n', 3), ('issues', 3), ('struct\n', 3), ('repeatWhen}', 3), ('SpscArrayQueue<T>(prefetch);\n\n', 3), ('"fallback', 3), ('LOGGER.info(String.format("Receiver', 3), ('flatMapPublisher}', 3), ('assertFalse(asyncResult.isCompleted());\n\n', 3), ('merge(Flowable.fromArray(source1,', 3), ('e.g.', 3), ('innerSuccess(InnerObserver', 3), ('layers\n', 3), ('setBody(String', 3), ('Files.move(tmp,', 3), ('DoFinallyObserver<T>', 3), ('CompletableSource}s', 3), ('mongoClient.close();\n', 3), ('onErrorCrashes()', 3), ('3:', 3), ('(and', 3), ('assertTrue(w.tasks.hasSubscriptions());\n//\n//', 3), ('com.gargoylesoftware.htmlunit.WebClient;\nimport', 3), ('api;\n', 3), ('BaseFilterSubscriber<T>', 3), ('demand', 3), ('a.onNext((T)o);\n', 3), ('-----------------------------------\n\n', 3), ('callback);\n\n', 3), ('testSimple()', 3), ('oop', 3), ('com.iluwatar.pageobject.pages;\n\nimport', 3), ('remaining;\n\n', 3), ('1:', 3), ('lotteryTicket', 3), ('unnecessary', 3), ('randomIntBetween(1,', 3), ('assertEquals(member.toString()', 3), ('emitting;\n', 3), ("whitelistStruct.javaClassName.replace('$',", 3), ('disposer)\n', 3), ('client.', 3), ('timed/delayed', 3), ('extendedPlugins;\n', 3), ('Error}s', 3), ("'Message'", 3), ('"unexpectedly".\n', 3), ('Album', 3), ('inner.compareAndSet(current,', 3), ('App}\n', 3), ('".");\n', 3), ('.validate(User::getAge,', 3), ('Queues', 3), ('dheeraj.mummar', 3), ('com.iluwatar.event.queue;\n\nimport', 3), ('sr;\n', 3), ('-1",', 3), ('onCompleteCleansUp()', 3), ('handler;\n', 3), ('simpleObjects', 3), ('ICommandService', 3), ('<code>\n', 3), ('8042919737683345351L;\n\n', 3), ('Collects', 3), ('mammoth.observe();\n', 3), ('Flowable.merge(o1,', 3), ('DbManager.updateDb(userAccount);\n', 3), ('lines)', 3), ('SubscriptionHelper.deferredRequest(this,', 3), ('(AssertionError', 3), ('AppClient();\n', 3), ('execute(final', 3), ('Consumer<T>', 3), ('-99",', 3), ('db', 3), ('Completable}.\n', 3), ('MaybeFlatten<T,', 3), ('directory>', 3), ('exchange.close();\n', 3), ("'\\n')", 3), ('typeNames', 3), ('operator,', 3), ('-1953724749712440952L;\n\n', 3), ('21);\n', 3), ('20;', 3), ('name.hashCode();\n', 3), ('aggressive', 3), ('current))', 3), ('SYNC_DISPOSED', 3), ('b.indexOf("public', 3), ('Single&lt;Integer>', 3), ('val)', 3), ('super(subscriber);\n', 3), ('super(\n', 3), ('Tolerant', 3), ('e.append("', 3), ('IntervalSubscriber', 3), ('singleton(content));\n', 3), ('between\n', 3), ('.map(v', 3), ('addressAndPort);\n\n', 3), ('resolveIndices(indexWildcard,', 3), ('AtomicReference<Object>(NotificationLite.COMPLETE);', 3), ('ballThread.join();\n\n', 3), ('to2.assertNotComplete();\n', 3), ('emptyList());\n', 3), ('Every', 3), ('this.headers', 3), ('r);\n\n', 3), ('points', 3), ('hosts', 3), ('.collect(Collectors.toList());\n\n', 3), ('*",\n', 3), ('ts2.dispose();\n\n', 3), ('injector', 3), ('plain', 3), ('"More', 3), ('12/15/15', 3), ('(!eventPool.containsKey(eventId))', 3), ('classname;\n', 3), ('infinite', 3), ('FileVisitResult', 3), ('functionName;\n', 3), ('ObservableSource.\n', 3), ('(no', 3), ('LOGGER.error("error', 3), ('intended\n', 3), ('reflection.\n', 3), ('├──', 3), ('Object.class)', 3), ('(delay', 3), ('a.onError(new', 3), ('retryTimesPredicateWithZeroRetries()', 3), ('second(s)");\n', 3), ('hide()', 3), ('errorDetaches()', 3), ('Loads', 3), ('active.get();\n', 3), ('this"));\n', 3), ('so.', 3), ('cakeToppingInfo;\n', 3), ('pp.onNext(0);\n\n', 3), ('c.get();\n\n', 3), ('.limit(0)\n', 3), ('Schedulers.single();\n\n', 3), ('m.javadoc.indexOf("Flowable",', 3), ('cancelDetaches()', 3), ('TestDisposableObserver<Integer>();\n\n', 3), ('org.elasticsearch.common.settings.SecureString;\nimport', 3), ('binds', 3), ('.assertResult(1L,', 3), ('Flowable<Timed<Integer>>', 3), ('https://bugs.openjdk.java.net/browse/JDK-8162520:\n', 3), ('"Freddy",', 3), ('BlockingMultiObserver<T>();\n', 3), ('owner.clazz;\n', 3), ('expectedCounterDateValues', 3), ('combination', 3), ('Observable.just(1).subscribe(new', 3), ('ObservableEmitter}', 3), ('Observable.<Long>', 3), ('CHM', 3), ('value[0]', 3), ('expectScriptThrows(PainlessExplainError.class,', 3), ('RestrictedTrustConfig', 3), ('assertFalse(rmo.isDisposed());\n', 3), ('practice', 3), ('assertTrue(list.get(index).toString(),', 3), ('assertTrue(unsubscribed.get());\n', 3), ('ApiGatewayResponse', 3), ('subsequently', 3), ('(inetSocketAddress.getAddress()', 3), ('java.time.LocalDateTime;\n\n/**\n', 3), ('18:59', 3), ('java.util.concurrent.atomic.AtomicReference;\n\npublic', 3), ('receive\n', 3), ('Filter</a>\n', 3), ('length())', 3), ('verify(consumer,', 3), ('assertFalse(ro.isDisposed());\n\n', 3), ('WindowBoundaryMainSubscriber(Subscriber<?', 3), ('LOGGER.info("Unknown', 3), ('pairs', 3), ('RxJavaPlugins.onError(null);\n\n', 3), ('LikePattern', 3), ('Callback()', 3), ('Navigates', 3), ('com.iluwatar.servicelayer.spellbook.SpellbookDao;\nimport', 3), ('scheduler.createWorker();\n', 3), ('as(@NonNull', 3), ('Schedulers.newThread());\n', 3), ('assertEquals("count', 3), ('.doOnCancel(this)\n', 3), ('ExecutionException(exception);\n', 3), ('BusinessOperation<T>', 3), ('(times', 3), ('Key', 3), ('sequenceId,', 3), ('com.iluwatar.event.asynchronous;\n\nimport', 3), ('.doOnRequest(new', 3), ('"Completable");\n', 3), ('addressLineTwo;\n', 3), ('second,', 3), ('Single.zipArray(new', 3), ('potions', 3), ('handlers.\n', 3), ('should\n', 3), ('FieldJsonMapper', 3), ('TestHelper.checkDoubleOnSubscribeObservableToSingle(new', 3), ('this.webClient.getPage(PAGE_URL);\n', 3), ('SingleOnSubscribe<Integer>()', 3), ('aliases', 3), ('Enum<E>>', 3), ('DebounceObserver<T,', 3), ('subscriber.assertNoErrors();\n', 3), ('defClassToObjectClass(rtn);\n', 3), ('(array', 3), ('downstream.onError(new', 3), ('io.reactivex.observers.SerializedObserver;\nimport', 3), ('clients.', 3), ('ms.onComplete();\n\n', 3), ('ResponseHandler(final', 3), ('lo', 3), ('George', 3), ('DatagramPacket}', 3), ('month,', 3), ('RxJavaPlugins.onError(exc);\n', 3), ('com.iluwatar.hexagonal.mongo.MongoConnectionPropertiesLoader;\nimport', 3), ('and/or\n', 3), ('UnresolvedPermission)', 3), ('ElasticsearchException', 3), ('"http://"', 3), ('publisher)', 3), ('System.out.println(t);\n', 3), ('io.reactivex.annotations.CheckReturnValue;\nimport', 3), ('customers;\n', 3), ('enqueue,', 3), ('com.google.inject.Inject;\nimport', 3), ('macro-fused', 3), ('assertFalse(rco.isDisposed());\n\n', 3), ('assertEquals(expectedCounterDateValues,', 3), ('EmailAttachments', 3), ('ones\n', 3), ('num', 3), ('BufferBoundarySupplierObserver<T,', 3), ('SingleScheduler();\n', 3), ('capacity;\n', 3), ('pp.switchMapCompletable(Functions.justFunction(cs)).test();\n\n', 3), ('e;\n\n', 3), ('(fallback', 3), ('disposer.accept((U)u);\n', 3), ('(fs', 3), ('(timeout', 3), ('assertEquals(Arrays.asList(2,', 3), ('information\n', 3), ('"mapper");\n', 3), ('this.path', 3), ('proceeds', 3), ('delivered\n', 3), ('Object[]{\n', 3), ('been\n', 3), ('assertTrue(rmo.isDisposed());\n', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/autoConnect.f.png"', 3), ('.assertResult(true);\n\n', 3), ('.flatMapMaybe(new', 3), ('createdDateValues', 3), ('BlockingBaseObserver<T>', 3), ('2.0.5', 3), ('idx3', 3), ('List<T>>', 3), ('io.reactivex.functions.Predicate;\n\n@Test\npublic', 3), ('AzureStorageTestServer', 3), ('here.', 3), ('mainErrorDelayed()', 3), ('customerId', 3), ('onlyFQNJavaClassName', 3), ('(action)\n', 3), ('Binds', 3), ('plays', 3), ('pp.hasSubscribers());\n', 3), ('conditions.\n', 3), ('times(1)).onPreCall();\n', 3), ('eventual', 3), ('collide', 3), ('*/\n/**\n', 3), ('timer(long', 3), ('are.</dd>\n', 3), ('completable()', 3), ('errors.add(e);\n\n', 3), ('ResponseHandler', 3), ('lastName=\'"', 3), ('13,', 3), ('basic()', 3), ('separates', 3), ('getHeader(Headers', 3), ('r.get());\n', 3), ('cal.get(Calendar.MONTH)', 3), ('(1', 3), ('Aristy', 3), ('org.elasticsearch.common.io.stream.StreamInput;\nimport', 3), ('mode.', 3), ('Queue\n', 3), ('Exception}\n', 3), ('"].', 3), ('OS', 3), ('setOnce(AtomicReference<Subscription>', 3), ('`pid`', 3), ('candidate;\n', 3), ('DisposableHelper.setOnce(this.s,', 3), ('HashSet<>();\n\n', 3), ('Dao', 3), ('com.iluwatar.doublechecked.locking;\n\nimport', 3), ('argument.\n', 3), ('executeService.submit(new', 3), ('r.set(true);\n', 3), ('Emitter\n', 3), ('q.add(NotificationLite.complete());\n', 3), ('requested\n', 3), ('LOGGER.info(\n', 3), ('current.item', 3), ('(empty', 3), ('result)', 3), ('com.iluwatar.abstractdocument.Document;\n\n/**\n', 3), ('context)', 3), ('com.sun.net.httpserver.HttpExchange;\nimport', 3), ('LOGGER.info("Failed', 3), ('initialCakes', 3), ('policy,', 3), ("thread's\n", 3), ('transforms', 3), ('AsyncSubscription', 3), ('super(log,', 3), ('opposite', 3), ('this.future', 3), ('comma', 3), ('(fusion).\n', 3), ('{@inheritDoc}', 3), ('resultIterator', 3), ('writer;\n', 3), ('predicate.\n', 3), ('super(new', 3), ('creatures\n', 3), ('iterable;\n', 3), ('TestMaybe<Integer>', 3), ('HasUpstreamMaybeSource<T>', 3), ('policy\n', 3), ('While', 3), ('Design', 3), ('existing\n', 3), ('ArrayList<Document>());\n', 3), ('Do</a>\n', 3), ('1.x', 3), ('DebounceTimedSubscriber<T>', 3), ('next.dispose();\n', 3), ('Maybe.just(v).toFlowable();\n', 3), ('java.lang.Thread.UncaughtExceptionHandler;\nimport', 3), ('irrelevant\n', 3), ('context;\n', 3), ('{@inheritDoc}.', 3), ('repository.getNextId());\n', 3), ('retryTimesPredicateWithMatchingPredicate()', 3), ('way,', 3), ('.assertFailure(NullPointerException.class);\n\n', 3), ('retryTimesPredicateWithMatchingRetryAmount()', 3), ('System.out.println(fail);\n', 3), ('SpscLinkedArrayQueue<T>(prefetch);\n', 3), ('assertTrue(d2.isDisposed());\n', 3), ('com.iluwatar.hexagonal.domain.LotteryService;\nimport', 3), ('tracking', 3), ('(Data', 3), ('findAll()', 3), ('helper\n', 3), ('Functions.EMPTY_ACTION);\n', 3), ('Throw</a>\n', 3), ('LOGGER.info("----------------------------------------------------------");\n\n', 3), ('FlowableSubscriber<U>', 3), ('dataSource)', 3), ('Factory,', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/autoConnect.o.png"', 3), ('fromCallable}', 3), ('stopped', 3), ('Function', 3), ('TrampolineScheduler', 3), ('(direct)', 3), ('testScheduler).subscribe(new', 3), ('this.producerIndex', 3), ('.subscribe();\n\n', 3), ('ArrayList<T>();\n', 3), ('when(task.call()).thenAnswer(i', 3), ('com.iluwatar.servicelayer.wizard.Wizard;\nimport', 3), ('passes', 3), ('executor.shutdownNow();\n', 3), ('Function<Maybe<Integer>,', 3), ('<pre>', 3), ('io.reactivex.internal.subscribers.QueueDrainSubscriber;\nimport', 3), ('msg', 3), ('exist.\n', 3), ('accept(T', 3), ('ballThread.stopMe();\n', 3), ('Maybe},', 3), ('retry\n', 3), ('increasing', 3), ('boundaryObserver.dispose();\n', 3), ('WithLatestFromObserver<T,', 3), ('subclasses', 3), ('violates', 3), ('NamedExpression', 3), ('DebuggingInvoker', 3), ('Retries', 3), ('io.reactivex.TestHelper;\n\npublic', 3), ('(!hasNext)', 3), ('Completable.complete()))\n', 3), ('visitor', 3), ('IllegalArgumentException("owner', 3), ('COMPLETED)', 3), ('SingleObserver}s', 3), ('Storage', 3), ('Then', 3), ('RuntimeException("Account', 3), ('ro.add(d);\n\n', 3), ('result.', 3), ('us.onNext(1);\n', 3), ('times(1)).onNext("B");\n', 3), ('os)', 3), ('Future<?', 3), ('dirs.offer(u);\n', 3), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.flatMap.png"', 3), ('syncFused;\n\n', 3), ('leaves', 3), ('yet', 3), ('onCompleteSupplier));\n', 3), ('WeakReference<Object>', 3), ('};\n\n\n', 3), ('ConcatWithObserver<T>\n', 3), ('disposerThrows,', 3), ('displayMessage', 3), ('looks', 3), ('org.elasticsearch.core.internal.io.IOUtils;\nimport', 3), ('Publisher<R>>', 3), ('fail(ex.toString());\n', 3), ('io.reactivex.internal.subscribers.SinglePostCompleteSubscriber;\nimport', 3), ('write(MethodWriter', 3), ('"Observable");\n', 3), ('List<Setting<?>>', 3), ('pp.hasSubscribers());\n\n', 3), ('Long.MAX_VALUE));\n\n', 3), ('(ExecutorWorker)Schedulers.from(e).createWorker();\n//\n//', 3), ('InetSocketAddress(InetAddress.getLocalHost(),', 3), ('ps.switchMapCompletable(Functions.justFunction(cs)).test();\n\n', 3), ('GroupBySubscriber<T,', 3), ('username);\n\n', 3), ('ArgumentCaptor.forClass((Class)', 3), ('rmo.dispose();\n\n', 3), ('mode).\n', 3), ('o.scan(new', 3), ('column(int', 3), ('{@code\n', 3), ('dao;\n', 3), ('o[0].onError(new', 3), ('@GeneratedValue\n', 3), ('.retry(Integer.MAX_VALUE,', 3), ('test(Creature', 3), ('io.reactivex.internal.operators.flowable.*;\nimport', 3), ('Subscriber<Long>', 3), ('.assertResult(2);\n\n', 3), ('statusMember', 3), ('op.perform();\n', 3), ('addressAndPort', 3), ('eventClassName;\n', 3), ('Thread.sleep(Long.MAX_VALUE);\n\n', 3), ('DocumentImplementation', 3), ('ballThread.setTwin(ballItem);\n\n', 3), ('s.scheduleDirect(new', 3), ('similarly', 3), ('.local(true)\n', 3), ('errorMode,\n', 3), ("'class'", 3), ("subject's", 3), ('verify(underlying).dispose();\n', 3), ('com.iluwatar.servicelayer.common.BaseDaoTest;\nimport', 3), ('Initialize', 3), ('nextCancelRace()', 3), ('counter.\n', 3), ('running\n', 3), ('MaybeObserver.\n', 3), ('strategy', 3), ('hostsList', 3), ('second);\n', 3), ('repository;\n\n', 3), ('BusinessOperation}', 3), ('tempPidFile', 3), ('handle,', 3), ('1L;\n', 3), ('io.reactivex.schedulers.TestScheduler;\n\nimport', 3), ('unix', 3), ('damage', 3), ('Send', 3), ('TimerDisposable(final', 3), ('algorithm', 3), ('x-pack', 3), ('Before', 3), ('JDBC', 3), ('need\n', 3), ('io.reactivex.subjects.SingleSubject;\nimport', 3), ('prototype;\n', 3), ('ps.switchMapCompletableDelayError(Functions.justFunction(cs)).test();\n\n', 3), ('this.prototype', 3), ('GUI', 3), ('here.\n', 3), ('8600231336733376951L;\n\n', 3), ('addressAndPort;\n', 3), ('(AsyncDisposable<T>', 3), ('stream)', 3), ('Functions.EMPTY_LONG_CONSUMER,', 3), ('mp;\n', 3), ('Function<Observable,', 3), ('MaybePeek<T>', 3), ('Maybe.just(1).delay(1,', 3), ('awaits', 3), ('complicated', 3), ('scalarEmptySource()', 3), ('observable(Blackhole', 3), ('innerComplete(int', 3), ('"Maybe");\n', 3), ('assertEquals("Merlin",', 3), ('AccessController.doPrivileged((PrivilegedExceptionAction<Void>)', 3), ('nature', 3), ('Java\n', 3), ('500,', 3), ('Structs', 3), ('test.', 3), ('java.lang.annotation.ElementType.PARAMETER;\nimport', 3), ('Android', 3), ('SchedulerMultiWorkerSupport', 3), ('doOnNext(@NonNull', 3), ('(NoSuchMethodException', 3), ('gson.fromJson(jsonElement,', 3), ('specified");\n', 3), ('run.run();\n\n', 3), ('this.onRequest', 3), ('-502562646270949838L;\n\n', 3), ('BufferExactObserver<T,', 3), ('signals\n', 3), ('whitelistFields', 3), ('lazySet(TERMINATED);\n', 3), ('ConcatWithObserver(Observer<?', 3), ('completeMatch;\n', 3), ('latch.await();\n', 3), ('Subscription.\n', 3), ('Observers}s', 3), ('io.reactivex.Scheduler.Worker}', 3), ('JvmOptionsParser.parse(\n', 3), ('i--)', 3), ('type:', 3), ('name);\n\n', 3), ('com.iluwatar.servicelayer.magic;\n\nimport', 3), ('mergeArrayDelayError(source1,', 3), ('reportError;\n', 3), ('dirs', 3), ("'.'));\n", 3), ('Thread(r).start();\n', 3), ('MaybeTimeoutMaybe<T,', 3), ('(SchedulerMultiWorkerSupport)Schedulers.computation();\n\n', 3), ('boolean.\n', 3), ('disposal', 3), ('LOGGER.info("Get', 3), ('tests.\n', 3), ('io.reactivex.internal.util.BlockingHelper;\nimport', 3), ('31;\n', 3), ('files.', 3), ('artificial', 3), ('re-subscribe', 3), ('Observable.fromArray(new', 3), ('Implements', 3), ('MissingBackpressureException("Can\'t', 3), ('zipper,', 3), ('counter[0]++;\n', 3), ('makeActions(workers,', 3), ('org.elasticsearch.xpack.sql.jdbc.debug;\n\nimport', 3), ('swallowed', 3), ('most\n', 3), ('java.io.OutputStreamWriter;\nimport', 3), ('ch', 3), ('whitelists)', 3), ('baseIndex', 3), ('FlatMapSingleObserver(AtomicReference<Disposable>', 3), ('parallelism,', 3), ('Function<CompletableOperator,', 3), ('java.io.FileOutputStream;\nimport', 3), ('(onSubscribe', 3), ('already\n', 3), ('io.reactivex.completable;\n\nimport', 3), ('ItemIterator', 3), ('.retry(0,', 3), ('#merge(MaybeSource,', 3), ('terminate,', 3), ('Spring', 3), ('assertEquals(ScheduledRunnable.ASYNC_DISPOSED,', 3), ('MaybeOperator}', 3), ('callable;\n\n', 3), ('isEqual)', 3), ('(Subscriber<?>', 3), ('DisposableHelper.isDisposed(upstream.get());\n', 3), ('construction', 3), ('System.currentTimeMillis();\n', 3), ('future.get(timeout,', 3), ('Classes', 3), ('Maybe.concatArrayDelayError(Maybe.just(1),', 3), ('ds.onNext(1);\n', 3), ('https://github.com/JCTools/JCTools/blob/master/jctools-core/src/main/java/org/jctools/queues/atomic\n', 3), ('(s.charAt(i)', 3), ('EqualCoordinator<T>', 3), ('(only', 3), ('specialDay', 3), ('e.onSuccess(2);\n', 3), ('inetSocketAddress', 3), ('overridden)\n', 3), ('validate', 3), ('January', 3), ('readObject', 3), ('exc', 3), ('line;\n\n', 3), ('U>(subscriber,', 3), ('assertTrue(result);\n', 3), ('line.length()', 3), ('java.nio.file.attribute.BasicFileAttributes;\nimport', 3), ('onSuccess}.\n', 3), ('socket)', 3), ('}).toFlowable();\n\n', 3), ('SpscArrayQueue<T>(prefetch);\n', 3), ('SampleTimedObserver<T>', 3), ('.assertOf(ObserverFusion.<Integer>assertNotFuseable())\n', 3), ('PropertiesFeatureToggleVersion}', 3), ('presentation', 3), ('QS', 3), ('worker,', 3), ('test,', 3), ('bind()', 3), ('TreeMap<>();\n', 3), ('actual.onNext(u);\n', 3), ('middleError()', 3), ('this:\n', 3), ('Let', 3), ('upstream.request(n);\n', 3), ('here.");\n', 3), ('3/4/18.\n', 3), ('org.elasticsearch.SpecialPermission;\nimport', 3), ('io.reactivex.observers.SerializedObserver;\n\npublic', 3), ('ts1.dispose();\n', 3), ('subscriber.assertComplete();\n', 3), ('toppings', 3), ('filename)', 3), ('onCancel)', 3), ('o.name()));\n', 3), ('atomicLong', 3), ('com.iluwatar.iterator;\n\nimport', 3), ('addressToString(httpServer.getAddress());\n', 3), ('testCounterDateValues()', 3), ('CachingPolicy.BEHIND)', 3), ('ScalarCallable<T>', 3), ('readable\n', 3), ('errors;\n', 3), ('.take(5)\n', 3), ('way.\n', 3), ('io.reactivex.internal.functions.ObjectHelper;\n\npublic', 3), ('o.collect(new', 3), ('List<Attribute>', 3), ('this.emitted;\n\n', 3), ('concreteIndex,', 3), ('bo', 3), ('definitionStart', 3), ('Thread(new', 3), ('cache.\n', 3), ('java.util.concurrent.atomic.AtomicReferenceArray;\n\nimport', 3), ('is(true));\n', 3), ('((UnresolvedPermission)', 3), ('e.invoke(null,', 3), ('context.put(IUnitOfWork.INSERT,', 3), ('!done)', 3), ('read(SelectionKey', 3), ('execTime;\n', 3), ('LOGGER.info("->', 3), ('com.iluwatar.monad;\n\nimport', 3), ('4));\n', 3), ('Maybe)', 3), ('JLabel', 3), ('task.', 3), ('System.out.println();\n', 3), ('transitiveBoundaryFusion(int', 3), ('declaration', 3), ('httpServer', 3), ('executions', 3), ('jj', 3), ('prefetch.\n', 3), ('};\n//', 3), ('ElementAtSubscriber<T>', 3), ('Just', 3), ('schedule();\n', 3), ('List<Spellbook>', 3), ('Heavy}', 3), ('task.\n', 3), ('dimensions)', 3), ('buffer");\n', 3), ('CakeToppingInfo("Topping2",', 3), ('schhedulerSpec', 3), ('SocketAccess', 3), ('Relays', 3), ('active,', 3), ('(getClass()', 3), ('cal', 3), ('ps.onNext(0);\n\n', 3), ('constructed', 3), ('PrinterController', 3), ('Maybe.<Integer>empty().toObservable();\n', 3), ('failed\n', 3), ('TestException())));\n', 3), ('studentDatabase);\n\n', 3), ('location)', 3), ('w.subscribe(ts2);\n\n', 3), ('winner.get();\n', 3), ('inner.done;\n', 3), ('state-aware', 3), ('lim)', 3), ('doWrite(Object', 3), ('onEvent', 3), ('(reportError)', 3), ('Schedulers.computation().createWorker();\n', 3), ('feature\n', 3), ('.wizardClass("alchemist")\n', 3), ('never()).onNext(2);\n', 3), ('*/\n\n/*\n', 3), ('lengthMeters;\n', 3), ('static\n', 3), ('assertNotEquals(t2,', 3), ('serializing', 3), ('Flowable<Boolean>', 3), ("Observer}'s", 3), ('Multiton', 3), ('(emitter.isDisposed()', 3), ('InvalidOperationException', 3), ('wrapping.\n', 3), ('classes,\n', 3), ('"the', 3), ('consumerIndex', 3), ('a[i]', 3), ('management', 3), ('doAfterTerminate}', 3), ('observer.onNext("one");\n', 3), ('filtering.', 3), ('basicWithError()', 3), ('(errors[0]', 3), ('Mourits)\n', 3), ('struct.name;\n', 3), ('mode.\n', 3), ('TimeUnit.SECONDS).blockingLast();\n\n', 3), ('outer;\n', 3), ('mute', 3), ('event[0]', 3), ('"15/12/2015");\n', 3), ('executorService;\n\n', 3), ('AsyncProcessor.\n', 3), ('-----------------------------------\n', 3), ('q.offer(i);\n', 3), ('concatArray(source1,', 3), ('retrieve', 3), ('java.util.Calendar;\nimport', 3), ('writers', 3), ('#hasThrowable()},\n', 3), ('Again,', 3), ('timestamp,', 3), ('get\n', 3), ('innerSuccess(this,', 3), ('drainFused()', 3), ('verifyNoMoreInteractions(royalty);\n', 3), ('signalled\n', 3), ('potential', 3), ('map\n', 3), ('Resolves', 3), ('emptyMap(),', 3), ('javax.swing.JButton;\nimport', 3), ('RxJavaPlugins.onSingleLift(oop));\n//\n//', 3), ('onSuccess(@NonNull', 3), ('fromCallableNull()', 3), ('DbManager.readFromDb(userId);\n', 3), ('Document("$set",', 3), ('getFirstName()', 3), ('return,', 3), ('assertEquals(displayMessage,', 3), ('(u.isDirectory())', 3), ('observer.onError(error);\n', 3), ('javaVersion;\n', 3), ('second(s)\n', 3), ('com.iluwatar.front.controller;\n\nimport', 3), ('promise.fulfillInAsync(new', 3), ('Schedulers.from(exec).createWorker();\n', 3), ('groups;\n', 3), ('locked', 3), ('instances.', 3), ('testFindAll()', 3), ('instance.', 3), ('SimpleQueueWithConsumerIndex<T>', 3), ('randomIntBetween(0,', 3), ('.assertFailure(MissingBackpressureException.class);\n\n', 3), ('App(new', 3), ('reader,', 3), ('height="392"', 3), ('TestDisposableSubscriber<Integer>();\n\n', 3), ('assertNotNull(e.getCause());\n', 3), ('addHeader(Headers', 3), ('`ports`', 3), ('layer2)));\n', 3), ('apply(Maybe<Integer>', 3), ('Schedulers.io());\n', 3), ('variant', 3), ('-1");\n', 3), ('storage', 3), ('observer))', 3), ('Completable.complete().toFlowable();\n', 3), ('equals(final', 3), ('observed.', 3), ('scheduler.advanceTimeTo(5,', 3), ('builder.build();\n', 3), ('faster', 3), ('workers.add(new', 3), ('(george.aristy@gmail.com)\n', 3), ('RecreateSimpleObjects', 3), ('arguments);\n', 3), ('EventDoesNotExistException(eventId', 3), ('!m.signature.contains("ObservableSource"))', 3), ('mo.onSubscribe(Disposables.empty());\n\n', 3), ('q.add(NotificationLite.next(t));\n', 3), ('MaybeSource},', 3), ('Setting.Property.NodeScope);\n\n', 3), ('comparison', 3), ('BuildStep\n', 3), ('afterDownstream()', 3), ('getDao();\n', 3), ('ParallelFailureHandling}\n', 3), ('hasValue', 3), ('12);\n', 3), ('ConcatMaybeObserver(Subscriber<?', 3), ('If\n', 3), ('"Single");\n', 3), ('height="348"', 3), ('get}\n', 3), ('CQRS', 3), ('Flowable.just(o).count().toFlowable().onTerminateDetach().subscribe(ts);\n\n', 3), ('EnumIvoryTower', 3), ('(res', 3), ('Flowable.error(exception);\n', 3), ('javax.persistence.GeneratedValue;\nimport', 3), ('dependencies', 3), ('ConcatWithSubscriber<T>\n', 3), ('getCount()', 3), ('Serializable>', 3), ('MongoConnectionPropertiesLoader.load();\n', 3), ('org.elasticsearch.common.Strings;\nimport', 3), ('associated\n', 3), ('this(source,', 3), ('ParallelFlowable#sequential()\n', 3), ('curr', 3), ('queryParam;\n', 3), ('listener', 3), ('idea', 3), ('SingleObserver},', 3), ('ElasticsearchParseException("could', 3), ('Certificate', 3), ('((Callable<T>)source).call();\n', 3), ('Reset', 3), ('input.\n', 3), ('IllegalStateException("Scalar', 3), ('Worker()', 3), ('nullResource()', 3), ('this.main', 3), ('com.iluwatar.servicelayer.spell.SpellDao;\nimport', 3), ('SimpleObjectsTearDown();\n', 3), ('.throttleFirst(1,', 3), ('luck;\n', 3), ('systems', 3), ('iterate', 3), ('sa.requested);\n', 3), ('Transforms', 3), ('Validates', 3), ('Function<Maybe,', 3), ('truststore\n', 3), ('reflection.', 3), ('MulticastProcessor.create();\n', 3), ('port:', 3), ('ds.onComplete();\n', 3), ('urls', 3), ('assertEquals(Integer.valueOf(10),', 3), ('times(1)).onNext(3);\n', 3), ('quits\n', 3), ('JoinSubscription<TLeft,', 3), ('Maybe.zip(Maybe.just(1),', 3), ('nullArgument()', 3), ('slight', 3), ('LinkedList<>();\n', 3), ('ResponseOrException<R>', 3), ('leaking', 3), ('java.lang.reflect.Field;\nimport', 3), ('setId(Long', 3), ('Map<MethodKey,', 3), ("other's", 3), ('SingleObserver#onSuccess(Object)}.\n', 3), ('happened', 3), ('!isEmpty())', 3), ('doubleSubscribe()', 3), ('String)}\n', 3), ("Letter('e'))));\n", 3), ('HttpHandler', 3), ('CustomerResource(customers);\n\n', 3), ('assertEquals(NumberCrunchingTask.CRUNCHED_NUMBER,', 3), ('Mute.loggedMute(()', 3), ('(object', 3), ('source.onComplete();\n\n', 3), ('mock(Subscription.class);\n\n', 3), ('UncheckedIOException(e);\n', 3), ('dispatcher;\n', 3), ('Flowable/Observable', 3), ('LOGGER.info("");\n', 3), ('removal', 3), ('List<DataType>', 3), ('onDispose;\n\n', 3), ('pool.\n', 3), ('case,\n', 3), ('GC");\n', 3), ('java.util.function.Consumer;\n\nimport', 3), ('mock(AsyncTask.class);\n', 3), ('RequestType', 3), ('atomicLong.get());\n', 3), ('disposeBoundary()', 3), ('CancellableDisposable(c);\n\n', 3), ('whitelistMethods', 3), ('Transfer', 3), ('incur', 3), ('s.nextInt();\n', 3), ('offer', 3), ('Guice.createInjector(new', 3), ('errorHandler.call(e);\n//', 3), ('Downstream', 3), ('ErrorMode.BOUNDARY)', 3), ('tc.complete);\n', 3), ('therefore', 3), ('Data-Bus,', 3), ('chosen', 3), ('functionVersion;\n', 3), ('built-in', 3), ('(QueueSubscription<T>)', 3), ('BufferCloseObserver<T,', 3), ('trustStoreAlgorithm', 3), ('modify', 3), ('MESSAGE', 3), ('steps', 3), ('Completable.complete().toObservable();\n', 3), ('givenNumbers)', 3), ('GeneratorDisposable<T,', 3), ('com.iluwatar.front.controller.utils.InMemoryAppender;\nimport', 3), ('concat(Flowable.fromArray(source1,', 3), ('app.stop();\n', 3), ('.doOnLifecycle(new', 3), ('e.setCancellable(new', 3), ('observer1', 3), ('onErrorCleansUp()', 3), ('StandardCharsets.UTF_8)))', 3), ('MaybeToPublisher.instance(),', 3), ('writer.writeDebugInfo(location);\n\n', 3), ('actual.onNext(value);\n\n', 3), ('BackpressureHelper.addCap(1,', 3), ('meet', 3), ('inner\n', 3), ('cancelAll();\n\n', 3), ('Paths.get(dir);\n', 3), ('source.onNext(5);\n', 3), ('awsRequestId;\n', 3), ('button.\n', 3), ('bounded.onNext(1);\n', 3), ('(Class<?>', 3), ('non-completed', 3), ('tenants', 3), ('id=%d', 3), ('MaybeObserver,', 3), ('Consume', 3), ('memberSupplier)', 3), ('computational', 3), ('point.', 3), ('MaybeObserver#onComplete', 3), ('Flowable.fromIterable(iterate(elements)))\n', 3), ('subscribe(onSuccess,', 3), ('Input', 3), ('m.onTerminateDetach();\n', 3), ('javaRegex', 3), ('PrinterController(new', 3), ('validate\n', 3), ('artist', 3), ('keeping', 3), ('(m.arguments.size()', 3), ('Single.merge(Single.just(1),', 3), ('fail("should', 3), ('doOnEach', 3), ('safely', 3), ('t.sendOnError(new', 3), ('.assertOf(SubscriberFusion.<Integer>assertNotFuseable())\n', 3), ('0))', 3), ('PerfSubscriber(bh));\n', 3), ('ElementAtSubscriber<T>(s,', 3), ('height="190"', 3), ('this.run', 3), ('actual.onSubscribe(EmptyDisposable.INSTANCE);\n', 3), ('troll', 3), ('ParallelPeek<T>', 3), ('threads.\n', 3), ('-5402190102429853762L;\n\n', 3), ('2.1.5', 3), ('sources[i];\n\n', 3), ('ConcatMapDelayed<T,', 3), ('assertFalse(task.isDisposed());\n\n', 3), ('DeprecationIssue>>', 3), ('reactor.', 3), ('bh,', 3), ('io.reactivex.internal.queue.*;\nimport', 3), ('counter.incrementAndGet();\n', 3), ('biConsumerThrows(e1))', 3), ('aware', 3), ('flatMap(Function<?', 3), ('week', 3), ('ts1', 3), ('Completable.mergeArrayDelayError(Completable.complete(),', 3), ('exception;\n\n', 3), ('o.subscribe(this);\n', 3), ('free.\n', 3), ('StatusMember(1);\n', 3), ('AtomicReference<Future<?>>', 3), ('MongoClient(System.getProperty("mongo-host"),\n', 3), ('complete(v);\n', 3), ('a.onNext(w);\n\n', 3), ('NOTES:<br>\n', 3), ('packet.\n', 3), ('copy;\n', 3), ('address\n', 3), ('logStreamName;\n', 3), ('FULL!', 3), ('DisposableHelper.dispose(d);\n', 3), ('CompletableObserver}s', 3), ('.assertFailureAndMessage(NullPointerException.class,', 3), ('io.reactivex.subjects.MaybeSubject;\nimport', 3), ('TaskGenerator(msgQueue,', 3), ('toSingle(Flowable.<T>fromFuture(future,', 3), ('provider', 3), ('1024.0);\n\n', 3), ('prepared', 3), ('org.elasticsearch.painless;\n\nimport', 3), ('Function<Object,', 3), ('drainNormal();\n', 3), ('attempts\n', 3), ('URLs\n', 3), ('test(Object', 3), ('Publisher<List<Integer>>', 3), ('wireTransfers;\n\n', 3), ('assertTrue(run.isDisposed());\n\n', 3), ('Object[n];\n', 3), ('getLastName()', 3), ('Future<T>', 3), ('Publisher<String>()', 3), ('@MemberOrder(sequence', 3), ('(ownerStruct', 3), ('ProtectionDomain(null,', 3), ('w2', 3), ('(Date', 3), ('assertEquals("onError', 3), ('ownerStructName,', 3), ('t.start();\n', 3), ('detect', 3), ('isEqual', 3), ('other.getClass().getSimpleName();\n\n', 2), ('(ts.errorCount()', 2), ('character.getAbilities();\n', 2), ('drainRequestWhenLimitReached()', 2), ('singles', 2), ('p.subscribe(dis);\n', 2), ('LOGGER.info("testAppUsingThreadPoolDispatcher', 2), ('windows', 2), ("Publisher's", 2), ('buf);\n', 2), ('io.reactivex.internal.fuseable.QueueDisposable;\nimport', 2), ('when(func.call()).thenReturn(new', 2), ('useMongoDB', 2), ('MessageCollectorMember("collector");\n', 2), ('possible")\n', 2), ('"@SchedulerSupport",', 2), ('MaybeNever', 2), ('AtomicReference<SwitchMapInnerObserver>', 2), ('memberSupplier.get();\n\n', 2), ('opens."));\n', 2), ('flatMapCompletable', 2), ('strategy;\n\n', 2), ('s.onNext("two");\n', 2), ('Instead,', 2), ('Nullable', 2), ('super.clear();\n', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/switchifempty.m.png"', 2), ('lock.readLock(),', 2), ('leave(int', 2), ('LotteryConstants.PRIZE_AMOUNT);\n', 2), ('error/completion', 2), ('getWhen()', 2), ('FluentIterable}', 2), ('create}', 2), ('Observable.just(null,', 2), ('ara.length();\n', 2), ('"three");', 2), ('resumeFunction,', 2), ('Completable[]', 2), ('<Movie>\n', 2), ('com.iluwatar.observer.WeatherType;\n\nimport', 2), ('hasValue;\n\n', 2), ('Singleton.</p>\n', 2), ('ignoring\n', 2), ('waiting.set(1);\n', 2), ('ambIterableOrder()', 2), ('Function9<?', 2), ('dates\n', 2), ('rain."});\n', 2), ('t\n', 2), ('EmptyDisposable.error(t,', 2), ('Offer', 2), ('not!"\n', 2), ('start.await();\n', 2), ('ERROR_FILE', 2), ('Throwable();\n', 2), ('futureResult1', 2), ('clickable', 2), ('readLock', 2), ('getNonExistingCustomerId()', 2), ('innerErrorDelayError()', 2), ('fastPathEmitMax(b,', 2), ('w.subscribe(to1);\n', 2), ('upstream;\n', 2), ('com.iluwatar.reactor.framework.ChannelHandler;\nimport', 2), ('Joshua', 2), ('5629876084736248016L;\n\n', 2), ('map.put("name",', 2), ('extend', 2), ('AsyncResult<String>', 2), ('keyPair,', 2), ('reason,', 2), ('"onAfterNext', 2), ('OliphauntPool();\n', 2), ('inOrder.verify(observer).onNext(3);\n', 2), ('channels.\n', 2), ('email);\n', 2), ('Function<EventObserver,', 2), ('SingleDelayWithObservable<T,', 2), ('bufs.put(idx,', 2), ('TestHelper.checkEnum', 2), ('parent.error(this,', 2), ('boundarySupplier;\n\n', 2), ('buf.take();\n', 2), ('zipper);\n', 2), ('constructs', 2), ('of(final', 2), ('lines,', 2), ('org.junit.jupiter.api.Assertions.fail;\nimport', 2), ('ex,\n', 2), ('support,', 2), ('localNode', 2), ('PersonSpecifications.NameEqualSpec("Terry"));\n', 2), ('Set<Spell>', 2), ('javax.persistence.OneToMany;\nimport', 2), ('java.time.ZonedDateTime;\nimport', 2), ('Function6<Integer,', 2), ('OnNext', 2), ('skipped', 2), ('AtomicAction', 2), ('observableBlockingFirst()', 2), ('NullPointerException("Null', 2), ('headers.put("Content-Type",', 2), ('SingleObserver#onError}', 2), ('updateThread', 2), ('values[d][i]', 2), ('sumErr).map(new', 2), ('ResponseOrException<>(new', 2), ('TaskGenerator', 2), ('<p>', 2), ('AttributeMap<Expression>', 2), ('ObservableToList(ObservableSource<T>', 2), ('Flowable.fromArray(new', 2), ('assertTrue(onError.get()', 2), ('2L);\n\n', 2), ('(struct', 2), ('observer.onNext(badValue);\n', 2), ('syncIterableHidden()', 2), ('wait\n', 2), ('"false":\n', 2), ('assertEquals(expectedDateValues,', 2), ('observer.waiting', 2), ('augmented\n', 2), ('DAO),', 2), ('Service\n', 2), ('name(String', 2), ('accepted:\n', 2), ('o.safeSubscribe(observer);\n\n', 2), ('DistinctObserver<T,', 2), ('elementAtOrErrorOneElement()', 2), ('")";\n', 2), ('IllegalArgumentException("User', 2), ('rightEnd,', 2), ('org.elasticsearch.common.component.AbstractComponent;\nimport', 2), ('drainAndCancel();\n', 2), ('@}Retention(RUNTIME)\n', 2), ('Class<?>[1', 2), ('CompletableSource\n', 2), ('User("Marti",', 2), ('SpscArrayQueue<U>(bufferSize);\n', 2), ('PublishDisposable[n', 2), ('deletionShouldBeFailureAndNotAffectExistingCustomers()', 2), ('Flowable.merge(os).subscribe(o);\n', 2), ('(hasNext)', 2), ('dao.add(nonExistingCustomer);\n', 2), ('consumed++;\n\n', 2), ('output.accept("examining', 2), ('Schema', 2), ('org.elasticsearch.xpack.sql.type;\n\nimport', 2), ('list.addAll(left);\n', 2), ('MaybeObserver}\n', 2), ('policy;\n', 2), ('start.countDown();\n', 2), ('rights.clear();\n\n', 2), ('capacityHint);\n\n', 2), ('subscribeActual()', 2), ('updating/replacing', 2), ('SubscriptionHelper.isCancelled(this.get());\n', 2), ('Signature.getInstance("SHA512withRSA");\n', 2), ('Collections.synchronizedSet(new', 2), ('stateSupplier.call();\n', 2), ('(integer', 2), ('(realTime)', 2), ('through\n', 2), ('FatalCliException("Could', 2), ('assertTrue(d.isCancelled());\n\n', 2), ('action;\n', 2), ('Class<T>', 2), ('io.reactivex.subscribers.DisposableSubscriber;\n\n/**\n', 2), ('getVersion()', 2), ('timeout)', 2), ('unsafeSubscribe', 2), ('(Long)q.peek();\n\n', 2), ('Collections.singletonMap(1,', 2), ('maybe\n', 2), ('groups.values())', 2), ('"Hanks",', 2), ('operator.dispose();\n\n', 2), ('IllegalStateException("onNext', 2), ('addCap(r,', 2), ('withPublisherDispose()', 2), ('org.elasticsearch.common.inject.TypeLiteral;\n\nimport', 2), ('com.iluwatar.servicelayer.wizard;\n\nimport', 2), ("Letter('t'),", 2), ('https://github.com/ReactiveX/RxJava/issues/2998\n', 2), ('ObjectHelper.requireNonNull(onAfterSuccess,', 2), ('o.observeOn(Schedulers.newThread())\n', 2), ('("2".equals(cmd))', 2), ('SingleSource},', 2), ('(cert', 2), ('filterManager;\n', 2), ('AccountAggregate.resetState();\n\n', 2), ('BusinessException', 2), ('module,', 2), ('512;', 2), ('MaybeConverter<T,', 2), ('iterable.', 2), ('Observable.just(1).doOnSubscribe(new', 2), ('Observable.error(error);\n\n', 2), ('this.grade', 2), ('testFolder', 2), ('verify(run,', 2), ('underaged")\n', 2), ('clients.\n', 2), ('ObjectHelper.requireNonNull(debounceSelector.apply(t),', 2), ('majorDeviceNumber;\n', 2), ('org.elasticsearch.plugins.ActionPlugin;\nimport', 2), ('ConcatMapSingleMainObserver<Integer,', 2), ('consumerIndex;\n\n', 2), ('customers.\n', 2), ('ref;\n', 2), ('testWithMultipleStaggeredSubscribers()', 2), ('UnicastProcessor.create();\n\n', 2), ('assertTrue(cs.getThrowable().toString(),', 2), ('Users', 2), ('single\n', 2), ('AllObserver<T>', 2), ('constructor;\n', 2), ('serverPort;\n', 2), ('ConcatMapSingleObserver<R>(this);\n', 2), ('this.ws', 2), ('attachment)', 2), ('MaybeSource<?>', 2), ('HasType', 2), ('actions.stream()\n', 2), ('XContentFactory.contentBuilder(XContentType.JSON);\n', 2), ('TimeoutException());\n\n', 2), ('(groupCount.decrementAndGet()', 2), ('AllObserver<T>(t,', 2), ('painlessParameterClass', 2), ('javaMethodHandle));\n', 2), ('ExceptionHelper.wrapOrThrow(NotificationLite.getError(buf));\n', 2), ('AtomicLong>', 2), ('services\n\n', 2), ('defined\n', 2), ('lists.size());\n\n', 2), ('.assertValueCount(500)\n', 2), ('high', 2), ('(see', 2), ('s.onNext(randomEvent(type,', 2), ('250;\n', 2), ('JsonElement', 2), ('flowableBlockingFirst()', 2), ('TestSubscriber<Integer>(2)', 2), ('"SELECT', 2), ('last4.get(2));\n', 2), ('DisposableHelper.isDisposed(s.get());\n', 2), ('"Japanese"));\n', 2), ('onComplete/onError', 2), ('ReplayProcessor.create();\n', 2), ('#request(long)}\n', 2), ('retrieves', 2), ('changes,', 2), ('{\\n"\n', 2), ('-\n', 2), ('NoSuchElementException}.\n', 2), ('io.reactivex.disposables.*;\n\npublic', 2), ('selected', 2), ('phone', 2), ('highly', 2), ('ex,', 2), ('driver",', 2), ('FlushAcknowledgement', 2), ('finishes\n', 2), ('TestHelper.checkDisposed(PublishSubject.create().elementAt(0,', 2), ('!cancelled\n', 2), ('onErrorReturnItem}', 2), ('demo', 2), ('testIssue1677()', 2), ('[{}]",\n', 2), ('this.key', 2), ('DisposableContainer', 2), ('initialized;\n', 2), ('NormalizerProcessFactory', 2), ('<code>CakeLayerInfo</code>)', 2), ('EmptySubscription.complete(actual);\n', 2), ('indexOrAlias', 2), ('java.security.Signature;\nimport', 2), ('railReduced', 2), ('org.mockito.Mockito;\nimport', 2), ('normalEmpty()', 2), ('args;\n', 2), ('interestedOps)', 2), ('.concatMapCompletable(completableError())\n', 2), ('next\n', 2), ('ConnectableFlowable.', 2), ('exchange.getResponseHeaders();\n', 2), ('testDateValues()', 2), ('AtomicReference<ScheduledExecutorService>', 2), ('other.subscribe(s);\n', 2), ('validating', 2), ('writeFile(FileWriter', 2), ('v);\n', 2), ('hang', 2), ('XPackBuild', 2), ('Iterator<T>,', 2), ('IndexPrivileges', 2), ('(cache.contains(userId))', 2), ('calories);\n', 2), ('careful', 2), ('newLatchedObserver()', 2), ('a[0].subscribe(new', 2), ('collection.add(ObjectHelper.requireNonNull(keySelector.apply(v),', 2), ('"Outer', 2), ('5),\n', 2), ('writeLock,', 2), ('Observable.just(v', 2), ('Flowable<Throwable>,', 2), ('printThisBefore()', 2), ('cast(final', 2), ('RuntimeException("error"))\n', 2), ('qd.poll();\n', 2), ('ObjectHelper.requireNonNull(other.call(),', 2), ('disposeState)', 2), ('<b>synchronous', 2), ('rc', 2), ('AnySubscriber<T>(s,', 2), ('organization', 2), ('arguments.size()];\n', 2), ('consumerIndex.get();\n', 2), ('Launchers.errPrintln(message);\n', 2), ('fetch()', 2), ('holder.getHeavy();\n', 2), ('actions.\n', 2), ('bs1));\n\n', 2), ('deep-copy,', 2), ('Amb(once,', 2), ('Priority', 2), ('PEM', 2), ('1");\n//\n//', 2), ('handles.\n', 2), ('And', 2), ('cb.await();\n', 2), ('Single.just(1).doOnSubscribe(new', 2), ('@Inject}', 2), ('Drop', 2), ('Iterable<U>', 2), ('game', 2), ('SerializedObserver<T>(t);\n', 2), ('promise.get();\n', 2), ('otherIterable;\n', 2), ('cachingPolicy', 2), ('certPath', 2), ('lio;\n', 2), ('counter.get()', 2), ('elements;', 2), ('interacts', 2), ('emptyOther()', 2), ('assertEquals(t1,', 2), ('Math.min(Thread.MAX_PRIORITY,\n', 2), ('rainbowFish.getAge()));\n', 2), ('sequenceEqual}', 2), ('calcElementOffset(long', 2), ('src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/publishConnect.png"', 2), ('Attribute', 2), ('"four");', 2), ('onAfterTerminate\n', 2), ('("".equals(tokens[0]))', 2), ('sum).map(new', 2), ('didn\'t.");\n\n', 2), ('this.output', 2), ('type.', 2), ('onError(t.getError());\n', 2), ('java-doc-search-simple\n', 2), ('java.awt.event.ActionEvent;\nimport', 2), ('assertEquals(integers.get(1),', 2), ('never()).run();\n', 2), ('concatEager(Iterable<?', 2), ('missedRequested,', 2), ('PublishProcessor', 2), ('Arrays.asList(peter,', 2), ('-9102637559663639004L;\n', 2), ('min,', 2), ('empty",', 2), ('rights.values())', 2), ("')'.\n", 2), ('awsRequestId', 2), ('perms', 2), ('actual.onSubscribe(s);\n', 2), ('version.\n', 2), ('(timerFired)', 2), ('SQLException("Server', 2), ('10000', 2), ('.concatMapCompletable(\n', 2), ('org.supercsv.prefs.CsvPreference;\n\nimport', 2), ('io.reactivex.schedulers.Schedulers;\n\nimport', 2), ('tickets.keySet())', 2), ('watchId,', 2), ('indicator', 2), ('(DirectoryStream<Path>', 2), ('structsMap.entrySet())', 2), ('height="400"', 2), ('TreasureChest()', 2), ('recursively', 2), ('count);\n\n', 2), ('worker2', 2), ('tye\n', 2), ('jars\n', 2), ('com.iluwatar.cqrs.commandes.CommandServiceImpl;\nimport', 2), ('indices,', 2), ('ObjectOutputStream', 2), ('DefaultSubscriber<Integer>', 2), ('mostRecent(s,', 2), ('Launchers.exit(0);\n', 2), ('SpscLinkedArrayQueue<?>', 2), ('javax.swing.JTextArea;\nimport', 2), ('"Dagger', 2), ('injector.getInstance(LotteryService.class);\n', 2), ('400\n', 2), ('classDefPassed', 2), ('zip(this,', 2), ('showMessage(String', 2), ('onNext(V', 2), ('shouldUnsubscribeFromUnderlyingSubscriptionOnDispose()', 2), ('assertEquals(TestException.class,', 2), ('semantics.\n', 2), ('Settings.Builder', 2), ('SingleFlatMapIterableFlowable<T,', 2), ('channels.add(channel);\n', 2), ('java.util.stream.StreamSupport;\n\nimport', 2), ('com.google.common.collect.Lists;\nimport', 2), ('managing', 2), ('client.admin().indices().getIndex(getIndexRequest,', 2), ('past', 2), ('boundarySupplier,', 2), ('StripBoundarySubscriber(Subscriber<?', 2), ('TimeUnit.MILLISECONDS).intValue());\n', 2), ('completed.compareAndSet(false,', 2), ('AtomicReferenceArray<Object>(n);\n', 2), ('NOTE:', 2), ('uniqueId;\n', 2), ('downstream.onError(throwable);\n', 2), ('u2', 2), ('testLastOfOneReturnsLast()', 2), ('System.out.println("t:', 2), ('ScheduledExecutorService.\n', 2), ('statement.execute(CustomerSchemaSql.CREATE_SCHEMA_SQL);\n', 2), ('newIndex)', 2), ('onFinally', 2), ('f.timeInterval();\n', 2), ('ConcatMapDelayErrorObserver<T,', 2), ('catch(UnsubscribeFailedException', 2), ('Arrays.asList(3,', 2), ('size);\n', 2), ('input.observable.flatMap(new', 2), ('BackpressureHelper.multiplyCap(2,', 2), ('eventManager', 2), ('Wizard()', 2), ("dragon's", 2), ('PEMTrustConfig', 2), ('this.maxAttempts', 2), ('height="267"', 2), ('this.initialValue', 2), ('eager\n', 2), ('this.signing', 2), ('(NotificationLite.isComplete(buf))', 2), ('countersCollectionName)', 2), ('inventory\n', 2), ('otherIterable,', 2), ('nextNotification.getError();\n', 2), ('ObjectHelper.requireNonNull(onCompleteSupplier.call(),', 2), ('"Name")', 2), ('Single.ambArray(ps1.singleOrError(),', 2), ('doAfter();\n', 2), ('trust\n', 2), ('rx2.single-priority}', 2), ('VALUE);\n', 2), ('Lock,', 2), ('max);\n', 2), ('@Ignore("Unhandled', 2), ('(BackpressureHelper.add(this,', 2), ('rowSize', 2), ('bad,', 2), ('respectibe', 2), ('javax.swing.JRootPane;\nimport', 2), ('to2.assertValues(2L,', 2), ('(number', 2), ('DisposableHelper.dispose(oo);\n', 2), ('org.hamcrest.CoreMatchers.is;\nimport', 2), ('getFileName()', 2), ('Visitor(path);\n', 2), ('disposedOnCall()', 2), ('^', 2), ('potentially', 2), ('<strong>Advanced', 2), ('(URL', 2), ('java.util.jar.JarInputStream;\nimport', 2), ('getType(painlessTypeName));\n', 2), ('.assertResult(100,', 2), ('itemTimeoutPublisher.subscribe(consumer);\n', 2), ('MoneyTransferEvent(\n', 2), ('whitelistMethod.javaMethodName,', 2), ('elapsed.\n', 2), ('-8612022020200669122L;\n\n', 2), ('(stop)', 2), ('Callable<Integer>', 2), ('finalization', 2), ('Completed', 2), ('inner);\n\n', 2), ('loggingHandler))\n', 2), ('dq.poll();\n', 2), ('"producers");\n', 2), ('customer.getLastName());\n', 2), ('this.output.close();\n', 2), ('request()}.\n', 2), ('largerJavaMajorVersionLowerBound', 2), ('parse(\n', 2), ('<p>By', 2), ('R>(source,', 2), ('NullPointerException());\n', 2), ('delay.</dd>\n', 2), ('(version', 2), ('ts.assertNoErrors();\n//', 2), ('CapturingUncaughtExceptionHandler();\n', 2), ('fieldsLength', 2), ('Subscriber<T>[]', 2), ('testInterval()', 2), ('boxFrom;\n', 2), ('staticMethods', 2), ('reuses', 2), ('queue.offer(TERMINATED);\n', 2), ('ways', 2), ('double.class;\n', 2), ('Callable<S>', 2), ('flatMapCompletable(final', 2), ('THREAD_NAME_PREFIX', 2), ('values[j]', 2), ('sendReply(channel,', 2), ('longs', 2), ('structName,', 2), ('verify\n', 2), ('TimeUnit.SECONDS).blockingLatest().iterator().hasNext();\n\n', 2), ('sound', 2), ('shouldAllowToThrowCheckedException()', 2), ('sa.update(s);\n', 2), ('@id,', 2), ("'.'", 2), ('com.iluwatar.serverless.faas;\n\nimport', 2), ('this.wireTransfers', 2), ('AtomicReference<InnerSubscriber<?,', 2), ('comparer,', 2), ('BlockingSubscriber<T>', 2), ('"lotteryDB";\n', 2), ('execTime', 2), ('Completable.mergeDelayError(Flowable.just(pp1.ignoreElements(),', 2), ('ACCOUNT_OF_DAENERYS,\n', 2), ('java.util.stream.Stream;\n\npublic', 2), ('(m.find())', 2), ('assertEquals(u1,', 2), ('MaybeObserver\n', 2), ('sequential}', 2), ('observer.onSubscribe(md);\n', 2), ('(errs.addThrowable(t))', 2), ('mock(EventObserver.class);\n\n', 2), ('example.\n', 2), ('dataSource.setURL(DB_URL);\n', 2), ('this.resource', 2), ('observer.onNext(Notification.createOnNext(1));\n', 2), ('CompletableDisposable[0];\n\n', 2), ('won\n', 2), ('ss.subscribe(this);\n', 2), ('executorService.awaitTermination(5,', 2), ('allOdd', 2), ('filterResults(indexWildcard,', 2), ('testJustTwoEmissionsObservableThrowsError()', 2), ('assertTrue(rco.errors.isEmpty());\n\n', 2), ('source.concatMapCompletable(new', 2), ('pp1.onNext(1);\n', 2), ('<code>CakeToppingInfo</code>,', 2), ('this.strategy', 2), ('SkipUntilMainSubscriber.this,', 2), ('FlowableSubscriber<Integer>()', 2), ('CakeLayerInfo("banana",', 2), ('controls', 2), ('semantics', 2), ('replace\n', 2), ('non-overlappingly', 2), ('objOut', 2), ('inMaybe;\n\n', 2), ('state[1]);\n\n', 2), ('getTestedObject();\n\n', 2), ('countZero()', 2), ('ArrayList<List<Integer>>', 2), ('"Hideaki', 2), ('conn.connected', 2), ('unit.convert(drift,', 2), ('(compareAndSet(r,', 2), ('stream,', 2), ('drain-loop).</li>\n', 2), ('jar:', 2), ('fileLastModified)', 2), ('(!unbounded', 2), ('defer}', 2), ('<p>Members', 2), ('innerError(int', 2), ('SwitchMapCompletableObserver(CompletableObserver', 2), ('disposeOnNextAfterFirst()', 2), ('testEquals()', 2), ('innerObserver.onSubscribe(Disposables.empty());\n', 2), ('handler");\n', 2), ('System.out.println(Thread.currentThread()', 2), ('field/parameter/variable/return', 2), ('(Potion', 2), ('ps.concatMapMaybeDelayError(Functions.justFunction(ms),', 2), ('replays', 2), ('classes[i]);\n', 2), ('MapNotificationSubscriber<T,', 2), ('Flowable<Object>,', 2), ('testCancelledTaskRetention()', 2), ('(relay)', 2), ('verify(future,', 2), ('peaceful.",', 2), ('SourceObserver<?,', 2), ('badValue', 2), ('dark', 2), ('com.iluwatar.servicelayer.common.BaseEntity;\nimport', 2), ('reportError(Subscriber<?>[]', 2), ('read-through', 2), ('iteratorNotification.isOnNext();\n', 2), ('groups.clear();\n', 2), ('------------------------------------------------------------------\n', 2), ('org.elasticsearch.watcher.ResourceWatcherService;\nimport', 2), ('expires\n', 2), ('Maybe.just(1).delay(100,', 2), ('DebounceEmitter(T', 2), ('System.out.println("Wait', 2), ('TimeoutException}.\n', 2), ('DisposableHelper.isDisposed(mainDisposable.get());\n', 2), ('p.subscribe(cl);\n', 2), ('buildDynamicNodes()', 2), ("'A", 2), ('filters.add(new', 2), ('-4875965440900746268L;\n\n', 2), ('"application/json");\n\n', 2), ('newName.append(name.substring(4));\n', 2), ('io.reactivex.internal.observers.ResumeSingleObserver;\nimport', 2), ('accountNo,', 2), ('toFlowable}', 2), ('domainapp.dom.modules.simple.SimpleObjects;\nimport', 2), ('1000', 2), ('merge(this,', 2), ('.just(Boolean.TRUE,', 2), ('WeakScalarSubscription<R>(vr,', 2), ('singletons\n', 2), ('operator;\n', 2), ('emitter.onSuccess(e);\n', 2), ('Functions.EMPTY_ACTION)\n', 2), ('Iterator<Completable>', 2), ('injector;\n', 2), ('RxJavaSingleExecutionHook()', 2), ('us\n', 2), ('AssertionError("Outer', 2), ('red', 2), ('periodicWrapper;\n', 2), ('stream\n', 2), ('Exposes', 2), ('exclude', 2), ('ObjectHelper.verifyPositive(capacityHint,', 2), ('cache}', 2), ('FuseToObservable<Boolean>', 2), ('this.cycles', 2), ('HolderThreadSafe', 2), ('io.reactivex.internal.subscribers;\n\n/**\n', 2), ('AtomicReference<SwitchMapSingleObserver<R>>', 2), ('latest;\n\n', 2), ('FlatMapCompletableMainObserver<T>', 2), ('10.132.0.1,', 2), ('statement.executeUpdate()', 2), ('Cameron",', 2), ('inner.getAndSet((SwitchMapSingleObserver)INNER_DISPOSED);\n', 2), ('V1\n', 2), ('analyze(Locals', 2), ('units', 2), ('RefCount</a>\n', 2), ('Function5<Integer,', 2), ('(!(o', 2), ('sources[0].subscribe(s);\n', 2), ('directory:', 2), ('BlockingObservableIterator<Integer>(128);\n\n', 2), ('subscribers.getAndSet(TERMINATED);\n', 2), ('validate(Subscription', 2), ('Function<ConnectableFlowable,', 2), ('hold\n', 2), ('RxJava\n', 2), ('WeaponFactory', 2), ('setup();\n', 2), ('Files.readAllLines(path);\n', 2), ('Builder(List<T>', 2), ('FlowableProcessor<String>', 2), ('testOnNextError()', 2), ('(similar', 2), ('concatReportsDisposedOnError()', 2), ('InnerQueuedSubscriberSupport<T>', 2), ('0)));\n', 2), ('(databaseReaders', 2), ('B>>();\n', 2), ('Maybe[3];\n', 2), ('this.ops', 2), ('NullPointerException("next', 2), ('consistency', 2), ('Functions.emptyConsumer());\n\n', 2), ('timeout(3000).times(1)).call();\n\n', 2), ('1024;', 2), ('.window(50)\n', 2), ('ConcatMapCompletableObserver<?>', 2), ('MaybeFromFuture<T>(future,', 2), ('implementations.</p>\n', 2), ('onDispose));\n', 2), ('LoadLoad\n', 2), ('co)', 2), ('MostRecentObserver<T>', 2), ('back-end.\n', 2), ('innerErrorAfterTermination()', 2), ('a.onNext(u);\n', 2), ('map.put("weightTons",', 2), ('bound.getPort()));\n', 2), ('assertEquals(22,', 2), ('(mongoClient', 2), ('timeoutIndicator)', 2), ('.assertValueCount(1)\n', 2), ('ver', 2), ('numbers1', 2), ('UserAccount("003",', 2), ('DisposableHelper.dispose(timer);\n', 2), ('k++)', 2), ('java.util.concurrent.Semaphore;\nimport', 2), ('dragonSlayer', 2), ('10).hide()\n', 2), ('com.iluwatar.aggregator.microservices;\n\nimport', 2), ('TemporaryFolder', 2), ('seems', 2), ('tasks.\n', 2), ('Those', 2), ('this.mainDisposable', 2), ('T>\n', 2), ('numbers3', 2), ('b.indexOf("/**",', 2), ('com.iluwatar.databus.Member;\nimport', 2), ('overlapping', 2), ('exception");\n\n', 2), ('dis.emit();\n', 2), ('parent.tryEmit(t,', 2), ('date;\n\n', 2), ('Set<Predicate<String>>', 2), ('.createSQLQuery("SELECT', 2), ('writable.\n', 2), ('remove(ps);\n', 2), ('countBefore', 2), ('pp.doOnCancel(new', 2), ('Item()))', 2), ('Iterable<Completable>()', 2), ('carProperties.put(HasPrice.PROPERTY,', 2), ("'/');\n\n", 2), ('subscribeActual(@NonNull', 2), ('onCompleteNoSubscription();\n', 2), ('TimerSubscriber', 2), ('expectedDateValues', 2), ('required");\n', 2), ('(ZipSubscriber<T,', 2), ('level.', 2), ('Observable.fromArray(Observable.just(1),', 2), ('this.samlObject', 2), ('AsyncSubscription[]', 2), ('directly\n', 2), ('retrievedMsg', 2), ('OutOfMemoryError}.', 2), ('responseHeaders', 2), ('Executors.newFixedThreadPool(3);\n\n', 2), ('collectionSupplier));\n', 2), ('java.util.List;\n\n/**', 2), ('hasNativeController);\n', 2), ('QueueSubscription<R>', 2), ('AllSubscriber<T>(s,', 2), ('res.getDateList().size()', 2), ('flowable.blockingFirst();\n', 2), ('testWindow()', 2), ('org.reactivestreams.Subscriber;\nimport', 2), ('SubscriptionHelper.replace(s,', 2), ('f.get().get(2));\n', 2), ('TimeUnit.SECONDS).blockingGet();\n\n', 2), ('assertSame(subscription,', 2), ('TestExecutor();\n', 2), ('2).flatMap(new', 2), ('streamed\n', 2), ('UnicastSubject.create(capacityHint,', 2), ('resembles', 2), ('crashOnHasNext,', 2), ('downstream)', 2), ('page;\n\n\n', 2), ('m.javadoc.indexOf("Observable",', 2), ('WriteLock', 2), ('apply(ParallelFlowable', 2), ('moved', 2), ('sourceCode.indexOf(annotation,', 2), ('NextIterator<T>(source,', 2), ('STUB\n', 2), ('dot', 2), ('geoip', 2), ('.startWithArray("zero").toList().blockingGet();\n\n', 2), ('ts.assertResult();\n', 2), ('Casts', 2), ('spliterator()', 2), ('cache.clear();\n', 2), ('InnerCompletableObserver', 2), ('numbers?");\n', 2), ('.retry(new', 2), ('target;\n\n', 2), ('textIndex', 2), ('filter}', 2), ('"resumeFunction', 2), ('org.hamcrest.Matchers.containsInAnyOrder;\n\npublic', 2), ('<code>CakeBakingService</code>', 2), ('nonEmpty)', 2), ('fulfillmentAction', 2), ('checkSource(Observable.class.getSimpleName(),', 2), ('only:</strong>', 2), ('MqPublishPoint', 2), ('com.iluwatar.hexagonal.eventlog.LotteryEventLog;\n\nimport', 2), ('uses.\n', 2), ('next();\n', 2), ('chained\n', 2), ('when(spellbook.getWizards()).thenReturn(wizards);\n\n', 2), ('testDoOnUnSubscribeWorksWithRefCount()', 2), ('LOGGER.info("Program', 2), ('testFailure()', 2), ('blocker', 2), ('10));\n', 2), ('largerJavaMajorVersion', 2), ('smallerJavaMajorVersion,\n', 2), ('count.set(0);\n', 2), ('forEachWile()', 2), ('exposing', 2), ('IDEs', 2), ('userAccount.getUserId()).append("userName",\n', 2), ('allergic', 2), ('isTerminated()', 2), ('RxJavaPlugins.initIoScheduler(c));\n', 2), ('fusing', 2), ('casual', 2), ('thread,\n', 2), ('key")))', 2), ('"Doe",', 2), ('Assert.assertEquals(NITERS,', 2), ('first()', 2), ('assertFalse(dao.getById(nonExistingId).isPresent());\n', 2), ('tempIdx', 2), ('.blockingSubscribe(Functions.emptyConsumer());\n', 2), ('cakeBakingService.saveNewTopping(new', 2), ('apply(ConnectableFlowable', 2), ('getAndSet(Long.MAX_VALUE);\n', 2), ('this.stop', 2), ('isEmpty/clear', 2), ('DefaultJDKTrustConfig', 2), ('defer', 2), ('toObservable}', 2), ('java.util.Stack;\n\n/**\n', 2), ('actual.onNext(c);\n\n', 2), ('BlockingObservable.\n', 2), ('executor.schedule((Callable<Object>)sr,', 2), ('concat,', 2), ('trustStoreType;\n', 2), ('toRequest', 2), ('TemporalAccessor', 2), ('org.elasticsearch.core.internal.io.Streams;\n\nimport', 2), ("')'", 2), ('nextFunction)', 2), ('MessageData', 2), ('concatArray}', 2), ('Throwable)}', 2), ('fits\n', 2), ('concat(this,', 2), ('cause;\n', 2), ('railSorted', 2), ('assertEquals(checkResult.getPrizeAmount(),', 2), ('ServiceExecutor', 2), ('Matcher<String>', 2), ('io.reactivex.internal.operators.maybe.*;\nimport', 2), ('RuntimeException(bogus);\n', 2), ('MappingMetaData>', 2), ('whitelistConstructor.painlessParameterTypeNames,', 2), ('timestamp', 2), ('(buf', 2), ('too\n', 2), ('resultSet)', 2), ('"Could', 2), ('org.apache.isis.core.specsupport.specs.CukeGlueAbstract;\n\nimport', 2), ('.assertResult(-1,', 2), ('fish.getAge());\n', 2), ('org.junit.jupiter.params.provider.MethodSource;\nimport', 2), ('innerError(ex);\n', 2), ('mp.onError(new', 2), ('timeout(timeout,', 2), ('ignoreReferralErrors)', 2), ('java.util.function.Consumer;\n\n/**\n', 2), ('often', 2), ('onNext(CompletableSource', 2), ('mock(BallItem.class);\n', 2), ('row.\n', 2), ('assertTrue(DisposableHelper.DISPOSED.isDisposed());\n', 2), ('(boundary.compareAndSet(null,', 2), ('Precomputes', 2), ('javaName;\n', 2), ('task.setFirst(f1);\n\n', 2), ('org.elasticsearch.common.bytes.BytesReference;\nimport', 2), ('central', 2), ('f.mergeWith(Single.just(1));\n', 2), ('fusedSync()', 2), ('.validate(User::getEmail,', 2), ('Selects', 2), ('assertTrue(qd.isEmpty());\n', 2), ('observer.onNext(Notification.createOnComplete());\n', 2), ('comparer)', 2), ('RxJavaPlugins.getInstance().registerCompletableExecutionHook(new', 2), ('this.inner;\n\n', 2), ('"\'', 2), ('2).takeUntil(new', 2), ('only,', 2), ('e.getObjectToExplain());\n', 2), ('topping2', 2), ('this.firstTimeoutIndicator', 2), ('signing;\n', 2), ('"defaultValue', 2), ('assertEquals(singletonList("jumped', 2), ('their\n', 2), ('org.elasticsearch.common.settings.Setting;\n\nimport', 2), ('Movie()\n', 2), ('AsyncDisposable[0];\n\n', 2), ('Assert.fail();\n//', 2), ('TreasureChest())', 2), ('create();\n', 2), ('Single>()', 2), ('OnErrorNextObserver<T>', 2), ('Video(1,', 2), ('Consumer<List<Object>>()', 2), ('(sp', 2), ('Combines', 2), ('boundaryObserver;\n\n', 2), ('cluster,', 2), ('ConnectableObservable.', 2), ('height="510"', 2), ('SingleElementSubscriber<T>(s,', 2), ('expectedLayers.addAll(initialLayers);\n', 2), ('(logStreamName', 2), ('albumTitle', 2), ('downstream.onSuccess(str);\n', 2), ('parent\n', 2), ('boundarySubscriber;\n\n', 2), ('Normally', 2), ('io.reactivex.internal.subscribers.BasicFuseableSubscriber;\nimport', 2), ('assertable\n', 2), ('this.publisher', 2), ('child.clazz', 2), ('covariant', 2), ('cnt;\n', 2), ('flattenAsObservable(final', 2), ('Action.values())', 2), ('statement.setString(2,', 2), ('jobs.\n', 2), ('#"', 2), ('io.reactivex.functions.Function;\n\n/**\n', 2), ('Arrays.fill(a,', 2), ('Functions.justFunction(Maybe.just(1)),', 2), ('concat(Iterable<?', 2), ('org.hamcrest.Matchers.not;\n\npublic', 2), ('toSortedList(@NonNull', 2), ('assertEquals(terry,', 2), ('Scheduler()', 2), ('upstreamCount.incrementAndGet();\n', 2), ('HashSet<String>());\n\n', 2), ('asmMethod,', 2), ('nullThrowable()', 2), ('source.subscribe(it);\n', 2), ('costly', 2), ('TestException())),', 2), ('PublishSubject', 2), ('com.iluwatar.hexagonal.test.LotteryTestUtils;\nimport', 2), ('onErrorThrows2()', 2), ('R>(t,', 2), ('assertEquals(47,', 2), ('delete(E', 2), ('Instance', 2), ('getConnection()', 2), ('Snow"));\n\n', 2), ('6));\n', 2), ('getSingleton()', 2), ('ms.onError(ex2);\n', 2), ('whitelistMethods,', 2), ('set!"));\n', 2), ('SubscriberFusion.newTest(QueueFuseable.ANY);\n\n', 2), ('ConcatMapSingleObserver<R>', 2), ('reportDoubleSubscription(observer);\n', 2), ('(!DEMO_MODE_USING_CREDENTIALS_AS_QUERYARGS)', 2), ('boundaryError(Disposable', 2), ('*/\n\n', 2), ('painlessMethod.arguments.equals(painlessParametersTypes))', 2), ('ScalarXMapObservable<T,', 2), ('innerScheduler', 2), ('FlushAcknowledgementHolder(flushId));\n', 2), ('merge()}', 2), ('streams', 2), ('AsyncDisposable[n', 2), ("action's", 2), ('includes', 2), ('lo.latch.await();\n', 2), ('assertEquals("doc', 2), ('isDisposed}', 2), ('version.add(Integer.valueOf(component));\n', 2), ('transformer)', 2), ('SingleOnSubscribe<T>', 2), ('innerNext(R', 2), ('((InjectorImpl)', 2), ('update\n', 2), ('AtomicReference<Future<?>>();\n', 2), ('t.sendOnNext("two");\n\n', 2), ('createCompletable().subscribe(ts);\n//\n//', 2), ('s.onSubscribe(sd);\n\n', 2), ('map(Functions.castFunction(clazz));\n', 2), ('Structural', 2), ('<pre><code>', 2), ('#serialize()}', 2), ('customerId;\n', 2), ('StripBoundarySubscriber<T>', 2), ('(resources.add(cl))', 2), ('setting.', 2), ('(BigInteger)', 2), ('calm', 2), ('Consumes', 2), ('to.assertError(TestException.class);\n', 2), ('items(T...', 2), ('observer.assertNoValues();\n\n', 2), ('(entry.endsWith(".class"))', 2), ('.assertResult(10);\n\n', 2), ('sref.get().onComplete();\n', 2), ('ranging', 2), ('testSameSourceMultipleIterators()', 2), ('actual.onSuccess(u);\n', 2), ('Generics', 2), ('records.\n', 2), ('javax.sound.sampled.UnsupportedAudioFileException;\n\n/**\n', 2), ('node;\n', 2), ('verify(observer).onError(any(TestException.class));\n', 2), ('SorterFunction<T>(comparator));\n\n', 2), ('heavy.get();\n', 2), ('#observeOn\n', 2), ('executeService.submit(reader1);\n', 2), ('RxJavaPlugins.onError()}', 2), ('protocol\n', 2), ('Creational', 2), ('this(name,', 2), ('signalled.</dd>\n', 2), ('Publisher.");\n', 2), ('Iterator<Completable>()', 2), ('Maybe.just(3)),', 2), ('s.advanceTimeTo(1800,', 2), ('Single.using(Functions.justCallable(Disposables.empty()),\n', 2), ('io.reactivex.Observer;\n\npublic', 2), ('LinkedHashMap<Long,', 2), ('.build();\n', 2), ('.concatMapMaybe(Functions.justFunction(Maybe.just(1)))\n', 2), ('onCancel;\n', 2), ('FAILED;\n', 2), ('Flowable.just(Maybe.just(1),', 2), ('Consumer<List<Boolean>>()', 2), ('flushId)', 2), ('AppManager.find("003");\n', 2), ('timestampWithScheduler2()', 2), ('observerCount()', 2), ('").append(className).append("', 2), ('12/10/15', 2), ('length)', 2), ('testElementAtWithMinusIndex()', 2), ('RetrySubscriber<T>', 2), ('SwitchMapMaybeSubscriber<T,', 2), ('leftEnd', 2), ('org.reactivestreams.Publisher;\n\n/**\n', 2), ('ObjectHelper.requireNonNull(onDispose,', 2), ('fs.cancel(true);\n', 2), ('AbstractDirectTask', 2), ('(cache.containsKey(userId))', 2), ('secretIndex', 2), ('(nextDD', 2), ('javaMajorVersion,', 2), ('simpleObject', 2), ('painlessMethod);\n', 2), ('StripBoundary<Object>(null))\n', 2), ('retrieveShouldReturnNoCustomer()', 2), ('Policy.getInstance("JavaPolicy",', 2), ('ws', 2), ('tightly', 2), ('countBefore.incrementAndGet();\n', 2), ('connect(cc);\n', 2), ('Based', 2), ('other.subscribe(right);\n', 2), ('"Welcome', 2), ('a.onComplete();\n\n', 2), ('system,', 2), ('FileWriter', 2), ('consumerNode', 2), ('observer2);\n', 2), ('-4606175640614850599L;\n', 2), ('second.cancel();\n', 2), ('unboxed,', 2), ('"-XX:MaxInlineLevel=20"', 2), ('Invoked', 2), ('Waiting', 2), ("'A');\n\n", 2), ('Object[0];\n', 2), ('-4552101107598366241L;\n\n', 2), ('postfix', 2), ('header)', 2), ('Creating', 2), ('TimeUnit.SECONDS).blockingSubscribe();\n\n', 2), ('source.flatMapCompletable(new', 2), ("Observable'\\r\\n", 2), ('scalarEmitted', 2), ('AtomicReferenceArray,', 2), ('Thread.currentThread().setUncaughtExceptionHandler(null);\n\n', 2), ('#RACE_DEFAULT_LOOPS\n', 2), ('flowable.blockingLast();\n', 2), ('subscriber;\n\n', 2), ('java.util.TreeMap;\nimport', 2), ('BlockingSubscriber<Integer>(new', 2), ('ConcatMapMaybeObserver<R>', 2), ('situation)\n', 2), ('.fighterClass("none")\n', 2), ("ParallelFlowable's,\n", 2), ('4827726964688405508L;\n\n', 2), ('shell', 2), ('main,', 2), ('returning\n', 2), ('!rc.connected)', 2), ('o.scan(0,', 2), ('Inject', 2), ('assertEquals("poison",', 2), ('globalMutex.remove(this);\n', 2), ('doAfterSuccess(Consumer<?', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/from.Future.png"', 2), ('RxJavaPlugins.onError(e);\n\n', 2), ('RepeatSubscriber(Subscriber<?', 2), ('RefConnection(this);\n', 2), ('DateEsField', 2), ('assertTrue(cs.hasObservers());\n', 2), ('timerDelayZero()', 2), ('&lt;=', 2), ('soElement(offset,', 2), ('onRequest,', 2), ('value));\n', 2), ("class'", 2), ('ambWith}', 2), ('System.out.print(">', 2), ('customers.', 2), ('which,', 2), ('numbers[i]', 2), ('value[0]);\n', 2), ('blank', 2), ('on.', 2), ('(SingleDisposable<T>', 2), ('error=13,', 2), ('values.put("count4xx",', 2), ('futureResult3.get();\n', 2), ('this.ws;\n', 2), ('interestedOps;\n', 2), ('strBody', 2), ('FlowableToList<T,', 2), ('addReadPermissions(perms,', 2), ('AlbumListPage(webClient);\n', 2), ('isDone();\n', 2), ('IllegalArgumentException("The', 2), ('com.fasterxml.jackson.core.JsonProcessingException;\nimport', 2), ('gson', 2), ('3).toSortedList(new', 2), ('both.add(s1);\n', 2), ('RUNNING', 2), ('from}\n', 2), ('setLayout(new', 2), ('Functions.justFunction(Maybe.<Integer>never()),', 2), ('IdentityProcessorVerification<Integer>', 2), ('RetryBiSubscriber<T>', 2), ('pool,', 2), ('actual.onNext(vr);\n', 2), ('delayErrors', 2), ('ConcatMapCompletableObserver<T>(s,', 2), ('javaMethodName;\n', 2), ('java.util.Iterator<T>', 2), ('operator;\n\n', 2), ('SpscLinkedArrayQueue<Object>(bufferSize());\n', 2), ('.noMoreAbilities()\n', 2), ('conn.subscriberCount', 2), ('LotteryUtils.checkTicketForPrize(repository,', 2), ('ss.subscribe(new', 2), ('threads)', 2), ('onSuccessMapper,', 2), ('1300', 2), ('cache.getCacheDataInListForm();\n', 2), ('terms', 2), ('bo.dispose();\n\n', 2), ('NotificationLite.next(value);\n', 2), ('source.distinctUntilChanged(new', 2), ('assertFalse(dependentPromise.isCancelled());\n', 2), ('Observable.never().blockingLatest().iterator();\n\n', 2), ('%s",\n', 2), ('count()', 2), ('IntervalObserver', 2), ('workDone)', 2), ('#onSuccess(Object)},\n', 2), ('(count.decrementAndGet()', 2), ('SingleZipArray<T,', 2), ('assertNotEquals(t1,', 2), ('conn.timer', 2), ('achieve', 2), ('ParallelCollect<T,', 2), ('innerCloseError(Throwable', 2), ('doubleComplete()', 2), ('EqualSubscriber<T>', 2), ('org.elasticsearch.painless.MethodWriter;\n\nimport', 2), ('done()', 2), ('checkDisposed()', 2), ('"A","a",', 2), ('currentIndex;\n\n', 2), ('sd;\n\n', 2), ('OUTPUT_FILE', 2), ('compose}.\n', 2), ('Single.just(4))\n', 2), ('AtomicReference<SwitchMapMaybeObserver<R>>();\n', 2), ('PublisherBufferExactSubscriber<T,', 2), ('signalConsumer()', 2), ('before,', 2), ('observer.assertValue(1);\n', 2), ('Messenger();\n', 2), ('indexInTail', 2), ('recommended.\n', 2), ('subtract', 2), ('this.unit;\n', 2), ('int.class;\n', 2), ('rainbowFish,', 2), ('locals)', 2), ('to.assertError(ex);\n', 2), ('Instant', 2), ('DataMapperException;\n\n', 2), ('QueueSubscription#BOUNDARY}', 2), ('inOrder.verify(observer).onNext("one");\n', 2), ('io.reactivex.subscribers.DisposableSubscriber;\n\npublic', 2), ('testGetWithTimeoutAfterCancel()', 2), ('ref', 2), ('org.elasticsearch.xpack.sql.expression;\n\nimport', 2), ('AtomicBoolean>', 2), ('trustConfig)', 2), ('http://javamex.com/tutorials/random_numbers/xorshift.shtml\n', 2), ('studentDatabase;\n', 2), ('syncArrayHidden()', 2), ("'[');\n\n", 2), ('DebounceTimedSubscriber(Subscriber<?', 2), ('"fail",', 2), ('onNext},', 2), ('error-delaying', 2), ('K>(observer,', 2), ('p.active', 2), ('endProcess(AsyncResult<T>', 2), ('this.comparator', 2), ('timerFired;\n\n', 2), ('recursively).\n', 2), ('testShouldUseUnsafeSubscribeInternallyNotSubscribe()', 2), ('assertThat(lines,', 2), ('testScheduler.advanceTimeBy(2000,', 2), ('.toCompletable()\n', 2), ('forbidden.\n', 2), ('SafeSubscriber', 2), ('attributeNames;\n', 2), ('worker.schedule(new', 2), ('accountNoTo;\n', 2), ('this.otherDisposable', 2), ('first4.get(2));\n', 2), ('SHUTDOWN_TIME', 2), ('"all");\n', 2), ('deleteAll()', 2), ('requirement', 2), ('Observer}\n', 2), ('cancelledOnRun()', 2), ('execute!");\n', 2), ("sb.append('", 2), ('remainingElementsCount', 2), ('context\n', 2), ('mainBoundaryErrorInnerEmpty()', 2), ('userAccount.getUserName()).append("additionalInfo",', 2), ('unboxTo;\n', 2), ('times.get(i);\n', 2), ('org.apache.wicket.util.string.StringValue', 2), ('action;\n\n', 2), ('onEvent));\n', 2), ('super(handler,', 2), ('InMemoryCustomerDao', 2), ('href="http://reactivex.io/documentation/operators/sequenceequal.html">ReactiveX', 2), ('bool', 2), ('AbstractSchedulerTests', 2), ('S,', 2), ('999;\n', 2), ('first(1).iterator();\n', 2), ('loader)', 2), ('cause.\n', 2), ('primarily', 2), ('executorService.awaitTermination(30,', 2), ('body;\n\n', 2), ('com.iluwatar.cqrs.commandes.ICommandService;\nimport', 2), ('PublishSubject<String>', 2), ('this.isActive', 2), ('(compareAndSet(f,', 2), ('elementAtOrErrorNoElement()', 2), ('ios.setResource(d);\n', 2), ('lazySet(t);\n', 2), ('(5', 2), ('elementAtOrErrorIndex1OnEmptySource()', 2), ('exceptions.</li>\n', 2), ('Functions.justFunction(cs)).test();\n\n', 2), ('user.', 2), ('io.reactivex.processors.*;\n\n@Test\npublic', 2), ('RAII', 2), ('has\n', 2), ('book\n', 2), ('Integer>>();\n', 2), ('equalTo("This', 2), ('notify.release();\n', 2), ('ObservableToListSingle(ObservableSource<T>', 2), ('length;\n', 2), ("'as'\n", 2), ('(painlessField', 2), ('RainbowFishSerializer', 2), ('FlowableElementAt<T>(source,', 2), ('100)', 2), ('rate', 2), ('testGetWithEmptyFlowable()', 2), ('MaybeFlatMapSingle<T,', 2), ('navigate', 2), ('SkipUntilMainSubscriber<T>', 2), ('OnErrorNextSubscriber<T>', 2), ('java.util.jar.Manifest;\n\n/**\n', 2), ('offer(@NonNull', 2), ('ConcatMapSingleSubscriber<Integer,', 2), ('(Callable<R>)', 2), ('ScalarXMapFlowable<T,', 2), ('assertEquals(INVENTORY_SIZE,', 2), ('offer(v2);\n', 2), ('annotation\n', 2), ('org.dirty.flag;\n\nimport', 2), ('realms', 2), ('this.dest', 2), ('concurrentItem', 2), ('chest;\n', 2), ('testTimerPeriodically()', 2), ('customers.add(customer);\n\n', 2), ('refCount()', 2), ('javax.annotation.Resource;\n\nimport', 2), ('CompletableDisposable[n', 2), ('implemented.\n', 2), ('sourceCount;\n\n', 2), ('(CakeBakingException', 2), ('a.onNext(value);\n', 2), ('API,\n', 2), ('this.modifiers', 2), ('asCallable()', 2), ('preV4', 2), ('ScheduledDirectTask(RxJavaPlugins.onSchedule(run));\n', 2), ('repositories', 2), ('commander\n', 2), ('extract', 2), ('Observable>()', 2), ('publicKeyPath;\n', 2), ('ScheduledExecutorServices', 2), ('b.indexOf("</dd>",', 2), ('SafeSubscriberTestException("onErrorFail");\n', 2), ('elementAtIndex1WithDefaultOnEmptySource()', 2), ('notify.acquire();\n', 2), ('flat,', 2), ('elapses.\n', 2), ('LambdaInfoApiHandler', 2), ('responseHeaders.put("Content-Type",', 2), ('valueSelector,', 2), ('java.util.Scanner;\n\n/**\n', 2), ('name[0]', 2), ('try-with-resources', 2), ('namespace,', 2), ('LeftRightObserver(parent,', 2), ('<i>INTENT</i>', 2), ('beside', 2), ('DisposableCompletableObserver', 2), ('org.elasticsearch.common.inject.BindingAnnotation;\n\nimport', 2), ('sa.missedSubscription.set(bs1);\n\n', 2), ('boiled.",', 2), ('proves', 2), ('(InnerCompletableCache', 2), ('fileName', 2), ('onNext;\n\n', 2), ('OnError(e),', 2), ('singletonList(v)));\n', 2), ('elementAtIndex0WithDefaultOnEmptySource()', 2), ('documented', 2), ('deque;\n', 2), ('Observable.merge(os).toList().blockingGet();\n\n', 2), ('Notification.createOnError(ex);\n', 2), ('ConnectableFlowable<T>', 2), ('Assert.assertEquals(Integer.valueOf(3),', 2), ('ScalarDisposable<R>', 2), ('exchange.getRequestURI().getRawQuery();\n', 2), ('utilizing', 2), ('server)', 2), ('(Path', 2), ('DiscoveryNode', 2), ('producerIndex();\n', 2), ('assertEquals(Integer.valueOf(1),', 2), ('dispatched\n', 2), ('FuseToObservable)', 2), ('"method', 2), ('yet.\n', 2), ('script', 2), ('NazgulName', 2), ('(QueueDisposable<T>)d;\n', 2), ('enabled.\n', 2), ('won;\n\n', 2), ('idempotent', 2), ('determines', 2), ('com.iluwatar.abstractdocument.domain.HasType;\nimport', 2), ('1.x,', 2), ('right);\n\n', 2), ('*/\n\nimport', 2), ('pp1.single(-99).ambWith(pp2.single(-99)).test();\n\n', 2), ('3323743579927613702L;\n\n', 2), ('on.\n', 2), ('tied', 2), ('calculating', 2), ('ObjectHelper.requireNonNull(rightEnd.apply(right),', 2), ('ts.assertNoErrors();\n\n', 2), ('@Resource\n', 2), ('Completable,', 2), ('getById(int', 2), ('readFile(f);\n\n', 2), ('io.reactivex.Scheduler.Worker#dispose()}.\n', 2), ('DatagramChannel}', 2), ('SingleDisposable[0];\n\n', 2), ('parent.innerNext();\n', 2), ('19,', 2), ('checkBadSource()', 2), ('Class.forName(basepackage', 2), ('discovery', 2), ('assertFalse(!Audio.isServiceRunning());\n', 2), ('rightEnd', 2), ('LOGGER.info("KHAMUL={}",', 2), ('AtomicReference<Thread>();\n\n', 2), ('Singleton.', 2), ('attaches', 2), ('(Class<Throwable>)classes[i],', 2), ('(s.contains("A', 2), ('LEFT_VALUE)', 2), ('cancelled/interrupted', 2), ('isWrapperFor(Class<?>', 2), ('resourceSupplier\n', 2), ('lines\n', 2), ('"256"})\n', 2), ('phone);\n', 2), ('futureResult2.get();\n', 2), ('signal;', 2), ('com.iluwatar.databus.data;\n\nimport', 2), ('2000));\n', 2), ('merge(E', 2), ('"to', 2), ('RUNNING)', 2), ('action\n', 2), ('List<Method>', 2), ('lifting', 2), ('sourceSupplier,', 2), ('lvConsumerNode()', 2), ('"line");\n', 2), ('0).toObservable().blockingSingle().intValue());\n', 2), ('GeneratorSubscription<T,', 2), ('onSuccessMapper;\n\n', 2), ('.append(countLine(s,', 2), ('result.getDateList().size());\n', 2), ('in;\n', 2), ('repository.delete(terry);\n\n', 2), ('!args.isOnNext())', 2), ('funds', 2), ('from(String', 2), ('drop()', 2), ('source4)', 2), ('other.', 2), ('de;\n', 2), ('(--crashOnNext', 2), ('(Integer)q.poll();\n\n', 2), ('scheduler.advanceTimeTo(1000,', 2), ('counter[0]);\n//\n//', 2), ('FlattenIterableObserver<T,', 2), ('NullPointerException("subscribeActual', 2), ('SQL_STATE_BAD_SERVER));\n', 2), ('java.util.function.Consumer;\n\npublic', 2), ('Iterator#hasNext()}', 2), ('Flowable.never();\n', 2), ('.assertResult(5L,', 2), ('ts.errors().get(0);\n', 2), ('lio', 2), ('whitelistField.javaFieldName,', 2), ('src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/B.next.png"', 2), ('nasta,', 2), ('Observer<List<Integer>>', 2), ('(update', 2), ('requests.size());\n', 2), ('assertEquals(CUSTOMER,', 2), ('waiter,', 2), ('autoConnect()', 2), ('p.drain();\n', 2), ('allocating', 2), ('successDetaches()', 2), ('unboxFrom;\n', 2), ('FileWriterAction', 2), ('-8003404460084760287L;\n\n', 2), ('@SuppressWarnings("varargs")\n', 2), ('List<Customer>', 2), ('itemTimeoutObservableSource;\n\n', 2), ('(").append(baseClassName).append(".java:")\n', 2), ('assertFalse(pp0.hasSubscribers());\n\n', 2), ('current.cancel(runner', 2), ('Function<Subscription,', 2), ('sql");\n', 2), ('phase,', 2), ('Nazgul}', 2), ('state[0]', 2), ('InnerObserver<U>', 2), ('"unsubscrib");\n', 2), ('count.incrementAndGet()', 2), ('accesses', 2), ('testDistinctOfNoneWithKeySelector()', 2), ('other.set(bs);\n\n', 2), ('CompletableObserverImplementation(CompletableObserver', 2), ('parent.innerError(new', 2), ('assertTrue("Did', 2), ('fieldString,', 2), ('Assert.assertEquals(Integer.valueOf(1),', 2), ('BasicQueueDisposable<T>', 2), ('queue.put(item);\n', 2), ('MaybeDelaySubscriptionOtherPublisher<T,', 2), ('EnumIvoryTower.INSTANCE;\n', 2), ('(syncb.get()', 2), ('java.io.BufferedInputStream;\nimport', 2), ('abilities;\n', 2), ('cnt', 2), ('exp);\n', 2), ('Handler<E>', 2), ('map.', 2), ('(conn', 2), ('Arrays.asList("15.11.2015",', 2), ('previousSpell);\n', 2), ('client.stop();\n\n', 2), ('subsystems.\n', 2), ('persons.containsAll(actuals));\n', 2), ('String(braces)', 2), ('Callable<Flowable<String>>', 2), ('-6671519529404341862L;\n\n', 2), ('spellByName', 2), ('executorService.execute(washingMachine::wash);\n', 2), ('lots', 2), ('FlatMapSingleSubscriber<T,', 2), ('testTimerOnce()', 2), ('others.length)', 2), ('to.onSubscribe(Disposables.empty());\n\n', 2), ('SignatureException', 2), ('HolderNaive', 2), ('e2)', 2), ('Objects.hash(firstName,', 2), ('TypeToClass(getTypeInternal(painlessParameterTypeName));\n\n', 2), ('button\n', 2), ('RxJavaPlugins.onError(error);\n', 2), ('3610901111000061034L;\n\n', 2), ('compared', 2), ('DisposableHelper.dispose(inner);\n', 2), ('painlessFieldClass,', 2), ('.assertValue(10)\n', 2), ('unmodifiable', 2), ('iteratorNotification.getValue();\n', 2), ('features.\n', 2), ('mainErrorAfterTermination()', 2), ('testDematerialize3()', 2), ('IllegalArgumentException("Class:', 2), ('CountDownLatch(8);\n\n', 2), ('float.class;\n', 2), ('Observable"))', 2), ('session.createCriteria(persistentClass);\n', 2), ('conn.timer.dispose();\n', 2), ('250ms\n', 2), ('href="http://reactivex.io/documentation/completable.html">ReactiveX', 2), ('java.util.Spliterators;\nimport', 2), ('character.getWeapon());\n', 2), ('Observable.just("Boo!").all(new', 2), ('this.boundarySubscriber', 2), ('noRequestOnError()', 2), ('testExceptionWithMoreThanOneElement()', 2), ('Completable.complete().delay(10,', 2), ('err[0]', 2), ('source.blockingLatest();\n', 2), ('treat', 2), ('isBase64Encoded)', 2), ('Runnable\n', 2), ('#newThread()}', 2), ('futureResult1.get();\n', 2), ('repository.\n', 2), ('Color.LIGHT},\n', 2), ('iterable.iterator();\n\n', 2), ('io.reactivex.Observable},', 2), ('params[i]', 2), ('this.array', 2), ('JpaTransactionManager', 2), ('compositeList(ts.errors().get(0));\n\n', 2), ('ws;\n\n', 2), ('stack:', 2), ('Save', 2), ('assertError(TestObserver<?>', 2), ('source.subscribe(parent.observers[i]);\n', 2), ('asynchronously.\n', 2), ('anotherDay', 2), ('defer(final', 2), ('zipWith}', 2), ('Contains</a>\n', 2), ('ObjectHelper.requireNonNull(combiner.apply(new', 2), ('this.description', 2), ('range()', 2), ('delay(final', 2), ('welcomeMessage);\n', 2), ('domainapp.integtests.specglue;\n\nimport', 2), ('implies(Permission', 2), ('(!(ex', 2), ('.append(fn)\n', 2), ('qd.clear();\n', 2), ('ArrayList<Throwable>();\n//\n//', 2), ('DebounceTimedObserver<T>\n', 2), ('Blackhole.consumeCPU(cycles);\n', 2), ('DEFAULT_FORMAT', 2), ('CakeBakingService\n', 2), ('Functions.justFunction(Single.<Integer>never()),', 2), ('put(String', 2), ('RainbowFishV2', 2), ('jarpath);\n', 2), ('stream.\n', 2), ('operator.', 2), ('doOnDispose}', 2), ('rmo.onSubscribe(d);\n\n', 2), ('List<Date>', 2), ('owner.name);\n', 2), ('incompatible', 2), ('TimeUnit.SECONDS).blockingSingle();\n\n', 2), ('ObjectHelper.requireNonNull(defaultValue,', 2), ('onErrorInner(ex);\n', 2), ('(numberOfSubscribers', 2), ('becomes', 2), ('RxJavaPlugins.setOnBeforeBlocking(new', 2), ('service.saveNewLayer(layer2);\n\n', 2), ('Interpreter', 2), ('covariants\n', 2), ('Disposables.empty());\n', 2), ('from(source,', 2), ('clone()', 2), ('Flowable.just(o1,', 2), ('?>[]>', 2), ('(painlessField.clazz', 2), ('child.onNext(t);\n', 2), ('org.reactivestreams.*;\nimport', 2), ('LOCAL_VARIABLE})\n@Retention(value', 2), ('innerLatch.countDown();\n', 2), ("I'm", 2), ('Maybe}.', 2), ('innerComplete(SwitchMapInnerObserver', 2), ('zone', 2), ('com.iluwatar.singleton;\n\nimport', 2), ('pp.switchMapCompletable(Functions.justFunction(cs))\n', 2), ('Collection<EmailAttachmentParser.EmailAttachment>', 2), ('length();\n', 2), ('rights.remove(end.index);\n', 2), ('assertTrue(rco.isDisposed());\n', 2), ('Burst(Throwable', 2), ('CakeDao', 2), ('d.isDisposed());\n', 2), ('subscription)', 2), ('InetAddress', 2), ('condition.signalAll();\n', 2), ('sources));\n', 2), ('ExceptionHelper.wrapOrThrow(iteratorNotification.getError());\n', 2), ('InnerQueuedObserverSupport<T>', 2), ('synchronization', 2), ('PlayerDetails(email,', 2), ('list.add(value);\n', 2), ('ObjectHelper.requireNonNull(exception,', 2), ('Criteria', 2), ('ObjectHelper.requireNonNull(onEvent,', 2), ('painlessField);\n', 2), ('both.add(s2);\n', 2), ('mkuprivecz\n', 2), ('blocker.blockingLatest();\n', 2), ('("fail".equals(s))', 2), ('ScalarSubscription<Integer>', 2), ('order.', 2), ('LOGGER.info("Red', 2), ('thread.set(Thread.currentThread());\n', 2), ('emerges.");\n', 2), ('AppConfig.class', 2), ('cancelAllBut(int', 2), ('FuseToMaybe<T>', 2), ('deletionShouldBeSuccessAndCustomerShouldBeNonAccessible()', 2), ('painlessParameterTypeNames)', 2), ('confusion', 2), ('val', 2), ('exec.shutdown();\n\n', 2), ('terminated.', 2), ('price;\n', 2), ('AccessControlContext', 2), ('ahead!");\n', 2), ('lazySet(FINISHED);\n', 2), ('TimeoutFallbackMaybeObserver(MaybeObserver<?', 2), ('cust', 2), ('processing.', 2), ('PlayerDetails("mary@google.com",', 2), ('MaybeOnErrorNext<T>(this,', 2), ('id:', 2), ('fallback.subscribe(otherObserver);\n', 2), ('OliphauntPool', 2), ('Movement.FLYING,', 2), ('com.iluwatar.serverless.baas.model.Person;\nimport', 2), ('assertEquals("name",', 2), ('"Street', 2), ('other.dispose();\n\n', 2), ('o.dematerialize();\n\n', 2), ('assertTrue(SubscriptionHelper.replace(s,', 2), ('Thread.NORM_PRIORITY)));\n\n', 2), ('synchronously.', 2), ('get(0)', 2), ('RxJavaPlugins.initNewThreadScheduler(c));\n', 2), ('assertNPE(list,', 2), ('assertFalse(it.hasNext());\n\n', 2), ('changes.', 2), ('com.iluwatar.hexagonal.domain.LotteryTicketId;\n\n/**\n', 2), ('tryEmit(U', 2), ('plugin,', 2), ('css[v];\n', 2), ('(lastName', 2), ('QueueSubscription.NONE)', 2), ('8708641127342403073L;\n\n', 2), ('countNegative()', 2), ('SingleFlatMapPublisher<T,', 2), ('itemTimeoutIndicator);\n', 2), ('long[between(3,', 2), ('spellbook);\n\n', 2), ('syncArray()', 2), ('java.util.concurrent.ConcurrentHashMap;\n\n/**\n', 2), ('Runtime.getRuntime().exec(EXECUTABLE);\n', 2), ('publishNext(final', 2), ('href="http://reactivex.io/documentation/operators/timer.html">ReactiveX', 2), ('received.\n', 2), ('Functions.justFunction(Observable.just(2)),\n', 2), ('(instanceMethodDef', 2), ('flag?', 2), ('verify(sub,', 2), ('AnnotationConfigContextLoader.class)\npublic', 2), ('java.util.stream.Stream;\nimport', 2), ('userId', 2), ('pile', 2), ('rangeObservable.flatMap(new', 2), ('"Isaac",', 2), ('href="http://reactivex.io/documentation/operators/map.html">ReactiveX', 2), ('fieldCache.computeIfAbsent(\n', 2), ('wip)', 2), ('assertTrue(books.contains(new', 2), ('Function6<?', 2), ('Assert.assertEquals(Long.valueOf(-1),', 2), ('""));\n', 2), ('(!latch.await(30,', 2), ('onErrorReturnItem(final', 2), ('.assertError(RuntimeException.class);\n', 2), ('assertEquals("One",', 2), ('randomIntBetween(largerJavaMajorVersionLowerBound,', 2), ('micro-service.\n', 2), ('io.reactivex.observers.*;\n\npublic', 2), ('source9);\n', 2), ('testWithMultipleStaggeredSubscribersAndPublish()', 2), ('io.reactivex.functions.Consumer;\n\n/**\n', 2), ('attempting', 2), ('java.util.Collections.unmodifiableMap;\n\n/**\n', 2), ('inner.queue;\n\n', 2), ('assertNotNull(children);\n', 2), ('FlowableConcatMapPublisher(sources,', 2), ('"String["', 2), ('#poll()}</li>\n', 2), ('assertTrue(cs.hasThrowable());\n', 2), ('RxJavaPlugins.setOnObservableSubscribe(new', 2), ('author1', 2), ('behavioral', 2), ('pathname', 2), ('(inventory.addItem(new', 2), ('ObservableElementAt<T>(source,', 2), ('-4403180040475402120L;\n\n', 2), ('testGetWithASingleNullItem()', 2), ('around', 2), ('Arrays.toString(args));\n', 2), ('ParallelMapConditionalSubscriber<T,', 2), ('getIndexRequest', 2), ('backpressure.\n', 2), ('constructorshouldbeprivate()', 2), ('layers.\n', 2), ('TimeUnit.DAYS);\n', 2), ('lefts.put(idx,', 2), ('Observable.just(1).hide().flatMap(new', 2), ('studentsToOperate', 2), ('runnableDisposedAsyncCrash()', 2), ('AllSubscriber', 2), ('databaseReaders', 2), ('MaybeTakeUntilMaybe<T,', 2), ('getAuthorBooks(String', 2), ('Close>\n', 2), ('wizardClass)', 2), ('latch.await();\n\n', 2), ('you.");\n', 2), ('TimeoutConsumer(long', 2), ('ThreadPoolDispatcher\n', 2), ('com.iluwatar.adapter;\n\nimport', 2), ('logic.', 2), ('FilePermissionUtils.addDirectoryPath(perms,', 2), ('javaMethodHandleGetter', 2), ('.assertResult(Arrays.asList(5,', 2), ('DD.MM.YYY\n', 2), ('listener.onResponse(Collections.emptyMap());\n', 2), ('className', 2), ('flatMap.subscribeWith(new', 2), ('App.main(null);\n', 2), ('blocks!', 2), ('SimpleFileVisitor<Path>()', 2), ('connection));\n', 2), ('Arrays.asList(tokens)));\n\n', 2), ('flatMapCompletable;\n\n', 2), ('java.security.PrivateKey;\nimport', 2), ('picking', 2), ('otherIterable;\n\n', 2), ('emitter;\n', 2), ('C>();\n', 2), ('dispose(S', 2), ('(FileNotFoundException', 2), ('loginTimeout;\n', 2), ('assertions', 2), ('inner.setSubscription(new', 2), ('"ObservableFromPublisher");\n', 2), ('Subscription\n', 2), ('reduceInts()', 2), ('AsyncDisposable[]', 2), ('fromAction()', 2), ('m.getName().substring(3));\n', 2), ('List<Constructor>', 2), ('(ws.remove(wo.w))', 2), ('check.\n', 2), ('target.getClass().getSimpleName();\n', 2), ('Subjects.\n', 2), ('currently\n', 2), ('this.d.dispose();\n', 2), ('newCondition()', 2), ('parent.emit(index,', 2), ('TemporaryFolder();\n\n', 2), ('ConcatMapEagerMainObserver<T,', 2), ('!m.signature.contains("TestSubscriber"))', 2), ('potions\\n");\n\n', 2), ('WindowBoundaryInnerSubscriber(WindowBoundaryMainSubscriber<T,', 2), ('BookmarkPolicy.AS_ROOT)\n', 2), ('onTerminateDetach}', 2), ('tested,', 2), ('sergeant\n', 2), ('downstream.onError(error);\n', 2), ('Schedulers.from(exec);\n\n', 2), ('pattern;\n', 2), ('com.iluwatar.databus.data.StoppingData;\nimport', 2), ('types()', 2), ('List<Word>', 2), ('SpscArrayQueue<Object>(16);\n', 2), ('sumErr', 2), ('traveled', 2), ('pp1.singleElement(),', 2), ('timer}', 2), ('w.schedule(r));\n\n', 2), ('(u.getName().endsWith(".java"))', 2), ('errorCallableThrows()', 2), ('o.cancel();\n', 2), ('javadocStart', 2), ('this.start', 2), ('Additionally,', 2), ('getting', 2), ('removed,', 2), ('Number"));\n', 2), ('tasks);\n', 2), ('constructed\n', 2), ('current.length', 2), ('.thenAccept(\n', 2), ('userAccount.getUserId()),\n', 2), ('printThisAfter()', 2), ('awaited', 2), ('Arrays.copyOf(a,', 2), ('cakeLayerInfos;\n', 2), ('fish.getName());\n', 2), ('key",', 2), ('Semaphore', 2), ('username;\n', 2), ('TestException("main"));\n', 2), ('Observable.empty();\n\n', 2), ('java.util.Date;\n\nimport', 2), ('3000));\n\n', 2), ('testGetAfterCancel()', 2), ('MAX_EVENT_TIME', 2), ('(iter.hasNext())', 2), ('setDefaultCloseOperation(EXIT_ON_CLOSE);\n', 2), ('this.when', 2), ('they\n', 2), ('(address', 2), ('Initiation', 2), ('resultSet.close();\n', 2), ('events;', 2), ('Feature', 2), ('AnyObserver<T>', 2), ('dr;\n', 2), ('flatMapObservable(Function<?', 2), ('properties,', 2), ('leftIndex;\n\n', 2), ('Maybe.never();\n', 2), ('drain();\n}\n', 2), ('userId);\n', 2), ('KingJoffrey', 2), ('java.time.ZoneOffset;\nimport', 2), ('testUnhandledErrorIsDeliveredToThreadHandler()', 2), ('stopped.",', 2), ('SSLService', 2), ('String[0];\n', 2), ('bs1);\n', 2), ('java.util.Random;\n\n/**\n', 2), ('statC', 2), ('(addInner(inner))', 2), ('updationShouldBeSuccessAndAccessingTheSameCustomerShouldReturnUpdatedInformation()', 2), ('serialDisposable.dispose();\n\n', 2), ('assumeTrue(allCustomers.count()', 2), ('Values', 2), ('Bloch', 2), ('CompositeException.class);\n\n', 2), ('cache()', 2), ('.observeOn(Schedulers.io())\n', 2), ("ParallelFlowable's", 2), ('IllegalArgumentExceptio");\n', 2), ('SingleTakeUntil<T,', 2), ('w.connect();\n\n', 2), ('#bind()}', 2), ('must\n', 2), ('UnicastProcessor<Integer>', 2), ('sources[i].subscribe(this);\n', 2), ('NonExistingCustomer', 2), ('predicateThrows()', 2), ('serialization).', 2), ('loaded.\n', 2), ('twice,', 2), ('remove(Stats', 2), ('f.getName().replace(".java",', 2), ('food.");\n', 2), ('repeat(long', 2), ('expectThrows(SQLException.class,', 2), ('(detected', 2), ('SafeSubscriberTestException("onNextFail");\n', 2), ('QueueDrainHelper.drainLoop(queue,', 2), ('compatible.\n', 2), ('Long.MAX_VALUE",', 2), ('(innerCompleted)', 2), ('IOException;\n}\n', 2), ('List<OverallBucket>', 2), ('spotted', 2), ('Writer(String', 2), ('lotteryNumbers', 2), ('(requested.compareAndSet(r,', 2), ('s.onSubscribe(ios);\n\n', 2), ('defaultSettings', 2), ('testJustSingleItemObservable()', 2), ('DisposableHelper.setOnce(FlatMapMaybeObserver.this,', 2), ('ThreadLocal.', 2), ('retry(BiPredicate<?', 2), ('de-multiplexes', 2), ('checkSource(Completable.class.getSimpleName(),', 2), ('com.google.common.collect.Lists;\n\nimport', 2), ('stop.getAsBoolean();\n', 2), ('returned,', 2), ('(CompositeException)to.errors().get(0);\n', 2), ('wireTransfers;\n', 2), ('itself,', 2), ('createIdentityProcessor(int', 2), ('#replace(Disposable)\n', 2), ('App");\n', 2), ('RxJavaPlugins.onSubscribe(this,', 2), ('writable.', 2), ('RuntimeException");\n', 2), ('Subject<String>', 2), ('java.util.concurrent.Executors;\n\n/**\n', 2), ('assertTrue(safe.isUnsubscribed());\n', 2), ('cursor', 2), ('"convert', 2), ('attached', 2), ('signed', 2), ('SwitchMapCompletableObserver<T>(s,', 2), ('Single.<Integer>never(),', 2), ('line;', 2), ('consumerIndex()', 2), ('addingShouldResultInFailureAndNotAffectExistingCustomers()', 2), ('getClient();\n\n', 2), ('getEmail()', 2), ('studentToBeFound', 2), ('getInterestedOps()', 2), ('BlockingHelper.awaitForComplete(cdl,', 2), ('object")\n', 2), ('java.lang.annotation.ElementType.CONSTRUCTOR;\nimport', 2), ('statement,', 2), ('collection));\n', 2), ('publisherExecutorService()', 2), ('(TLeft', 2), ('testErrorPassThru()', 2), ('CompletableSource)', 2), ('Single.fromCallable(callable)\n', 2), ('throttlePeriod;\n', 2), ('Image', 2), ('org.elasticsearch.common.settings.Setting;\nimport', 2), ('location', 2), ('stack.pop();\n', 2), ('characterToFrequency.put(c,', 2), ('f.concatMapSingleDelayError(\n', 2), ('testCompletePassThru()', 2), ('composite.add(w);\n', 2), ('winner.lazySet(-1);\n\n', 2), ('3256684027868224024L;\n\n', 2), ('nullSourceSuccessRace()', 2), ('BaseEntity', 2), ('"Adventure', 2), ('LOGGER.info("JI_INDUR={}",', 2), ('this.disposable', 2), ('Policy', 2), ('conn));\n\n', 2), ('combine(Collection<?', 2), ('error);', 2), ('AtomicReference<T>();\n', 2), ('DistinctSubscriber<T,', 2), ('saved', 2), ('reality', 2), ('.switchMapSingle(Functions.justFunction(Single.just(1)))\n', 2), ('open(B', 2), ('(JsonProcessingException', 2), ('schedulers...");\n', 2), ('-674404550052917487L;\n\n', 2), ('ReplaySubject.create();\n', 2), ('org.apache.log4j.Logger;\n\nimport', 2), ('org.elasticsearch.common.xcontent.XContentFactory;\nimport', 2), ('800;\n', 2), ('FluentIterable.copyToList(iterable);\n', 2), ('java.lang.annotation.ElementType.LOCAL_VARIABLE;\nimport', 2), ('api.someMethod(listener);\n', 2), ('(its', 2), ('Act', 2), ('java.util.Map;\n\npublic', 2), ('observe\n', 2), ('unlock()', 2), ('toRequest;\n', 2), ('pp.hasSubscribers())', 2), ('ObservableCollect<T,', 2), ('enter\n', 2), ('!concurrentItem.isOnNext())', 2), ('stat,', 2), ('Idores");\n', 2), ('(!SubscriptionHelper.validate(this.s,', 2), ('Observable<Observable<Media>>', 2), ('Function7<Integer,', 2), ('this.iterable', 2), ('checks.add(()', 2), ('LOGGER.info("Is', 2), ('expressed', 2), ('Lists.newArrayList(repository.findAll());\n', 2), ('memory.\n', 2), ('org.apache.lucene.util.BytesRef;\nimport', 2), ('enhanced\n', 2), ('18,', 2), ('SerializedSubscriber<T>(s),\n', 2), ('task.runner', 2), ('nextValue;\n', 2), ('observer.onNext(5);\n', 2), ('AnyObserver<T>(t,', 2), ('moneyTransferEvent)', 2), ('Reader(String', 2), ('io.reactivex.internal.observers.BasicIntQueueDisposable;\nimport', 2), ('pp.onNext(i', 2), ('asmMethod', 2), ('assertEquals("Our', 2), ('ObserveOn</a>\n', 2), ('org.elasticsearch.xpack.sql.cli.command;\n\nimport', 2), ('a.onNext(t);\n', 2), ('(temp', 2), ('disposables.dispose();\n\n', 2), ('types.', 2), ('ticket");\n', 2), ('(sa.isDisposed())', 2), ('Exception())\n', 2), ('Struct(String', 2), ('.concatMapCompletable(Functions.justFunction(Completable.complete()))\n', 2), ('Observable.intervalRange(Long.MAX_VALUE', 2), ('mutually', 2), ('com.gargoylesoftware.htmlunit.html.HtmlSubmitInput;\nimport', 2), ('resolution', 2), ('OnErrorNotImplementedException(e));\n', 2), ("objects'", 2), ('Video(3,', 2), ('.assertValue(2);\n', 2), ('io.reactivex.").append(baseClassName)\n', 2), ('onEvent(Event', 2), ('randomIntFrom0to(300));\n', 2), ('CompletableEmitter', 2), ('hats', 2), ('rx2.computation-threads}', 2), ('instanceId,', 2), ('CakeLayerInfo("lemon",', 2), ('Observable()', 2), ('HomePage\n', 2), ('testTakeLastZeroProcessesAllItemsButIgnoresThem()', 2), ('FruitBowl', 2), ('ObservableSource#subscribe(Observer)}', 2), ('list.iterator();\n', 2), ('fromPublisher()', 2), ('eventId\n', 2), ('offer(E', 2), ('failure")).subscribe(\n', 2), ('V>>();\n', 2), ('SchedulerTestHelper.testUnhandledErrorIsDeliveredToThreadHandler(getScheduler());\n', 2), ('.take(2)\n', 2), ('(T)', 2), ('John', 2), ('forEach(Consumer<?', 2), ('assertFalse(tc.isDisposed());\n\n', 2), ('c))', 2), ('API\n', 2), ('com.iluwatar.servicelayer.spellbook;\n\nimport', 2), ('col)', 2), ('(LeftRightEndObserver)val;\n\n', 2), ('server\n', 2), ('objects.stream().forEach(o', 2), ('tracks', 2), ('com.iluwatar.reactor.framework.AbstractNioChannel;\nimport', 2), ('365);\n', 2), ('ts.assertValue(1L);\n', 2), ('App();\n\n', 2), ('href="https://github.com/ReactiveX/RxJava/wiki/Connectable-Observable-Operators">RxJava', 2), ('inner.request(n);\n', 2), ('outputFile', 2), ('exec;\n', 2), ('@}interface', 2), ('RIGHT_CLOSE', 2), ('(Callable)Functions.createArrayList(defaultCapacityHint);\n', 2), ('RIGHT_CLOSE,', 2), ('MaybeZipArray<T,', 2), ('parent.innerComplete(index,', 2), ('(painlessStruct.name.equals(painlessStructName)', 2), ('query\n', 2), ('repeated', 2), ('isActive="', 2), ('com.iluwatar.featuretoggle.pattern.tieredversion.TieredFeatureToggleVersion}', 2), ('ps1.onNext(1);\n', 2), ('SpscLinkedArrayQueue<T>(bufferSize);\n\n', 2), ('7\n', 2), ('e);', 2), ('coordinates', 2), ('(ignored)\n', 2), ('guarantee', 2), ('IntegrationTest', 2), ('invalidLines.put(2,', 2), ('50000', 2), ('LOGGER.info(s.getName());\n', 2), ('Payload.Simple(payloads));\n', 2), ('1644750035281290266L;\n\n', 2), ('moon"),', 2), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;\nimport', 2), ('mongoClient.getDatabase(dbName);\n', 2), ('Synchronizes', 2), ('java.util.concurrent.Executor;\nimport', 2), ('TestHelper.checkUtilityClass(ExceptionHelper.class);\n', 2), ('super.newSession(request,', 2), ('ReduceSeedObserver(SingleObserver<?', 2), ('paths;\n', 2), ('ArrayList<>(spellbook.getWizards());\n', 2), ('ts.assertValueCount(Flowable.bufferSize());\n', 2), ('seed;\n', 2), ('ts.assertError(TestException.class)\n', 2), ('transformation', 2), ('(checkTerminated(done,', 2), ('LeftRightEndObserver(this,', 2), ('request:', 2), ('O,', 2), ('java.math.BigDecimal;\n\n/**\n', 2), ('OnErrorNotImplementedException.class);\n', 2), ('this.execTime', 2), ('repository.save(nasta);\n\n', 2), ('videos.put(2,', 2), ('assertArrayEquals(new', 2), ('this.presenter', 2), ('resources.', 2), ('assertThat(content,', 2), ('SwitchMapMaybeObserver<R>\n', 2), ('mainly', 2), ('innerComplete(SwitchMapMaybeObserver<R>', 2), ('Result[]', 2), ('java.net.URI;\nimport', 2), ('Function9<Integer,', 2), ('#subscribeActual}', 2), ('java.util.function.Function;\n\n/**\n', 2), ('LOGGER.info("Commit', 2), ('delayed\n', 2), ('.timestamp()\n', 2), ('timeout(Publisher<U>', 2), ('generator;\n\n', 2), ('href="http://reactivex.io/documentation/operators/observeon.html">ReactiveX', 2), ('onOverflow;\n', 2), ('DoAfterObserver<T>(s,', 2), ('final.\n', 2), ('Environment.getFileStore(path).supportsFileAttributeView(PosixFileAttributeView.class);\n', 2), ('createFluentIterable(integers).first();\n', 2), ('vaporizes', 2), ('forwarded.\n', 2), ('String)}', 2), ('visitFile(Path', 2), ('line.trim();\n\n', 2), ('TestException("error"),', 2), ('localNodeSupplier;\n', 2), ('switchOverDelayError()', 2), ('rely', 2), ('first4.get(1));\n', 2), ('}).take(1).doOnSubscribe(new', 2), ('cmd', 2), ('onAfterTerminate()', 2), ('assertError(TestSubscriber<?>', 2), ('pattern);\n', 2), ('s.request(request);\n', 2), ('whitelistClassLoader,', 2), ('resource-tracking', 2), ('org.hamcrest.Matcher;\nimport', 2), ('2.13</a>', 2), ('env.pluginsFile());\n', 2), ('doHashCode()', 2), ('persons.size());\n', 2), ('Disposable,\n', 2), ('requestMore(long', 2), ('super(100L);\n', 2), ('Publisher"))', 2), ('@Action(semantics', 2), ('closes', 2), ('asList()', 2), ('Enterprise', 2), ('.blockingMostRecent(1)\n', 2), ('io.reactivex.internal.util.NotificationLite;\n\npublic', 2), ('.blockingSubscribe(ts);\n\n', 2), ('(!ScalarXMapZHelper.tryAsSingle(source,', 2), ('backpressureDoc', 2), ('(CacheDisposable<T>', 2), ('TestObserver<?>', 2), ('number!"});\n', 2), ('autoConnectImmediately()', 2), ('recently', 2), ('Function4<Integer,', 2), ('@javax.inject.Inject\n', 2), ('prefix,\n', 2), ('(this.output', 2), ('HashSet<>(Arrays.asList(\n', 2), ('@ActionLayout(bookmarking', 2), ('ScanSeedObserver<T,', 2), ('runnableDisposedAsync()', 2), ('Observer\n', 2), ('validated)', 2), ('ScheduledRunnable(decoratedRun,', 2), ('bufferClose', 2), ('virtual/interface', 2), ('ByteBuffer}', 2), ('RuntimeException();', 2), ('bade', 2), ('SingleObservers.\n', 2), ('component.\n', 2), ('customer.', 2), ('SpscLinkedArrayQueue<R>(Observable.bufferSize());\n', 2), ('CompletableFromSingle<T>(this));\n', 2), ('SingleFlatMapCallback<T,', 2), ('wrap(long[][]', 2), ('super.now(unit)', 2), ('.observeOn(Schedulers.single())\n', 2), ('assertTrue(f1.isCancelled());\n\n', 2), ('ambArray(this,', 2), ('moRef.set(observer);\n', 2), ('List<UnicastProcessor<T>>', 2), ('framework', 2), ('start");\n', 2), ('MaybeObserver&lt;?', 2), ('setters', 2), ('FromIterableDisposable<T>', 2), ('java.lang.reflect.Type;\nimport', 2), ('javadocStart);\n', 2), ('checkSource(Flowable.class.getSimpleName(),', 2), ('delete(Student', 2), ('instance()', 2), ('4375739915521278546L;\n\n', 2), ('TestSubscriber<U>();\n\n', 2), ('5).map(new', 2), ('rights;\n\n', 2), ('FuseToFlowable)', 2), ('sd.replace(s);\n', 2), ('fallback\n', 2), ('Listing', 2), ('SampleTimedNoLast<T>(serial,', 2), ('SpscArrayQueue<U>(maxConcurrency);\n', 2), ('java.lang.reflect.*;\nimport', 2), ('cycles;\n', 2), ('FuseToObservable<U>', 2), ('LeafExec', 2), ('BytesRefIterator', 2), ('needs\n', 2), ('variables)', 2), ('.assertValueCount(i)\n', 2), ('shifted', 2), ('"true":\n', 2), ('InMemoryBank', 2), ('carProperties', 2), ('IOException()),', 2), ('(AmbInnerSubscriber<T>', 2), ('SingleFlatMapMaybe<T,', 2), ('onSuccessSlowPathBackpressured()', 2), ('read.\n', 2), ('non-interactive', 2), ('and:\n', 2), ('30);\n\n', 2), ('com.iluwatar.command;\n\nimport', 2), ('*/\n@Entity\n@Table(name', 2), (':");\n', 2), ('watch', 2), ('expanded', 2), ('(null,', 2), ('ES,', 2), ('MergeCompletableObserver', 2), ('executed\n', 2), ('list.get(index)', 2), ('comparator;\n', 2), ('parallel.\n', 2), ('AtomicReference<WindowBoundaryInnerObserver<T,', 2), ('errorCount.incrementAndGet();\n', 2), ("Publisher'\\r\\n", 2), ('tika', 2), ('Thread.sleep(30);\n', 2), ('.append(lc).append(")").append("\\r\\n\\r\\n");\n', 2), ('spells;\n', 2), ('restrictions\n', 2), ('abstraction', 2), ('declaredField.getName()', 2), ('AtomicReference<SwitchMapInnerObserver>();\n', 2), ('interactiveMode', 2), ('Subscriber"))', 2), ('RxThreadFactory(THREAD_NAME_PREFIX,', 2), ('(int)elements);\n', 2), ('MethodHandle>', 2), ('FindCustomer("123",', 2), ('(keyPassword', 2), ('wrappers', 2), ('byte.class;\n', 2), ('("3".equals(cmd))', 2), ('org.elasticsearch.example;\n\nimport', 2), ('flattenAsFlowable}', 2), ('LOGGER.info("(3)', 2), ('avoid\n', 2), ('SQL', 2), ('WindowOperation)', 2), ('(checkTerminated(empty,', 2), ('TestException("inner"))))\n', 2), ('repeats.\n', 2), ('key);\n\n', 2), ('started\n', 2), ('HorrorMovie(),\n', 2), ('rsa.update(ref.bytes,', 2), ('(ci', 2), ('lock.newCondition();\n', 2), ('RxJavaPlugins.initComputationScheduler(c));\n', 2), ('slightly', 2), ('com.iluwatar.featuretoggle.pattern.tieredversion.TieredFeatureToggleVersion\n', 2), ('times(1)).onError(exception);\n\n', 2), ('checkTerminate()', 2), ('sqlQuery.uniqueResult();\n', 2), ('(LotteryTicketId', 2), ('Throwable.\n', 2), ('testTimeInterval()', 2), ('BigDecimal("100")));\n\n', 2), ('Maybe.<Integer>empty().subscribeOn(Schedulers.computation());\n', 2), ('ArrayBlockingQueue<Notification<T>>(1);\n', 2), ('this);\n\n', 2), ('(type)', 2), ("'only_fqn'", 2), ('spellbookDao;\n', 2), ('aOrAn(StringBuilder', 2), ('testCovarianceOfMerge()', 2), ('(Writer', 2), ('assertEquals(expectedToString,', 2), ('assertThat(\n', 2), ('smallerJavaMajorVersionUpperBound', 2), ('50);\n', 2), ('.doOnEvent(new', 2), ('"1212-121212",', 2), ('worker.isDisposed();\n', 2), ('onFailure(Exception', 2), ('2));\n\n', 2), ('!isNextConsumed', 2), ('blocking\n', 2), ('100)];\n', 2), ('producerIndex;\n\n', 2), ('csvReader.read();\n', 2), ('setVisible(true);\n', 2), ('null,\n', 2), ('otherObserver;\n', 2), ('f.get();', 2), ('OtherObserver<T,', 2), ('termination.', 2), ('}\n\n\n}', 2), ('2).test();\n\n', 2), ('DisposableMaybeObserver<T>', 2), ('inventorySize;\n', 2), ('member.partyAction(action);\n', 2), ('System.getProperty("user.home");\n', 2), ('outer:\n', 2), ('ProtectionDomain[]', 2), ('5L);\n', 2), ('"text/plain",', 2), ('assertTrue(q.offer(5,', 2), ('(SDeclaration', 2), ('w.schedulePeriodically(action,', 2), ('ObjectMapper();\n', 2), ('s.onSubscribe(EmptyDisposable.NEVER);\n', 2), ('T&gt;', 2), ('(via', 2), ('failOnEmpty)', 2), ('TestHelper.checkDisposed(Observable.just(1).hide()\n', 2), ('userAccount2', 2), ('ArrayList<List<Integer>>();\n\n', 2), ('cycles)', 2), ('bridge', 2), ('invalidDeferredRequest()', 2), ('sourceLoop:\n', 2), ('timezone', 2), ('Single.zip(pp0.single(0),', 2), ('interface.</p>\n', 2), ('window.\n', 2), ('nasta.setName("Barbora");\n', 2), ('IllegalStateException(\n', 2), ('randomNum', 2), ('DisposeOnCancel', 2), ('ObjectHelper.requireNonNull(resumeFunction,', 2), ('left);\n\n', 2), ('telescoping', 2), ('TLeft>();\n', 2), ('org.reactivestreams.Subscription;\n\npublic', 2), ('assertThat(tempPathView.readAttributes().group(),', 2), ('a[n++]', 2), ('Map<Character,', 2), ('source!",', 2), ('ms.onSuccess(3);\n', 2), ('out);\n\n', 2), ('(account', 2), ('interfaces,\n', 2), ('NullPointerException(RuntimeException(IOException))");\n', 2), ('TestObserver<T>();\n\n', 2), ('LOGGER.info("(4)', 2), ('resourceDisposer\n', 2), ('TestEnvironment(50));\n', 2), ('getTypeInternal(struct,', 2), ('SpscLinkedArrayQueue<C>(bufferSize());\n', 2), ('connect(DEFAULT_DB,', 2), ('"foo".getBytes(StandardCharsets.UTF_8));\n\n', 2), ('CancellationException', 2), ("','", 2), ('unwrap(Class<T>', 2), ('iterations");\n', 2), ('composite.add(source.subscribeWith(ds));\n', 2), ('AtomicReference<Subscriber<?>>();\n', 2), ('"output.txt";\n', 2), ('cakeBean', 2), ('fighterClass)', 2), ('generics.\n', 2), ('app.\n', 2), ('getNonExistingCustomerId();\n', 2), ('cakeLayerInfos)', 2), ('observer.blockingGet();\n', 2), ('lock.\n', 2), ('TestException("First")));\n', 2), ('sa.request(Long.MAX_VALUE);\n\n', 2), ('multiton\n', 2), ('EnumSet<IndexType>', 2), ('found.get();\n', 2), ('IllegalArgumentException("n', 2), ('sequentially', 2), ('groupConfigPath', 2), ("You're", 2), ('shivering', 2), ('token)', 2), ('BlockingQueue<Message>', 2), ('User>', 2), ("iterator's", 2), ('PublishSubject.\n', 2), ('SingleDelayWithPublisher<T,', 2), ('fail();\n', 2), ('Observer<R>', 2), ('nextInnerSuccessRace()', 2), ('full,', 2), ('updates', 2), ('AsyncDisposable<T>', 2), ('terminate.', 2), ('i.setText("");\n', 2), ('(String)classes[i', 2), ('wo', 2), ('TakeUntilOtherMaybeObserver<U>', 2), ('B>(observer,', 2), ('userDn,', 2), ('`reduce`', 2), ('TLeft>', 2), ('to.assertFailure(IOException.class)\n', 2), ('path.\n', 2), ('failOnEmpty;\n', 2), ('parent.openComplete(this);\n', 2), ('eventType', 2), ('actual.onNext(poll());\n', 2), ('creation.', 2), ('upstreamCount', 2), ('name.', 2), ('T[]', 2), ('this.error.flush();\n', 2), ('get(Stats', 2), ('java.sql.SQLFeatureNotSupportedException;\nimport', 2), ('errors.get(0).getCause();\n', 2), ('io.reactivex.internal.schedulers.TrampolineScheduler;\n\npublic', 2), ('fish,', 2), ('PrintStream(new', 2), ('BasicFuseableConditionalSubscriber<T,', 2), ('ParameterizedMessage("[discovery-file]', 2), ('//NTLNTL\n', 2), ('"callable', 2), ('customerId,', 2), ('singletonList;\n', 2), ('predecessor,', 2), ('doHandle(CliTerminal', 2), ('latch.getCount()', 2), ('runnableDisposedAsyncTimed()', 2), ('Expectations()', 2), ('stack', 2), ('path.toRealPath();\n', 2), ('delay:\n', 2), ('events.add(new', 2), ('advantages', 2), ('o.throttleWithTimeout(500,', 2), ('assertEquals("none",', 2), ('userAccount5', 2), ('contains(Object', 2), ('strategy.\n', 2), ('Asynchronously', 2), ('Maybe>()', 2), ('structsMap.get(painlessTypeName);\n\n', 2), ('dl', 2), ('XORShift', 2), ('Collections.unmodifiableMap(values);\n', 2), ('logger.warn((Supplier<?>)', 2), ('ObjectHelper.requireNonNull(combiner.apply(objects),', 2), ('consumerNode.get();\n', 2), ('-5556924161382950569L;\n\n', 2), ('(NotificationLite.isError(buf))', 2), ('Cancellable\n', 2), ('assertTrue(persons.stream().allMatch((item)', 2), ('errors.addThrowable(new', 2), ('doOnSuccess}', 2), ('ObjectHelper.requireNonNull(run,', 2), ('responses.\n', 2), ('assertEquals("Overflow!', 2), ('disposeBeforeSwitchInOnNext()', 2), ('no.\n', 2), ('Observable.timer(100,', 2), ('delivers', 2), ('Movie>', 2), ('s.assertNoValues();\n', 2), ('kdx))\n', 2), ('Flowable.never().blockingLatest().iterator();\n\n', 2), ('io.reactivex.exceptions.TestException;\n\n/**\n', 2), ('setHead(newNode);\n', 2), ('(NoSuchElementException', 2), ('subscribeInner(p);\n', 2), ('(key)', 2), ('"Main");\n', 2), ('ObservableSource.");\n', 2), ('source.connect(connection);\n', 2), ('ts.assertResult(0,', 2), ('DisposableHelper.dispose(d);\n\n', 2), ('PersonRepository},', 2), ('parallelism;\n\n', 2), ('io.reactivex.internal.util.EmptyComponent;\nimport', 2), ('.concatMapSingleDelayError(new', 2), ('t.onNext((Integer)value', 2), ('t.onError(new', 2), ('1000);', 2), ('bs2);\n', 2), ('autoConnect(1);\n', 2), ('this.painlessParameterTypeNames', 2), ('this.latest', 2), ('w.schedulePeriodically(r,', 2), ('manipulate', 2), ('onCompleteThrows()', 2), ('state[3]', 2), ('completeDetaches()', 2), ('LEFT_CLOSE)', 2), ('handlers', 2), ('authorcount', 2), ('cn', 2), ('assertFalse(policy.implies(new', 2), ('operation.', 2), ('{@code\n\n', 2), ('IndexResolution.invalid(\n', 2), ('replaceResource(int', 2), ('sendReply(AbstractNioChannel', 2), ('array[1]', 2), ('Publisher[count', 2), ('CompletableObserver[]', 2), ('.limit(6)\n', 2), ('level1', 2), ('elementAtIndex1OnEmptySource()', 2), ('9));\n', 2), ('RuntimeException("Journal', 2), ('javaAugmentedClassName;\n\n', 2), ('</ol>\n', 2), ('Anno",', 2), ('assertEquals(new', 2), ('60000)\n', 2), ('"Steel', 2), ('SingleObserver>()', 2), ('Login', 2), ('o)\n', 2), ('best', 2), ('(Royalty', 2), ('Functions.justFunction(Maybe.empty()));\n', 2), ('ObjectHelper.requireNonNull(subscriber,', 2), ('testDematerialize2()', 2), ('randomIntFrom0to(500));\n', 2), ('Poll', 2), ('connection.prepareStatement("SELECT', 2), ('href="https://github.com/ReactiveX/RxJava/wiki/Implementing-Your-Own-Operators">RxJava', 2), ('produced(p);\n', 2), ('shoot', 2), ('ps.concatMap(new', 2), ('library', 2), ('index));\n', 2), ('whitelistStruct', 2), ('inventory,', 2), ('enabled",', 2), ('SerializedSubscriber<U>(s),', 2), ('cancelled();\n\n', 2), ('isCancelled();\n\n', 2), ('"three"', 2), ('unboxFrom,', 2), ('(cancelled.compareAndSet(false,', 2), ('boundary));\n', 2), ('com.iluwatar.databus.DataType;\nimport', 2), ('flying', 2), ('ParallelConcatMap<T,', 2), ('classpath:', 2), ('connectivity', 2), ('JUnit', 2), ('expectedDetails', 2), ('unboxTo,', 2), ('Executors.newSingleThreadScheduledExecutor();\n\n', 2), ('URI', 2), ('present)\n', 2), ('npe.initCause(ex);\n', 2), ('(Map.Entry)', 2), ('wo.w;\n', 2), ('(count.get()', 2), ('ObservableWithLatestFromMany(@NonNull', 2), ('Observable.concat(Observable.just(1,', 2), ('objOut.writeObject(map);\n', 2), ('(MaybeSource<?>)', 2), ('"tom@hanks.com");\n', 2), ('memoryLimitInMb;\n', 2), ('#onError}.\n', 2), ('delay),', 2), ("sequence's", 2), ('qd.isEmpty();\n\n', 2), ('com.iluwatar.hexagonal.database.LotteryTicketRepository;\nimport', 2), ('lift()', 2), ('LOGGER.info("HOARMURATH={}",', 2), ('dummy', 2), ('unsubscribeOn}', 2), ('Displays', 2), ('whitelistConstructor.painlessParameterTypeNames);\n', 2), ('title()', 2), ('onNextNoSubscription()', 2), ('Expressions', 2), ('SampleTimedEmitLast<T>', 2), ('RxJavaPlugins.onCompletableLift(cop));\n//\n//', 2), ('reportSubscriptionSet();\n', 2), ('cs.getThrowable()', 2), ('LinkedQueueNode<E>', 2), ('ios', 2), ('terry);\n\n', 2), ('access).\n', 2), ('scheduler.', 2), ('METHOD,', 2), ('testElementAtOrDefault()', 2), ('com.iluwatar.hexagonal.banking;\n\nimport', 2), ('returns.', 2), ('Flowable.intervalRange(Long.MAX_VALUE', 2), ('ConcatMapInnerObserver(this);\n', 2), ('UdpLoggingClient("Client', 2), ('scanner.next();\n', 2), ("implementation's\n", 2), ('(A)', 2), ('t.onError(ex);\n', 2), ('updated', 2), ('ps.onNext(m);\n', 2), ('beans', 2), ('cancelTimer()', 2), ('FilePermission("foo",', 2), ('}).subscribe(input.newSubscriber());\n', 2), ('SubscriptionHelper.setOnce(mainSubscription,', 2), ('(FlowableScalarXMap.tryScalarXMapSubscribe(source,', 2), ('SocketChannel', 2), ('int)}', 2), ('subscribed.\n', 2), ('was\n', 2), ('factory.apply(first,', 2), ('SwitchMapInnerObserver(this);\n\n', 2), ('timers', 2), ('this.isEqual', 2), ('sign', 2), ('SampleTimedNoLast<T>', 2), ('.concatMapSingle(Functions.justFunction(Single.just(1)))\n', 2), ('testDistinctOfNormalSourceWithKeySelector()', 2), ('concatReportsDisposedOnComplete()', 2), ('open(Open', 2), ('resumeFunction)', 2), ('in.\n', 2), ('otherDisposable;\n\n', 2), ('assertTrue(list.isEmpty());\n', 2), ('readString(Scanner', 2), ('others.length;\n', 2), ('c.subscribe(shared);\n', 2), ('org.springframework.test.context.junit.jupiter.SpringExtension;\nimport', 2), ('displayData(String', 2), ('never()).onNext(0);\n', 2), ('java.util.stream.Collectors.toList;\n\npublic', 2), ('that.\n', 2), ('emitter\n', 2), ('testToFuture()', 2), ('context.close();\n\n', 2), ('handled\n', 2), ('.takeLast(0).count().blockingGet();\n', 2), ('assertEquals(Integer.valueOf(8),', 2), ('transaction', 2), ('secureSettings.setString("xpack.ssl.keystore.secure_password",', 2), ('this.email', 2), ('m.invoke(null));\n//', 2), ('Function8<Integer,', 2), ('.assertFailure(NullPointerException.class)\n', 2), ('TenantTest', 2), ('drops', 2), ('AtomicReference<LinkedQueueNode<T>>', 2), ('}\n}\n\n', 2), ('carProperties.put(HasModel.PROPERTY,', 2), ('(q.consumerIndex()', 2), ('immediately\n', 2), ('lazySet(FUSED_CONSUMED);\n', 2), ('Flowable.fromArray(array);\n\n', 2), ('futureResult4', 2), ('assertUndeliverable(List<Throwable>', 2), ('AssertionError(e);\n', 2), ('f.mergeWith(Maybe.just(1));\n', 2), ('.assertError(RuntimeException.class)\n', 2), ('com.iluwatar.featuretoggle.pattern.propertiesversion;\n\nimport', 2), ('Mark', 2), ('next.getName(),', 2), ('groups\n', 2), ('Executors.newFixedThreadPool(3);\n', 2), ('CertUtils.generateSignedCertificate(new', 2), ('Optional.empty()\n', 2), ('TimeoutException}', 2), ('(rc.subscriberCount', 2), ('observeOn(final', 2), ('createSingle().subscribe(ts);\n//\n//', 2), ('inner.get()', 2), ('ben', 2), ('ParallelFilterTry<T>(this,', 2), ('this.threadFactory', 2), ('(wip.get()', 2), ('react', 2), ('java.util.function.BiFunction;\nimport', 2), ('(sync.decrementAndGet()', 2), ('EmptySubscription.complete(subscriber);\n', 2), ('recoverable', 2), ('testOnCompletedThrows()', 2), ('publish\n', 2), ('Flowable.just(1).concatWith(Flowable.<Integer>never())\n', 2), ('(DatagramPacket)', 2), ('"Avatar",', 2), ('Schedulers.single();\n', 2), ('Customer(existingCustomer.getId(),', 2), ('assertEquals(response,', 2), ('now;\n', 2), ('o.blockingSingle());\n', 2), ('struct.clazz;\n', 2), ('way\n//', 2), ('"trust', 2), ('com.iluwatar.semaphore;\n\nimport', 2), ('MaybeEmitter<T>', 2), ('numberOfSubscribers;\n', 2), ('wip;\n', 2), ('#hasObservers()}', 2), ('server:-");\n', 2), ('upstreamCount.get());\n', 2), ('CancellationException());\n', 2), ('dispatcher)', 2), ('Exceptions.throwIfFatal(e);\n\n', 2), ('stopped");\n', 2), ('Emulates', 2), ('listOfUserAccounts', 2), ('(winner.compareAndSet(0,', 2), ('THREAD_COUNT', 2), ('assertEquals(TASK_COUNT,', 2), ('Action}\n', 2), ('Schedulers.from(executor);\n', 2), ('Future<List<String>>', 2), ('this.it', 2), ('submitted\n', 2), ('UserAccount("004",', 2), ('Caching', 2), ('.doAfterTerminated(new', 2), ('[{}]",', 2), ('PromiseSupport<T>', 2), ('CustomSingleOperator&lt;Integer&gt;())\n', 2), ('ConnectConsumer();\n', 2), ('this.instanceId', 2), ('silver', 2), ('painlessFieldClass)', 2), ('leak!\n', 2), ('-3517602651313910099L;\n\n', 2), ('onSuccess.\n', 2), ('(temporarily)', 2), ('clients;\n\n', 2), ('SwitchMapInnerObserver<Object,', 2), ('.assertNoErrors();\n', 2), ('(readObject', 2), ('this.connect(connection);\n', 2), ('r--;\n', 2), ('((FuseToFlowable<T>)this).fuseToFlowable();\n', 2), ('inner[index].id', 2), ('general', 2), ('(E)', 2), ('wip.getAndIncrement();\n\n', 2), ('nextInnerErrorRace()', 2), ('IllegalArgumentException(paramName', 2), ('-8296689127439125014L;\n\n', 2), ('singleSupplier)', 2), ('nextValue()', 2), ('Single.just(1).delaySubscription(100,', 2), ('1,\\"title\\":', 2), ('this.failOnEmpty', 2), ('subscribe(s);\n', 2), ('downstream.', 2), ('accountsCollectionName)', 2), ('parts\n', 2), ('ExceptionHelper.wrapOrThrow(n.getError());\n', 2), ('2nd', 2), ('address,', 2), ('geoIpConfigDirectory', 2), ('SubscriptionHelper.set(s,', 2), ('numbers.length;', 2), ('System.nanoTime();\n', 2), ('RepeatObserver(Observer<?', 2), ('lockInterruptibly()', 2), ('a.equals(b);\n', 2), ('adhere', 2), ('#clear()}</li>\n', 2), ('testScheduler.advanceTimeBy(1000,', 2), ('monad', 2), ('0).toFlowable().blockingSingle().intValue());\n', 2), ('io.reactivex.exceptions.Exceptions;\n\n/**\n', 2), ('resources\n', 2), ('ConcatMapMaybeSubscriber<T,', 2), ('objectToExplain;\n', 2), ('(goodValue', 2), ('only_fqn', 2), ('bus.subscribe(new', 2), ('AccountAggregate.getAccount(ACCOUNT_OF_JON);\n\n', 2), ('LOGSTASH_TEMPLATE_NAME', 2), ('DisposableHelper.set(resource,', 2), ('ParallelReduceFullInnerSubscriber<T>[]', 2), ('tenant)', 2), ('p.onNext(v);\n', 2), ('doOnSubscribe', 2), ('ps.switchMapCompletable(Functions.justFunction(cs))\n', 2), ('Collections.<Integer>emptyList());\n\n', 2), ("f.getParentFile().getAbsolutePath().replace('\\\\',", 2), ('toSingle}', 2), ('result[2]', 2), ('(requested.compareAndSet(current,', 2), ('assertFalse("Dispose', 2), ('QueueDisposable.BOUNDARY);\n', 2), ('upgraded");\n', 2), ('io.reactivex.schedulers.Timed;\n\npublic', 2), ('"Reynolds");\n', 2), ('LOGGER.info("testAppUsingSameThreadDispatcher', 2), ('DebounceTimedObserver(Observer<?', 2), ('fish);\n', 2), ('winner.lazySet(0);', 2), ('this.time;\n', 2), ('"mFowler");\n', 2), ('map,', 2), ('stdOut', 2), ('TimeUnit.MILLISECONDS;\n\n', 2), ('LOGGER.info("");\n\n', 2), ('assertNotNull(last);\n', 2), ('assertEquals(readFirstLine(OUTPUT_FILE),', 2), ('leave(-missed);\n', 2), ('(ReflectiveOperationException', 2), ('try-with-resources).\n', 2), ('realPath', 2), ('checkedException;\n', 2), ('ticket1', 2), ('assertFalse(rco.isDisposed());\n', 2), ('leftIndex++;\n', 2), ('level,\n', 2), ('name));\n', 2), ('wrap}', 2), ('"doAfterSuccess', 2), ('5000,', 2), ('currentWeather', 2), ('.blockingSubscribe(cons,', 2), ('"title",', 2), ('cpu));\n', 2), ('sun."});\n', 2), ('this.parameterName', 2), ('wrap()', 2), ('10).takeLast(1).subscribe(s);\n', 2), ('actuals', 2), ('filtered', 2), ('bookDTos', 2), ('sd.set(d);\n\n', 2), ('swallow', 2), ('npe.initCause(e);\n', 2), ('ps2.onError(ex);\n', 2), ('acquiring', 2), ('b.set(true);\n', 2), ('skip,\n', 2), ('com.iluwatar.abstractdocument.AbstractDocument;\n\n/**\n', 2), ('io.reactivex.maybe;\n\nimport', 2), ('(!nonEmpty)', 2), ('TestHelper.assertError(to,', 2), ('lazySet(parent);\n', 2), ('Schedulers.io().scheduleDirect(new', 2), ('Functions.justFunction(Observable.just(1)),\n', 2), ('OrcsTest()', 2), ('maintains', 2), ('BaseEntity>', 2), ('BOUNDARY_DISPOSED', 2), ('actual.onNext(t.getValue());\n', 2), ('accept(List<Boolean>', 2), ('Scheduler.createWorker()}', 2), ('Iterator();\n', 2), ('IllegalArgumentException("items', 2), ('com.iluwatar.balking;\n\nimport', 2), ('Pattern.CASE_INSENSITIVE));\n', 2), ('is.run();\n\n', 2), ('java.nio.file.NoSuchFileException;\nimport', 2), ('add(Customer', 2), ('Amb', 2), ('end,', 2), ('closer,', 2), ('firstName,', 2), ('ScalarCallable<Object>', 2), ('dig', 2), ('this.evictedGroups', 2), ('emit,', 2), ('assertNotNull(asyncResult,', 2), ('1);', 2), ('onLift(Operator<?', 2), ('MaybeMap.MapMaybeObserver<T,', 2), ('CompletableOnSubscribe', 2), ('#toSerialized()}', 2), ('-7650903191002190468L;\n\n', 2), ('problem.', 2), ('abilities.size());\n', 2), ('AtomicReference<Notification<T>>();\n\n', 2), ('TestObserver<Boolean>();\n\n', 2), ('pitfalls', 2), ('2).elementAt(2).blockingGet());\n', 2), ('timeout(MaybeSource<U>', 2), ('-1,', 2), ('SingleTimerTest', 2), ('times(1)).onNext("E");\n', 2), ('carProperties.put(HasParts.PROPERTY,', 2), ('TestHelper.checkUtilityClass(FlowableToFuture.class);\n', 2), ('"42309fd"),', 2), ('Weapon', 2), ('pp1.single(0),', 2), ('video,', 2), ('href="http://reactivex.io/documentation/operators/subscribeon.html">ReactiveX', 2), ('merge(Iterable<?', 2), ('Flowable.<Long>never()\n', 2), ('error(final', 2), ('ObjectHelper.requireNonNull(onFinally,', 2), ('repository.save(ticket);\n', 2), ('https://github.com/elastic/elasticsearch/issues/21534\n', 2), ('LOGGER.info("ADUNAPHEL={}",', 2), ('(size', 2), ('(javaAugmentedClass', 2), ('[NSA]"));\n', 2), ('Set<T>', 2), ('wizards.add(mock(Wizard.class));\n\n', 2), ('Adapter', 2), ('output)', 2), ('value.getAndSet(args)', 2), ('consults', 2), ('opaque', 2), ('scheduler.scheduleDirect(parent);\n\n', 2), ('this.capacity', 2), ('right.size());\n', 2), ('elementAtOrErrorError()', 2), ('Observable<T>,', 2), ('Assert.fail("Failed', 2), ('Naftalin', 2), ('sourceCount)', 2), ('RxJavaPlugins.getInstance().registerObservableExecutionHook(new', 2), ('methodDefEnd', 2), ('ObservableSource<Long>()', 2), ('permissions,', 2), ('while((ref', 2), ('ds;\n\n', 2), ('org.junit.Assert.*;\n\npublic', 2), ('rails\n', 2), ('LOGGER.info(warrior.toString());\n\n', 2), ('.timeInterval(TimeUnit.SECONDS)\n', 2), ('pattern.matcher(concreteIndex).matches())', 2), ('"Action', 2), ('CacheDisposable[n', 2), ('StoppingData', 2), ('fusedPollThrows()', 2), ('Semaphore(0);\n', 2), ('Sex.MALE,', 2), ('newCapacity)', 2), ('AccountAggregate.getAccount(ACCOUNT_OF_DAENERYS);\n', 2), ('cl', 2), ('firstError()', 2), ('step.\n', 2), ('next.getCalories()));\n', 2), ('6.3.0)', 2), ('getStream(con,', 2), ('originator,', 2), ('assertTrue(rmo.errors.isEmpty());\n', 2), ('OtherObserver(SingleObserver<?', 2), ('node.previous;\n', 2), ('valueless', 2), ('Flowable}\n', 2), ('CustomScheduler', 2), ('assertEquals(num,', 2), ('offending', 2), ('CompletableSubject[]', 2), ('[{\\"actions\\":[\\"filter_results\\",\\"skip_sampling\\"],\\"conditions_connective\\":\\"and\\","', 2), ('innerNext(int', 2), ('User}.', 2), ('.takeWhile(new', 2), ('byte[0]);\n', 2), ('bt.hasNext()', 2), ('IndexResolution.valid(new', 2), ('Function4<?', 2), ('internals', 2), ('recegnized");\n', 2), ('this.ds', 2), ('continues', 2), ('delegate', 2), ('"James', 2), ('DelayErrorInnerObserver<R>', 2), ('lefts.values())', 2), ('entity.getName());\n', 2), ('Multiple', 2), ('verify(observer).onError(checkedException);\n', 2), ('App})', 2), ('compositeList(to.errors().get(0));\n\n', 2), ('eEvans', 2), ('scheduled\n', 2), ('Math.max(Thread.MIN_PRIORITY,', 2), ('mainSubscription.get().request(lim);\n', 2), ('repository.delete(2L);\n\n', 2), ('com.iluwatar.factorykit;\n\nimport', 2), ('m\n', 2), ('href="http://reactivex.io/documentation/operators/just.html">ReactiveX', 2), ('testFindAllByAgeBetweenSpec()', 2), ('SubscriberFusion.assertFusion(ts,', 2), ('<T9>', 2), ('RxJavaCompletableExecutionHook()', 2), ('java.io.FilePermission;\nimport', 2), ('String}', 2), ('(Publisher<?>)', 2), ('disposeOther();\n\n', 2), ('randomEvent(String', 2), ('architecture', 2), ('ObserverFusion.newTest(QueueFuseable.ASYNC);\n\n', 2), ('cause.getCause();\n', 2), ('out.toByteArray());\n\n', 2), ('port;\n\n', 2), ('System.out.println("The', 2), ('(SubscriptionHelper.setOnce(this.upstream,', 2), ('long[randomBoolean()', 2), ('read\n', 2), ('Maybe<Void>', 2), ('java.io.Serializable;\nimport', 2), ('assertEquals(expectedCount,', 2), ('com.iluwatar.event.sourcing.processor.DomainEventProcessor;\nimport', 2), ('onSuccess\\r\\n', 2), ('CliSession', 2), ('winningNumbers', 2), ('assertTrue(appender.logContains("Treasure', 2), ('Scheduler#scheduleDirect(Runnable)}', 2), ('settings;\n', 2), ('SingleSource<?>', 2), ('SSLContext', 2), ('QueueFuseable<T>,', 2), ('ConcatMapEagerDelayErrorSubscriber<T,', 2), ('names\n', 2), ('observer.onNext(goodValue);\n', 2), ('TakeUntilOtherMaybeObserver<U>\n', 2), ('batchSize)', 2), ('(of', 2), ('observer.onNext(4);\n', 2), ('pools,', 2), ('logged', 2), ('"Sword', 2), ('DataType}', 2), ('password)', 2), ('id.orElse(-1L),', 2), ('painlessParametersTypes.add(painlessParameterClass);\n', 2), ('justConditional()', 2), ('read,', 2), ('PropertiesFeatureToggleVersion#isEnhanced()}.', 2), ('ops', 2), ('filepaths)', 2), ('delete(Customer', 2), ('ObservableTransformer<T,', 2), ('storing', 2), ('Emit', 2), ('io.reactivex.internal.queue.SpscLinkedArrayQueue;\n\npublic', 2), ('creatures.stream().filter(new', 2), ('com.iluwatar.servicelayer.wizard.WizardDao;\nimport', 2), ('manipulation', 2), ('Maybe.zip(pp0.singleElement(),', 2), ('resourceSupplier', 2), ('Switches', 2), ('com.google.common.collect.Lists;\n\n/**\n', 2), ('assertUndeliverable(errors,', 2), ('rights.put(idx,', 2), ('weather,', 2), ('introduces', 2), ('as.onError(t);\n', 2), ('java.util.Properties;\n\nimport', 2), ('maxSupportedSubscribers()', 2), ('observable.', 2), ('PublishSubscription[n', 2), ('structural', 2), ('architecture,', 2), ('burning', 2), ('until)', 2), ('"XX";\n', 2), ('s.advanceTimeTo(1300,', 2), ('System.out.println("Runs:', 2), ('TimeUnit.DAYS);\n//\n//', 2), ('org.objectweb.asm.commons.Method.getMethod(javaMethod);\n', 2), ('TcpLoggingClient("Client', 2), ('ambFirstDone()', 2), ('resource.cancel();\n', 2), ('timeMs;\n', 2), ('com.iluwatar.cqrs.queries;\n\nimport', 2), ('serial.onComplete();\n', 2), ('onSuccessNull()', 2), ('getWriteableName()', 2), ('DEFAULT_DB', 2), ('Sci-Fi",', 2), ('assertEquals("zero",', 2), ('resumeFunction\n', 2), ('this.clientName', 2), ('this.spell', 2), ('bigger', 2), ('flows', 2), ('client.start();\n\n', 2), ('outputStream', 2), ('checkResult', 2), ('boolean\n', 2), ('assertEquals(nonExistingCustomer,', 2), ('customerStream', 2), ('state:', 2), ('javaMethodName,\n', 2), ('emitter.dispose();\n', 2), ('setting,', 2), ('done();\n\n', 2), ('addressLineOne', 2), ('fromCallableThrows()', 2), ('closing\n', 2), ('smallest', 2), ('pendingWrite;\n', 2), ('w.onError(e);\n', 2), ('difficult', 2), ('AccessControlContext(\n', 2), ("Method's", 2), ('MaybeEmpty', 2), ('values[doc];\n', 2), ('publishCompleted(final', 2), ('ballItem.click();\n\n', 2), ('functionalMethod)', 2), ('parent.disposables.add(left);\n', 2), ('v));\n', 2), ('Assert.fail("Incomplete!', 2), ('toppings\n', 2), ('service.saveNewLayer(new', 2), ('nextNode', 2), ('com.iluwatar.abstractdocument.domain.Car;\nimport', 2), ('LOGGER.info(o.toString()));\n', 2), ('LoadBalancer', 2), ('SingleFlatMap<T,', 2), ('actual.onError(npe);\n', 2), ('SingleObserver&lt;?', 2), ('onErrorComplete}', 2), ('5).concatWith(Flowable.<Integer>error(new', 2), ('(optional.isPresent())', 2), ('s.schedulePeriodicallyDirect(Functions.EMPTY_RUNNABLE,', 2), ('"second");\n', 2), ('timerRunning;\n\n', 2), ('assertEquals(integers.get(2),', 2), ('(3)', 2), ('"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");\n', 2), ('testWithMultipleSubscribersStartingAtSameTime()', 2), ('input.size);\n', 2), ('DisposableHelper.isDisposed(this.get());\n', 2), ('q.lazySet(null);\n', 2), ('requested.\n', 2), ('.delaySubscription(new', 2), ('Completable.mergeDelayError(Flowable.just(new', 2), ('DeferredScalarSubscription<Boolean>', 2), ('java.nio.file.DirectoryStream;\nimport', 2), ('assertEquals(Long.MIN_VALUE,', 2), ('ps1.onError(ex1);\n', 2), ('boundarySupplier)', 2), ('DisposableHelper.dispose(rc);\n', 2), ('is.dispose();\n', 2), ('org.mockito.Mockito.spy;\n\n/**\n', 2), ('minFrequency', 2), ('(Long)q.peek();\n', 2), ('addString3)\n', 2), ('existingValue', 2), ('comparator;\n\n', 2), ('actionGet(long', 2), ('MergeInnerCompletableObserver(s,', 2), ('Functions.ON_ERROR_MISSING,', 2), ('randomIntFrom0to(numInstances),', 2), ('Resurgence",', 2), ('replenishMain++;\n', 2), ('bookcount', 2), ('warrior",', 2), ('@MethodSource("getTestData")\n', 2), ('ResultSetMetaData)', 2), ('observer.takeNext();\n', 2), ('stateless', 2), ('qd.requestFusion(QueueDisposable.ANY', 2), ('buffer.', 2), ('letters)', 2), ('separation', 2), ('InputStreamReader(input,', 2), ('to.', 2), ('now\n', 2), ('op;\n', 2), ('EqualObserver<T>', 2), ('PublishSubscription<T>', 2), ('completable\n', 2), ('*/\n/*', 2), ('nextSupplier.apply(t);\n', 2), ('LotteryTicketId', 2), ('otherArray,', 2), ('3256698449646456986L;\n\n', 2), ('delayErrors,\n', 2), ('java.sql.Statement;\nimport', 2), ('w.schedulePeriodically(new', 2), ('.assertResult("5");\n', 2), ('.assertValueCount(512)\n', 2), ('createElement(int', 2), ('Converter<UserDto,', 2), ('lazySet(ci,', 2), ('org.elasticsearch.repositories.gcs;\n\nimport', 2), ('returnList', 2), ('testCollectorFailureDoesNotResultInTwoErrorEmissions()', 2), ('merger.apply(Collections.<Integer>emptyList(),', 2), ('(line.endsWith(")")', 2), ('(painlessMethod', 2), ('largerJavaMajorVersionLowerBound,\n', 2), ('disposeOther()', 2), ('assertTrue("Fusion', 2), ('BytesRef', 2), ('hashCode', 2), ('Mockito.never()).onNext("two");\n', 2), ('edited', 2), ('#call()}.', 2), ('TestSubscriber<U>', 2), ('org.elasticsearch.index.fielddata;\n\nimport', 2), ("CompletableObserver}'s", 2), ('com.iluwatar.flux.action.Content;\nimport', 2), ('CustomDriftScheduler();\n\n', 2), ('manner.', 2), ('Field(String', 2), ('PublishSubscription[]', 2), ('asyncResult)', 2), ('getFunds(String', 2), ('"Eric', 2), ('terminate;\n\n', 2), ('task.setFirst(new', 2), ('"32",', 2), ('times(1)).call();\n\n', 2), ('ec.executeChild(this,', 2), ('flaw', 2), ('ExecutableInput>>', 2), ('"correct"', 2), ('arbiter.setSubscription(s);\n', 2), ('ConcatMapMaybeMainObserver<T,', 2), ('o.materialize().dematerialize();\n\n', 2), ('queue.offer(NotificationLite.error(t));\n', 2), ('1")));\n//\n//', 2), ('Functions.EMPTY_RUNNABLE;\n', 2), ('.blockingGet();\n\n', 2), ('disposedUpfront()', 2), ('parse(final', 2), ('requestRace()', 2), ('NullPointerException("onSuccess', 2), ('500;', 2), ('10),', 2), ('*/\n@Target(ANNOTATION_TYPE)\n@Retention(RUNTIME)\npublic', 2), ('v.unsubscribeOn(Schedulers.single());\n', 2), ('initialState)', 2), ('@Bean\n', 2), ('mergeDelayError(Iterable<?', 2), ('flatMapCompletable(Blackhole', 2), ('cakeInfo)', 2), ('QueueFuseable.NONE)', 2), ('apply(Single<Integer>', 2), ('factorial', 2), ('targetPath', 2), ('runnables', 2), ('end);\n', 2), ('CompletableObserver>()', 2), ('backpressure.', 2), ('videos.put(1,', 2), ('javax.swing.JScrollPane;\nimport', 2), ('inner));\n', 2), ('innerScheduler;\n', 2), ('(results.size()', 2), ('scheduler.advanceTimeBy(400,', 2), ('RxJavaPlugins.onObservableError(new', 2), ('this.dispatcher', 2), ('MethodHandles.publicLookup().in(javaImplClass).unreflect(javaMethod);\n', 2), ('testHasNextThrows()', 2), ('href="http://reactivex.io/documentation/operators/using.html">ReactiveX', 2), ('short.class;\n', 2), ('mammoth.timePasses();\n', 2), ('source.connect(conn);\n', 2), ('"Godzilla', 2), ('isBase64Encoded', 2), ('serialDisposable.update(second);\n', 2), ('Simulate', 2), ('(error.equals(cause))', 2), ('java.io.IOException:', 2), ('#lift}.', 2), ('readyOps;\n', 2), ('printCustomerDetails(allCustomers);\n\n', 2), ('bankAccount);\n', 2), ('console\n', 2), ('assertFalse(dao.getById(getNonExistingCustomerId()).isPresent());\n', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/filter.png"', 2), ('io.reactivex.disposables.Disposable#dispose()}.', 2), ('servant.name);\n', 2), ('Integer[5000];\n', 2), ('dis))', 2), ('subjected', 2), ('switchIfEmpty}', 2), ('Character.isUpperCase(name.charAt(3)))', 2), ('perform()', 2), ('delayed.', 2), ('emitLast));\n', 2), ('b.price', 2), ('COMPLETED', 2), ('List<Module>', 2), ('oranges', 2), ('enqueued\n', 2), ('struct.\n', 2), ('w);\n\n', 2), ('writing",', 2), ('orc', 2), ('One', 2), ('eventstream', 2), ('assertTrue(allCustomers.count()', 2), ('parent.onAfterTerminated.run();\n', 2), ('Constructor.', 2), ('OnErrorNotImplementedException("Message",', 2), ('state[1]', 2), ('Completable.amb(Arrays.asList(Completable.complete(),', 2), (')?', 2), ('boxTo)', 2), ('Validate', 2), ('Implementors', 2), ('outputFile.getPath());\n\n', 2), ('Hides', 2), ('evictedGroups', 2), ('31)', 2), ('end.countDown();\n', 2), ('IllegalArgumentException("expected', 2), ('calories=%d",', 2), ('io.reactivex.flowables.GroupedFlowable;\nimport', 2), ('urlString)', 2), ('10:58', 2), ('this.error.close();\n', 2), ('sleep', 2), ('BasicFuseableSubscriber', 2), ('cancelWhileRunning()', 2), ('apply()}', 2), ('InMemoryTicketRepository();\n', 2), ('NITERS;', 2), ('index.getAndSet(Long.MAX_VALUE);\n', 2), ('rules,', 2), ('enabled', 2), ('from(Iterable<E>', 2), ('nextNotification.getValue();\n', 2), ('server.accept(null,', 2), ('warlord', 2), ('BiFunction<NumberExpression,', 2), ('crossbow', 2), ('#isEmpty()}</li>\n', 2), ('Callable<List<Object>>()', 2), ('io.reactivex.internal.util.TestingHelper.*;\nimport', 2), ('necessary,', 2), ('Maybe.just(1),', 2), ('[6.0.0-beta2,', 2), ('dimensions;', 2), ('invocation\n', 2), ('Float>', 2), ('lefts;\n\n', 2), ('scheduler.scheduleDirect(ios,', 2), ('OrcsTest', 2), ('notificationHandler}\n', 2), ('(TRight)val;\n\n', 2), ('ObjectHelper.requireNonNull(onCancel,', 2), ('driverManagerTemplate(d', 2), ('evictedGroups;\n', 2), ('Character(String', 2), ('fighterClass(String', 2), ('reuse\n', 2), ('UsingObserver<T,', 2), ('uri.getPort()', 2), ('m.javadoc.indexOf("SingleSource",', 2), ('variation', 2), ('pp.concatMapMaybeDelayError(Functions.justFunction(ms),', 2), ('DbManager.writeToDb(userAccount);\n', 2), ('MIN_ID;\n', 2), ('(city', 2), ('Single.timer(1,', 2), ('(augmentation', 2), ('Single.just(v).subscribeOn(Schedulers.computation());\n', 2), ('U>(this);\n', 2), ('patterns\n', 2), ('threads.add(t);\n', 2), ('singletonMap("key",', 2), ('SQLException>', 2), ('MaybeToSingle<T>(this,', 2), ('Size.LARGE,', 2), ('testHandledErrorIsNotDeliveredToThreadHandler()', 2), ('(observers.size()', 2), ('Hit!");\n', 2), ('method.arguments.size();', 2), ('HasModel', 2), ('statB', 2), ('sleeping', 2), ('AbstractCliCommand', 2), ('Subscription)\n', 2), ('.limit(2)\n', 2), ('{FIELD,', 2), ('900,', 2), ('observable.dematerialize();\n\n', 2), ('null")).apply(this));\n', 2), ('chest.getItems();\n', 2), ('shared,', 2), ('"Yates");\n', 2), ('Emitter<T>\n', 2), ('SQLException();\n', 2), ('br.readLine())', 2), ('error.', 2), ('-1185974347409665484L;\n', 2), ('Launchers.exit(1);\n', 2), ('assertArrayEquals(lists.get(1).toArray(new', 2), ('items(item);\n', 2), ('topShelf.add(factory.createPotion(PotionType.HEALING));\n', 2), ('"_Thread_"', 2), ('css', 2), ('TimeUnit.SECONDS).blockingForEach(Functions.emptyConsumer());\n\n', 2), ('spellbooks;\n', 2), ('Movie(),', 2), ('(2)', 2), ('TestObserver&lt;Object&gt;', 2), ('B>>', 2), ('placed', 2), ('this.url', 2), ('assertTrue(it.hasNext());\n\n', 2), ('SingleEmitter<T>', 2), ('f.takeLast(1);\n', 2), ('c.subscribe(o);\n', 2), ('javaMethodHandle', 2), ('f.switchMapCompletable(Functions.justFunction(Completable.never()));\n', 2), ('asyncFused()', 2), ('Observer}s.', 2), ('InternalError());\n', 2), ('Video(2,', 2), ('yaml', 2), ('(!inner.get())', 2), ('Error}', 2), ('wizardDao;\n', 2), ('props', 2), ('controller\n', 2), ('apples', 2), ('"email', 2), ('failure.remoteTrace()', 2), ('"Producer");\n', 2), ('iteratorNotification;\n\n', 2), ('java.util.HashSet;\n\nimport', 2), ('criteria', 2), ('io.reactivex.internal.schedulers.*;\nimport', 2), ('dummy),', 2), ('credits.",', 2), ('TestObserver<Boolean>', 2), ('apply(SingleSource', 2), ('cause.getCause())', 2), ('fail.append("java.lang.RuntimeException:', 2), ('ConcatMapMaybeObserver<R>(this);\n', 2), ('QueueDrainHelper.drainMaxLoop(queue,', 2), ('Observable.interval(50,', 2), ('iterative', 2), ('performance.\n', 2), ('StandardCopyOption.ATOMIC_MOVE);\n\n', 2), ('DisposableHelper.setOnce(parent,', 2), ('fallback}', 2), ('Flowable.merge(os).toList().blockingGet();\n\n', 2), ('Threads', 2), ('iface', 2), ('(Function)INSTANCE;\n', 2), ('sref.set(s);\n', 2), ('LinkageError());\n', 2), ('arbiter;\n', 2), ('reflection).\n', 2), ('Restarting', 2), ('Responsible', 2), ('RxJavaPlugins.onCompletableError(new', 2), ('assertEquals(expectedId,', 2), ('FlatMapCompletableObserver<T>(s,', 2), ('observable.blockingFirst();\n', 2), ('matches(Object', 2), ('-8219729196779211169L;\n\n', 2), ('ts.assertFailureAndMessage(NullPointerException.class,', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/flattenAsFlowable.png"', 2), ('NullPointerException("The', 2), ('assertNull(repository.findByName("Terry"));\n', 2), ('Dates', 2), ('emitter,', 2), ('lineNumber(sourceCode,', 2), ('.get();\n', 2), ('ArrayList<Integer>()),', 2), ('java.security.KeyStore;\nimport', 2), ('cast}', 2), ('//TLTL', 2), ('\\"title\\",', 2), ('MultiMatchQueryPredicate', 2), ('apply()', 2), ('lazySet(THREAD_INDEX,', 2), ('virtual', 2), ('assertEquals(ScheduledRunnable.DONE,', 2), ('assertNotEquals(Thread.currentThread(),', 2), ('byte[1024];\n', 2), ('innerQueue.isEmpty()))', 2), ('ex),', 2), ('(trustStorePath', 2), ('identify\n', 2), ('"Smith",', 2), ('o.dematerialize();\n', 2), ('ts.assertSubscribed();\n\n', 2), ('up."));\n', 2), ('"value");\n', 2), ('page_count', 2), ('.doOnSubscribe(s', 2), ('assertNotNull(cake.getLayers());\n', 2), ('actual.onNext(0L);\n', 2), ('LOGGER.info("Retrieving', 2), ('source).firstElement()\n', 2), ('wizardClass(String', 2), ('convertDatesToString(Result', 2), ('service.getAvailableLayers();\n', 2), ('source5);\n', 2), ('.append(")\\r\\n");\n', 2), ('MaybeUsing<T,', 2), ('org.junit.jupiter.api.Assertions.assertThrows;\n\n/**\n', 2), ('(add(md))', 2), ('action);\n', 2), ('concatenated', 2), ('ListAddBiConsumer.<T>instance());\n', 2), ('FlowableRefCount(ConnectableFlowable<T>', 2), ('parent.innerNext(this);\n', 2), ('setup(final', 2), ('PublishProcessor<Object>', 2), ('Context', 2), ('NPE(IAE)");\n', 2), ('ParallelFlowable#sequentialDelayError()\n', 2), ('Observable.fromArray(array).flatMapIterable(new', 2), ('AnySubscriber<T>', 2), ('.safeSubscribe(observer);\n\n', 2), ('testOnNextErrorAcrossThread()', 2), ('timer.', 2), ('in.readLine();\n\n', 2), ('*/\n@Retention(RUNTIME)\n@Target(TYPE)\npublic', 2), ('queue.offer(NotificationLite.COMPLETE);\n', 2), ('onCancel\n', 2), ('Model-View-Presenter\n', 2), ('parameter.', 2), ('jar.getManifest();\n', 2), ('weight={}",\n', 2), ('purposes', 2), ('onDispose.run();\n', 2), ('topping;\n', 2), ('#refCount(int)\n', 2), ('}).toFlowable().blockingSingle();\n\n', 2), ('operator.cancel();\n\n', 2), ('tryOutSchedulers();\n\n', 2), ('assertNotNull(first);\n', 2), ('Maybe"))', 2), ('PublishSubscriber,', 2), ('SingleElementSubscriber<T>\n', 2), ('(base', 2), ('considerations', 2), ('.equals(lastName,', 2), ('bufferSize);\n', 2), ('queried', 2), ('InnerCompletableCache[0];\n\n', 2), ('Masks', 2), ('LocalDateTime.of(2017,', 2), ('SpellDaoImpl());\n', 2), ('(pendingWrites', 2), ('environment),', 2), ('ModulesBuilder', 2), ('directory.\n', 2), (';', 2), ('Function<ConnectableObservable,', 2), ('values[d]', 2), ('cakeView', 2), ('super(skip);\n', 2), ('reusing', 2), ('restricting', 2), ('com.iluwatar.specification.property.Movement;\nimport', 2), ('Entrypoint\n', 2), ('ScheduledDirectTask(decoratedRun);\n', 2), ('(!timerRunning', 2), ('(!enter())', 2), ('set(String', 2), ('Disposables.disposed();\n', 2), ('customer.getFirstName());\n', 2), ('sourceCode.lastIndexOf("/**",', 2), ('readers\n', 2), ('RetryBiObserver<T>', 2), ('AtomicInteger\nimplements', 2), ('lazySet(1);\n', 2), ('times.get(i', 2), ('-5955289211445418871L;\n\n', 2), ('CheckResult.TICKET_NOT_SUBMITTED);\n', 2), ('<p>In', 2), ('first4.size());\n\n', 2), ('assertTrue(dependentPromise.isDone());\n', 2), ('(errors.addThrowable(error))', 2), ('affected', 2), ('javadocs', 2), ('verifyZeroInteractions(func);\n\n', 2), ('line-delimited', 2), ('pool.checkIn(secondOliphaunt);\n', 2), ('doOnEach.subscribe(subscribedObserver);\n', 2), ('CompletableObserverImplementation', 2), ('takeUntil(new', 2), ('input.observable.map(new', 2), ('usual', 2), ('wet."});\n', 2), ('improperly', 2), ('userConverter', 2), ('resides.\n', 2), ('Checked', 2), ('TimeUnit.NANOSECONDS);', 2), ('com.iluwatar.strategy;\n\nimport', 2), ('java.util.concurrent.atomic.AtomicReference;\nimport', 2), ('one-to-one', 2), ('comparator,', 2), ('Observable.never()\n', 2), ('dir', 2), ('PublishDisposable[]', 2), ('skips\n', 2), ('browser', 2), ('testCollectorFailureDoesNotResultInErrorAndOnNextEmissions()', 2), ('Completable"))', 2), ('assertTrue(cake.getLayers().isEmpty());\n\n', 2), ('predecessor,\n', 2), ('LOGGER.error("ModuleTest::readFirstLine()",', 2), ('"This', 2), ('future.', 2), ('goodValue', 2), ('elements)\n', 2), ('addingShouldResultInSuccess()', 2), ('MaybeTimerTest', 2), ('c.subscribe(new', 2), ('executor.startProcess(task,', 2), ('dest.fulfillExceptionally((Exception)', 2), ('DriverManager.getConnection(DB_URL);\n', 2), ('innerClose(boolean', 2), ('fo', 2), ('SerializedObserver(@NonNull', 2), ('AtomicReference<InnerObserver<?,', 2), ('Flowable.interval(50,', 2), ('is.done;\n', 2), ('(!exit)', 2), ('BusinessOperation<String>', 2), ('SingleSource[8];\n', 2), ('"if0243"));\n', 2), ('cd.assertInnerError(1,', 2), ('.timestamp(TimeUnit.SECONDS)\n', 2), ('callback("Callback', 2), ('again");\n', 2), ('Completable</a>\n', 2), ('integers\n', 2), ('Map</a>\n', 2), ('builder.put("xpack.ssl.keystore.path",', 2), ('complex\n', 2), ('Normalizer', 2), ('source.switchMapCompletable(new', 2), ('KeyStore', 2), ('Execution', 2), ('eventPool.entrySet().iterator();\n', 2), ('TestHelper.checkDisposed(Flowable.just(1,', 2), ('List<UnicastSubject<T>>', 2), ('UserConverter();\n\n', 2), ('sa.missedRequested.set(1);\n\n', 2), ('Flowable.<Media>', 2), ('TestSubscriber<Object>(0);\n\n', 2), ('LOGGER.info("Deleting', 2), ('Thread.sleep(400);\n\n', 2), ('r2,', 2), ('!(t', 2), ('using(resourceSupplier,', 2), ('TestHelper.checkDisposed(PublishProcessor.create().elementAt(0,', 2), ('B>)', 2), ('randomIntBetween(smallerJavaMajorVersionLowerBound,', 2), ('assertEquals(TimeUnit.SECONDS.hashCode()', 2), ('luck)', 2), ('ParallelReduceSubscriber<T,', 2), ('publicKeyBytes', 2), ('Arrays.copyOf(others,', 2), ('Completable[1024];\n', 2), ('DisposableHelper.replace(resource,', 2), ('bidirectional\n', 2), ('prettyPrint(String', 2), ('latest.get();\n', 2), ('ClassNotFoundException', 2), ('schedulers.\n', 2), ('AsyncCallback<Object>', 2), ('down.\n', 2), ('testMergeCovariance4()', 2), ('Observable.just(1).flatMap(new', 2), ('PerfSubscriber(bh);\n', 2), ('height="239"', 2), ('pub.subscribe(s);\n', 2), ('verifyLicense(final', 2), ('"124sad"),\n', 2), ('cancelled)', 2), ('onNextInnerErrorRace()', 2), ('attachments)', 2), ('(clients.incrementAndGet()', 2), ('cache.set(userAccount.getUserId(),', 2), ('use.\n', 2), ('present.\n', 2), ('IndexOutOfBoundsException("More', 2), ('ConnectableFlowable', 2), ('singleSourceZipperReturnsNull()', 2), ('visit', 2), ('Observable.<Media>', 2), ('System");\n', 2), ('result;\n\n', 2), ('onErrorResumeNext(final', 2), ('CompletableObserver.\n', 2), ('Consumer<TestSubscriber<Object>>()', 2), ('testUnsubscribesFromUpstream()', 2), ('maybeSupplier', 2), ('bank,', 2), ('f);\n', 2), ('(!ScalarXMapZHelper.tryAsCompletable(source,', 2), ('functions,', 2), ('loaded,', 2), ('existingCustomer', 2), ('org.elasticsearch.cli.Terminal;\nimport', 2), ('periodicWrapper.setFirst(f);\n', 2), ('e.onNext(s);\n', 2), ('nextTransaction();\n', 2), ('assertThat(lines.get(0),', 2), ('io.reactivex.internal.observers.*;\nimport', 2), ('writer.write(line);\n', 2), ('Predicate<Boolean>()', 2), ('thread.get());\n', 2), ('TakeUntilOtherMaybeObserver(TakeUntilMainMaybeObserver<?,', 2), ('this.callback.ifPresent(ac', 2), ('OutputStream', 2), ('getters', 2), ('java.util.concurrent.LinkedBlockingQueue;\n\n/**\n', 2), ('Mutable', 2), ('declared', 2), ('onCallback)', 2), ('terminal.clear();\n', 2), ('TestException("Mapper-run"));\n', 2), ('connect(dbName,', 2), ('mapper.apply(bad);\n\n', 2), ('entry.getValue();\n', 2), ('headers()', 2), ('locking\n', 2), ('("4".equals(cmd))', 2), ('SimpleFileWriter}', 2), ('LotteryModule());\n', 2), ('explicit;\n', 2), ('picked', 2), ('(verified)\n', 2), ('testToFutureWithException()', 2), ('U>(observer);\n', 2), ('lock.writeLock());\n\n', 2), ('command.run();\n//', 2), ('ignore)', 2), ('bookDTo', 2), ('MaybeZipIterable<T,', 2), ('value.getAndSet(null);\n', 2), ('S>\n', 2), ('configurationName', 2), ('Java,', 2), ('LOGGER.info("###', 2), ('Subscriber.\n', 2), ('cliSession,', 2), ('automation', 2), ('iface.isAssignableFrom(getClass());\n', 2), ('Size.NORMAL,', 2), ('defaultTimezone)', 2), ('atomically.\n', 2), ('super(mapper,', 2), ('io.reactivex.Observer}s', 2), ('++)', 2), ('onAfterNext,\n', 2), ('ObjectHelper.requireNonNull(close.apply(wo.open),', 2), ('gWeather.addObserver(new', 2), ('reactor;\n', 2), ('ZipIterableObserver<T,', 2), ('mimic', 2), ('numbers.', 2), ("');\n", 2), ('this.repository', 2), ('2;', 2), ('wait,', 2), ('ReadLock', 2), ('TimeOutObserver', 2), ('scanner', 2), ('UserGroup#paidGroup}\n', 2), ('node.next;\n', 2), ('DebounceTimedObserver<T>(\n', 2), ('Builder}s\n', 2), ("representation's", 2), ('serial.update(d);\n', 2), ('Size.SMALL,', 2), ('BigDecimal("10000"),', 2), ('IoScheduler();\n', 2), ('exception.', 2), ('500ms', 2), ('dynamoDbMapper;\n\n', 2), ('e.setAccessible(true);\n\n', 2), ('onSuccessFastPathBackpressuredRace()', 2), ('ArrayList<Integer>()),\n', 2), ('observers.poll();\n\n', 2), ('onDrop;\n', 2), ('Receiver', 2), ('file")\n', 2), ('V>(this,', 2), ('g.get());\n', 2), ('bt.next()', 2), ('ConnectableObservable>()', 2), ('npe.initCause(t);\n', 2), ('sc', 2), ('assertTrue(actuals.containsAll(persons)', 2), ('request.', 2), ('FlowableOperator<?', 2), ('initialized\n', 2), ('InvalidLineConsumer', 2), ('session.createSQLQuery("SELECT', 2), ('builder.append("[]");\n', 2), ('initialLayers.add(new', 2), ('5).concatWith(Observable.<Integer>never())\n', 2), ('options.\n', 2), ('(LinkageError', 2), ('share', 2), ('kept', 2), ('(inCompletable)', 2), ('result);\n\n', 2), ('Subscription}.\n', 2), ('AsyncCallback', 2), ('JdbcDriver.register();\n', 2), ('actual.get();\n', 2), ('explicitlyForeground', 2), ('s.onNext(i);\n', 2), ('"internal/operators/"', 2), ('callError', 2), ('SwitchIfEmptyMaybeObserver<T>\n', 2), ('futureResult', 2), ('Stream<T>', 2), ('inDoc,\n', 2), ('T>>\nextends', 2), ('level1.getName());\n', 2), ('clientName,', 2), ('state[2]', 2), ('hasValue);\n', 2), ('description)', 2), ('NotificationLite.next(args);\n', 2), ('winner', 2), ('Memento', 2), ('(rc.timer', 2), ('compile', 2), ('res.getDateList()', 2), ('testDoOnSubscribe()', 2), ('extractVariables(Set<String>', 2), ('Single.fromCallable(func);\n\n', 2), ('Bar', 2), ('toBeWrittenToDb', 2), ('zipCode;\n', 2), ('subscribe(MaybeEmitter<Integer>', 2), ('Subscribing', 2), ('(FileOutputStream', 2), ('washingMachine.wash();\n', 2), ('(ServerSocketChannel)', 2), ('so.onNext(null);\n\n', 2), ('scheduler).subscribe(observer);\n', 2), ('OnNext(t),', 2), ('author1\n', 2), ('source6);\n', 2), ('saving', 2), ('ParallelMapSubscriber<T,', 2), ('idx1', 2), ('clip', 2), ('layer.\n', 2), ('(result.getResult().equals(LotteryTicketCheckResult.CheckResult.WIN_PRIZE))', 2), ('serial,', 2), ('LOGGER.info("REN={}",', 2), ('bc', 2), ('this.frc', 2), ('assertNotNull(state[2]);\n', 2), ('{}ms",', 2), ('ConcatMapSingleObserver<R>\n', 2), ('to.assertFailure(TestException.class,', 2), ('assertEquals(max', 2), ('secureSettings', 2), ('java.lang.annotation.ElementType.ANNOTATION_TYPE;\nimport', 2), ('parent.done();\n', 2), ('(this.error', 2), ('1).getMessage();\n', 2), ('dateList', 2), ('this.comparer', 2), ('this.cakeToppingInfo', 2), ('assertNotNull(item);\n', 2), ('<code>runnable</code>', 2), ("'Book", 2), ('onTerminate.run();\n', 2), ('!cancelled)', 2), ('MAGIC_LENGTH', 2), ('com.iluwatar.multiton;\n\nimport', 2), ('experienced', 2), ('eventPool.remove(eventId);\n', 2), ('ArrayList<>(left.size()', 2), ('(CompositeException)ts.errors().get(0);\n', 2), ('assertTrue(q.offer(1,', 2), ('Consumer<Throwable>,', 2), ('inner.getAndSet(INNER_DISPOSED);\n', 2), ('timeout(RefConnection', 2), ('getAuthorByUsername(String', 2), ('(!innerLatch.await(30,', 2), ('setResource,', 2), ('com.iluwatar.databus.AbstractDataType;\nimport', 2), ('ConcatMapMaybeSubscriber<Integer,', 2), ('MIN_ID)', 2), ('head()', 2), ('params);\n', 2), ('assertNull(aste);\n//', 2), ('last4.get(0));\n', 2), ('Map.Entry', 2), ('rev', 2), ('this.clusterName', 2), ('BasicIntQueueDisposable<T>', 2), ('assertEquals(allCustomers.get(0).getLastName(),', 2), ('Flowable.timer(100,', 2), ('execTime)', 2), ('java.util.concurrent.locks.*;\n\nimport', 2), ('DisposableSingleObserver<T>', 2), ('Message}', 2), ('protocol:\n', 2), ('.mergeWith(Single.<Integer>error(new', 2), ('cucumber.api.java.Before;\nimport', 2), ('on,', 2), ('DomainObjectContainer', 2), ('output.', 2), ('Single.just(1).doOnDispose(new', 2), ('method:', 2), ('assertTrue(checkResult.getResult()', 2), ('notifications.\n', 2), ('flatMap\n', 2), ('Trust', 2), ('obs.toList().toFuture();\n', 2), ('iters);\n', 2), ('(DebounceEmitter<T>)d;\n', 2), ('assertEquals(expectedDetails,', 2), ('json', 2), ('evictedGroups.clear();\n', 2), ('assertTrue(asyncResult.isCompleted());\n', 2), ('LatestSubscriberIterator<T>', 2), ('DisposableObserver<T>', 2), ('VideoResource}', 2), ('clazz.getMethods())', 2), ('context.getBean(CakeDao.class);\n', 2), ('(element.isEmpty())', 2), ('Long.MIN_VALUE', 2), ('baseClassName,', 2), ('cakes\n', 2), ('eventProcessor.reset();\n\n', 2), ('io.reactivex.internal.subscriptions.SubscriptionArbiter;\nimport', 2), ('parent.innerNext(this,', 2), ('design.\n', 2), ('SingleUsing<T,', 2), ('JdbcDataSource();\n', 2), ('ObjectHelper.requireNonNull(source9,', 2), ('"C");\n\n', 2), ('rightIndex++;\n\n', 2), ('Runnable)}', 2), (').subscribe(new', 2), ('Callable<List<T>>', 2), ('Object>(null);\n\n', 2), ('bug', 2), ('BiPredicate<String,', 2), ('queue()', 2), ('onErrorMapper;\n\n', 2), ('#onComplete()}\n', 2), ('this.delayError;\n\n', 2), ('errorOnFewer));\n', 2), ('HashMap<>(2);\n', 2), ('failOnEmpty;\n\n', 2), ('this.wizardClass', 2), ('completion\n', 2), ('System.out.println("', 2), ('hostName);\n', 2), ('nextNode.getAndNullValue();\n', 2), ('java.util.Queue;\n\nimport', 2), ('supported")\n', 2), ('com.iluwatar.abstractdocument.domain.HasPrice;\nimport', 2), ('document', 2), ('(int)index', 2), ('option\n', 2), ('runOn(@NonNull', 2), ('ObjectHelper.requireNonNull(zipper.apply(values),', 2), ('newName.append(Character.toLowerCase(name.charAt(3)));\n', 2), ('"subscriberCount");\n', 2), ('SingleDisposable[]', 2), ('"+34332322");\n', 2), ('"observer', 2), ('limit.\n', 2), ('org.joda.time.DateTime;\nimport', 2), ('number;\n', 2), ('(upstream.get()', 2), ('destFunds', 2), ('Close>(\n', 2), ('ConcatInnerObserver(CompletableObserver', 2), ('produced(c);\n', 2), ('Math.pow(Math.random(),', 2), ('args[])', 2), ('.window(3)\n', 2), ('LOGGER.info("Bound', 2), ('.dispose();\n\n', 2), ('[%s]",\n', 2), ('scheduler).subscribe(to);\n\n', 2), ('domain,', 2), ('date;\n', 2), ('tryLock(long', 2), ('MultiplyExpression(left,', 2), ('visitor);\n\n', 2), ('LOGGER.info("jBloch', 2), ('com.amazonaws.services.lambda.runtime.RequestHandler;\nimport', 2), ('-99);\n', 2), ('ArrayList<>(mappings.size());\n', 2), ('between(2,', 2), ('dead', 2), ('rainbowFish.getLengthMeters()));\n', 2), ('this.errorMode;\n\n', 2), ('elementAtOrErrorInvalidIndex()', 2), ('p.subscribe(bc);\n', 2), ('name)SchedulerHandler()}', 2), ('state[0]);\n', 2), ('out");\n', 2), ('servers', 2), ('cache.getLruData();\n', 2), ('equals()', 2), ('clone', 2), ('collections)', 2), ('eventClassName', 2), ('selector.wakeup();\n', 2), ('sref', 2), ('ID_GENERATOR', 2), ('this.userId', 2), ('zipper,\n', 2), ('UnsupportedOperationException.\n', 2), ('notifications.dematerialize();\n\n', 2), ('line.\n', 2), ('film",', 2), ('printErrorString(final', 2), ('DelayedRunnable(new', 2), ('decoupled', 2), ('configuration\n', 2), ('shortHash', 2), ('s.onNext("one");\n', 2), ('-2177128922851101253L;\n\n', 2), ('src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/B.mostRecent.png"', 2), ('f.concatMapMaybeDelayError(\n', 2), ('ownerStruct.clazz.getName()', 2), ('assertEquals(expectedName,', 2), ('Shark(),', 2), ('saveNewLayer(CakeLayerInfo', 2), ('inlined', 2), ('subscribeWith(new', 2), ('Observer>', 2), ('calls.getAndIncrement();\n', 2), ('mm', 2), ('.mergeWith(Maybe.<Integer>error(new', 2), ('in.readLine())', 2), ('buildMethodCacheKey(ownerStruct.name,', 2), ('compared\n', 2), ('rsa', 2), ('TestSubscriber.create(0L);\n\n', 2), ('(add(ps))', 2), ('++parameterCount)', 2), ('sourceCode.indexOf("{",', 2), ('Single.amb(singles).test();\n\n', 2), ('Wiki:\n', 2), ('IllegalArgumentException("constructor', 2), ('"15.11.2015");\n\n', 2), ('expectedCount', 2), ('this.accountNo', 2), ('lift', 2), ('diff);\n', 2), ('Operator<?', 2), ('org.assertj.core.api.Assertions.assertThat;\n\nimport', 2), ('testScheduler;\n', 2), ('advanced', 2), ('(!buf.offer(toOffer))', 2), ('fused()', 2), ('"two").startWith(li).toList().blockingGet();\n\n', 2), ('"epic', 2), ('ExecutorService}', 2), ('ConcatMapInnerObserver(ConcatMapCompletableObserver<?>', 2), ('negotiating\n', 2), ('tryLock()', 2), ('java.util.concurrent.locks.Lock;\n\nimport', 2), ('\\"Avatar\\",\\"length\\":', 2), ('t7,', 2), ('ws.add(w);\n', 2), ('w.subscribe(ts1);\n', 2), ('sources.length;\n\n\n', 2), ('getSessionFactory()', 2), ('TestObserver&lt;Integer&gt;', 2), ('cc', 2), ('pp.concatMapCompletableDelayError(\n', 2), ('Queue<T>', 2), ('testLastOfEmptyReturnsEmpty()', 2), ('(inner[j].id', 2), ('invalidPrefetch()', 2), ('Emitter<T>(s);\n', 2), ('.forEachWhile(Functions.alwaysTrue());\n', 2), ('ref.length);\n', 2), ('batch)', 2), ("'/');\n", 2), ('java.net.URLClassLoader;\nimport', 2), ('it).</dd>\n', 2), ('System}', 2), ('SchedulerTestHelper.testHandledErrorIsNotDeliveredToThreadHandler(getScheduler());\n', 2), ('before));\n', 2), ('cel.get(index).getMessage());\n', 2), ('(md.isDisposed())', 2), ('others,', 2), ('com.iluwatar.flux.action.ContentAction;\nimport', 2), ('InputForMergeN', 2), ('assertFalse(optionalException.isPresent());\n\n', 2), ('-6071216598687999801L;\n\n', 2), ('workingDir(final', 2), ('metaHorrors', 2), ('testElementAt()', 2), ('B>(subscriber,', 2), ('info()', 2), ('Dragon(),', 2), ('Maybe.fromCallable(callable)\n', 2), ('later.', 2), ('ConcurrentMapLong<V>', 2), ('MissingBackpressureException("Inner', 2), ('connect(Consumer', 2), ('j);\n\n', 2), ('(cancel)', 2), ('DbCustomerDao', 2), ('TimeoutMainObserver<T>', 2), ('noPermissions),\n', 2), ('1577321883966341961L;\n\n', 2), ('Server', 2), ('ticketsCollectionName,\n', 2), ('sb.append(name);\n', 2), ('CountDownLatch(count);\n\n', 2), ('lastTime;\n', 2), ('.ignoreElement()\n', 2), ('getEventStream(final', 2), ('Nulls', 2), ('s.onError(t);\n', 2), ('setRace()', 2), ('Builder<T>(Arrays.asList(items));\n', 2), ('p.', 2), ('takeNext()', 2), ('events.add(t);\n', 2), ('reflection', 2), ('(emitLast)', 2), ('get(i);\n', 2), ('RandomNumberGenerator', 2), ('startFirstTimeout(Publisher<?>', 2), ('TrustAllConfig', 2), ('com.iluwatar.twin;\n\nimport', 2), ('RxJavaPlugins.getInstance().registerSingleExecutionHook(new', 2), ('w.isDisposed();\n', 2), ('User("Camile",', 2), ('loads', 2), ('retrying\n', 2), ('.andThen(Maybe.empty())\n', 2), ('pp.mergeWith(cs).test(0);\n\n', 2), ('CORBA', 2), ('modules:', 2), ('io.reactivex.subscribers.DefaultSubscriber;\n\n/**\n', 2), ('s.request(bufferSize);\n', 2), ('(makeDone)', 2), ('never}', 2), ('accounting)', 2), ('boil', 2), ('Media());\n', 2), ('java.time.Instant;\nimport', 2), ('this.onSuccess', 2), ('wizard1.addSpellbook(spellbookDao.findByName("Book', 2), ('fastPathEmit(b,', 2), ('Weather}', 2), ('flattenAsObservable}', 2), ('PurgeProperties', 2), ('Model-View-Presenter', 2), ('do\n', 2), ('sequentialDelayError}', 2), ('EGG', 2), ('s.request(e);\n', 2), ('indication\n', 2), ('numInstances));\n', 2), ('weapon)', 2), ('"class:', 2), ('getMongoDatabase()', 2), ('a.onNext(null);\n\n', 2), ('Implementations', 2), ('from;\n', 2), ('Module}', 2), ('com.iluwatar.cqrs.util.HibernateUtil;\n\n/**\n', 2), ('lift}', 2), ('ProtocolViolationException\n', 2), ('cancel;\n', 2), ('Functions.emptyConsumer());\n', 2), ('casting', 2), ('futureResult3', 2), ('ClassPermission(String', 2), ('testCancelledRetention(w,', 2), ('(others', 2), ('exec(\n', 2), ('info.add(new', 2), ('Utilities', 2), ('testDematerialize1()', 2), ('concreteIndex', 2), ('deque', 2), ('@Ignore("null', 2), ('super(runnable);\n', 2), ('failed");\n', 2), ('TakeSubscriber<T>(s,', 2), ('#mergeDelayError(Publisher)}', 2), ('lock()', 2), ('this.supplier', 2), ('hasEntry("es.to_string",', 2), ('RxJavaPlugins#setFailOnNonBlockingScheduler(boolean)}', 2), ('doOnError}', 2), ('ms.onError(ex);\n', 2), ('ObjectHelper.requireNonNull(comparator,', 2), ('Miss!");\n', 2), ('customerId}\n', 2), ('bottomShelf.add(factory.createPotion(PotionType.HOLY_WATER));\n', 2), ('baseTypeName);\n\n', 2), ('car.getModel().get());\n', 2), ('DB_URL', 2), ('producer.produce();\n', 2), ('duty', 2), ('this.rights', 2), ('audit', 2), ('MaybeFlatMapSingleElement<T,', 2), ('path.resolve(blobName);\n', 2), ('permissions");\n', 2), ('exchange.getRequestMethod();\n', 2), ('NodeInfo.create(this,', 2), ('getWrappedRunnable()', 2), ('(Book)', 2), ('requirements,', 2), ('FlatMapCompletableObserver<T>', 2), ('TimeUnit.SECONDS).toFuture().get();\n\n', 2), ('(typeNames', 2), ('urls)', 2), ('set.isDisposed();\n', 2), ('delta', 2), ('empty();\n', 2), ('elementAtOrErrorNegativeIndex()', 2), ('org.apache.logging.log4j.Logger;\nimport', 2), ('com.iluwatar.flux.dispatcher;\n\nimport', 2), ('observer}', 2), ('clazz.name', 2), ('org.elasticsearch.plugins.Plugin;\nimport', 2), ('idx))', 2), ('parent.unique)', 2), ('painlessStructName', 2), ('Marker', 2), ('whitelistClassLoader);\n', 2), ('source9\n', 2), ('ThreadSafeLazyLoadedIvoryTower}', 2), ('m.backpressureKind', 2), ('}).doOnSubscribe(new', 2), ('used,', 2), ('enter();\n\n', 2), ('complete++;\n', 2), ('((m.getModifiers()', 2), ('comments\n', 2), ('stopWindows.get();\n', 2), ('"error.txt";\n\n', 2), ('TimeoutSubscriber<T>(s,', 2), ('"]:["', 2), ('-2117620485640801370L;\n\n', 2), ('IllegalStateException("missing', 2), ('TimeoutObserver(Observer<?', 2), ('sd.replace(scheduler.scheduleDirect(new', 2), ('initialState;\n', 2), ('evictedGroups)', 2), ('SwitchMapCompletableObserver<T>', 2), ('Customer(nonExistingId,', 2), ('Flowable.fromIterable(iterate(elements));\n', 2), ('lift(final', 2), ('Function3<Integer,', 2), ('AppManager.save(userAccount4);\n', 2), ('DatabaseReader.Builder', 2), ('Collections.unmodifiableList(Objects.requireNonNull(painlessParameterTypeNames));\n', 2), ('doEquals(Object', 2), ('TestException("second"));\n', 2), ('super.getJavaChannel();\n', 2), ('rejected",', 2), ('io.reactivex.internal.util.QueueDrainHelper;\n\n/**\n', 2), ('java.util.function.Predicate;\nimport', 2), ('IllegalArgumentException();\n\n', 2), ('iterator)', 2), ('Version:', 2), ('<i>PROBLEM</i>', 2), ('assertEquals(allCustomers.get(0).getId(),', 2), ('5).onBackpressureLatest().subscribe(ts);\n\n', 2), ('handler.count);\n', 2), ('AsyncSubscription[n', 2), ('record)', 2), ('ClassLoader}', 2), ('u));\n', 2), ('providers.\n', 2), ('onSubscribed.incrementAndGet();\n', 2), ('32;', 2), ('JvmOptionConsumer', 2), ('sum)\n', 2), ('tokens[1];\n', 2), ('#race(Runnable,', 2), ('randomIntFrom0to(4000));\n', 2), ('capped', 2), ('Function<ParallelFlowable,', 2), ('this.onSuccessMapper', 2), ('Download', 2), ('onNextMapper,\n', 2), ('timestampWithScheduler()', 2), ('bufferOpen,', 2), ('(compareAndSet(d,', 2), ('subscriberCount)', 2), ('disposed.', 2), ('io.reactivex.internal.util.NotificationLite;\nimport', 2), ('AsyncProcessor', 2), ('this.source.subscribe(new', 2), ('(def,', 2), ('.filter(Objects::nonNull)\n', 2), ('assertNotNull(first4);\n', 2), ('onError}.\n', 2), ('sequenceEqual(MaybeSource<?', 2), ('thief', 2), ('initialValue', 2), ('bracket");\n', 2), ('(List<T>)', 2), ('paramNumber', 2), ('cover', 2), ('reduced.blockingGet();\n', 2), ('//here', 2), ('T>)s,', 2), ('FileLoader}', 2), ('members\n', 2), ('subscribe()\n', 2), ('until\n', 2), ('IllegalStateException}.\n', 2), ('executeService.submit(writer1);\n', 2), ('\'null\'.");\n', 2), ('Rainbow', 2), ('moveToNext();\n', 2), ('placeholder', 2), ('IllegalStateException("More', 2), ('.subscribeOn(Schedulers.io());\n', 2), ('customerDao.getAll())', 2), ('.elementAtOrError(3)\n', 2), ('EMPTY)', 2), ('testCollectorFailureDoesNotResultInErrorAndCompletedEmissions()', 2), ('Went', 2), ('3-layer', 2), ('failure",', 2), ('assign', 2), ('this.action', 2), ('org.joda.time.DateTimeZone;\nimport', 2), ('numberOfObservers;\n', 2), ('ballItem.click();\n', 2), ('coordination.\n', 2), ('TestHelper.checkDisposed(Maybe.just(1)\n', 2), ('java.io.FileNotFoundException;\n\n/**\n', 2), ('dao.findByName(spell.getName());\n', 2), ('.concatMapMaybe(Functions.justFunction(Maybe.error(new', 2), ('md.actual.onError(e);\n', 2), ('source.subscribe(subscribe(s,', 2), ('<code>port</code>.\n', 2), ('((Callable<R>)r).call();\n', 2), ('(currentReaderCount', 2), ('Iterator#next()}', 2), ('mirror', 2), ('Processor<Integer,', 2), ('InnerQueuedSubscriber', 2), ('size()\n', 2), ('Nolan",', 2), ('requestCrash()', 2), ('assertInnerError(int', 2), ('super(location);\n\n', 2), ('checkUnboundedInnerQueue()', 2), ('SpscArrayQueue<T>(bufferSize());\n', 2), ('TakeUntilMainMaybeObserver<?,', 2), ('testFasterSource()', 2), ('DeferredScalarSubscription<T>(s);\n', 2), ('TakeUntilMainMaybeObserver(MaybeObserver<?', 2), ('X', 2), ('*/\n@ExtendWith(SpringExtension.class)\n@ContextConfiguration(classes', 2), ('MaxNumOfEventsAllowedException', 2), ('ro.dispose();\n\n', 2), ('body,', 2), ('SampleTimedEmitLast<T>(serial,', 2), ('ds.dispose();\n', 2), ('observers.add(obs);\n', 2), ('MaybeObserver#onError},', 2), ('NameStep', 2), ('CakeToppingInfo("candies",', 2), ('UndeliverableException))', 2), ('"onLift', 2), ('DocumentImplementation::new);\n', 2), ('assertCustomerCountIs(2);\n', 2), ('IOException());\n\n', 2), ('isEqual;\n\n', 2), ('exceptionally', 2), ('iterator.next())', 2), ('queue.offer(buffers.remove(idx));\n', 2), ('List<Struct>', 2), ('respectively.\n', 2), ('this.time;\n\n', 2), ('bo))', 2), ('CakeLayer("layer3",', 2), ('f\n', 2), ('(values[j]', 2), ('exaclty', 2), ('BlockingObservableIterator<Integer>(128);\n', 2), ('transmitted', 2), ('SpscLinkedArrayQueue<Object>(16);\n', 2), ('Property', 2), ('CPUs</li>\n', 2), ('(!hasValue)', 2), ('this.crashOnHasNext', 2), ('skipped,', 2), ('publishError(final', 2), ('inCompletable;\n\n', 2), ('onOverflow,', 2), ('ObservableToList<T,', 2), ('xcontent', 2), ('(syncb.decrementAndGet()', 2), ('CakeInfo(topping2,', 2), ('magic', 2), ('verify(observer).onError(error);\n', 2), ('(path.toString().endsWith(".jar"))', 2), ('List<Type>', 2), ('repository.save(peter);\n', 2), ('ts.assertValueCount(1000);\n', 2), ('ParallelMapTry<T,', 2), ('TestSubscriber<Integer>(0));\n\n', 2), ('client,', 2), ('condition.await();\n', 2), ('javaMajorVersionUpperBound,\n', 2), ('effect:', 2), ('java.awt.BorderLayout;\nimport', 2), ('assumption,', 2), ('Single"))', 2), ('SingleFlatMapObservable<T,', 2), ('initialDelay', 2), ('(DAO)', 2), ('incoming\n', 2), ('predicate.test(++retries,', 2), ('TakeUntilObserver<T>', 2), ('verify(observer).onNext(true);\n', 2), ('actual.hasThrowable();\n', 2), ('NullPointerException("Actually', 2), ('testOnceObserverThrows()', 2), ('last;\n', 2), ('value.run();\n', 2), ('"128",', 2), ('.filter(a', 2), ('returnList;\n', 2), ('.assertResult()\n', 2), ('str', 2), ('tryTerminate();\n', 2), ('eventTime,', 2), ('whereas', 2), ('testSingleSourceManyIterators()', 2), ('RxJavaObservableExecutionHook()', 2), ('members;\n\n', 2), ('"not', 2), ('checkedException', 2), ('this.output.flush();\n', 2), ('open(Path', 2), ('-7965400327305809232L;\n\n', 2), ('cancelled()', 2), ('set(Stats', 2), ('"Scheduler:",', 2), ('ParallelReduce<T,', 2), ('EqualCoordinator<T>\n', 2), ('org.mockito.Mockito;\n\nimport', 2), ('lastTime;\n\n', 2), ('extendedPlugins,', 2), ('serves\n', 2), ('AppManager.save(userAccount2);\n', 2), ('ConnectableObservable<T>', 2), ('this.response', 2), ('videos.put(3,', 2), ('LOGGER.info("Read', 2), ('"subscriber', 2), ('\n\n', 2), ('Publisher}\n', 2), ('conn;\n\n', 2), ('testSimpleJustNext()', 2), ('runner;\n\n', 2), ('definition', 2), ('org.openjdk.jmh.annotations.*;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 2), ('values.put("count5xx",', 2), ('Observable.just(o1,', 2), ('interrupted!",', 2), ('assertFalse(qd.isEmpty());\n\n', 2), ('Observable.<Integer>empty()\n', 2), ('actual.onNext(true);\n', 2), ('css[1].onComplete();\n\n', 2), ('U>(new', 2), ('client;\n', 2), ('Stop', 2), ('IndexOutOfBoundsException', 2), ('list.add(w);\n', 2), ('ac.subscribe(sources);\n', 2), ('StoreTrustConfig', 2), ('reduce(Functions.<T>createArrayList(ch),', 2), ('cust.getLastName());\n', 2), ('customerDao.getAll());\n', 2), ('(fastEnter())', 2), ('calls.get());\n//', 2), ('ConcatInnerObserver(s,', 2), ('worked\n\n', 2), ('FlatMapIterableObserver<T,', 2), ('boundaries', 2), ('replaceChildren(List<Expression>', 2), ('14,', 2), ('error.addThrowable(e);\n', 2), ('++count)', 2), ('Publisher<Map<Integer,', 2), ('disposed?!",', 2), ('copy()', 2), ('"read,readlink");\n', 2), ('emitter.setCancellable(c::close);\n', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.flatMapPublisher.png"', 2), ('d)\n', 2), ('FAILED', 2), ('otherSource;\n\n', 2), ('fileOut', 2), ('added,', 2), ('?>[n', 2), ('CountDownLatch(count);\n', 2), ('subscribeActual(Subscriber', 2), ('Upstream', 2), ('onErrorInnerErrorRace()', 2), ('methodCache.computeIfAbsent(\n', 2), ('actual.run();\n', 2), ('disposedOnArrival()', 2), ('pp2.single(-99));\n', 2), ('assertTrue(tc.isDisposed());\n', 2), ('Gson', 2), ('cd.assertInnerError(0,', 2), ('maj', 2), ('Movement.SWIMMING,', 2), ('FlowableOnBackpressureDrop(Flowable<T>', 2), ('reportError(subscribers,', 2), ('CURRENT;\n', 2), ('caused', 2), ('warm', 2), ('sub,', 2), ('denied\n', 2), ('org.elasticsearch.common.settings;\n\nimport', 2), ('parent.task.replace(f);\n\n', 2), ('consumerNode.value', 2), ('DONE)', 2), ('CompletableSource}s,', 2), ('itemTimeoutPublisher;\n\n', 2), ('o[i]', 2), ('bounded', 2), ('df', 2), ('testSave()', 2), ('AtomicReference<Observer<?', 2), ('(false', 2), ('(!ScalarXMapZHelper.tryAsMaybe(source,', 2), ('<b>asynchronous', 2), ('list.clear();\n', 2), ('assertEquals(numbers.getNumbers().size(),', 2), ('indirection', 2), ('realize', 2), ('Callable<Long>()', 2), ('Functions.justFunction((Maybe<Integer>)null),\n', 2), ('lower;\n', 2), ('s.onSubscribe(sd);\n', 2), ('-7251123623727029452L;\n', 2), ('"main");\n', 2), ('"instance_"', 2), ('oo', 2), ('NotificationLite.getValue(buf);\n', 2), ('1).replaceAll("\\\\s+",', 2), ('InterruptedException))', 2), ('scalarLimit)', 2), ('pool.checkIn(firstOliphaunt);\n', 2), ('DisposeTask', 2), ('testDistinctOfSourceWithExceptionsFromKeySelector()', 2), ('io.reactivex.internal.operators.observable.*;\nimport', 2), ('Headers', 2), ('realTime;\n', 2), ('features\n', 2), ('Observable.just(2).delay(500,', 2), ('org.apache.isis.applib.DomainObjectContainer;\nimport', 2), ('Movement.WALKING,', 2), ('CompletableResult<T>', 2), ('buf.poll();\n\n', 2), ('countAfter', 2), ('caught;\n', 2), ('likes', 2), ('SingleSource<U>', 2), ('AbstractNioChannel}s', 2), ('docValueCount()', 2), ('ToFlowablePerf', 2), ('file:\n', 2), ('FlowableRange(1,', 2), ('AsyncResult<Integer>', 2), ('folder,', 2), ('cloud', 2), ('emitter.onError(e);\n', 2), ('source.blockingFirst());\n', 2), ('<p>There', 2), ('assertEquals(CANCELLED,', 2), ('io.reactivex.internal.util.ConnectConsumer;\nimport', 2), ('wizard2.addSpellbook(spellbookDao.findByName("Book', 2), ('map}', 2), ('(functionName', 2), ('jvmOptions', 2), ('ts.assertValueCount(i', 2), ('created\n', 2), ('0",', 2), ('channel.', 2), ('name[0]);\n', 2), ('flows.', 2), ('info.', 2), ('io.reactivex.internal.fuseable.QueueDisposable;\n\n/**\n', 2), ('added...");\n', 2), ('------------------------------------------------------------------\n\n', 2), ('flattened', 2), ('this.operator', 2), ('Properties();\n\n', 2), ('ArrayList<>(caPaths.size());\n', 2), ('f.apply(s,', 2), ('realTime', 2), ('ObjectHelper.requireNonNull(reducer,', 2), ('emissions', 2), ('ObjectHelper.requireNonNull(transformer,', 2), ('(SingleSource<?', 2), ('UnicastProcessor.create(capacityHint,', 2), ('supplied");\n', 2), ('java.lang.annotation.*;\n\n/**\n', 2), ('TestHelper.checkDisposed(Observable.range(1,', 2), ('(SingleSource<?>)', 2), ('javaClassParameters', 2), ('DisposableSubscriber<Notification<T>>', 2), ('assertFalse(cd.isDisposed());\n\n', 2), ('ID.', 2), ('ConcatMapSingleMainObserver<T,', 2), ('timeout(2000)).onError(eq(exception));\n\n', 2), ('times.size());\n\n', 2), ('fromActionThrows()', 2), ('work-stealing', 2), ('ListIterator<T>', 2), ('ConcatMapImmediate<T,', 2), ('assertThat(buffer.toString(),', 2), ('onSubscribed', 2), ('iteration.\n', 2), ('TestException("inner"))),', 2), ('populated', 2), ('Thread.setDefaultUncaughtExceptionHandler(handler);\n', 2), ('height="436"', 2), ('assertSame(Single.never(),', 2), ('TestHelper.assertError(ts,', 2), ('com.iluwatar.abstractdocument.domain.HasModel;\nimport', 2), ('Captain', 2), ('expectedIndices.add(name);\n', 2), ('setOnce(AtomicReference<Disposable>', 2), ('RuntimeException(IOException)");\n', 2), ('studentDatabase', 2), ('org.junit.jupiter.api.Nested;\nimport', 2), ('TimeUnit.NANOSECONDS);\n', 2), ('Supplier<S>', 2), ('secureSettings.setString("xpack.ssl.truststore.secure_password",', 2), ('UnicastHostsProvider}', 2), ('TestSubscriber<List<Integer>>', 2), ('error();\n\n', 2), ('setFuture(Future<?>', 2), ('parent.disposables.add(right);\n\n', 2), ('this.channelToPendingWrites.get(key.channel());\n', 2), ('specifying', 2), ('Whitelist}', 2), ('SerialDisposable', 2), ('observer.onNext(Notification.createOnError(new', 2), ('DebounceTimedSubscriber<T>(\n', 2), ('dataSource;\n', 2), ('doFinally(Action', 2), ('merge(metaHorrors);\n', 2), ("Letter('a'))));\n", 2), ('item:', 2), ('Flowable<Flowable<Media>>', 2), ('Car(carProperties);\n\n', 2), ('requests.add(n);\n', 2), ('Schedulers.computation().scheduleDirect(new', 2), ('actual.hasComplete();\n', 2), ('testMostRecent()', 2), ('expectedLayers', 2), ('bogus)', 2), ('BasicIntQueueSubscription<R>\n', 2), ('disintegration', 2), ('observer.assertError(TestException.class);\n', 2), ('Method(whitelistMethod.javaMethodName,', 2), ('rainbowFish.getWeightTons()));\n', 2), ('rc.timer', 2), ('BigDecimal("100000")));\n\n', 2), ('AbstractDataType', 2), ('forwards', 2), ('nww', 2), ('result[3]', 2), ('filterPath);\n', 2), ('SimpleQueue<?>', 2), ('whitelist.whitelistStructs)', 2), ('Provided.");\n', 2), ('Schedulers.single().createWorker();\n', 2), ('Flowable.concat(\n', 2), ('-------------------------------------------------------------------------\n', 2), ('earlier', 2), ('subscribeActual(Observer', 2), ('spellByName.getId());\n', 2), ('NamedExpression>', 2), ('assertFalse(SubscriptionHelper.set(s,', 2), ('AtomicReference<Observer<?>>', 2), ('"application/json");\n', 2), ('Exit");\n', 2), ('painless', 2), ('lift));\n', 2), ('conn;\n', 2), ('invalidate(String', 2), ('parses\n', 2), ('#CANCELLED}', 2), ('correspond', 2), ('innerErrorThenMainError()', 2), ('(Author)', 2), ('TestObserver<Integer>(),', 2), ('toFlowable().repeatWhen(handler);\n', 2), ('(nextNotification.isOnComplete())', 2), ('"Z', 2), ('SerializedObserver', 2), ('ts2.assertValues(2L,', 2), ('dheeraj.mummarareddy', 2), ('map.put("age",', 2), ('ts.dispose();\n\n', 2), ('Enumeration', 2), ('acknowledgement', 2), ('"Lee");\n', 2), ('(delayTime', 2), ('source7,\n', 2), ('java.util.concurrent.ArrayBlockingQueue;\nimport', 2), ('withWeapon(String', 2), ('#hasComplete()},', 2), ('merge(Flowable.fromIterable(sources));\n', 2), ('otherSource.subscribe(bo);\n\n', 2), ('serialize()', 2), ('find(Long', 2), ('collectionSupplierIsNull()', 2), ('onNext.test(t);\n', 2), ('throwable.getCause());\n', 2), ('randomIntFrom0to(int', 2), ('hates', 2), ('UnsupportedEncodingException', 2), ('((DisposableContainer)o).delete(this);\n', 2), ('Callable<NoSuchElementException>', 2), ('works\n', 2), ('service.saveNewTopping(topping1);\n', 2), ('@Before(value', 2), ('List<Exception>', 2), ('DB...");\n', 2), ('carry', 2), ('after);\n', 2), ('forEachWileWithError()', 2), ('inSequence(seq);\n', 2), ('IllegalStateException("internal', 2), ('bufferedReader.readLine())', 2), ('Potion', 2), ('.assertFailure(IOException.class);\n', 2), ('times.', 2), ('window,', 2), ('SimplePlainQueue<R>', 2), ('attachment.bodyPart().getDataHandler().getInputStream();\n', 2), ('10000)', 2), ('#DISPOSED}', 2), ('assertEquals(Arrays.asList(3,', 2), ('s.onSubscribe(this);\n', 2), ('Bucket', 2), ('"PEM",', 2), ('doOnEvent}', 2), ('Lambda', 2), ('q.setFirst(NotificationLite.error(t));\n', 2), ('"2",', 2), ('s.onSubscribe(EmptySubscription.INSTANCE);\n', 2), ('map.put("This', 2), ('org.springframework.transaction.annotation.Transactional;\n\n/**\n', 2), ('char[dimensions];\n', 2), ('NotificationLite.complete();\n', 2), ('onCompleteThrows2()', 2), ('(get(0)', 2), ('calls,', 2), ('assertNull(((Callable<Void>)m).call());\n\n', 2), ('subsequently.', 2), ('get();\n\n', 2), ('place', 2), ('wip--;\n', 2), ('kk', 2), ('DbCustomerDao(dataSource);\n', 2), ('(innerQueue', 2), ('arbiter)', 2), ('current.length;\n', 2), ('Publisher)', 2), ('LOGGER.info("How', 2), ('disposer)', 2), ('2).elementAt(1).blockingGet()\n', 2), ('previousSpell', 2), ('TreasureChest();\n', 2), ('LOGGER.info(AccountAggregate.getAccount(ACCOUNT_OF_DAENERYS).toString());\n', 2), ('expensive', 2), ('sleep(1000);\n\n', 2), ('Math.abs((int)', 2), ('collection.add(t);\n', 2), ('10000;\n', 2), ('checkSource(Single.class.getSimpleName(),', 2), ('onNext(Open', 2), ('.iterator();\n\n', 2), ('5).reduce(0,', 2), ('List<Parameter>', 2), ('contentBuilder', 2), ('assertCompositeExceptions(TestObserver<?>', 2), ('exists.', 2), ('current,', 2), ('calories;\n\n', 2), ('ended\n', 2), ('java.security.SignatureException;\nimport', 2), ('retry(Predicate<?', 2), ('AssertionError("Inner', 2), ('AccountCreateEvent.class);\n', 2), ('Schedulers.single())\n', 2), ('javaClassName,', 2), ('S>(s,', 2), ('com.iluwatar.fluentinterface.fluentiterable.lazy;\n\nimport', 2), ('5).concatWith(Flowable.<Integer>error(ex))\n', 2), ('verifyNoMoreInteractions(ballItem);\n', 2), ('assertTrue(subject.hasObservers());\n\n', 2), ('.mergeWith(Maybe.<Integer>empty())\n', 2), ("singleton's", 2), ('CacheDisposable[]', 2), ('").append(inDoc).append("', 2), ('U>)d;\n', 2), ('(CertificateException', 2), ('java.security.PrivilegedExceptionAction;\nimport', 2), ('b.author_id', 2), ('mp.start();\n', 2), ('onNext}', 2), ('((NamedExpression)', 2), ('to.assertResult(2);\n', 2), ('frequency.\n', 2), ('meantime,', 2), ('expressions', 2), ('sa.unbounded', 2), ('subscriberCount;\n\n', 2), ('unsubscribeOn(final', 2), ('bottomShelf', 2), ('com.iluwatar.fluentinterface.fluentiterable.FluentIterable;\n\n/**\n', 2), ('esDir', 2), ('partial', 2), ('forwarded', 2), ('cs.onSuccess(0);\n', 2), ('ArrayList<User>', 2), ('ObjectHelper.verifyPositive(subscriberCount,', 2), ('insert(Student', 2), ('Composite\n', 2), ('bother', 2), ('(15.11.2015).', 2), ('javaMethodHandleSetter', 2), ('"").split(",");\n\n', 2), ('p);\n\n', 2), ('blocked', 2), ('#mergeDelayError(Publisher,', 2), ('current.cancel();\n', 2), ('javaMethod.getModifiers(),', 2), ('-1', 2), ('"Douglas";\n', 2), ('task.setRest(f2);\n\n', 2), ('rand.nextInt((MAX_ID', 2), ('this.latest;\n', 2), ('.concatMapMaybe(\n', 2), ('ThreadLocalRandom.current().nextLong(10))));\n', 2), ('setDone()', 2), ('.switchMapCompletable(Functions.justFunction(Completable.error(new', 2), ('complete(p);\n', 2), ('testAllDays(specialDay,', 2), ('com.iluwatar.fluentinterface.fluentiterable;\n\nimport', 2), ('Distributed', 2), ('requested();\n\n', 2), ('List<Single<Integer>>', 2), ('domainEvent;\n', 2), ('terry.setSurname("Lee");\n', 2), ('Function<SingleSource<?', 2), ('Callable<Single<Integer>>()', 2), ('treating', 2), ('instance3);\n', 2), ('printMainMenu();\n', 2), ('has(Stats', 2), ('w.onNext(t);\n', 2), ('Observable>', 2), ('SwitchMapMaybeMainObserver<T,', 2), ('this.cakeLayerInfos', 2), ('connect(@NonNull', 2), ('f.collect(Functions.justCallable(new', 2), ('lc', 2), ('magical', 2), ('a.id', 2), ('shutdownRejects()', 2), ('ElasticsearchException("unable', 2), ('java.lang.reflect.Modifier;\nimport', 2), ('3562861878281475070L;\n', 2), ('errs.addThrowable(ex);\n', 2), ('GeneralSecurityException;\n\n', 2), ('concatMap', 2), ('moveToNext()', 2), ('MissingBackpressureException("queue', 2), ('publisher;\n\n', 2), ('SerializedObserver<U>(t),', 2), ('source.subscribe(left);\n', 2), ('Scheduler\n', 2), ('better\n', 2), ('delay)', 2), ('advanceExact(int', 2), ('smell', 2), ('15);', 2), ('one-time', 2), ('"Inner', 2), ('"-",', 2), ('(!(obj', 2), ('process()', 2), ('never()).onNext("two");\n', 2), ('io.reactivex.internal.observers.DeferredScalarDisposable;\nimport', 2), ('lines.size();', 2), ('list.toString();\n', 2), ('channel.getHandler().handleChannelRead(channel,', 2), ('Iterator<CakeLayer>', 2), ('counter.getAndIncrement()', 2), ('this.s;\n', 2), ('SelectionKey.OP_READ);\n', 2), ('this.delegates.forEach(mapper', 2), ('<code>os</code>.\n', 2), ('org.apache.log4j.Logger;\nimport', 2), ('cakeInfo', 2), ('calls[1]++;\n', 2), ('Set<MockUncasedHostProvider>', 2), ('using(Callable<?', 2), ('IvoryTower.getInstance();\n', 2), ('<p>Usage', 2), ('(Publisher<?', 2), ('(add(as))', 2), ('AtomicInteger(3);\n\n', 2), ('disposeState.accept(s);\n', 2), ("'}'", 2), ('windows.getAndIncrement();\n', 2), ('version)', 2), ('fileName;\n\n', 2), ('com.iluwatar.flux.action.MenuAction;\nimport', 2), ('remaining--', 2), ('List<Thread>', 2), ('to.assertResult(0,', 2), ('testWrite_GivenEmpty()', 2), ('(logGroupName', 2), ('owner\n', 2), ('MostRecentSubscriber<T>', 2), ('ObservableRefCount(ConnectableObservable<T>', 2), ('horrors', 2), ('getType(structsMap.get(def.class.getSimpleName()),', 2), ('<p>Trampoline', 2), ('java.lang.Thread.UncaughtExceptionHandler#uncaughtException(Thread,', 2), ('tools,', 2), ('assertEquals(readFirstLine(ERROR_FILE),', 2), ('taking', 2), ('Count', 2), ('TimeUnit.MINUTES);\n\n', 2), ('"firstName=\'"', 2), ('java.nio.channels.SelectableChannel;\nimport', 2), ('throwable.\n', 2), ('io.reactivex.internal.subscribers.DeferredScalarSubscriber;\nimport', 2), ('f.get().get(1));\n', 2), ('operator.onSubscribe(new', 2), ('org.junit.jupiter.api.Assertions.assertSame;\n\n/**\n', 2), ('(result.getResult().equals(LotteryTicketCheckResult.CheckResult.NO_PRIZE))', 2), ('a[i].subscribe(parent.observers[i]);\n', 2), ('testSetId()', 2), ('Iterator}', 2), ('printMainMenu()', 2), ('cnt++;\n', 2), ('OtherSubscriber', 2), ('parent.innerNext(index,', 2), ('grade)', 2), ('Removing', 2), ('asynchronously\n', 2), ('parent.innerError(index,', 2), ('File(basepath', 2), ('onDrop)', 2), ('io.reactivex.internal.schedulers.TrampolineScheduler;\nimport', 2), ('reentrance', 2), ('reportDisposableSet();\n', 2), ('debouncer', 2), ('org.elasticsearch.painless.node;\n\nimport', 2), ('NodeCache', 2), ('soldier\n', 2), ('stateSupplier,', 2), ('f.get(Long.MAX_VALUE,', 2), ('unhandled', 2), ('longs.size());\n', 2), ('multithreaded', 2), ('testDistinctOfNormalSource()', 2), ('-1),', 2), ('close,\n', 2), ('created.",', 2), ('addString3', 2), ('leftEnd,', 2), ('LoggingHandler', 2), ('FileVisitResult.CONTINUE;\n', 2), ('org.elasticsearch.common.xcontent.XContentType;\nimport', 2), ('assertThrows(IllegalStateException.class,', 2), ('fromCallable()', 2), ('source7);\n', 2), ('u);\n//', 2), ('naming', 2), ('otherSource', 2), ('true);\n\n', 2), ('remember,', 2), ('com.iluwatar.flux.action.MenuItem;\nimport', 2), ('Streams.copyToString(new', 2), ('6));\n\n', 2), ('t.sendOnCompleted();\n', 2), ('principle.', 2), ('CompletableSubject.create(),\n', 2), ('to}', 2), ('ambArray(final', 2), ('operator.onSubscribe(Disposables.empty());\n\n', 2), ('resolution;\n', 2), ('MaybeFlatMapPublisher<T,', 2), ('ExecutorSchedulerTest.testCancelledRetention(w,', 2), ('jdx)', 2), ('org.elasticsearch.plugins.Plugin;\n\nimport', 2), ('commands.bookAddedToAuthor("Java', 2), ('consumed\n', 2), ('});\n\n\n', 2), ('(functionVersion', 2), ('CustomInMemoryRolesProvider', 2), ('parent.innerError(e,', 2), ('videoResource.getDetails(3,', 2), ('Presenter', 2), ('temporarily', 2), ('TimerDisposable(s);\n', 2), ('cause:', 2), ('createEvent(eventTime,', 2), ('Double>', 2), ('hurts', 2), ('.append(file.getName()).append(":")\n', 2), ('assertFalse(o.hasCustomOnError());\n', 2), ('returned),\n', 2), ('getMongoClient()', 2), ('Flowable.defer(factory);\n\n', 2), ('java.lang.annotation.ElementType.TYPE;\nimport', 2), ('fallback));\n', 2), ('FlowableWithLatestFromMany(@NonNull', 2), ('seedSupplier', 2), ('view)', 2), ('bytes");\n', 2), ('1015244841293359600L;\n\n', 2), ('when(task.call()).thenReturn(result);\n\n', 2), ('moRef.get().onError(new', 2), ('assertNotNull(message.getHeaders());\n', 2), ('mutate', 2), ('repository.save(persons);\n', 2), ('parent.innerSuccess(value,', 2), ('(idx1', 2), ('3000,', 2), ('onTerminate;\n', 2), ('r1,', 2), ('onEvent)', 2), ('requiring\n', 2), ('COMPLETED;\n', 2), ('mixedLong()', 2), ('sourceFused', 2), ('timeout(rc);\n', 2), ('any.\n', 2), ('(resultSet.next())', 2), ('numerous', 2), ('sequentially\n', 2), ('Object)', 2), ('DelayMaybeObserver<T>', 2), ('ConcatMapSingleSubscriber<T,', 2), ('"Value_"', 2), ('selection', 2), ('first.cancel();\n', 2), ('(successfully', 2), ('[%s],', 2), ('cdl;\n', 2), ('TIME_UNIT', 2), ('RxJavaPlugins.onError(t.getError());\n', 2), ('"jdbc:h2:~/dao";\n', 2), ('(TLeft)val;\n\n', 2), ('limits', 2), ('CompletableTimerTest', 2), ('happens</dd>\n', 2), ('fails,\n', 2), ('shelf\n', 2), ('assertNotNull(expression);\n', 2), ('pendingWrite', 2), ('upstream.request(scalarLimit);\n', 2), ('queue.offer(NotificationLite.complete());\n', 2), ('source.onNext(7);\n', 2), ('saveNewTopping(CakeToppingInfo', 2), ('particularly', 2), ('2")));\n//\n//', 2), ('serialDisposable.update(first);\n', 2), ('this.seed', 2), ('request;\n', 2), ('ts.assertNoErrors().assertComplete();\n', 2), ('(singleType', 2), ('sp', 2), ('cancel(RefConnection', 2), ('Undeliverable', 2), ('#mergeDelayError(Publisher)\n', 2), ('testObserver(WeatherType', 2), ('testDoOnSubscribe2()', 2), ('(UserAccount', 2), ('countAfter.incrementAndGet();\n', 2), ('formed', 2), ('"future', 2), ('rootPane', 2), ('testNextThrows()', 2), ('mainSuccess()', 2), ('javaAugmentedClassName,', 2), ('ThreadSafeDoubleCheckLocking.getInstance();\n', 2), ('TestHelper.compositeList(error);\n', 2), ('tailIndex', 2), ('mainErrorInnerSuccessDelayError()', 2), ('Flowable.merge(os).subscribe(o);\n\n', 2), ('assertEquals((Object)2,', 2), ('ps2.singleOrError()).test();\n\n', 2), ('createFluentIterable(integers).last();\n', 2), ('.assertValue(1)\n', 2), ('keystore.store(os,', 2), ('(new', 2), ('experimental', 2), ('isGroup()', 2), ('ObjectHelper.requireNonNull(convert,', 2), ('AttributeSet.EMPTY;\n', 2), ('connected;\n\n', 2), ('observer1,', 2), ('ByteBuffer.allocate(1024);\n', 2), ('WindowBoundaryInnerSubscriber<Object,', 2), ('bf.cancelled', 2), ('df;', 2), ('f.getParentFile();\n', 2), ('Burst<T>', 2), ('open.subscribe(os);\n', 2), ('"transformer', 2), ('s.onSubscribe(deferred);\n\n', 2), ('UnsupportedOperationException("remove");\n', 2), ('s[i]', 2), ('connection);\n\n', 2), ('isCancelled', 2), ('ConnectableFlowable>()', 2), ('TestSingle<Integer>();\n\n', 2), ('CombiningTrustConfig', 2), ('Flowable.just(1).doOnSubscribe(new', 2), ('rc.timer.dispose();\n', 2), ('User("Kate",', 2), ('SingleObserver<R>,', 2), ('wireTransfers)', 2), ('However', 2), ('org.elasticsearch.common.Booleans;\nimport', 2), ('sources[0].subscribe(new', 2), ('SingleMap.MapSingleObserver<T,', 2), ('consumable', 2), ('d++)', 2), ('NioDatagramChannel', 2), ('NumberExpression,', 2), ('TestHelper.compositeList(to.errors().get(0));\n', 2), ('onlyFQNJavaClassName,\n', 2), ('white-lists', 2), ('cal.get(Calendar.YEAR));\n', 2), ('250L);\n', 2), ('unfortunately', 2), ('"Ram",', 2), ('Observable}\n', 2), ('crashOnNext)', 2), ('DisposableHelper.setOnce(mainDisposable,', 2), ('casting,', 2), ('apply(Flowable<T>', 2), ('r.set(v);\n', 2), ('EventConsumer', 2), ('values.set(index,', 2), ('versions)', 2), ('5).mergeWith(\n', 2), ('begin\n', 2), ('javaAugmentedClassName', 2), ('TestHelper.compositeList(errors.get(0));\n\n', 2), ('(subscribers.size()', 2), ('so.request(1);\n\n', 2), ('CountDownLatch(NITERS);\n', 2), ('java.util.concurrent.FutureTask\n', 2), ('s.onSubscribe(inner.sd);\n', 2), ('executor.\n', 2), ('wo.w.onComplete();\n\n', 2), ('wr.get());\n\n', 2), ('R>)', 2), ('Math.random());\n', 2), ('parent.onTimeoutError(idx,', 2), ('m.javadoc.indexOf("Single",', 2), ('LOGGER.info("Author', 2), ('use.', 2), ('++calls[0];\n', 2), ('indexMappings', 2), ('subscriber.assertError(IllegalArgumentException.class);\n', 2), ('action.', 2), ('PrintWriter(new', 2), ('RIGHT_VALUE', 2), ('source.blockingMostRecent(-1L);\n\n', 2), ('elementAtIndex1WithDefaultOnEmptySourceObservable()', 2), ('two.\n', 2), ('#connect}', 2), ('"Tough",', 2), ('numbers2', 2), ('to.assertNotComplete();\n\n', 2), ('2.', 2), ('ParallelFlowable>()', 2), ('itemTimeoutPublisher', 2), ('declares', 2), ('MaybeFlatMapNotification<T,', 2), ('nextNotification', 2), ('System.out.println("subscribing"))\n', 2), ('get(int', 2), ('STANDARD', 2), ('transportService;\n', 2), ('metadata,', 2), ('ticket.getPlayerDetails().getPhoneNumber());\n', 2), ('pub;\n', 2), ('complete,', 2), ('href="http://reactivex.io/documentation/operators/contains.html">ReactiveX', 2), ('count[0]);\n\n', 2), ('preceding', 2), ('resolution.get().name()', 2), ('Function<Unit[],', 2), ('TimeoutFallbackObserver<T>(s,', 2), ('subscriber.assertError(error);\n', 2), ('br;\n', 2), ('testElementAtOrDefaultWithMinusIndex()', 2), ('BOUNDARY_DISPOSED)', 2), ('properties.put(stat,', 2), ('ts.awaitTerminalEvent(5,', 2), ('onComplete)?</code></pre>\n', 2), ('Observable.range(2,', 2), ('mainCompletesinnerErrorDelayed()', 2), ('MaybeCallbackObserver<Integer>(Functions.<Integer>emptyConsumer(),\n', 2), ('futureResult2', 2), ('innerError(SwitchMapInnerObserver', 2), ('++scalarEmitted', 2), ('q.isEmpty())', 2), ('bq.cancel();\n\n', 2), ('A>,', 2), ('awaitingFlushed.computeIfAbsent(flushId,', 2), ('innerQueue', 2), ('mixed()', 2), ('longOverflow()', 2), ('But', 2), ('obs.reduce(new', 2), ('never()).cancel(true);\n', 2), ('super.newWebRequest(servletRequest,', 2), ('accept(Emitter<Event>', 2), ('w.schedule(Functions.emptyRunnable(),', 2), ('io.reactivex.subscribers.DefaultSubscriber;\n\npublic', 2), ('is,', 2), ('#lift}', 2), ('cake.getLayers());\n', 2), ('(!m.signature.contains("SingleSource"))', 2), ('singleFunction;\n', 2), ('(WindowOperation<T,', 2), ('this.until', 2), ('Java-9', 2), ('org.junit.jupiter.params.provider.Arguments;\nimport', 2), ('height="445"', 2), ('IntStream.range(0,', 2), ('dependentPromise.get(1000,', 2), ('home."));\n', 2), ('(items.size()', 2), ('scenario.\n', 2), ('none', 2), ('children(String', 2), ('functions\n', 2), ('s.list.size());\n', 2), ('coordinate', 2), ('resources;\n\n', 2), ('unmodifiable",', 2), ('to(Function<?', 2), ('Consumer<Integer>', 2), ('0)\n', 2), ('maxConcurrency);\n\n', 2), ('List<IndexPrivileges>', 2), ('never()).onNext(3);\n', 2), ('onNext(5)\n', 2), ('MaybeSubject.create();\n', 2), ('innerValue(boolean', 2), ('permits).\n', 2), ('javadoc2', 2), ('spellByName.getName());\n', 2), ('lefts.remove(end.index);\n', 2), ('bufferSize();\n', 2), ('Consumer<TestObserver<Object>>()', 2), ('ParallelJoin<T>(this,', 2), ('assertEquals(newLastname,', 2), ('java.net.Proxy;\nimport', 2), ('Throwable>...', 2), ('UserAccount("005",', 2), ('Event(type,', 2), ('escape', 2), ('dao.getById(nonExistingCustomer.getId()).get());\n', 2), ('repository.findOne(2L));\n\n', 2), ('(vr', 2), ('DisposableObserver<Notification<T>>', 2), ('badValue,', 2), ('assertCompositeExceptions(TestSubscriber<?>', 2), ('Rule', 2), ('LogicalPlan', 2), ('io.reactivex.internal.fuseable.ScalarCallable;\n\n/**\n', 2), ('queue.isEmpty())', 2), ('Test\n', 2), ('classname', 2), ('Observables.\n', 2), ('clusterName)', 2), ('bankAccount,', 2), ('flatMapCompletable.subscribeWith(new', 2), ('.put("xpack.ssl.truststore.path",', 2), ('DomainEventProcessor', 2), ('assertTrue(f2.isCancelled());\n', 2), ('getFile(String', 2), ('cycles;\n\n', 2), ('Assert', 2), ('list.isEmpty());\n', 2), ('input.size).subscribeOn(Schedulers.computation());\n', 2), ('writer.getStatic(field.owner.type,', 2), ('stringProps)', 2), ('Disposables', 2), ('FieldAttribute(location(),', 2), ('ThreadSafeLazyLoadedIvoryTower.getInstance();\n', 2), ('observable.materialize().dematerialize();\n\n', 2), ('layers;\n', 2), ('(EventDoesNotExistException', 2), ('Targaryen"));\n\n', 2), ('times(1)).onNext("two");\n', 2), ('maybeSupplier)', 2), ('QueueFuseable.NONE)\n', 2), ('attachments;\n', 2), ('actual.onNext(new', 2), ('getAccountNo()', 2), ('AsyncSubscription<T>', 2), ('o))', 2), ('io.reactivex.annotations.Beta;\n\n/**\n', 2), ('painlessReturnTypeName,', 2), ('Definition', 2), ('annotate', 2), ('Enters', 2), ('terry.getAge());\n', 2), ('files\n', 2), ('this.studentId', 2), ('insert', 2), ('Own', 2), ('statement.execute(CustomerSchemaSql.DELETE_SCHEMA_SQL);\n', 2), ('collectionSupplier,', 2), ('observers.get().length', 2), ('LOGGER.info("Treasure', 2), ('ParallelCollectSubscriber<T,', 2), ('q2', 2), ('interest', 2), ('Gson();\n', 2), ('.test(3)\n', 2), ('onSuccess;\n\n', 2), ('m.javadoc.indexOf("onSuccess",', 2), ('Mute', 2), ('size;', 2), ('.dematerialize()\n', 2), ('ErrorMode.BOUNDARY));\n', 2), ('accept(TestSubscriber<Object>', 2), ('OtherObserver<T>\n', 2), ('aborting', 2), ('sourceBackAccount,', 2), ('uses\n', 2), ('painlessFieldClass.getName()),\n', 2), ('thrown")\n', 2), ('toFlowable().repeat(times);\n', 2), ('TimeoutFallbackSubscriber(Subscriber<?', 2), ('java.sql.DriverManager;\nimport', 2), ('System.out.println("Can\'t', 2), ('startWith1()', 2), ('disposable;\n\n', 2), ('activeCount--;\n', 2), ('FilePermission(path.toString(),', 2), ('app.start();\n\n', 2), ('javaField.getModifiers(),', 2), ('ticket2', 2), ('context.checking(new', 2), ('mainDisposable;\n\n', 2), ('LeftRightSubscriber', 2), ('Removes', 2), ('e.serialize();\n', 2), ('produced++;\n\n', 2), ('@Nullable', 2), ('io.reactivex.disposables.Disposables;\n\n/**\n', 2), ('Single<Integer>>', 2), ('Scheduler.clockDriftTolerance();\n\n', 2), ('externally\n', 2), ('rights.clear();\n', 2), ('ReduceContext', 2), ('storageUrl', 2), ('IntervalRangeSubscriber', 2), ('LOGGER.info("AKHORAHIL={}",', 2), ('listen', 2), ('IllegalArgumentException("Cannot', 2), ('(long)', 2), ('NONE', 2), ('Class<?>[]', 2), ('inputStream', 2), ('super(n);\n', 2), ('crash', 2), ('sun', 2), ('"Christopher', 2), (').toObservable().subscribe(new', 2), ('Functions.ON_ERROR_MISSING);\n', 2), ('RestStatus', 2), ('character.getSpell());\n', 2), ('RIGHT_VALUE,', 2), ('EmptySubscription.error(new', 2), ('find(int', 2), ('assertEquals(repository.findAll().size(),', 2), ('this.subscribers;\n', 2), ('")");\n', 2), ('CustomMaybeOperator&lt;Integer&gt;())\n', 2), ('Java8', 2), ('smallerJavaMajorVersionLowerBound', 2), ('(str.length()', 2), ('exp)', 2), ('javaInterfaceLookup.getInterfaces())', 2), ('AtomicReference<WindowBoundaryInnerSubscriber<T,', 2), ('helping', 2), ('changes.\n', 2), ('sync', 2), ('representations', 2), ('svq.poll();\n\n', 2), ('(InnerSubscriber<?,', 2), ('"))', 2), ('COMPUTATION', 2), ('fish.getLengthMeters());\n', 2), ('JLabel("File', 2), ('CachingPolicy.AROUND)', 2), ('iteration.', 2), ('channel.write(buffer,', 2), ('<code>', 2), ('ACCOUNT', 2), ('io.reactivex.internal.schedulers.ImmediateThinScheduler;\nimport', 2), ('this.fighterClass', 2), ('milliseconds,', 2), ('toFlowable().repeatUntil(stop);\n', 2), ('isActive()', 2), ('actionPerformed(ActionEvent', 2), ('types;\n', 2), ('anytime', 2), ('.assertErrorMessage("The', 2), ('ts.assertFailure(IOException.class)\n', 2), ('DataFetcher}', 2), ('U>)inner[j];\n\n', 2), ('pp.parallel(2)\n', 2), ('RepeatSubscriber<T>(s,', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeat.on.png"', 2), ('albumTitle)', 2), ('tableGuests)', 2), ('libraryFunctionActingOnMovieObservables(horrorMovies);\n', 2), ('RxJavaPlugins.onSingleError(new', 2), ('Single.just(v).toFlowable();\n', 2), ('DeferredScalarDisposable<T>(s);\n', 2), ('obs.blockingIterable().iterator();\n\n', 2), ('QueueFuseable.SYNC)\n', 2), ('s.drift', 2), ('hacks', 2), ('countries;\n', 2), ('offset', 2), ('fail("Iterator', 2), ('Subject}s\n', 2), ('"Luther",', 2), ('sources.poll();\n', 2), ('PublisherBufferOverlappingSubscriber<T,', 2), ('zipperThrows()', 2), ('blobName)', 2), ('.doOnCancel(new', 2), ('alternative', 2), ('className,', 2), ('mainSubscription;\n\n', 2), ('io.reactivex.exceptions.MissingBackpressureException}', 2), ('HashSet<>(Arrays.asList(11,', 2), ('Skip', 2), ('NotificationLite', 2), ('concatWith}', 2), ('"onEvent', 2), ('egg', 2), ('(ts', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/using.png"', 2), ('times(1)).onNext(0L);\n', 2), ('SpscArrayQueue<Object>', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/onErrorReturn.png"', 2), ('first4', 2), ('assertNull(error[0]);\n', 2), ('value[1]', 2), ('URLClassLoader)', 2), ('flatMapCompletable}', 2), ('goldmine', 2), ('bowl.\n', 2), ('ParallelDoOnNextTry<T>(this,', 2), ('this));\n\n', 2), ('uriPath', 2), ('s.get().request(1);\n', 2), ('Observable},', 2), ('times(1)).onNext(value);\n', 2), ('tokens[0];\n\n', 2), ('completionValue;\n', 2), ('AppManager.save(userAccount3);\n', 2), ('Document("ticketId",', 2), ('to.assertValueCount(0);\n', 2), ('Math.random', 2), ('ObjectHelper.requireNonNull(supplier.call(),', 2), ('this.valueSelector', 2), ('o.all(new', 2), ('environment);\n\n', 2), ('journal.\n', 2), ('strings\n', 2), ('rating', 2), ('((Event)', 2), ('(staticMethodDef', 2), ('bridge,', 2), ('org.elasticsearch.xpack.ml.job.process.normalizer;\n\nimport', 2), ('ends', 2), ('properties;\n', 2), ('DisposableMaybeObserver&lt;Integer&gt;()', 2), ('-7419642935409022375L;\n\n', 2), ('painlessClassName', 2), ('#subscribeOn\n', 2), ('mapperCancels()', 2), ('evaluate', 2), ('both\n', 2), ('(e1', 2), ('https://github.com/Netflix/RxJava/issues/1451\n', 2), ('PlayerDetails("bob@foo.bar",', 2), ('element);\n', 2), ('delaySubscription(Publisher<U>', 2), ('inner.next();\n', 2), ('com.iluwatar.mediator;\n\nimport', 2), ('contain\n', 2), ('VirtualMachineError}).</li>\n', 2), ('cake.setTopping(topping);\n', 2), ('artificialDelayOf(100);\n', 2), ('requests,', 2), ('os))', 2), ('ms.subscribe(this);\n', 2), ('Method(String', 2), ('emptyList(),', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/sequenceEqual.png"', 2), ('rco.complete);\n', 2), ('AtomicReference<LinkedQueueNode<T>>();\n', 2), ('RequestEarly', 2), ('4).take(2).subscribe(new', 2), ('equal\n', 2), ('ParallelFlowable.fromArray(Flowable.<Integer>error(new', 2), ('timeout(2000).atLeastOnce()).draw();\n', 2), ('lists.add(xs);\n', 2), ('FileSelectorView', 2), ('subscribeWith(E', 2), ('org.elasticsearch.cli;\n\nimport', 2), ('logger,\n', 2), ('getCertificateChain(environment);\n', 2), ('fact', 2), ('concurrently,', 2), ('Flowable.timer(counter.get(),', 2), ('assertTrue(ex.getCause().getMessage().contains("Boo!"));\n', 2), ('components)', 2), ('Thread.getDefaultUncaughtExceptionHandler();\n', 2), ('subscribe(Functions.emptyConsumer(),', 2), ('com.iluwatar.facade;\n\nimport', 2), ('pp.onNext(4);\n', 2), ('(oo', 2), ('movie|",', 2), ('disposeResourceAfter()', 2), ('SecureString(password),', 2), ('initialCrash()', 2), ('GetAliasesResponse', 2), ('files,', 2), ('as}', 2), ('NEW_THREAD', 2), ('test(boolean', 2), ('LotteryNumbers\n', 2), ('layers.', 2), ('"Flowable");\n\n', 2), ('"id",', 2), ('phase\n', 2), ('MoneyTransferEvent.class);\n', 2), ('classname,', 2), ('(trustStorePassword', 2), ('struct;\n', 2), ('wrap(simpleObjects).create("Faz");\n', 2), ('(Whitelist', 2), ('SchedulerPoolFactory.create(threadFactory);\n', 2), ('assumed', 2), ('"MacArthur";\n', 2), ('item}\n', 2), ('posts', 2), ('SingleSources.', 2), ('onSuccessMapper;\n', 2), ('update(Student', 2), ('assertTrue(ft.isCancelled());\n', 2), ('ConcatMapMaybeMainObserver<Integer,', 2), ('observer.onNext(1);\n\n', 2), ('2L);\n', 2), ('Money', 2), ('list.add(t);\n//', 2), ('#mergeDelayError(Iterable)}', 2), ('setPresenter(FileSelectorPresenter', 2), ('inputObject)', 2), ('(debouncer.compareAndSet(d,', 2), ('source.switchMapSingle(new', 2), ('SingleZipIterable<T,', 2), ('run();\n', 2), ('get(ci);\n', 2), ('sorted', 2), ('Scheduler}.\n', 2), ('normalLongRequestExact()', 2), ('method),', 2), ('f.elementAt(0,', 2), ('state[3]);\n', 2), ('lift,', 2), ('callback-style', 2), ('classPath', 2), ('this.clients', 2), ('function.', 2), ('vr;\n\n', 2), ('subject1.test();\n', 2), ('((FuseToObservable<T>)this).fuseToObservable();\n', 2), ('effect', 2), ('.unsubscribeOn(Schedulers.single()));\n', 2), ('Transformer', 2), ('(v1', 2), ('(DisposableHelper.replace(other,', 2), ('lineNumber', 2), ('reduce(BiFunction).\n', 2), ('to);\n\n', 2), ('testFindOneByNameEqualSpec()', 2), ('onNextNoSubscription();\n', 2), ('shouldNotInvokeFuncUntilSubscription()', 2), ('words)', 2), ('did', 2), ('&lt;', 2), ('numbers.add(num);\n', 2), ('(!upstream.compareAndSet(null,', 2), ('long.class;\n', 2), ('totalElementsCount', 2), ('actual.onNext(false);\n', 2), ('Gateway', 2), ('fulfill(T', 2), ('Long[]', 2), ('TestMaybe<Integer>();\n\n', 2), ('considers', 2), ('org.reactivestreams.*;\n\n/**\n', 2), ('apply(Boolean', 2), ('s.onError(null);\n', 2), ('fs.cancel();\n\n', 2), ('###");\n', 2), ('wind."});\n', 2), ('World!").doOnCancel(new', 2), ('responseHeaders.put(k,', 2), ('Iterator<CakeTopping>', 2), ('assertNotNull(last4);\n', 2), ('age\n', 2), ('this.scheduler;\n', 2), ('OtherSubscriber(SingleObserver<?', 2), ('vs', 2), ('IllegalStateException(e);\n', 2), ('(allowFatal', 2), ('.rebatchRequests(1)\n', 2), ('Close>\nextends', 2), ('eventPool.get(eventId).status();\n', 2), ('custom.createWorker();\n', 2), ('org.elasticsearch.example.realm.CustomRealm;\nimport', 2), ('instantiate', 2), ('NextIterator<T>', 2), ('lock.wait();\n', 2), ('Timed<T>(t,', 2), ("MaybeObserver}'s", 2), ('dropped.', 2), ('world.\n', 2), ('does.\n', 2), ('Failure");\n', 2), ('com.iluwatar.converter;\n\n\nimport', 2), ('crashOnHasNext;\n', 2), ('cachedService', 2), ('subject.onNext(3);\n', 2), ('parent.otherError(new', 2), ('size++;\n', 2), ('exception:', 2), ('this.destination', 2), ('swaisuan\n', 2), ('FlowableToListSingle(Flowable<T>', 2), ('fuseToMaybe()', 2), ('(compareAndSet(FUTURE_INDEX,', 2), ('ObjectHelper.requireNonNull(bufferClose.apply(token),', 2), ('b));\n', 2), ('isLoaded()', 2), ('open)', 2), ('1024.0,', 2), ('reduces', 2), ('MoneyDepositEvent.class);\n', 2), ('addString', 2), ('received"));\n', 2), ('defaultItem));\n', 2), ('ex;\n//', 2), ('System.out.println("Diff', 2), ('TimeoutSubscriber(Subscriber<?', 2), ('offers', 2), ('mapKey', 2), ('this.lefts', 2), ('java.util.concurrent.atomic.AtomicLong;\n\n/**\n', 2), ('NPE");\n//', 2), ('rtn;\n', 2), ('io.reactivex.functions.Consumer;\n\npublic', 2), ('handle\n', 2), ('unicastHostsFilePath),', 2), ('observer.setWaiting();\n', 2), ('ts.awaitDone(5,', 2), ('.concatMapSingle(Functions.justFunction(Single.error(new', 2), ('Observers.\n', 2), ('Time', 2), ('purging', 2), ('"E");\n', 2), ('method.arguments.get(i).clazz;\n', 2), ('height="300"', 2), ('(elements', 2), ('slowdowns', 2), ('AtomicReference<Subscription>\nimplements', 2), ('largerJavaMajorVersionUpperBound));\n', 2), ("Completable'\\r\\n", 2), ('MaybeOnSubscribe<T>', 2), ('observable.subscribe(observer);\n\n', 2), ('topShelf', 2), ('"return', 2), ('w.onNext(NotificationLite.<T>getValue(o));\n', 2), ('w.getName());\n', 2), ('ara.get(i);\n', 2), ('System.out.println("Interrupted!', 2), ('this.resources', 2), ('verify(func).call();\n', 2), ('painlessParameterTypeNames;\n\n', 2), ('testMergeCovariance3()', 2), ('car', 2), ('print()', 2), ('r1);\n', 2), ('Consumer<List<Integer>>()', 2), ('noPermissions,', 2), ('startWithObservable()', 2), ('scheduling:', 2), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;\nimport', 2), ('cancelRace()', 2), ('actual.onSuccess(count);\n', 2), ('QueueDisposable<R>', 2), ('assertNotNull(abilities);\n', 2), ('MaybeTransformer}', 2), ('q.clear();\n\n', 2), ('GetIndexRequest()\n', 2), ('rx2.newthread-priority}', 2), ('TestResourceMaybeObserver<Integer>();\n', 2), ('AmbSingleObserver<T>', 2), ('amb(final', 2), ('-1);\n', 2), ('TypeResolution.TYPE_RESOLVED', 2), ('decouples', 2), ('build()', 2), ('getJavaChannel().configureBlocking(false);\n', 2), ('wizard3.addSpellbook(spellbookDao.findByName("Book', 2), ('ASYNC_DISPOSED)', 2), ('org.elasticsearch.script.ScriptException;\n\nimport', 2), ('org.elasticsearch.common.io.Streams;\nimport', 2), ('.concatMap(Functions.<Observable<Integer>>identity())\n', 2), ('FutureDisposable', 2), ('1),', 2), ('onSubscribe));\n', 2), ('manner,', 2), ('lands', 2), ('Fulfills', 2), ('testThrottlingWithError()', 2), ('array.', 2), ('FlatMapCompletableMainObserver<T>(observer,', 2), ('minimum', 2), ('!delayError)', 2), ('ts.assertValues(expected);\n', 2), ('#onNext}', 2), ('TimeoutFallbackMaybeObserver<T>(actual)', 2), ('manages\n', 2), ('scheduler.createWorker());\n', 2), ('org.elasticsearch.bootstrap.JarHell;\nimport', 2), ('LinkedHashMap<String,', 2), ('request(n);\n', 2), ('getValues(T[]', 2), ('10)][];\n', 2), ('JoinSupport', 2), ('cc.disposable;\n', 2), ('com.iluwatar.specification.property.Color;\nimport', 2), ('setWaiting()', 2), ('StripBoundarySubscriber<T>(s));\n', 2), ('Exception("test', 2), ('SwitchMapInnerObserver(SwitchMapCompletableObserver<?>', 2), ('com.iluwatar.abstractdocument.domain.HasParts;\nimport', 2), ('dispose()\n', 2), ('songs', 2), ('bijection.\n', 2), ('this.dynamoDbMapper', 2), ('TestException("Inner', 2), ('doOnSubscribe}', 2), ('bridges', 2), ('w.schedule(run);\n', 2), ('(without', 2), ('unsafeCreate}', 2), ('.concatMapSingle(\n', 2), ('violated:', 2), ('conn.subscriberCount;\n', 2), ('(CompletableDisposable', 2), ('remove(as);\n', 2), ('shift', 2), ('propagated!",', 2), ('failOnNonBlockingScheduler}', 2), ('reactor.changeOps(key,', 2), ('callback);\n', 2), ('lock.readLock());\n', 2), ('SwitchMapCompletableObserver<?>', 2), ('Flowable.bufferSize()));\n', 2), ('like\n', 2), ('document.put(KEY,', 2), ('contains:', 2), ('ticket.getPlayerDetails().getBankAccount());\n', 2), ('assertEquals(0L,', 2), ('Assert.assertEquals(Integer.valueOf(6),', 2), ('ps.onNext(i);\n', 2), ('Statement)', 2), ('(sync.get()', 2), ('com.mongodb.client.MongoCollection;\nimport', 2), ('validate(Disposable', 2), ('b.indexOf(")",', 2), ('effect.', 2), ('boundarySupplier));\n', 2), ('upstream.get().dispose();\n', 2), ('org.elasticsearch.painless.spi;\n\nimport', 2), ('events,', 2), ('FlowableSingle<T>(source,', 2), ('RxJavaPlugins.onAssembly(this);\n', 2), ('globally', 2), ('testThrottlingWithCompleted()', 2), ('MaybeObserver>()', 2), ('startFirstTimeout(ObservableSource<?>', 2), ('annotation.length();\n', 2), ('DisposableHelper.setOnce(resource,', 2), ('Weekday.values())', 2), ('java.util.Collections.singletonMap;\nimport', 2), ('Artificial', 2), ('definitionStart);\n\n', 2), ('"Jon', 2), ('6812032969491025141L;\n\n', 2), ('nullness', 2), ('.noAbilities()\n', 2), ('DoAfterObserver<T>', 2), ('TimeValue.timeValueHours(1),', 2), ('Single<Object>()', 2), ('Settings.builder()\n', 2), ('decided', 2), ('Iterator<Flowable<T>>', 2), ('drastogi\n', 2), ('Streams.copy(exchange.getRequestBody(),', 2), ('(FileInputStream', 2), ('source.subscribe(child);\n', 2), ('fromCallableInvokesLazy()', 2), ('DateFormatCallable\n', 2), ('maintain', 2), ('getClass())', 2), ('mws.createWorkers(max,', 2), ('mainSubscription.get().request(c);\n', 2), ('sentence', 2), ('COMPLETE_MASK', 2), ('eventManager.start(eventId);\n', 2), ('apply(Callable<Scheduler>', 2), ('schedulerDoc', 2), ('AtomicLong(0));\n', 2), ('map;\n', 2), ('5;\n', 2), ('log(name', 2), ('TestHelper.checkUtilityClass(BackpressureHelper.class);\n', 2), ('TypeResolution', 2), ('egg?:', 2), ('List<Field>', 2), ('collectInto()', 2), ('(NamedExpression', 2), ('first;</strong>\n', 2), ('jump()', 2), ('doPrivilegedIOException(PrivilegedExceptionAction<T>', 2), ('terry.setAge(47);\n', 2), ('JScrollPane', 2), ('href="http://reactivex.io/documentation/operators/refcount.html">ReactiveX', 2), ('getAuthorBooksCount(String', 2), ('SubscribeOn</a>\n', 2), ('entry.length()', 2), ('beta', 2), ('service.saveNewTopping(topping2);\n\n', 2), ('CollectionUtils.isEmpty(types)', 2), ('LOGGER.info("Black', 2), ('testScheduler.advanceTimeBy(3000,', 2), ('Integer.MAX_VALUE),\n', 2), ('store)', 2), ('zipArray}', 2), ('copy.");\n', 2), ('(Whitelist.Struct', 2), ('drama', 2), ('fileLocation)', 2), ('TestObserver<Void>();\n', 2), ('(SecurityException', 2), ('verify(observer).onSuccess(true);\n', 2), ('LOGGER.info("push', 2), ('itemTimeoutObservableSource.subscribe(consumer);\n', 2), ('FlowableSubscriber<R>,', 2), ('java.security.UnrecoverableKeyException;\nimport', 2), ('Iterator<Path>', 2), ('fileName)', 2), ('assistedParameters;\n', 2), ('expectedJvmOptions)', 2), ('parsing\n', 2), ('properties.', 2), ('(end', 2), ('6695226475494099826L;\n\n', 2), ('FlattenIterableSubscriber<T,', 2), ('operators</a>\n', 2), ('TimeUnit.SECONDS).blockingIterable().iterator().next();\n\n', 2), ('globalMutex.wait();\n', 2), ('arity;\n', 2), ('3");\n//', 2), ('exchange.getResponseBody().write(response.body);\n', 2), ('listOfUserAccounts)', 2), ('(SubscriptionHelper.validate(this.upstream,', 2), ('data.length);\n', 2), ('BackpressureHelper.multiplyCap(skip,', 2), ('org.apache.lucene.util.Constants;\nimport', 2), ('Scanner(System.in))', 2), ('this.condition', 2), ('callback)', 2), ('requires\n', 2), ('(k', 2), ('innerLatch', 2), ('javax.persistence.FetchType;\nimport', 2), ('org.hibernate.SessionFactory;\nimport', 2), ('exchange.sendResponseHeaders(response.status.getStatus(),', 2), ('onNextSlowPathCreateQueue()', 2), ('obj', 2), ('.test(513)\n', 2), ('(waiting.getAndSet(0)', 2), ('Audio', 2), ('org.elasticsearch.common.xcontent.XContentBuilder;\n\nimport', 2), ('onObservableLift.call(lift);\n//', 2), ('actual.getThrowable();\n', 2), ('listener),\n', 2), ('SimpleDateFormat.', 2), ('sources[i].subscribe(as[i]);\n', 2), ('java.util.Collections;\n\n/**\n', 2), ('java.util.concurrent.CompletableFuture\n', 2), ('Lists.newArrayList();\n\n', 2), ('reduceCovariance()', 2), ('AssertionError("Message', 2), ('downstream.onNext(current.item);\n', 2), ('Boolean.FALSE)\n', 2), ('assertCustomerCountIs(0);\n', 2), ('buffers,', 2), ('last4', 2), ('observer1.dispose();\n', 2), ('errs', 2), ('testHonorsContractWhenThrows()', 2), ('.last(4)\n', 2), ('this.notifications', 2), ('sorted(@NonNull', 2), ('TestObserver&lt;Void&gt;', 2), ('Flowable.fromIterable(Arrays.asList(1,', 2), ('times(1)).onError(any(Throwable.class));\n\n', 2), ('convenience', 2), ('T9>', 2), ('w.schedule(r,', 2), ('assertEquals(values[d][i],', 2), ('javaField.getName(),\n', 2), ('writeLock', 2), ('eyes."});\n', 2), ('ConcurrentHashMapLong<>(ConcurrentCollections.<Long,', 2), ('V>(\n', 2), ('this.d;\n', 2), ('Subscriber.onError",', 2), ('resources)', 2), ('testCollectToString()', 2), ('crashOnHasNext;\n\n', 2), ('BiFunction<Single,', 2), ('assertEquals("Welcome', 2), ('FlatMapObserver(Observer<?', 2), ('"adds', 2), ('SSL', 2), ('object.getClass())', 2), ('source.reduce(0,', 2), ('Accesses', 2), ('concurrentItem;\n', 2), ('uniqueId++);\n', 2), ('iters++)', 2), ('QueueSubscription.requestFusion', 2), ('enabled;\n', 2), ('producerIndex;\n', 2), ('RepeatObserver<T>(s,', 2), ('assertTrue(css[0].hasObservers());\n\n', 2), ("Observer'\\r\\n", 2), ('178,', 2), ('DisposableHelper.trySet(this,', 2), ('kingJoffrey', 2), ('otherArray;\n\n', 2), ('ConnectionConfiguration', 2), ('ts.assertFailure(TestException.class);\n\n', 2), ('sleep."));\n', 2), ('.takeWhile(e', 2), ('params[i', 2), ('AtomicReference<Observer<?>>();\n', 2), ('com.iluwatar.object.pool;\n\nimport', 2), ('MergeWithObserver(Subscriber<?', 2), ('result.getExceptionList().size());\n', 2), ('PersonSpecifications.NameEqualSpec("John"));\n', 2), ('username,', 2), ('ObjectHelper.requireNonNull(callable,', 2), ('InMemoryCustomerDao();\n', 2), ('startWithEmpty()', 2), ('onlyFQNJavaClassName;\n\n', 2), ('PrintStream}', 2), ('10);\n\n', 2), ('ops)', 2), ('(CakeLayer', 2), ('FlatMapCompletableObserver(CompletableObserver', 2), ('certificates\n', 2), ('syncIterable()', 2), ('reduceWithCovariantObjects()', 2), ('mutex', 2), ("Observer}'s\n", 2), ('cust.getFirstName());\n', 2), ('scheduler.advanceTimeTo(400,', 2), ('testHonorsContractWhenCompleted()', 2), ('vanishes', 2), ('concurrently\n', 2), ('globalMutex.notifyAll();\n', 2), ('LOGGER.info("Which', 2), ('empty();\n\n', 2), ('integerObservable\n', 2), ('.collect(\n', 2), ('NotificationLite.error(e);\n', 2), ('.test(2L)\n', 2), ('SingleObserver<List<Integer>>', 2), ('futureResult.get();\n', 2), ('executeOne()', 2), ("Maybe'\\r\\n", 2), ('ticket.getPlayerDetails().getEmail());\n', 2), ('onSubscribe.accept(s);\n', 2), ('posting', 2), ('Flowable.fromArray(array).flatMapIterable(new', 2), ('otherwise,', 2), ('painlessConstructor', 2), ('N', 2), ('needs,', 2), ('download(DEFAULT_URL)\n', 2), ('nextFunction;\n\n', 2), ('java.util.concurrent.ConcurrentMap;\nimport', 2), ('backpressure-aware', 2), ('otherIterable)', 2), ('Object[capacityHint', 2), ('write(Object', 2), ('relinquish', 2), ('satisfied', 2), ('terminal.println(Terminal.Verbosity.VERBOSE,', 2), ('repository.save(nasta);\n', 2), ('Audio.playSound(Audio.getAudioStream("./etc/Bass-Drum-1.wav"),', 2), ('Just</a>\n', 2), ('EsField>', 2), ('Ctor.\n', 2), ('moneyTransferEvent.isRealTime());\n', 2), ('p.onComplete();\n', 2), ('objects[i', 2), ('java.util.Collections.emptyMap;\nimport', 2), ('TimeoutOtherMaybeObserver(TimeoutMainMaybeObserver<T,', 2), ('spConsumerNode(nextNode);\n', 2), ('EqualCoordinator(SingleObserver<?', 2), ('onNextInnerCompleteRace()', 2), ('innerDone', 2), ('notifications,\n', 2), ('SpscLinkedArrayQueue<T>(bufferSize());\n', 2), ('Member}', 2), ('signals,\n', 2), ('verifyNoMoreInteractions(ballThread);\n', 2), ('!m.signature.contains("SingleSource"))', 2), ('MergeWithObserver(Observer<?', 2), ('disabled', 2), ('originalHandler', 2), ('anchor', 2), ('q.poll().intValue());\n', 2), ('findWizardsWithSpell(String', 2), ('testDoOnEach()', 2), ('ListAll', 2), ('X509ExtendedTrustManager}', 2), ('onSuccess},', 2), ('PublisherBufferSkipSubscriber<T,', 2), ('emitter.registerObserver(observer2);\n\n', 2), ('con,', 2), ('Scheduler},\n', 2), ('inner.isDone();\n\n', 2), ('promise,', 2), ('warrior")\n', 2), ('verify(factory,', 2), ('Single.equals(Single.just(1),', 2), ('reduceWithObjects()', 2), ('nothing\n', 2), ('.filter(Functions.alwaysFalse(),', 2), ('canonicalization,\n', 2), ('mock(Consumer.class);\n', 2), ('goodValue,', 2), ('(javaSuperClass', 2), ('OnErrorNotImplementedException}.\n', 2), ('"comparator', 2), ('Exceptions.throwIfFatal(new', 2), ('observable;\n', 2), ('lm', 2), ('o.throttleLast(500,', 2), ('ConcatMapCompletableObserver<T>\n', 2), ('qs.poll();\n\n', 2), ('modifiers,', 2), ('2).materialize();\n', 2), ('List<SDeclaration>', 2), ('Accept', 2), ('p.drink();\n', 2), ('rco.onSubscribe(d);\n\n', 2), ('EventEmitter', 2), ('((Callable<R>)other).call();\n', 2), ('this.nextFunction', 2), ('Function<Boolean,', 2), ('height="347"', 2), ("'('", 2), ('secondError()', 2), ('(LeftRightEndSubscriber)val;\n\n', 2), ('attempts.\n', 2), ('224.0.0.5,', 2), ('InitializingOnDemandHolderIdiom.getInstance();\n', 2), ('others[n++]', 2), ('side', 2), ('initialLayers', 2), ('wizards;\n', 2), ('CakeViewImpl', 2), ('CustomerNotFoundException("not', 2), ('org.elasticsearch.cluster.node.DiscoveryNode;\nimport', 2), ('hasTimeZone,', 2), ('collectionSupplierThrows()', 2), ('dimension', 2), ('Uses', 2), ('(de', 2), ('SingleObserver#onSuccess', 2), ('name=%s', 2), ('Timer</a>\n', 2), ('"1");\n', 2), ('observers.length;\n', 2), ('Functions.justCallable(Observable.just(3))\n', 2), ('io.reactivex.internal.fuseable.ScalarCallable;\n\npublic', 2), ('AbstractSchedulerConcurrencyTests', 2), ('parent.cancel(connection);\n', 2), ('Single.fromPublisher(Flowable.just(1))\n', 2), ('this.child', 2), ('disposeExcept(int', 2), ('fromFutureTimeout()', 2), ('thrown.\n', 2), ('identity', 2), ('bakeNewCake(CakeInfo', 2), ('<ol>\n', 2), ('com.gargoylesoftware.htmlunit.html.HtmlPage;\nimport', 2), ('CascadeType.ALL)\n', 2), ('setWaiting();\n', 2), ('testLastOfManyReturnsLast()', 2), ('assertTrue(cs.hasComplete());\n', 2), ('vr', 2), ('Function.identity(),', 2), ('weather.addObserver(new', 2), ('getter;\n', 2), ('parser.', 2), ('qs[j];\n', 2), ('sources.",', 2), ('#poll()},', 2), ('workingDir(args[0]);\n', 2), ('startId', 2), ('"run', 2), ('skip));\n', 2), ('intermittent', 2), ('javax.persistence.Table;\n\nimport', 2), ('ObjectHelper.requireNonNull(keySelector.apply(value),', 2), ('intercept', 2), ('"disposer', 2), ('(t.isOnComplete())', 2), ('maxAttempts;\n', 2), ('java.util.function.Function;\n\npublic', 2), ('testPeriodicObserverThrows()', 2), ('digs', 2), ('hide}', 2), ('entry.\n', 2), ('source.concatMapSingle(new', 2), ('7240042530241604978L;\n', 2), ('worker,\n', 2), ('syncRange()', 2), ('source3)', 2), ('source.test();\n', 2), ('when(future.get()).thenThrow(e);\n\n', 2), ('this.done', 2), ('conform', 2), ('assertEquals(expectedLayers,', 2), ('java.util.Collection;\n\nimport', 2), ('firstTimeoutIndicator,\n', 2), ('painlessMethod.arguments);\n', 2), ('dq', 2), ('CakeToppingInfo("cherry",', 2), ('Attachment', 2), ('well-behaved\n', 2), ('BufferSkipObserver<T,', 2), ('s.onSubscribe(d);\n\n', 2), ('(GroupedUnicast<K,', 2), (')*', 2), ('Thrown', 2), ('NITERS', 2), ('repository.getTicketsCollection().count());\n', 2), ('Stack<>();\n\n', 2), ('ExistingCustomer', 2), ('this.context', 2), ('dao.delete(nonExistingCustomer);\n\n', 2), ('Assertions::assertNotNull);\n', 2), ('differs', 2), ('com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;\nimport', 2), ('TimestampConverter', 2), ('clearing', 2), ('org.elasticsearch.mocksocket.MockHttpServer;\nimport', 2), ('nonExistingId', 2), ('keyPath,', 2), ('later', 2), ('"source9', 2), ('onErrorCrash()', 2), ('PerfAsyncConsumer(bh)).await(items);\n', 2), ('TestException("error"));\n', 2), ('FlowableCollect<T,', 2), ('condition;\n\n', 2), ('FetchType.EAGER)\n', 2), ('strategy;\n', 2), ('assertEquals(Integer.valueOf(3),', 2), ('javaSuperClass', 2), ('this.statusCode', 2), ('emits.\n', 2), ('javax.persistence.Column;\nimport', 2), ('UnsupportedOperationException}:\n', 2), ('Customer>', 2), ('assertFalse(css[0].hasObservers());\n', 2), ('arrives', 2), ('(emitted', 2), ('HeroStat.valueOf(10,', 2), ('long[]', 2), ('((painlessMethod.name.equals(whitelistMethod.javaMethodName)', 2), ('AtomicReference<Object>\n', 2), ('org.elasticsearch.test;\n\nimport', 2), ('super(predicate);\n', 2), ('Maybe<U>', 2), ('phase', 2), ('e1);\n', 2), ('resolutions', 2), ('Month.APRIL,', 2), ('Disposable#dispose()}', 2), ('PlayMessage[]', 2), ('dropped', 2), ('java.io.Writer;\nimport', 2), ("Observer's", 2), ('#hasObservers()}.\n', 2), ('guaranteed\n', 2), ('between(0,', 2), ('long[][]', 2), ('empty");\n', 2), ('"tmp");\n', 2), ('.flatMap(e', 2), ('Executor}', 2), ('Goblin(),', 2), ('a)\n', 2), ('weightTons;\n', 2), ('TimeoutObserver<T>(s,', 2), ('o.blockingSingle().intValue());\n', 2), ('cold."});\n', 2), ('b.append("at', 2), ('uncommented', 2), ('BorderLayout.SOUTH);\n', 2), ('(addressLineTwo', 2), ('railReduced.map(new', 2), ('end.await();\n', 2), ('assertEquals(allCustomers.size(),', 2), ('"onCancel', 2), ('parent.subscribe(others,', 2), ('timerFired)', 2), ('DisposableLambdaObserver<Integer>(\n', 2), ('LOGGER.info("DWAR={}",', 2), ('sd.replace(scheduler.scheduleDirect(rc,', 2), ('this.error.println(value);\n', 2), ('cert));\n', 2), ('TestException()).blockingLatest().iterator();\n\n', 2), ('Two', 2), ('testMostRecentWithException()', 2), ('Predicate<T>', 2), ('org.elasticsearch.xpack.sql.execution.search.extractor;\n\nimport', 2), ('Sentence(words);\n\n', 2), ('workers.\n', 2), ('U>(observer,', 2), ('ds[0]', 2), ('processing\n', 2), ('".', 2), ('testDistinctOfNone()', 2), ('Thread.interrupted();\n', 2), ('ws.clear();\n', 2), ('NoSuchElementException.\n', 2), ('bankAccount)', 2), ('syncRangeHidden()', 2), ('ObjectHelper.requireNonNull(onRequest,', 2), ('programming', 2), ('node",', 2), ('Consumer<Object>,', 2), ('unresolved', 2), ('List.\n', 2), ('debounceSelector));\n', 2), ('parent);\n', 2), ('mock(Spellbook.class);\n', 2), ('alternate\n', 2), ('frequency,', 2), ('this.selector', 2), ('child.onError(ex);\n', 2), ('permissions:\n', 2), ('Flowable.fromArray(sources),', 2), ('assertThrows(IllegalArgumentException.class,', 2), ('ActionListener', 2), ('org.elasticsearch.xpack.sql.tree.Location;\nimport', 2), ('subscription.get()', 2), ('getIterable()', 2), ('somewhat\n', 2), ('items);\n', 2), ("observer's", 2), ('SingleTransformer}', 2), ('DateTimeFormatter', 2), ('routine', 2), ('(1)', 2), ('XMap', 2), ('Price', 2), ('incompatibilities', 2), ('Integer[items];\n', 2), ('assertTrue(r.get());\n', 2), ('this.output.println(value);\n', 2), ('windy', 2), ('this.factory.apply("name");\n', 2), ('downloaded.\n', 2), ('authorDTo', 2), ('MissingBackpressureException(\n', 2), ('createObservable().subscribe(ts);\n//\n//', 2), ('out);\n', 2), ('backpressureDoc);\n', 2), ('call(Subscription', 2), ('testToFutureList()', 2), ('subject.timeInterval(testScheduler);\n', 2), ('Loops', 2), ('hasTimeZone;\n', 2), ('com.iluwatar.hexagonal.module.LotteryModule;\nimport', 2), ('set.add(scheduler.scheduleDirect(new', 2), ('assertSame(instance1,', 2), ('onSubscribe.accept(d);\n', 2), ('Observer}s\n', 2), ('assertTrue(cd.isDisposed());\n\n', 2), ('merger.apply(Arrays.asList(2,', 2), ('javaMethodHandle;\n\n', 2), ('source}\n', 2), ('assertThrows(UnsupportedOperationException.class,', 2), ('8;\n\n', 2), ('m.javadoc.indexOf("<dd>",', 2), ('begin",', 2), ('singleSupplier', 2), ('(List<Person>)', 2), ('UnitVisitor', 2), ('domain-specific', 2), ('booleans)', 2), ('(finish', 2), ('assertEquals(spell.getId(),', 2), ('#isEmpty()}', 2), ('Class<?>[arguments.size()];\n', 2), ('rainbowFish.getName());\n', 2), ('os.subscribe(ts);\n\n', 2), ('SingleConverter<T,', 2), ('parsable', 2), ('@Ignore("Different', 2), ('(SubscriptionHelper.cancel(this))', 2), ('initialize()', 2), ('involving', 2), ('0\n', 2), ('dispose2()', 2), ('"reducer");\n', 2), ('CakeLayer("layer2",', 2), ('AppManager.find("004");\n', 2), ('this.isBase64Encoded', 2), ('expectedId', 2), ('TestException("Outer', 2), ('Completable.fromCallable(callable)\n', 2), ('B>(null,', 2), ('"8",', 2), ('.withSpell("poison")\n', 2), ('Generated', 2), ('#RACE_LONG_LOOPS\n', 2), ('Integer.parseInt(m.group(1));\n', 2), ('s.setDisposable(d);\n', 2), ('channel.bind();\n', 2), ('onCompleteRace()', 2), ('ObjectHelper.requireNonNull(leftEnd.apply(left),', 2), ('sslEngine)', 2), ('Function5<?', 2), ('SingleObserver<Object>', 2), ('SequenceEqual</a>\n', 2), ('occur\n', 2), ('seconds\n', 2), ('testCrudOperations()', 2), ('Specifies', 2), ('assertTrue(q.offer(3,', 2), ('io.reactivex.internal.subscriptions.DeferredScalarSubscription;\n\npublic', 2), ('Submit', 2), ('(!tryOnNext(t)', 2), ('SecuritySettingsSourceField.TEST_PASSWORD.toCharArray());\n', 2), ('com.fasterxml.jackson.databind.ObjectMapper;\n\nimport', 2), ('withAbility(String', 2), ('BlockingQueue<Notification<T>>', 2), ('OtherObserver<T>(subscriber,', 2), ('findNextIdx()', 2), ('DateFormat', 2), ('NonBlockingThread', 2), ('com.iluwatar.featuretoggle.user.User;\nimport', 2), ('(JarInputStream', 2), ('sex', 2), ('obligation', 2), ('observables', 2), ('LOGGER.info("Reactor', 2), ('current[i++];\n', 2), ('criterion', 2), ('INNER_DISPOSED;\n', 2), ('col', 2), ('IllegalArgumentException("Error");\n', 2), ('exchange.\n', 2), ('cd.dispose();\n\n', 2), ('assertNotEquals(value,', 2), ('TimeoutFallbackObserver(Observer<?', 2), ('perfectly', 2), ('com.iluwatar.api.gateway;\n\nimport', 2), ('java-doc-admin-cluster-health\n', 2), ('statusCode,', 2), ('onNext.accept(v);\n', 2), ('apply(ConnectableObservable', 2), ('SingleSource)', 2), ('badSourceObservable()', 2), ('ambRace()', 2), ('FlatMapCompletableObserver<T>\n', 2), ('Most', 2), ('dimensions,', 2), ('ObjectHelper.requireNonNull(future,', 2), ('(curr', 2), ('largerJavaMajorVersionUpperBound', 2), ('clearScalarQueue();\n', 2), ('serializable', 2), ('Flowable.error(error)\n', 2), ('run.\n', 2), ('(named.isEmpty())', 2), ('(response.body.length', 2), ('handler,', 2), ('assertTrue(appender.logContains("Message', 2), ('convert)', 2), ('assertFalse(pp2.hasSubscribers());\n', 2), ('bs;\n\n', 2), ('Collection.toArray', 2), ('eventually.\n', 2), ('"duplicate', 2), ('#onError}', 2), ('typed', 2), ('themselves', 2), ('innerNext()', 2), ('operations:', 2), ('(TRight', 2), ('periodicWrapper', 2), ('purgeEnable', 2), ('parts)', 2), ('CLASS)\npublic', 2), ('scheduler.schedulePeriodicallyDirect(runnable,', 2), ('Function<SingleSource,', 2), ('engage', 2), ('io.reactivex.exceptions.Exceptions;\n\npublic', 2), ('~BOUNDARY);\n', 2), ('queue);\n\n', 2), ('<strong>This', 2), ('assertNotEquals(Thread.currentThread().getName(),', 2), ('arrive', 2), ('shutdown");\n', 2), ('requested);\n//', 2), ('actual.onSuccess(0L);\n', 2), ('Arrays.asList(pp1.single(-99),', 2), ('day.', 2), ('.doOnLifecycle(Functions.emptyConsumer(),\n', 2), ('operators</a>', 2), ('google', 2), ('(wasNotAvailable)', 2), ('assertFalse(DisposableHelper.trySet(ref,', 2), ('never()).onNext(any(Integer.class));\n', 2), ('original\n', 2), ('exchange.getRequestURI().getRawPath();\n', 2), ('java.lang.annotation.RetentionPolicy.CLASS;\n\n/**\n', 2), ('customerDao.add(customer);\n', 2), ('onAfterSuccess', 2), ('io.reactivex.exceptions.MissingBackpressureException}.</dd>\n', 2), ('SubscriptionHelper.deferredRequest(upstream,', 2), ('schedule.', 2), ('ObservableOnSubscribe<T>', 2), ('reportDoubleSubscription(subscriber);\n', 2), ('t.onSubscribe(ps);\n', 2), ('this.subscriber', 2), ('refresh', 2), ('getAndSet(i,', 2), ('verify(o).onNext(2);\n', 2), ('seed,', 2), ('randomIntBetween(javaMajorVersion,', 2), ('.collect(Functions.justCallable(new', 2), ('FuseToFlowable<U>', 2), ('30);\n', 2), ('@Column(name', 2), ('SerializedObserver<T>(t),\n', 2), ('fusedClear()', 2), ('assertNotNull(t);\n', 2), ('shared.onComplete();\n', 2), ('ScanSeedSubscriber<T,', 2), ('MaybeFlatMapObservable<T,', 2), ('Single)', 2), ('doAfterTerminate(Action', 2), ('repository.save(john);\n', 2), ('Cache-Aside', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/concat.png"', 2), ('concise', 2), ('publicKeyFingerprint', 2), ('preventing', 2), ('"errorSupplier', 2), ('bean.save(new', 2), ('sd.run();\n', 2), ('DisposableHelper.setOnce(otherDisposable,', 2), ('LambdaSubscriber<T>', 2), ('reason.', 2), ('session\n', 2), ('parent.close(this);\n', 2), ('construct\n', 2), ('presenting', 2), ('Publisher[8];\n', 2), ('Reactor.\n', 2), ('spellDao,', 2), ('Target', 2), ('sEventId);\n\n', 2), ('sourceSupplier\n', 2), ('(NoSuchAlgorithmException', 2), ('propagate}', 2), ('Object());\n\n', 2), ('Single.just(1),', 2), ('UnsupportedOperationException("Read-only', 2), ('car.getPrice().get());\n', 2), ('#get()}.\n', 2), ('ConcatMapCompletableObserver(CompletableObserver', 2), ('defClassToObjectClass(painlessParameterClass);\n', 2), ('continuation.\n', 2), ('Function<Runnable,', 2), ('com.iluwatar.serverless.baas.model;\n\nimport', 2), ('holderField.setAccessible(true);\n', 2), ('values.put("count200",', 2), ('testMergeCovariance()', 2), ('raw', 2), ('TestException()).blockingLatest().iterator().next();\n', 2), ('cancelled/disposed\n', 2), ('wip));\n', 2), ('90,', 2), ('getValues()', 2), ('#readText(String)}.', 2), ('front', 2), ('2000,', 2), ('collection.add(key);\n', 2), ('flatMapPublisher(Function<?', 2), ('data.getWhen();\n', 2), ('response.\n', 2), ('AtomicReference<ScheduledExecutorService>();\n\n', 2), ('this.method', 2), ('exc),', 2), ('905,', 2), (',\n', 2), ('assertTrue(to.isDisposed());\n', 2), ('sourceFunds', 2), ('line.', 2), ('(q.size()', 2), ('prints', 2), ('weaker', 2), ('ConcatArraySubscriber<T>', 2), ('Observable<Object>()', 2), ('s.blockingMostRecent("default").iterator();\n\n', 2), ('errors.get());\n//', 2), ('javax.persistence.ManyToMany;\nimport', 2), ('re-subscribes', 2), ('"name",', 2), ('turn"));\n', 2), ('sourceCode,', 2), ('assertArrayEquals(lists.get(0).toArray(new', 2), ('-10;', 2), ('resourceSupplier}', 2), ('java.util.logging.Logger;\n\n/**\n', 2), ('5638352172918776687L;\n\n', 2), ('Collection");\n', 2), ('(cache.contains(userAccount.getUserId()))', 2), ('relaying', 2), ('"read"));\n', 2), ('mapperThrows()', 2), ('app.run();\n', 2), ('subscribers.get())', 2), ('item(T', 2), ('Completable.concat(Flowable.just(Completable.complete()),', 2), ('succeeds', 2), ('trim(scheduler.now(unit),', 2), ('LOGGER.info("UVATHA={}",', 2), ("orcs'", 2), ('gradle', 2), ('StudentRepository(context,', 2), ('#mergeDelayError(Iterable)\n', 2), ('Maybe.timer(1,', 2), ('height="430"', 2), ('(inclusive)\n', 2), ('winningNumbers)', 2), ('ParallelFlowable#sequentialDelayError(int)\n', 2), ('s.dispose();\n//\n//', 2), ('concatMap(\n', 2), ('rx2.io-priority}', 2), ('org.junit.Assert.assertNotNull;\n\nimport', 2), ('trampoline)', 2), ('Modifies', 2), ('CakeLayerInfo(\n', 2), ('paramName)', 2), ('Schedulers.newThread())\n', 2), ('Completable.never(),', 2), ('DisposableHelper.dispose(boundary);\n', 2), ('Due', 2), ('(inner.isUnbounded())', 2), ('map.put("lengthMeters",', 2), ('objects[0]', 2), ('SingleOnErrorReturn<T>(this,', 2), ('key");\n', 2), ('TestException("Second"));\n\n', 2), ('"read")));\n', 2), ('Observable.just(1).subscribe(tc);\n\n', 2), ('MongoTicketRepository', 2), ('org.mockito.Mockito.verifyZeroInteractions;\nimport', 2), ('moneyTransferEvent', 2), ('java.security.InvalidKeyException;\nimport', 2), ('resources.delete(w);\n', 2), ('getItems()', 2), ('receiver;\n', 2), ('assumptions', 2), ('PotatoPeelingTask(3));\n', 2), ('writer.getField(field.owner.type,', 2), ('down,', 2), ('ticket3', 2), ('timer(delay,', 2), ('onSubscribe.accept(this);\n', 2), ('interleaving', 2), ('runnable;\n\n', 2), ('qd.requestFusion(QueueFuseable.ANY);\n\n', 2), ('org.elasticsearch.painless.Locals;\nimport', 2), ('RepeatUntilObserver<T>', 2), ('ignoreCancel()', 2), ('concatEager(Publisher<?', 2), ('Implement', 2), ('topping=%s', 2), ('largerJavaMajorVersion));\n', 2), ('TLeft', 2), ('org.apache.lucene.util.BytesRefIterator;\nimport', 2), ('tests,', 2), ('boundary.subscribe(bs);\n\n', 2), ('TestHelper.emit(us,', 2), ('disposables.delete(sender);\n', 2), ('interrupted[0]', 2), ('completion/cancellation.\n', 2), ('(!started)', 2), ('QueueFuseable.ASYNC)\n', 2), ('java.util.Collections;\n\nimport', 2), ('requested.set(0);\n\n', 2), ('Runnable>()', 2), ('concat(sources,', 2), ('bufferOpen;\n\n', 2), ('dataProvider();\n\n', 2), ('2.0.7\n', 2), ('entry\n', 2), ('db.getCollection("user_accounts").updateOne(\n', 2), ('ps2.onError(ex2);\n', 2), ('unsubscribeAction', 2), ('current.compareAndSet(curr,', 2), ('(nextNotification.isOnNext())', 2), ('call,', 2), ('Shuts', 2), ('key.channel();\n', 2), ('s.assertValue(1);\n', 2), ('updationShouldBeFailureAndNotAffectExistingCustomers()', 2), ('fields.', 2), ('(inner.get()', 2), ('<?', 2), ('<Movie>', 2), ('RS");\n', 2), ('ACCOUNT_OF_JON));\n\n', 2), ('org.hibernate.Session;\nimport', 2), ('function,', 2), ('isBase64Encoded;\n\n', 2), ('ignoreElement}', 2), ('16)', 2), ('super(sequenceId,', 2), ('autoConnect(numberOfSubscribers,', 2), ('onCompleteNoSubscription()', 2), ('resourceWatcherService)', 2), ('ref.offset,', 2), ('capacity\n', 2), ('LruCache', 2), ('ts.assertValue(1)\n', 2), ('Azure', 2), ('transferFunds(int', 2), ('buffer.flip();\n', 2), ('"Observable",', 2), ('LeftRightObserver', 2), ('value.split("\\\\.");\n', 2), ('bs2));\n\n', 2), ('testMessage(\n', 2), ('this.weapon', 2), ('io.reactivex.internal.functions;\n\nimport', 2), ('Supplier<E>', 2), ('EvictionAction<K,', 2), ('HasModel,', 2), ('dripping', 2), ('(inMaybe)', 2), ('PURGE_PERIOD_SECONDS,', 2), ('SpscLinkedArrayQueue<Integer>', 2), ('entire', 2), ('actual.onNext(count++);\n', 2), ('SwitchMapMaybeObserver<Object>', 2), ('copy.add(iterator.next());\n', 2), ('(!fallback.hasObservers())', 2), ('observableBlockingLast()', 2), ('aEventId);\n', 2), ('testElementAtOrDefaultWithIndexOutOfBounds()', 2), ('com.iluwatar.databus.DataType;\n\nimport', 2), ('TestResourceObserver<Integer>();\n', 2), ('executor.startProcess(null,', 2), ('MaybeSource)', 2), ('checkClass(clazzes,', 2), ('newGroup', 2), ("Subscriber'\\r\\n", 2), ('observers.get().length;\n', 2), ('com.iluwatar.cqrs.dto;\n\nimport', 2), ('test(Boolean', 2), ('svq.isEmpty())', 2), ('columnCount();\n\n', 2), ('bank.getFunds(account));\n', 2), ('doFinally}', 2), ('ServerSocketChannel', 2), ('tasks.dispose();\n', 2), ('expectedItem)', 2), ('java.nio.charset.Charset;\nimport', 2), ('ambArrayOrder()', 2), ('errorCount', 2), ('leaks', 2), ('org.elasticsearch.common.xcontent.XContentParser;\n\nimport', 2), ('io.reactivex.observable.ObservableCovarianceTest.*;\n\npublic', 2), ('keeps', 2), ('3")));\n//\n//', 2), ('doWriteTo(StreamOutput', 2), ('"only', 2), ('mechanism.', 2), ('example\n', 2), ('Logger\n', 2), ('errorTimeoutRace()', 2), ('#tryOnError(Throwable)}\n', 2), ('node,', 2), ('necessary\n', 2), ('Which', 2), ('manifest.getMainAttributes().getValue("Change");\n', 2), ('.first(4)\n', 2), ('MaybeObserver<Object>', 2), ('BigInteger("2"),', 2), ('String>,', 2), ('cs.onSuccess(1);\n\n', 2), ('true\n', 2), ('whitelistConstructors,', 2), ('org.junit.jupiter.migrationsupport.rules.EnableRuleMigrationSupport;\nimport', 2), ('isolation', 2), ('methodNotThrowingAnyException());\n', 2), ('author', 2), ('setResource(int', 2), ('SingleObserver#onError(Throwable)}', 2), ('(!conn.connected', 2), ('subscription;\n', 2), ('CompletableSource},', 2), ('smallerJavaMajorVersionLowerBound,\n', 2), ('com.iluwatar.callback;\n\nimport', 2), ('"Flowable",', 2), ('doXContentBody(XContentBuilder', 2), ('numbers\n', 2), ('}).publish().refCount()\n', 2), ('elementAtIndex0OnEmptySource()', 2), ('assertTrue(appender.logContains("Sliding', 2), ('"Two");\n', 2), ('topShelf.add(factory.createPotion(PotionType.STRENGTH));\n', 2), ('cancelAndClear();\n\n', 2), ('super/extends', 2), ('#reportSubscriptionSet()}', 2), ('implies', 2), ('lemons', 2), ('DbManager.upsertDb(toBeWrittenToDb);\n', 2), ('defaultCapacityHint)', 2), ('ParallelFlowable<C>', 2), ('SecuritySettingsSource.addSecureSettings(builder,', 2), ('errorMessage);\n', 2), ('onNextRequestRace()', 2), ('AtomicReference<Subscriber<?>>', 2), ('at.next()', 2), ('System.out.println("Found', 2), ('})\n//', 2), ('(!ObjectHelper.equals(message,', 2), ('Calculates', 2), ('dedicated', 2), ('update(Customer', 2), ('com.iluwatar.cqrs.queries.IQueryService;\nimport', 2), ('executorService)', 2), ('Set<Spellbook>', 2), ('upstream.get().cancel();\n', 2), ('allowedCallsPerSecond;\n', 2), ('Exceptions.propagate(new', 2), ('Function8<?', 2), ('assertThat(tempPathView.getOwner(),', 2), ('ps.concatMapSingleDelayError(Functions.justFunction(ms),', 2), ('SwitchMapInnerObserver(null);\n\n', 2), ('CustomInMemoryRolesProvider(settings,', 2), ('Watch', 2), ('service.saveNewTopping(new', 2), ('mainErrorInnerCompleteDelayError()', 2), ('mainErrorAfterInnerError()', 2), ('Fetches', 2), ('Thread.sleep(5000);\n', 2), ('ss.subscribe(inner);\n', 2), ('doReduce(List<InternalAggregation>', 2), ('com.iluwatar.trampoline;\n\nimport', 2), (':)\n', 2), ('ScalarSubscription<Integer>(ts,', 2), ('fuseable",', 2), ('child.onSubscribe(serial);\n\n', 2), ('failure.reason()', 2), ('demo.', 2), ('closes."));\n', 2), ('height="320"', 2), ('isFull()', 2), ('"{\\"id\\":', 2), ('especially', 2), ('IvoryTower', 2), ('calls[1]);\n', 2), ('Producer(String', 2), ('findWizardsWithSpellbook(String', 2), ('(StackTraceElement', 2), ('nextFunction;\n', 2), ('requires.', 2), ('Operators', 2), ('(cache', 2), ('this.classname', 2), ('(period', 2), ('pub', 2), ('started.",', 2), ('*/\n@Documented\n@Target(value', 2), ('onComplete.run();\n\n', 2), ('assertTrue(Audio.isServiceRunning());\n', 2), ('CompletableOperator>()', 2), ('completions;\n\n', 2), ('activeCount;\n\n', 2), ('complete.\n', 2), ('ObjectHelper.requireNonNull(onAfterNext,', 2), ('executor.get();\n', 2), ('race(final', 2), ('cats.");\n', 2), ('boundary)', 2), ('tasks.add(sr);\n\n', 2), ('assertEquals("Observer', 2), ('dragonSlayer.changeStrategy(new', 2), ('hash,', 2), ('logger', 2), ('boost', 2), ('verify(underlying).dispose();\n\n', 2), ('Event(String', 2), ('RainbowFishSerializer.readV1(outputFile.getPath());\n', 2), ('super(capacity);\n', 2), ('source.onNext(1);\n\n', 2), ('ObservableSource)', 2), ('.elementAtOrError(-1);\n', 2), ('inCompletable', 2), ('Files.walkFileTree(path.getParent(),', 2), ('was!";\n\n', 2), ('fallback).test();\n\n', 2), ('directory,\n', 2), ('timestamps', 2), ('frequency\n', 2), ('<li>support', 2), ('com.iluwatar.doubledispatch;\n\nimport', 2), ('destinationBankAccount)', 2), ('MaybeOnSubscribe<Integer>()', 2), ('LOGGER.info("(2)', 2), ('UsingSingleObserver<T,', 2), ('Exception))', 2), ('heavy\n', 2), ('BUCKET_SPAN);\n', 2), ('subset', 2), ('setFunds(String', 2), ('iteratorNotification.isOnError())', 2), ('executor.submit((Callable<Object>)sr);\n', 2), ('iterator;\n\n', 2), ('messageData', 2), ('resource.dispose();\n', 2), ('terminated(RefConnection', 2), ('retryWhen}', 2), ('requested.getAndSet(0L);\n', 2), ('emitter.registerObserver(observer1);\n', 2), ('fieldJsonMapper;\n', 2), ('l', 2), ('Observable.interval(100,', 2), ('bf.blockingGet();\n', 2), ('asks', 2), ('id);\n\n', 2), ('FileChannel', 2), ('(onError', 2), ('World', 2), ('s;\n//', 2), ('TestObserver<Object>();\n', 2), ('apply(Runnable', 2), ("'rails'.\n", 2), ('createGetIndexRequest(indexWildcard);\n', 2), ('numbers.split(",");\n', 2), ('filters', 2), ('this.runnable', 2), ('java.util.concurrent.FutureTask;\nimport', 2), ('fail(ex);\n', 2), ('repeatUntil}', 2), ('FileOutputStream(filename);\n', 2), ('completions++;\n', 2), ('Using</a>\n', 2), ('(badValue', 2), ('inOrder.verify(observer).onNext(0L);\n', 2), ('AllSubscriber<T>', 2), ('-8466418554264089604L;\n\n', 2), ('parent.timeout(this);\n', 2), ('(positive,', 2), ('reader.readLine())', 2), ('Iterator\n', 2), ('context.getBean(PersonRepository.class);\n\n', 2), ('reduced.blockingFirst();\n', 2), ('executed.\n', 2), ('List<T>,', 2), ('userAccount3', 2), ('height="200"', 2), ('apply(List<T>', 2), ('false.</li>\n', 2), ('"1000000"})\n', 2), ('"onDispose', 2), ('inMaybe', 2), ('MaybeCallbackObserver<Integer>', 2), ('v);\n}\n', 2), ('scheduleDirect()', 2), ('InnerCompletableCache[n', 2), ('closed");\n', 2), ('TestHelper.checkDoubleOnSubscribeObservableToMaybe(new', 2), ('nextValue', 2), ('simpleTypesMap.get(importedPainlessTypeName).clazz', 2), ('reduceContext)', 2), ('scheduler).publish();\n\n', 2), ('cnfe)', 2), ('bugs', 2), ('TestCompletable();\n\n', 2), ('ambLots()', 2), ('invalidLines.put(1,', 2), ('these\n', 2), ('falls', 2), ('actions)', 2), ('fromDto;\n', 2), ('"UTF-8")))', 2), ('main.subscribe(new', 2), ('sourceCode.indexOf(inDoc,', 2), ('InstantPeriodicTask(decoratedRun,', 2), ('Subscriber.', 2), ('(initialDelay', 2), ('o.throttleFirst(500,', 2), ('allowFatal;\n\n', 2), ('fulfillExceptionally(Exception', 2), ('(called', 2), ('<S>', 2), ('thread,', 2), ('needed.', 2), ('document.children(KEY,', 2), ('rx2.computation-priority}', 2), ('producers', 2), ('s.assertValue(10);\n', 2), ('AmbCoordinator<T>(s,', 2), ('writer.write(record);\n', 2), ('LOGGER.info("Green', 2), ('registering', 2), ('range;\n\n', 2), ('MethodType', 2), ('source5,\n', 2), ('DeferredScalarSubscriber<T,', 2), ('onSuccess.accept(value);\n', 2), ('URLs', 2), ('poll,', 2), ('fail("Wrong', 2), ('MaybeSource[8];\n', 2), ('Arrays.asList(10,', 2), ('assertNull(onError.get());\n', 2), ('calls.\n', 2), ('MaybeSources.', 2), ('testOnErrorCalledOnScheduler()', 2), ('replaceResource', 2), ('ItemType', 2), ('getType(final', 2), ('unit)\n', 2), ('interface,\n', 2), ('future.cancel(true));}.\n', 2), ('getString(String', 2), ('slots.\n', 2), ('assertNotNull(level1);\n', 2), ('UID\n', 2), ('ConcurrentHashMap<String,', 2), ('observer.dispose();\n\n', 2), ('SSLEngine', 2), ('paramName', 2), ('smallerJavaMajorVersionUpperBound,\n', 2), ('OnNext(T', 2), ('BytesReference.bytes(contentBuilder).iterator();\n', 2), ('src,', 2), ('equalTo("-Xms1g', 2), ('ParameterListKey}', 2), ('fires,\n', 2), ('Integration', 2), ('(userAccount', 2), ('ts.assertComplete();\n//\n//', 2), ('test")\n', 2), ('s.onSuccess(null);\n', 2), ('ArrayDeque<InnerQueuedObserver<R>>', 2), ('Arrays.fill(braces,', 2), ('accumulator));\n', 2), ('TimeoutTask', 2), ('(last', 2), ('Processor', 2), ('elements.\n', 2), ('onOverflow;\n\n', 2), ('org.elasticsearch.SpecialPermission;\n\nimport', 2), ('ClassCastException', 2), ('org.junit.Assert.assertNull;\nimport', 2), ('as.length;\n', 2), ('bf.onSubscribe(s);\n\n', 2), ('struct.getters.putIfAbsent(newName.toString(),', 2), ('javaMethodName', 2), ('f.get().get(0));\n', 2), ('char.class;\n', 2), ('RxJavaPlugins.onSchedule(run).run();\n', 2), ('org.junit.rules.TemporaryFolder;\n\nimport', 2), ('one-by-one', 2), ('cancelCrash()', 2), ('(int)\n', 2), ('hash;\n', 2), ('interrupted[0]);\n', 2), ('non-terminated', 2), ('Collection<Integer>>>', 2), ('error[0]', 2), ('"default").iterator();\n\n', 2), ('Observable.<Integer>', 2), ('to.assertFailure(CompositeException.class);\n\n', 2), ('(!worker.disposed)', 2), ('ex0', 2), ('lowerBound', 2), ('assertTrue(f1.isCancelled());\n', 2), ('LOGGER.error("exception', 2), ('TRight>();\n', 2), ('info;\n', 2), ('connect(String', 2), ('as[i]', 2), ('java.awt.event.ActionListener;\n\nimport', 2), ('User("John",', 2), ('clicking', 2), ('TimeUnit.SECONDS).blockingNext().iterator().hasNext();\n\n', 2), ('boxed,', 2), ('Walk', 2), ('development', 2), ('Re-subscribe', 2), ('buffer.\n', 2), ('observer2.dispose();\n', 2), ('testDistinctOfSourceWithNulls()', 2), ('(Map.Entry<String,', 2), ('customize', 2), ('bus.publish(MessageData.of("Only', 2), ('QueryServiceImpl();\n\n', 2), ('other);\n\n', 2), ('Flowable<List<Integer>>', 2), ('trustStorePath;\n', 2), ('nasta.setSurname("Spotakova");\n', 2), ('round++)', 2), ('(!left.isEmpty())', 2), ('assertMocksSatisfied();\n', 2), ('2746389416410565408L;\n\n', 2), ('Instant.from(parsed);\n', 2), ('assertFalse(subj.hasObservers());\n', 2), ('UserException', 2), ('SwitchMapMaybeObserver<R>(this);\n\n', 2), ('nested', 2), ('drainExactRequestCancel()', 2), ('instanceId', 2), ('scanFor(b,', 2), ('wrap(simpleObjects).listAll();\n\n', 2), ('state);\n', 2), ('subscriber,\n', 2), ('ArrayList<Thread>();\n', 2), ('org.joda.time.ReadableDateTime;\n\nimport', 2), ('PublishDisposable<T>', 2), ('methodTestNoCancel()', 2), ('cause);\n', 2), ('settingNames.add(setting);\n', 2), ('HashMap<>(),', 2), ('produced.</dd>\n', 2), ('sources[i]', 2), ('cs.onSubscribe(d);\n\n', 2), ('Transform', 2), ('execTime,', 2), ('}).\n', 2), ('requestMoreOnNext()', 2), ('7000911171163930287L;\n\n', 2), ('getter.invoke(null);\n\n', 2), ('Function7<?', 2), ('Flowable.just(1).collect(new', 2), ('Longs', 2), ('switching', 2), ('singleFunction,', 2), ('System.out.printf("After:', 2), ('dest', 2), ('assertEquals(newFirstname,', 2), ('Flowable.just(1).takeLast(1).subscribe(s);\n', 2), ('Arrays.copyOf(array,', 2), ('npe));\n', 2), ('("1".equals(cmd))', 2), ('attrs)', 2), ('expectedItem', 2), ('prototype)', 2), ('DisposableHelper.dispose(otherDisposable);\n', 2), ('onAfterTerminate,\n', 2), ('assertFalse(subject.hasObservers());\n', 2), ('assertThat(buffer.toString().isEmpty(),', 2), ('EventManager();\n\n', 2), ('(readerMutex)', 2), ('(hasTimeZone)', 2), ('#requestFusion(int)}\n', 2), ('TestResourceCompletableObserver();\n', 2), ('EmptyComponent', 2), ('this.boundaryObserver', 2), ('s;', 2), ('#CANCELLED}\n', 2), ('org.junit.jupiter.api.Assertions.assertNull;\n\n/**\n', 2), ('e.setDisposable(d);\n', 2), ('expectedResult)', 2), ('request.\n', 2), ('BasicFuseableObserver<T,', 2), ('groups,', 2), ('found.\n', 2), ('freezing', 2), ('2");\n//\n//', 2), ('processed.', 2), ('NoSuchElementException("No', 2), ('TransportClient', 2), ('byteBuffer', 2), ('org.elasticsearch.xpack.sql.tree.Location;\n\nabstract', 2), ('(merged', 2), ('getBook(String', 2), ('delta,', 2), ('h;\n', 2), ('john,', 2), ('WindowBoundaryInnerObserver<Object,', 2), ('pp.single(-99);\n', 2), ('requestMore(1);\n', 2), ('(ObservableSource<?>)', 2), ('serialDisposable.update(underlying);\n\n', 2), ('Observable.merge(o1,', 2), ('first4.get(0));\n', 2), ('<li>Due', 2), ('worker.schedule(de,', 2), ('Throttler', 2), ('ThreadSafeLazyLoadedIvoryTower', 2), ('thread-safe.', 2), ('amb}', 2), ('startWithIterable()', 2), ('Repository', 2), ('Object[n', 2), ('emitting,', 2), ('Function<Map<String,', 2), ('(checkResult.getResult().equals(CheckResult.WIN_PRIZE))', 2), ('orderly\n', 2), ('"Interstellar",', 2), ('@Retention(RUNTIME)}.', 2), ('atomic', 2), ('producing', 2), ('failure\n', 2), ('projection', 2), ('PainlessExplainError', 2), ('COMPLETE_MASK)', 2), ('BlockingObservableLatestIterator<T>', 2), ('optimizations', 2), ('TransportService', 2), ('(path.toString().equals(realPath.toString())', 2), ('testElementAtWithIndexOutOfBounds()', 2), ('wasNotAvailable', 2), ('CachingPolicy.ASIDE)', 2), ('SubscriptionHelper.deferredSetOnce(upstream,', 2), ('Pool\n', 2), ('.concatMapMaybeDelayError(new', 2), ('zipperReturnsNull()', 2), ('processes', 2), ('Observable.fromIterable(Arrays.asList(1,', 2), ('assertNotNull(spellByName);\n', 2), ('chaining', 2), ('EqualSubscriber<T>(this,', 2), ('builder;\n', 2), ('signals,', 2), ('StandardCharsets.UTF_8));\n', 2), ('times.add(System.currentTimeMillis());\n', 2), ('java.util.concurrent.locks.Lock;\nimport', 2), ('repeatUntil(BooleanSupplier', 2), ('DebounceTimedObserver<T>', 2), ('assertError(List<Throwable>', 2), ('assertEquals(expectedResult,', 2), ('UpdateOptions().upsert(true));\n', 2), ('product', 2), ('testMergeCovariance2()', 2), ('complete(false);\n', 2), ('readObject);\n', 2), ('strict', 2), ('(active', 2), ('RxJavaPlugins.reset();\n//\n//', 2), ('o.elementAt(0,', 2), ('defining', 2), ('createError(new', 2), ('parser', 2), ('QueueSubscription#NONE}.\n', 2), ('producerIndex()', 2), ('io.reactivex.internal.operators.mixed.*;\nimport', 2), ('(!m.signature.contains("Maybe")\n', 2), ('mname', 2), ('latest.set(t);\n', 2), ('socketChannel', 2), ('boilerplate', 2), ('JRootPane', 2), ('height="370"', 2), ('email,', 2), ('service.getAvailableToppings();\n', 2), ('expectThrows(UnsupportedOperationException.class,', 2), ('invalidLines);\n', 2), ('persist(E', 2), ('subscribeWith}', 2), ('Functions.alwaysTrue());\n', 2), ('never()).onNext(anyLong());\n', 2), ('reduce(@NonNull', 2), ('again\n', 2), ('(times--', 2), ('badSource2()', 2), ('compose}', 2), ('(getById(customer.getId()).isPresent())', 2), ('walking', 2), ('(marked', 2), ('baseClassName', 2), ('Maybe.just(v).subscribeOn(Schedulers.computation());\n', 2), ('publisher;\n', 2), ('LOGGER.info("MURAZOR={}",', 2), ('org.mockito.Mockito.inOrder;\nimport', 2), ('(connect)', 2), ('javadocEnd);\n', 2), ("Single's\n", 2), ('promises', 2), ('Throwable("test");\n', 2), ('completableFunction;\n', 2), ('source8);\n', 2), ('(wip.incrementAndGet()', 2), ('flows.\n', 2), ('NULL_KEY;\n', 2), ('postFulfillment();\n', 2), ('169,', 2), ('Files.move(tempFile,', 2), ('readLock,', 2), ('elementAtOrErrorMultipleElements()', 2), ('zipArrayOneIsNull()', 2), ('RxJavaPlugins.initSingleScheduler(c));\n', 2), ('toCompletable()', 2), ('FlatMapPublisherSubscriber<T,', 2), ('height="410"', 2), ('"resourceSupplier', 2), ('ambArray}', 2), ('Field(whitelistField.javaFieldName,', 2), ('.switchMapCompletable(Functions.justFunction(cs))\n', 2), ('org.elasticsearch.painless.Globals;\nimport', 2), ('Spell("Magic', 2), ('prefetch,\n', 2), ('TimeoutFallbackSubscriber<T>(s,', 2), ('Fields', 2), ('attr', 2), ('TimeoutFallbackMaybeObserver<T>\n', 2), ('this.src', 2), ('Observable",', 2), ('null},', 2), ('aggregations,', 2), ('buildFieldCacheKey(ownerStruct.name,', 2), ('indexMappings.key;\n', 2), ('PEMKeyConfig', 2), ('this.stateSupplier', 2), ('onDrop;\n\n', 2), ('zipArray(Function<?', 2), ('"Daenerys', 2), ('pairs,', 2), ('ActionPlugin', 2), ('ObjectHelper.requireNonNull(e,', 2), ('concatenating', 2), ('comparing', 2), ('withSpell(String', 2), ('Flowable.interval(100,', 2), ('(innerDone', 2), ('Function<U,', 2), ('ExceptionHelper.wrapOrThrow(new', 2), ('dynamic;\n', 2), ('(leave(-1)', 2), ('eventProcessor.recover();\n\n', 2), ('SimpleFileWriter', 2), ('(CompletableSource)', 2), ('TimeValue', 2), ('LeftRightEndSubscriber(this,', 2), ('Observer"))', 2), ('LocalContainerEntityManagerFactoryBean', 2), ('LOGGER.info("Give', 2), ('non-null.\n', 2), ('timeout(timer(timeout,', 2), ('javaMajorVersionUpperBound', 2), ('(isWrapperFor(iface))', 2), ('environment,', 2), ('bufferClose,\n', 2), ('OnError(t),', 2), ('processing.\n', 2), ('App\n', 2), ('-3807491841935125653L;\n', 2), ('.takeUntil(s)\n', 2), ('index))', 2), ('UnknownHostException', 2), ('ResultSetMetaDataProxy(log,', 2), ('Connectable', 2), ('parenthesis', 2), ('org.elasticsearch.painless.Location;\nimport', 2), ('resumeSingleInCaseOfError}', 2), ('exceptionList', 2), ('serialize();\n\n', 2), ('userAccount4', 2), ('DeferredScalarSubscriber<Integer,', 2), ('}).blockingGet().toString();\n\n', 2), ('Objects.equals(firstName,', 2), ('SingletonArrayFunc()).subscribeActual(s);\n', 2), ('inner.length;\n\n', 2), ('insertion', 2), ('innerError(SwitchMapMaybeObserver<R>', 2), ('c.subscribe(to);\n', 2), ('wip.compareAndSet(0,', 2), ('Excalibur', 2), ('color)', 2), ('contains(final', 2), ('resourceDisposer.accept(resource);\n', 2), ('wip.addAndGet(-missed);\n', 2), ('"onFinally', 2), ('guarded', 2), ('DebounceEmitter<T>(t,', 2), ('allowFatal);\n', 2), ('get().request(n);\n', 2), ('"Album', 2), ('owner.name', 2), ('conventions', 2), ('Stream<DocumentImplementation>', 2), ('ObjectHelper.requireNonNull(observer,', 2), ('ambWithOrder()', 2), ('params[0]', 2), ('DelayMaybeObserver(MaybeObserver<?', 2), ('subject;\n\n', 2), ('Function3<?', 2), ('subscribers[i];\n', 2), ('consumedOne(replenish);\n', 2), ('(concurrentItem', 2), ('last()', 2), ("Single'\\r\\n", 2), ('json\n', 2), ('flatMapObservable}', 2), ('(read', 2), ('accept(TestObserver<Object>', 2), ('javax.swing.JLabel;\nimport', 2), ('child);\n\n', 2), ('assertEquals(Integer.valueOf(2),', 2), ('Twin', 2), ('BucketInfluencer', 2), ('normalBackpressured()', 2), ('(sourceFused', 2), ('SingleDelayWithSingle<T,', 2), ('value.set(1);\n', 2), ('CacheStore', 2), ('de.setResource(d);\n', 2), ('verify(spellbook).getWizards();\n\n', 2), ('returnList.add(cal.get(Calendar.DAY_OF_MONTH)', 2), ('sd.dispose();\n', 2), ('Service}\n', 2), ('movement,\n', 2), ('ObjectOutputStream(fileOut))', 2), ('Imagine', 2), ('TimeoutMainMaybeObserver(MaybeObserver<?', 2), ('normalJust()', 2), ('Giving', 2), ('Exception\n', 2), ('toXContent(XContentBuilder', 2), ('this.cdl', 2), ('this(prefix,', 2), ('-2187421758664251153L;\n\n', 2), ('instanceof-checks', 2), ('Flowable.defer(new', 2), ('s.onSubscribe(as);\n', 2), ('Cloud', 2), ('w.toSortedList(new', 2), ('func)', 2), ('Additionally', 2), ('reaching', 2), ('zipCode', 2), ('binding.', 2), ('numbers);\n', 2), ('!NotificationLite.isComplete(buf);\n', 2), ('40;\n', 2), ('FileLoader', 2), ('testMostRecentNull()', 2), ('model.\n', 2), ('onTerminateDetach()', 2), ('emptyMap());\n', 2), ('FlowableSubscriber<U>,', 2), ('Producer}-{@link', 2), ('worker3.schedule(createPrintAction(key', 2), ('response.body.length);\n', 2), ('BaseTck<Map<Integer,', 2), ('messenger', 2), ('EqualObserver<T>(this);\n', 2), ('targetVersion)', 2), ('minorDeviceNumber;\n', 2), ('Flowable<Integer>>', 2), ('testCollectToList()', 2), ('u2);\n', 2), ('cakeView.render();\n', 2), ('g,\n', 2), ('ParallelMap<T,', 2), ('ts.assertComplete();\n\n', 2), ('assertTrue(SubscriptionHelper.set(s,', 2), ('producerIndex.getAndIncrement();\n', 2), ('ShowFunctions', 2), ('safe.onComplete();\n//', 2), ('(Callable)INSTANCE;\n', 2), ('resultSelector);\n\n', 2), ('capacity)\n', 2), ('recommended.', 2), ('ts.assertError(new', 2), ('upon', 2), ('emulates', 2), ('identifier\n', 2), ('producerNode', 2), ('Maybe<Integer>[]', 2), ('Lists.newArrayList(new', 2), ('assertEquals(spell.getName(),', 2), ('certificates;\n', 2), ('innerSuccess(T', 2), ('task.setRest(new', 2), ('incorrect', 2), ('ArrayDeque<C>', 2), ('lotteryNumbers);\n', 2), ('100)\n', 2), ('milli', 2), ('parent.emit(idx,', 2), ('event);\n', 2), ('.map(a', 2), ('customScheduler()', 2), ('.delay(0,', 2), ('org.elasticsearch.cluster.ClusterName;\nimport', 2), ('toSingle(toFlowable().retry(predicate));\n', 2), ('cache)', 2), ('boolean.class;\n', 2), ('com.iluwatar.cqrs.queries.QueryServiceImpl;\nimport', 2), ('Single.just(7),', 2), ('AtomicReference<Notification<T>>', 2), ("Flowable'\\r\\n", 2), ('q.isEmpty(),', 2), ('AsyncSubscription[0];\n\n', 2), ('com.amazonaws.services.lambda.runtime.events.APIGatewayProxyResponseEvent;\nimport', 2), ('IOUtils.fsync(path,', 2), ('TakeUntilOtherMaybeObserver<U>(this);\n', 2), ('call(CompletableOperator', 2), ('scalar-sourced', 2), ('10).reduce((a,', 2), ('SemanticsOf.SAFE)\n', 2), ('thread/worker.\n', 2), ('CakeLayer("layer1",', 2), ('.retryWhen(errors', 2), ('response);\n', 2), ('*/\n@EnableRuleMigrationSupport\npublic', 2), ('move', 2), ('SwitchIfEmptyMaybeObserver<T>(observer,', 2), ('checkSource(Maybe.class.getSimpleName(),', 2), ('RuntimeException("bad"));\n', 2), ('randomBoolean()', 2), ('observers;\n', 2), ('range.flatMap(new', 2), ('consider\n', 2), ('bs))', 2), ('builder.field("name",', 2), ('selector;\n', 2), ('ex.getMessage()))', 2), ('dragonSlayer.changeStrategy(()', 2), ('TimeoutTask(long', 2), ('handled,', 2), ('ex.getCause());\n', 2), ('Completable.complete());\n\n', 2), ('schedulerDoc);\n', 2), ('negotiation', 2), ('Fluent', 2), ('itemTimeoutIndicator,', 2), ('dispose}', 2), ('this.onOverflow', 2), ('prefetch);\n\n', 2), ('update));\n', 2), ('Thread.currentThread();\n\n', 2), ('java.io.UnsupportedEncodingException;\nimport', 2), ('assertNotNull(toString);\n', 2), ('1).result();\n', 2), ('assertEquals(terry.getSurname(),', 2), ('Consumer<Emitter<Event>>', 2), ('com.iluwatar.property;\n\nimport', 2), ('boolean[]', 2), ('itemTimeoutObservableSource', 2), ('o.subscribe(observer);\n', 2), ('MpscLinkedQueue<Runnable>', 2), ('executor.endProcess(asyncResult));\n', 2), ('integerObservable)', 2), ('queue.put(msg);\n', 2), ('strength,', 2), ('Consumer<Long>()', 2), ('ConcatMapMaybeObserver<R>\n', 2), ('toggle.', 2), ('Reactive-Streams', 2), ('expectedCount;', 2), ('rightIndex;\n\n', 2), ('64-bit', 2), ('integers)', 2), ('unable', 2), ('assertNotNull(onError.get());\n', 2), ('SwitchMapSingleMainObserver<T,', 2), ('BiFunction<Completable,', 2), ('cs.observerCount());\n', 2), ('at.hasNext()', 2), ('language.', 2), ('prompt)', 2), ('org.elasticsearch.common.xcontent.ToXContent;\nimport', 2), ('.put(defaultSettings.filter((s)', 2), ('TestObserver<Object>(o);\n', 2), ('remove(md);\n', 2), ('cleaner,', 2), ('FileReader(fileLocation);\n', 2), ('Deque<Command>', 2), ('ObjectHelper.requireNonNull(lift,', 2), ('TRight', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.flatMapSingle.png"', 2), ('assertSame(dummy,', 2), ('Subscription>()', 2), ('panel', 2), ('NUM_NUMBERS', 2), ('numbers;\n', 2), ('computation\n', 2), ('CakeLayerInfo("vanilla",', 2), ('getMainQueue();\n', 2), ('super(run);\n', 2), ('AppManager.find("001");\n', 2), ('Paths.get(args[0]);\n', 2), ('globalMutex.add(this);\n', 2), ('SingleDisposable[n', 2), ('assertCustomerCountIs(int', 2), ('Implementing', 2), ('onNext(final', 2), ('sourceLoop;\n', 2), ('org.mockito.Mockito.doThrow;\nimport', 2), ('jobs()', 2), ('AbstractSortedNumericDocValues()', 2), ('20,40:', 2), ('CertUtils.trustManager(certificates);\n', 2), ('Thread.setDefaultUncaughtExceptionHandler(originalHandler);\n', 2), ('cons', 2), ('flattenAsFlowable(final', 2), ('this.numInstances', 2), ('io.reactivex.annotations;\n\n/**\n', 2), ('iterator.");\n', 2), ('TestObserver<T>();\n', 2), ('String>>()', 2), ('RIGHT_VALUE)', 2), ('fail("timed', 2), ('Burst<T>(error,', 2), ('\'"', 2), ('startingData', 2), ('(except', 2), ('ms.subscribe(observer);\n', 2), ('FlowableSubscriber<CompletableSource>,', 2), ('Flowable.intervalRange(0,', 2), ('assertTrue(bs.isCancelled());\n\n', 2), ('ClusterName', 2), ('Builder}', 2), ('sentences', 2), ('this.port', 2), ('o.elementAt(0);\n', 2), ('b.title', 2), ('s.startsWith("xpack.ssl.")', 2), ('awaiting', 2), ('main(String', 2), ('diff,', 2), ('concatMapDelayError(\n', 2), ('conditions', 2), ('mergeDelayError(MaybeSource<?', 2), ('System.identityHashCode(this);\n', 2), ('QueueDrainHelper.request(s,', 2), ('copyStruct(painlessStruct.name,', 2), ('fashion\n', 2), ('assertEquals(allCustomers.get(0).getFirstName(),', 2), ('.assertResult(Arrays.asList(1,', 2), ('ll', 2), ('when;\n\n', 2), ('NioServerSocketChannel', 2), ('win(int', 2), ('U>(value,', 2), ('(as', 2), ('TestHelper.checkDoubleOnSubscribeFlowableToSingle(new', 2), ('group.");\n', 2), ('synchronization.\n', 2), ('boxFrom,', 2), ('Flowable.\n', 2), ('Octopus(),', 2), ('scalarMapperCrash()', 2), ('org.elasticsearch.xpack.security.support;\n\nimport', 2), ('windows.lazySet(1);\n', 2), ('(simpleTypesMap.containsKey(importedPainlessTypeName)', 2), ('org.elasticsearch.nio;\n\nimport', 2), ('delayTime', 2), ('this.mainSubscription', 2), ('result.size());\n\n', 2), ('Optional.ofNullable((String)', 2), ('dataSource;\n\n', 2), ('testCount()', 2), ('ObjectHelper.requireNonNull(resourceSupplier,', 2), ('buffers.clear();\n', 2), ('ResourceWatcherService', 2), ('#call()}', 2), ('org.mockito.Mockito.mock;\n\nimport', 2), ('itemTimeoutIndicator)', 2), ('this.factory.get();\n', 2), ('TRAMPOLINE', 2), ('ObservableOperator<?', 2), ('WindowBoundaryInnerObserver(WindowBoundaryMainObserver<T,', 2), ('RxJavaPlugins.getInstance().reset();\n//', 2), ('-1266041316834525931L;\n\n', 2), ('MpscLinkedQueue<Object>());\n', 2), ('protects', 2), ('baseClassName);\n\n', 2), ('retry.\n', 2), ('MaybeTakeUntilPublisher<T,', 2), ('}).toObservable();\n', 2), ('Long.MAX_VALUE\n', 2), ('applications.\n', 2), ('definitionStart)', 2), ('indicator.\n', 2), ('complete(true);\n', 2), ('cache...",', 2), ('flowableBlockingLast()', 2), ('"need', 2), ('SwitchMapMaybeObserver<Object>(null);\n\n', 2), ('(lo.latch.getCount()', 2), ('ds[0].dispose();\n', 2), ('<li>In', 2), ('EventManager}', 2), ('SessionFactory', 2), ('LeftRightSubscriber(parent,', 2), ('singleType', 2), ('org.junit.jupiter.api.Assertions.assertNotSame;\nimport', 2), ('source9,\n', 2), ('Functions.emptyConsumer()));\n', 2), ('ticketsCollection;\n', 2), ('FilePermission(realPath.toString(),', 2), ('inOrder.verify(observer).onNext(1);\n', 2), ('staticMembers', 2), ('interface:\n', 2), ('java.nio.channels.ServerSocketChannel;\nimport', 2), ('MaybeObservers', 2), ('this.downstream;\n\n', 2), ('last4.get(1));\n', 2), ('permissions)', 2), ('this.onNextMapper', 2), ('moRef', 2), ('"onNext(1)");\n', 2), ('this.e', 2), ('onAfterSuccess.accept(t);\n', 2), ('innerObserver)', 2), ('assertFalse(SubscriptionHelper.replace(s,', 2), ('painlessParametersTypes,\n', 2), ('eventsAfterDematerializedTerminal()', 2), ('domainapp.dom.modules.simple;\n\nimport', 2), ('when(future.get()).thenReturn(value);\n\n', 2), ('buf;\n\n', 2), ('subscriber.onError(ex);\n', 2), ('s.request(Long.MAX_VALUE);\n\n', 2), ('"onRequest', 2), ('@SuppressWarnings("deprecation")\n', 2), ('shared.onError(e);\n', 2), ('pp2.onNext(2);\n', 2), ('printString(final', 2), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/flattenAsObservable.png"', 2), ('cache),', 2), ('customerDao)', 2), ('ObjectHelper.equalsPredicate());\n', 2), ('signing)', 2), ('onSuccess;\n', 2), ('cakeToppingInfo', 2), ('6668));\n', 2), ('SingleElementObserver<T>', 2), ('timeout);\n\n', 1), ('Observable.fromArray());\n', 1), ('AdapterPatternTest', 1), ('(\'"', 1), ('verifyThread(Schedulers.single(),', 1), ('MergeMaybeObserver<T>(s,', 1), ('testOnErrorExceptionIsThrownFromOnNext()', 1), ('main.onError(new', 1), ('SpscArrayQueue<Integer>', 1), ('methods);\n', 1), ('socketChannel.read(buffer);\n', 1), ('.sorted(new', 1), ('id)));\n', 1), ('fail.append(fn).append("', 1), ('Character.isUpperCase(name.charAt(2)))', 1), ('"Effective', 1), ('JustTckTest', 1), ('"Hello?', 1), ('serial));\n\n', 1), ('CollectObserver(Observer<?', 1), ('domainapp.integtests.specglue.modules.simple;\n\nimport', 1), ('QueueDisposable<T>,', 1), ('scheduler.schedulePeriodicallyDirect(\n', 1), ('"Amberjill").withHairColor(HairColor.BLOND)\n', 1), ('"applicationContext.xml");\n', 1), ('cancelOnArrival()', 1), ('"+987642435"));\n', 1), ('aEventId);\n\n', 1), ('Error)', 1), ('name.startsWith("is")', 1), ('singletonInstanceMethod', 1), ('assertFalse(list.equals(list3));\n\n', 1), ('rate,', 1), ('this.createdTime', 1), ('FileLoggerModule.singleton;\n', 1), ('nextFunction', 1), ('Flowable.timer(i,', 1), ('RxJavaPlugins.initSingleScheduler(unsafeDefault);\n', 1), ('sharing.\n', 1), ('sell\ncopies', 1), ('(int)elements).defaultIfEmpty(0)\n', 1), ('Completable.mergeDelayError(Arrays.asList(Completable.complete()))\n', 1), ('scalarEmitted;\n', 1), ('bounded.subscribe(new', 1), ('more,', 1), ('ZipTckTest', 1), ('dl.dispose();\n\n', 1), ('desc;\n', 1), ('RecreateSimpleObjects();\n', 1), ('rsa.verify(signedContent);\n', 1), ('upperBound);\n', 1), ('terminated:', 1), ('(TYPE_NAME_PATTERN.matcher(whitelistField.javaFieldName).matches()', 1), ('result1', 1), ('null\\n"\n', 1), ('loginTimeout);\n', 1), ('hostsList,\n', 1), ('#hasThrowable()},', 1), ('math,', 1), ('textInput.size())', 1), ('ParallelFromPublisher<T>(source,', 1), ('frc', 1), ('originator.', 1), ('value.cancel();\n', 1), ('MaybeUnsubscribeOn(MaybeSource<T>', 1), ('weapon");\n', 1), ('trustStorePassword.getChars());\n', 1), ('rolePermissionSettings)', 1), ('separating', 1), ('IndexOutOfBoundsException("Too', 1), ('FallbackSubscriber(Subscriber<?', 1), ('cancel(AtomicReference<Subscription>', 1), ('SubscribeOnObserver(CompletableObserver', 1), ('AccountAggregate()', 1), ('Flowable.empty().takeLast(1).subscribe(s);\n', 1), ('".B.1",', 1), ('assuming', 1), ('builder.endObject();\n\n', 1), ('(Stream<String>', 1), ('Objects.requireNonNull(executorService);\n', 1), ('ConcatMapMaybeMainObserver(Observer<?', 1), ('added.\n', 1), ('shouldNotWriteToDbIfContextIsNull()', 1), ('equals}', 1), ('Functions.justFunction(Flowable.fromIterable(iterate(elements))),\n', 1), ('(cleared.get())', 1), ('transportUri', 1), ('searchForEntry(connection,', 1), ('18:36', 1), ('testSetName()', 1), ('assertFalse(PublishProcessor.create().ignoreElements().blockingAwait(100,', 1), ('ballThread.interrupt();\n', 1), ('DefaultObserver<T>', 1), ('fishV2.getWeightTons(),\n', 1), ('thisDamaged', 1), ('range.subscribeOn(new', 1), ('fs);\n', 1), ('flowableInner()', 1), ('create(Set<Integer>', 1), ('getSequenceId()', 1), ('dependentPromiseIsFulfilledAfterTheConsumerConsumesTheResultOfThisPromise()', 1), ('200;\n\n\n', 1), ('lpValue();\n', 1), ('BackpressureStrategy.BUFFER)\n', 1), ('assertSame(fos,', 1), ('ObservableConcatMapMaybe<T,', 1), ('World!").single("");\n', 1), ('errorNotImplementedNull2()', 1), ('checkSchedulerBadMethod(Maybe.class.getSimpleName());\n', 1), ('hostAddress', 1), ('(Enum<E>[])m.invoke(null))', 1), ('FishingBoat})', 1), ('this.crashRequest', 1), ('(!service.isTerminated())', 1), ('.fromLicenseSpec(licenseSpec,', 1), ('unknown\n', 1), ('"java.io.tmpdir",\n', 1), ('ignored.', 1), ('this.presenter;\n', 1), ('console.', 1), ('justSource()', 1), ('(node.next', 1), ('execTime;\n\n', 1), ('FlowableRefCount<T>(this,', 1), ('testAllObservable()', 1), ("Maybe's", 1), ('fn.replace("\\\\",', 1), ('"833-836",', 1), ('service.submitTicket(lotteryTicket);\n', 1), ('(this.body', 1), ('cache).\n', 1), ('AuditUtil.indices(new', 1), ('alive:\\r\\n"', 1), ('java.security.MessageDigest;\nimport', 1), ('throttlePeriod)', 1), ('area;\n\n', 1), ('contract', 1), ('DeprecationChecks', 1), ('level1B', 1), ('co', 1), ('parameters)', 1), ('MaybeDelaySubscriptionOtherPublisher(MaybeSource<T>', 1), ('apply(Mutable', 1), ('apiGatewayProxyResponseEvent(CREATED_STATUS_CODE,', 1), ('following:\n', 1), ('serial.setSubscription(s);\n', 1), ('soldierResponse;\n\n', 1), ('charFrequency.entrySet().iterator();\n', 1), ('asmConstructor,', 1), ('current.get();\n', 1), ('assertFalse(list.equals(list2));\n\n', 1), ('CacheTckTest', 1), ('java.util.ArrayList;\n\n/**\n', 1), ('getPendingAudio()[tailIndex]', 1), ('bus.unsubscribe(foo);\n', 1), ('BufferOpenObserver(BufferBoundaryObserver<?,', 1), ('risks.");\n', 1), ('fields\n', 1), ('serialized()', 1), ('AssertionError(clazz', 1), ('users);\n', 1), ('java.nio.file.FileStore;\nimport', 1), ('Single.ambArray(Single.error(new', 1), ('[size=%s,', 1), ('ParseField', 1), ('AtomicReference<LinkedQueueNode<E>>', 1), ('checkSingleScheduler()', 1), ('io.reactivex.internal.util.ExceptionHelper;\n\n/**\n', 1), ('javaClass,', 1), ('omitted', 1), ('UserDto("Tom",', 1), ('.noWeapon()\n', 1), ('assertEquals(t,', 1), ('(Thread.interrupted())', 1), ('f0);\n', 1), ('(element.startsWith("/")', 1), ('.thenAccept(new', 1), ('"network.host:', 1), ('#readerLock},', 1), ('SampleTimedNoLast(Observer<?', 1), ('FlowableDebounce(Flowable<T>', 1), ('totalCalories=%d",', 1), ('Proxy.Type.HTTP;\n', 1), ('CompletableEmpty()', 1), ('KingsHand(kingJoffrey);\n\n', 1), ('tier', 1), ('Plugins:', 1), ('XPath', 1), ('org.hibernate.jpa.HibernatePersistenceProvider;\nimport', 1), ('DisposableHelper.isDisposed(d.get());\n', 1), ('Balking', 1), ('com.iluwatar.serverless.faas.api;\n\nimport', 1), ('m.javadoc.replace("\\n",', 1), ('MethodHandles.publicLookup().in(ownerStruct.clazz).unreflectConstructor(javaConstructor);\n', 1), ('Policy.UNSUPPORTED_EMPTY_COLLECTION)', 1), ('InitializingOnDemandHolderIdiom();\n', 1), ('boiler.",', 1), ('observe.\n', 1), ('PlayerDetails("xavier@google.com",', 1), ('evictedGroups.poll())', 1), ('responses', 1), ('href="http://sourceforge.net/projects/mc-fastflow/">Fast', 1), ('smallerJavaMajorVersion);\n', 1), ('leaf', 1), ('oneMethod.getParameterCount()));\n', 1), ('propsMap.remove("version");\n', 1), ('hasDocValues,', 1), ('MaybeSource-like', 1), ('EsIndex(indexWildcard,', 1), ('io.reactivex.subjects.PublishSubject;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 1), ('(TYPE_NAME_PATTERN.matcher(painlessTypeName).matches()', 1), ('mpscOfferPollRace()', 1), ('o.elementAt(0).toFlowable();\n', 1), ('impl.add(new', 1), ('calories\n', 1), ('NoOpConsumer', 1), ('implements\n', 1), ('Single.toMaybe()}', 1), ('sever', 1), ('missedRequested', 1), ('ScheduledWorker', 1), ('stop;\n\n', 1), ('waits', 1), ('Pattern.compile("\\\\[http\\\\s+\\\\].+bound_address.+127\\\\.0\\\\.0\\\\.1:(\\\\d+)");\n', 1), ('HttpS', 1), ('process(List<OverallBucket>', 1), ('ObservableThrottleLatest<T>', 1), ('RxJavaPlugins.setInitIoSchedulerHandler(callable2scheduler);\n', 1), ('depict', 1), ('JUnitRuleMockery2.createFor(Mode.INTERFACES_AND_CLASSES);\n\n', 1), ('period\n', 1), ('provide\n', 1), ('trampolineWorker.schedule(Functions.EMPTY_RUNNABLE);\n', 1), ('you!",', 1), ('testGetAuthorsCount()', 1), ('fishV1.getAge(),', 1), ('Completable#as}', 1), ('Arrays.asList("class', 1), ('task.onPreCall();\n', 1), ('setupConnection(cfg);\n', 1), ('5566860102500855068L;\n\n', 1), ('ps.test(true);\n\n', 1), ('countries:-");\n', 1), ('this.dynamic', 1), ('Collections.singletonList((FlushReadyWrite)', 1), ('testRangeWithOverflow4()', 1), ('ObservableTakeUntil(ObservableSource<T>', 1), ('tests:', 1), ('multicasts', 1), ('com.iluwatar.business.delegate;\n\nimport', 1), ('messenger\n', 1), ('"Person{"\n', 1), ('"+73294135"));\n', 1), ('check("Completable");\n', 1), ('asyncResult4.await();\n', 1), ('FactoryProvider}', 1), ('d.complete(value);\n', 1), ('assertNotNull(byName);\n', 1), ('Converter(final', 1), ('oldTypeIterator.next();\n', 1), ('org.elasticsearch.mocksocket.MockHttpServer;\n\nimport', 1), ('"length");\n', 1), ('(holder.latch.await(timeout.toMillis(),', 1), ('storage,', 1), ('FlowableToSingleTest', 1), ('TestHelper.checkDisposed(Observable.just(1).toFlowable(BackpressureStrategy.MISSING));\n', 1), ('r.get()', 1), ('Unit[5];\n', 1), ('dates.add(new', 1), ('char[dimensions];\n\n', 1), ('Kritior"));\n', 1), ('FlowableInterval(long', 1), ('variants,', 1), ('analysis.', 1), ('status(int', 1), ('Scout(kingsHand));\n\n', 1), ('java.util.ArrayList}</li>\n', 1), ('ObservableBufferExactBoundary(ObservableSource<T>', 1), ('entityManagerFactory()', 1), ('CompletableCreate', 1), ('when(func.call()).thenThrow(throwable);\n\n', 1), ('ObservableFlattenIterable<T,', 1), ('assertFalse("saw', 1), ('source.subscribe(subscriber);\n', 1), ('#ignoreElement()}', 1), ('(unbounded)', 1), ('(files', 1), ('assertTrue(oliphaunts.contains(secondOliphaunt));\n', 1), ('ColorSelector(Color.RED).and(new', 1), ('painlessNameStructEntry.getKey();\n', 1), ('ScheduledRunnable(Runnable', 1), ('initialSupplier;\n\n', 1), ('title);\n', 1), ('completedEventHandler(int', 1), ('2.1.11\n', 1), ('InMemoryAppender(Consumer.class);\n', 1), ('StartingData)', 1), ('thanks', 1), ('"io.reactivex:single";\n\n', 1), ('f.doFinally(CompletableDoFinallyTest.this);\n', 1), ('CapturingObserver<Object>();\n', 1), ('sendOnCompleted()', 1), ('}).test(true);\n\n', 1), ('POOLS.clear();\n', 1), ('ObserverTest<O', 1), ('blobs', 1), ('LoggerFactory.getLogger(PromiseSupport.class);\n\n', 1), ('(aliases', 1), ('LOGGER.info("File', 1), ('ListIterator<Integer>', 1), ('org.hamcrest.Matchers.greaterThan;\n\npublic', 1), ('Publish', 1), ('title)', 1), ('ObservableGenerate<T,', 1), ('minimizes', 1), ('clearCache()', 1), ('CompletableObserver}s\n', 1), ('f.getParentFile();\n\n', 1), ('Operations\n', 1), ('children.hasNext())', 1), ('FlowableConcatWithMaybe(Flowable<T>', 1), ('unmodifiableMap(headers);\n', 1), ('setLayers(Set<CakeLayer>', 1), ('(g.getName().equals(s', 1), ('Functions.emptyConsumer();\n', 1), ('WARNING:', 1), ('BaseEntity,', 1), ('value1\n', 1), ('url,', 1), ('SingleSubject<T>();\n', 1), ('FlowableElementAtMaybe<T>', 1), ('rest.get();\n', 1), ('assertEquals(WashingMachineState.WASHING,', 1), ('esDir.resolve("bin").resolve("elasticsearch"', 1), ('ts1.assertNoErrors();\n\n', 1), ('"0.1.7",', 1), ('out.writeString(description);\n', 1), ('modules;\n', 1), ('json.append("}");\n', 1), ('formats;\n\n', 1), ('org.hibernate.Criteria;\nimport', 1), ('singleIterableToFlowableIterable()', 1), ('#getValue()},', 1), ('testShutdown()', 1), ('getType("String");\n', 1), ('Collections.unmodifiableSet(numbers);\n', 1), ('seedDisposed()', 1), ('this.arity', 1), ('numberOfObservers,\n', 1), ('"Troll",', 1), ('1800;', 1), ('validation,', 1), ('(!methods2.contains(m.getName())', 1), ('Thread.sleep(delayMillis);\n', 1), ('blobSize)', 1), ('Flowable",', 1), ('VolatileSizeArrayList<Integer>(16);\n', 1), ('"BookDTO', 1), ('(in.getVersion().onOrAfter(Version.V_6_2_0))', 1), ('Integer.getInteger("jctools.spsc.max.lookahead.step",', 1), ('-3511336836796789179L;\n\n', 1), ('com.iluwatar.event.sourcing.state;\n\nimport', 1), ('render', 1), ('Case', 1), ('"Jane",', 1), ('course,', 1), ('"Melody",', 1), ('Objects.requireNonNull(caPaths,', 1), ('java.util.concurrent.Callable#call()\n', 1), ('Flowable.amb(Arrays.asList(\n', 1), ('.filter(number', 1), ('13;\n', 1), ('remove(Node', 1), ('blobStore;\n\n', 1), ('DwarvenGoldmineFacadeTest', 1), ('CachedThreadSchedulerTest', 1), ('so.onNext(1);\n', 1), ('jvmOptions)', 1), ('(Person)', 1), ('*/\n@DomainService(repositoryFor', 1), ('#replace(AtomicReference,', 1), ('names.size()));\n', 1), ('FileWriter(filename);\n', 1), ('Contributors.",\n', 1), ('worker2.dispose();\n', 1), ('org.joda.time.DateTime.class.getName(),\n', 1), ('critical\n', 1), ('<code>start</code>,', 1), ('testLastCountLessItems()', 1), ('Arrays.asList(header));\n\n', 1), ('OtherMaybeObserver<T>', 1), ('getType("Pattern");\n', 1), ('SingleHolder', 1), ('LOGGER.info("Submitting', 1), ('QueueSubscription<T>()', 1), ('Arrays.fill(sources,', 1), ('calculateLowestFrequencyChar()', 1), ('fruit)', 1), ('bus.publish(StartingData.of(LocalDateTime.now()));\n', 1), ('"MoneyDepositEvent");\n', 1), ('log.info("result', 1), ('io.reactivex.internal.fuseable.FuseToMaybe;\nimport', 1), ('result[0]);\n', 1), ('2071387740092105509L;\n', 1), ('AzureStorageTestServer(storageUrl);\n', 1), ('failSingleCompletableBlockingAwait()', 1), ('o.onSubscribe(EmptyDisposable.NEVER);\n', 1), ('FutureDisposableTest', 1), ('Flowable.fromIterable(sources).concatMapEager((Function)MaybeToPublisher.instance());\n', 1), ('pp.onError(ex0);\n', 1), ('consumerClassName)\n', 1), ('expectedExceptions', 1), ('(start', 1), ('Termination();\n\n', 1), ('assertEquals(this.expectedExecutionTime', 1), ('sb.append(userAccount.toString()', 1), ('listBlobs()', 1), ('justUnsubscribed()', 1), ('ignoreTests\n', 1), ('ArrayCompositeSubscription(int', 1), ('(QueueDisposable<?>)d;\n\n', 1), ('resolveIndices(String', 1), ('*nix', 1), ('DragonSlayer', 1), ('System.out.println(b);\n\n', 1), ('modifying', 1), ('randomly', 1), ('lockdown()', 1), ('SingleTakeUntil(SingleSource<T>', 1), ('deflateAndBase64Encode(SAMLObject', 1), ('assertEquals("spear",', 1), ('t.onSuccess(value);\n', 1), ('Definition.ClassToName(field.clazz)', 1), ('NOPMD\n}\n', 1), ('eyes.', 1), ('targetPath,', 1), ('occurs,', 1), ('loggedMuteShouldRunTheCheckedRunnableAndNotThrowAnyExceptionIfCheckedRunnableDoesNotThrowAnyException()', 1), ('I', 1), ('(T)o;\n', 1), ('potions;\n\n', 1), ('Completable.mergeDelayError(\n', 1), ('Person.class);\n', 1), ('ArrayList<Flowable<Integer>>();\n', 1), ('reportDisposableSet()', 1), ('Collections.unmodifiableMap(struct.getters);\n', 1), ('RACE_LONG_LOOPS', 1), ('FlowableInternalHelperTest', 1), ('expectedTargetResult,\n', 1), ('key.append(methodName);\n\n', 1), ('userAccount.getAdditionalInfo()));\n', 1), ('getInternalHeavyValue());\n', 1), ('"onCallback', 1), ('range:', 1), ('jigsaw', 1), ('execute(Terminal', 1), ('PlayerDetails("tyrell@google.com",', 1), ('cancelOnArrival2()', 1), ('getClusterPrivileges()', 1), ('Subscriber<Timed<Integer>>', 1), ('FlowableScan<T>', 1), ('super(message,', 1), ('Publisher<Timed<Object>>', 1), ('loggingHandler)).start();\n', 1), ('permission.getClass().getName();\n', 1), ('"Unsupported', 1), ('testMessageFromOrcs()', 1), ('"fisher";\n\n', 1), ('Single.fromPublisher(pp).test();\n\n', 1), ('CompletableObserveOn(CompletableSource', 1), ('toFunction5()', 1), ('AppManager.initCachingPolicy(CachingPolicy.THROUGH);\n\n', 1), ('45,', 1), ('parts:', 1), ("'t'),", 1), ('mask)))', 1), ('runtime\n', 1), ('mergeSingleSingle()', 1), ('that)\n', 1), ('timed.value().intValue());\n', 1), ('Integer.getInteger(KEY_SINGLE_PRIORITY,', 1), ('((ll', 1), ('@ManyToMany(cascade', 1), ('loader.getFileName().equals(""))', 1), ('promiseUsage()', 1), ('com.unboundid.ldap.sdk.SearchScope;\nimport', 1), ('workQueue)', 1), ('aliases.\n', 1), ('lock.wait(unit.toMillis(timeout));\n', 1), ('}).toObservable());\n', 1), ('toJson(Video', 1), ('MaybeTimeoutMaybe(MaybeSource<T>', 1), ('}};\n', 1), ('}}).ignoreElements();\n\n', 1), ('menu', 1), ('"keystore', 1), ('error.addThrowable(ex);\n\n', 1), ('u.getName();\n', 1), ('PlayerDetails("arnold@google.com",', 1), ('KeywordEsField("type")));\n', 1), ('up.onNext(Completable.complete());\n', 1), ('DisposableMaybeObserver&lt;&gt;()', 1), ('temporaryList.add(function.apply(iterator.next()));\n', 1), ('Whitelist.Field(origin,', 1), ('innerNext(InnerQueuedObserver<T>', 1), ('in.readVInt();\n', 1), ('X509ExtendedTrustManager()', 1), ('beforeCancelSleep(BaseTestConsumer<?,', 1), ('completableSubscribe1()', 1), ('#resolveRoles(UserData,', 1), ('backpressureSpecEnd);\n', 1), ('exclusively,', 1), ('methods.get(0);\n', 1), ('MaybeObserveOn<T>(this,', 1), ('latest,', 1), ('tryAdvance(Consumer<?', 1), ('Initialize.\n', 1), ('typically)', 1), ('TestHelper.checkDisposed(CompletableSubject.create());\n', 1), ('up-to-date\n', 1), ('errors.");\n', 1), ('application.",', 1), ('X509Certificate', 1), ('(painlessConstructor.arguments.equals(painlessParametersTypes)', 1), ('INITIAL_COUNT;', 1), ('Comparable<JavaVersion>', 1), ('testFindAllSpellbooks()', 1), ('innerWrapper;\n', 1), ('generateSampleCustomers())', 1), ('Stream<Runnable>', 1), ('collected;\n', 1), ('parent.onSubscribe.accept(s);\n', 1), ('findSource(String', 1), ('(m.isDefault())', 1), ('compare(long', 1), ('io.reactivex.internal.operators.flowable.FlowableSequenceEqual.*;\nimport', 1), ('listener::onFailure),', 1), ('this.lastFetched', 1), ('javax.net.ssl.X509ExtendedKeyManager;\nimport', 1), ('(eventClassName.equals("MoneyTransferEvent"))', 1), ('mistakes', 1), ('customerResource.getAllCustomers();\n\n', 1), ('partProperties.put(HasModel.PROPERTY,', 1), ('cannot.', 1), ('DeprecationIssueTests.createTestInstance();\n', 1), ('0.0001);\n', 1), ('overallBuckets)', 1), ('<code>write-through</code>', 1), ('Maybe.zipArray(Functions.justFunction(null),', 1), ('java.security.KeyPairGenerator;\nimport', 1), ('Function<PublishProcessor<Integer>,', 1), ('w.schedule(action);\n', 1), ('IllegalStateException.class);\n', 1), ('".bat"', 1), ('this.prefix', 1), ('reduceWithCovariantObjectsObservable()', 1), ('DatabaseMetadataProxy(log,', 1), ('VirtualDB', 1), ('this.factoryWithoutDefaultObserver.get();\n', 1), ('doPrivileged(final', 1), ('createNullSuccess()', 1), ('getOperatorInstance(s,', 1), ('testExample()', 1), ('assertEquals(book.getName(),', 1), ('tillTheEnd;\n\n', 1), ('tempFileView.setPermissions(attributes.permissions());\n\n', 1), ('(InnerObserver<T,', 1), ('definition)', 1), ('hasItems(uniqueExpectedIndices.toArray(Strings.EMPTY_ARRAY)));\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/never.png"', 1), ('Single.just(1).doAfterTerminate(null);\n', 1), ('different\n', 1), ('sameSizeReverse()', 1), ('accounts.put(sourceBackAccount,', 1), ('ClassPermission(clazz));\n', 1), ('anyways\n', 1), ('3).takeUntil(new', 1), ('painlessReturnClass;\n\n', 1), ('RECOVERABLE(SQLRecoverableException::new),\n', 1), ('#getValues(Object[])}.\n', 1), ('service.findAllSpellbooks();\n', 1), ('.distinctUntilChanged()\n', 1), ('.singleElement()\n', 1), ('CustomMaybeObserver(MaybeObserver&lt;?', 1), ('expectedDates', 1), ('CyclicBarrier(2);\n\n', 1), ('SpellStrategy());\n', 1), ('ObservableDistinctUntilChangedTest', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timeout.1s.png"', 1), ('2).subscribe(to);\n\n', 1), ('rogue', 1), ('filterFailHandlerThrowsConditional()', 1), ('Optional.of(exception)));\n', 1), ('assertEquals(expectedExceptions,', 1), ('destination;\n', 1), ('FlowableBuffer<T,', 1), ('AtomicReferenceArray<Subscription>', 1), ('CharSequence', 1), ('(line.matches("\\\\s*"))', 1), ('Part(partProperties);\n\n', 1), ('Author(String', 1), ('source.subscribe(mostRecentSubscriber);\n\n', 1), ('Files.readAttributes(file,', 1), ('evictedGroup;\n', 1), ('rev);\n', 1), ('FileBasedUnicastHostsProvider(Environment', 1), ('command)\n', 1), ('inputStream)', 1), ('SafeSubscriber(Subscriber<?', 1), ('remove(node);\n', 1), ('").append(line)\n', 1), ('createConsumerThrowsResourceOnError()', 1), ('org.elasticsearch.common.CheckedRunnable;\nimport', 1), ('this.javaClassName', 1), ('scheduleDirectThrows()', 1), ('TestHelper.checkDisposed(PublishSubject.create().elementAt(0).toObservable());\n', 1), ("select's", 1), ('data-bus', 1), ('Flowable.range(v,', 1), ('LastSubscriber<T>(observer,', 1), ('concatMapToFlowableEmpty', 1), ('Star(StarType.SUN,', 1), ('org.apache.isis.applib.annotation.ActionLayout;\nimport', 1), ('lock.writeLock()));\n\n', 1), ('rangeFlatMap(Blackhole', 1), ('CompletableCache', 1), ('crashOnComplete,', 1), ('CompletableToFlowable<T>', 1), ('ln', 1), ('QueueDrainHelper.createQueue(prefetch);\n\n', 1), ('query)', 1), ('tunable', 1), ('classic', 1), ('ZipSubscriber[n];\n', 1), ('4943102778943297569L;\n', 1), ('secondEmpty()', 1), ('remove(PublishSubscription<T>', 1), ('subscriber.assertResult("");\n', 1), ('[name="', 1), ('};', 1), ('assertEquals("failed",', 1), ('java.io.Closeable}.', 1), ('RxJavaPlugins.setOnSingleAssembly(new', 1), ('"").replace("Observable",', 1), ('write-through\n', 1), ('getAbilities()', 1), ('testBakeCakeMissingLayer()', 1), ('assertNotNull(layer.toString());\n', 1), ('Yet', 1), ('testNullTaskWithNullCallback()', 1), ('expectTargetOnFire', 1), ('some\n', 1), ('org.elasticsearch.common.CheckedRunnable;\n\nimport', 1), ('assertNotNull(name);\n', 1), ('timedRunnable.disposed', 1), ('java.util.List}\n', 1), ('o.subscribe(ls);\n\n', 1), ('ThreadDeath)', 1), ('testExplain()', 1), ('Print\n', 1), ('clearly', 1), ('properties.getProperty("cluster.name");\n', 1), ('Objects.hash(pattern);\n', 1), ('newConcurrentMapWithAggressiveConcurrency(16);\n', 1), ('jars:', 1), ('operations)', 1), ('"ERROR";\n\n\n', 1), ('optionalCustomer.get());\n', 1), ('com.iluwatar.specification.app;\n\nimport', 1), ('BallThreadTest', 1), ('messenger.messageFromElves(),\n', 1), ('dateValue', 1), ('consume\n', 1), ('PosixFileAttributeView.class);\n\n', 1), ('spellbookDao.persist(spellbook7);\n', 1), ('(owner.methods.get(methodKey)', 1), ('org.elasticsearch.xpack.sql.util.CollectionUtils;\n\nimport', 1), ('queueing', 1), ('out.toByteArray();\n', 1), ('createMessage(final', 1), ('scheduler).subscribe(ts);\n\n', 1), ('ZipMaybeObserver(ZipCoordinator<T,', 1), ('document\n', 1), ('MAX_RUNNING_EVENTS)', 1), ('org.elasticsearch.common.io.stream.Writeable;\nimport', 1), ('TestException()).onTerminateDetach().subscribe(ts);\n\n', 1), ('validate(long', 1), ('context.get(IUnitOfWork.INSERT);\n', 1), ('(item', 1), ('workers.dispose();\n', 1), ('assertTrue(errors.get(0).toString(),', 1), ('LambdaSubscriber<T>(Functions.emptyConsumer(),\n', 1), ('parsers.keySet();\n', 1), ('assertEquals(this.sergeantResponse.get(),', 1), ('getType("Iterator");\n', 1), ('this.accountNoTo', 1), ('successAcceptThrows()', 1), ('requests.size());\n\n', 1), ('this.timedRunnable', 1), ('Functions.REQUEST_MAX));\n', 1), ('cake.setId(expectedId);\n', 1), ('SkipLastTimedSubscriber(Subscriber<?', 1), ('getSpellbooks()', 1), ('members}', 1), ('ScalarDisposable(Observer<?', 1), ('disposeRun()', 1), ('org.elasticsearch.env.TestEnvironment;\nimport', 1), ('maybe,', 1), ('CoffeeMakingTask(7));\n', 1), ('found"));\n', 1), ('intType', 1), ('AccessController.doPrivileged((PrivilegedExceptionAction<R>)', 1), ('a.length;\n\n', 1), ('Functions.toFunction(function9);\n', 1), ('items.add(item);\n', 1), ('encapsulates', 1), ('some.other.Class', 1), ('quickRun()', 1), ('toList(iterable.iterator());\n', 1), ('WeatherObserver>', 1), ('when(goodMoodRoyalty.getMood()).thenReturn(true);\n\n', 1), ('composedMessage', 1), ('partially', 1), ('this.money.subtract(money);\n', 1), ('exceptionHandler;\n\n', 1), ('T>)a,', 1), ('OrcWarlord("laser"),', 1), ('Stream.of(get(key)).filter(el', 1), ('bf.onSubscribe(new', 1), ('rangeObservableFlatMapJust.subscribe(new', 1), ('entries")\n', 1), ('mock(Spell.class);\n', 1), ('"+42345298345"));\n', 1), ('requestCrashed()', 1), ('FlowableUnsubscribeOn(Flowable<T>', 1), ('ThreadLocal<DateFormat>()', 1), ('booleanSupplierPredicateReverse()', 1), ('FISHING_BEAN', 1), ('Class<U>', 1), ('violation.\n', 1), ('org.elasticsearch.action.admin.cluster.node.info.NodeInfo;\nimport', 1), ('MalformedURLException,', 1), ('(true);\n', 1), ('IndexPrivileges(index,', 1), ('spellbooks.add(spellbook);\n', 1), ('increase).\n', 1), ('flatMapMaybe}', 1), ('s);\n}\n', 1), ('eventId;\n\n', 1), ('ActionListener<Set<RoleDescriptor>>>>\n', 1), ('privateKeyPath;\n', 1), ("f.getAbsolutePath().substring(prefix.length()).replace('\\\\',", 1), ('\\"AS', 1), ('e.foldable())', 1), ('Servant("test").checkIfYouWillBeHanged(badCompany));\n\n', 1), ('Person}', 1), ('subscribe(MaybeObserver<?', 1), ('io.reactivex.internal.operators.mixed.ObservableConcatMapMaybe.ConcatMapMaybeMainObserver;\nimport', 1), ('painlessReturnTypeName;\n\n', 1), ('wip);\n', 1), ('pp.concatMapSingleDelayError(Functions.justFunction(ms),', 1), ('dao.delete(existingCustomer);\n\n', 1), ('deflaterStream', 1), ('emitters)', 1), ('StealingMethod\n', 1), ('mergeArray}', 1), ('mapperThrowsDelayError()', 1), ('Synchronous.', 1), ('w1', 1), ('firstFiveNegatives', 1), ('line.substring(parameterIndex', 1), ('List<Function<ClusterState,', 1), ('Flowable.create(new', 1), ('customScheduleDirectDisposed()', 1), ('secretInput.size())', 1), ('.assertResult("12345678");\n', 1), ('World!");\n', 1), ('"wheel");\n', 1), ('SIGNED_LICENSE_CONTENT', 1), ('Running', 1), ('onDrop(Notification<T>', 1), ('org.supercsv.io.CsvListReader;\nimport', 1), ('MaybeFilter<T>(this,', 1), ('TestHelper.checkDisposed(PublishSubject.create().flatMapIterable(new', 1), ('ScalarSubscription<T>(s,', 1), ('Arrays.stream(this.attributeNames).map(attributes).filter(Objects::nonNull)\n', 1), ('id,\n', 1), ('Schedulers#io()}', 1), ('assertSame(Observable.empty(),', 1), ('checkSchedulerBadMethod(Single.class.getSimpleName());\n', 1), ('org.elasticsearch.xpack.sql.expression.predicate.fulltext;\n\nimport', 1), ('cancelOnComplete()', 1), ('Constructor(String', 1), ('spellDao.persist(spell9);\n', 1), ('org.apache.isis.core.specsupport.specs.CukeGlueAbstract;\n\n/**\n', 1), ('error(EqualObserver<T>', 1), ('email="', 1), ('FilePermission(realPath.toString()', 1), ('(pi.get()', 1), ('PlayerDetails("calvin@google.com",', 1), ('io.reactivex.observable.ObservableEventStream.Event;\n\npublic', 1), ('tasks.add(()', 1), ('preferred', 1), ('useOfLoggedMute()', 1), ('bs.peek();\n\n', 1), ('SocketException', 1), ('ex1)', 1), ('getCertificateChain(environment);\n\n', 1), ('Exception;\n', 1), ('ballItem.setTwin(ballThread);\n', 1), ('FileWriterAction()', 1), ('item.getType());\n\n', 1), ('verifyPositive(long', 1), ('MaybeDoFinally<T>', 1), ('offered', 1), ('TakeUntilOtherSubscriber(TakeUntilMainObserver<?>', 1), ("cancel'\\r\\n", 1), ('EXCEPTION_CAUSE', 1), ('ts.onSubscribe(is);\n\n', 1), ('InfiniteRange()', 1), ('methodThrowingException());\n\n', 1), ('caPaths;\n\n', 1), ('outputIndex', 1), ('(Joshua', 1), ('resetLottery()', 1), ('checkDisposed(Single<?>', 1), ('IndexDeprecationChecks::baseSimilarityDefinedCheck,\n', 1), ('<code>dataSource</code>\n', 1), ('Implementation:', 1), ('Merge', 1), ('DwarvenMineWorker.Action.WORK);\n', 1), ('blockingLastNormal()', 1), ('fromArray(@NonNull', 1), ('stack.pop().interpret());\n', 1), ('Random().nextInt())),\n', 1), ('available.remove(instance);\n', 1), ('&lt;param-name&gt;applicationClassName&lt;/param-name&gt;\n', 1), ('SimpleAppSystemInitializer.initIsft();\n\n', 1), ('ApiGatewayResponseBuilder<T', 1), ('actual.lazySet(s);\n', 1), ('Launchers.outPrintln(spaceDelimitedJvmOptions);\n', 1), ('@Ignore("THe', 1), ('properties.get(key);\n', 1), ('<code>read-through</code>', 1), ('flatMapSingle(final', 1), ('expectedThreadName)\n', 1), ('list1.add(w);\n', 1), ('"+09842354"));\n', 1), ('AmbInnerObserver[count];\n', 1), ('Files.readAllBytes(normalizedPath);\n', 1), ('charProto', 1), ('"collectionSupplier', 1), ('thisOnFire,', 1), ('assertEquals(false,', 1), ('assertEquals(4', 1), ('java.io.tmpdir', 1), ('AsyncSubscription()', 1), ('com.google.inject.AbstractModule;\nimport', 1), ('IOException}', 1), ('push-fashion', 1), ('file.");\n', 1), ('deallocation', 1), ('application.";\n', 1), ('java.lang.Character}</li>\n', 1), ('TestHelper.checkUtilityClass(SingleInternalHelper.class);\n', 1), ('context,\n', 1), ('java.util.PrimitiveIterator;\nimport', 1), ('LoggerFactory.getLogger(AppConfig.class);\n\n', 1), ('").append(stat.name()).append(\':\').append(value).append(\'\\n\');\n', 1), ('Collection<Supplier<PartyMember>[]>', 1), ('TestException("intentional");\n', 1), ('(ThreadSafeDoubleCheckLocking.class)', 1), ('list.lastIndexOf(o);\n', 1), ('header.length);\n\n', 1), ('TestException("Outer")).doOnSubscribe(new', 1), ('"+63457543"));\n', 1), ('MethodKey(String', 1), ('subject.onNext("two");\n', 1), ('StoppingData)', 1), ('CertificateInfo(certPath,', 1), ('remove(CompletableDisposable', 1), ('org.elasticsearch.cluster.metadata.MappingMetaData;\nimport', 1), ('consider:-', 1), ('ArrayDeque<T>();\n', 1), ('io.reactivex.internal.schedulers.SingleScheduler.ScheduledWorker;\nimport', 1), ('lazySet(FUSED);\n', 1), ('EmailAttachments(\n', 1), ('to.assertResult(m,', 1), ('FlowableSingleMaybe<T>', 1), ('CompletableDisposeOn', 1), ('!",\n', 1), ('(Certificate[])', 1), ('"Martin', 1), ('forcing', 1), ('(foundJars', 1), ('checkOut()', 1), ('"37e7a1fe-3544-473d-b764-18128f02d72d");\n', 1), ('mapFailWithError()', 1), ('CreateDomainEvent', 1), ('Second', 1), ('defers', 1), ('doPrivileged,\n', 1), ('floatType;\n', 1), ('BooleanRunnable(decoratedRun);\n', 1), ('behaviour.\n', 1), ('dirs.offer(parent);\n//', 1), ('CompletableDefer', 1), ('SubscriptionHelper.CANCELLED);\n', 1), ('this.cancel.setBounds(380,', 1), ('flowableMaybe()', 1), ('getRedirectUrl()', 1), ('Soldier());\n', 1), ('DatagramPacket(message.getBytes(),', 1), ('tryOutSchedulers();\n', 1), ('queue.offer(NotificationLite.subscription(this));\n', 1), ('getDeclaringClass().getCanonicalName()', 1), ('HolderThreadSafe();\n', 1), ('.delaySubscription(100,', 1), ('.withWeapon("spear")\n', 1), ('ParallelMapTryTest', 1), ('command.process();\n', 1), ('service.findWizardsWithSpellbook("Book', 1), ('q.getAndSet(null);\n', 1), ('assertEquals(TEST_PART_PRICE,', 1), ('height="301"', 1), ('CountObserver', 1), ('guests.add(q);\n\n', 1), ('Flowable.fromCallable(new', 1), ('follows:\n', 1), ('host(String', 1), ('"Adamson");\n', 1), ('"findByName",', 1), ('950));\n\n', 1), ('this.allowInterrupt', 1), ('ArrayList', 1), ('p.getPrice().get()));\n', 1), ('FlowableScanSeed(Flowable<T>', 1), ('JvmOptionConsumer()', 1), ('commandService.bookTitleUpdated("title2",', 1), ('ArrayList<Maybe<Integer>>();\n\n', 1), ('rogueProto', 1), ('To</a>\n', 1), ('actual\n', 1), ('composedMessage,', 1), ('"FlowableFlatMapMaybe",\n', 1), ('replyPacket', 1), ('V>(s,', 1), ('compound', 1), ('wrongPre.length()', 1), ('tempFileView.setGroup(attributes.group());\n', 1), ('COMPUTATION})\n', 1), ('environment")\n', 1), ('(painlessStruct', 1), ('finally,', 1), ('cake.getTopping());\n', 1), ('testData.stream();\n', 1), ('ObservableSubscriberTest', 1), ('(cache.isFull())', 1), ('CakeBakingServiceImplTest', 1), ('javax.net.ssl.SSLSocketFactory;\nimport', 1), ('Json', 1), ('concat(ObservableSource<?', 1), ('GoogleCloudStorageTestServer}', 1), ('o2).subscribeOn(Schedulers.trampoline()).map(new', 1), ('getSettingsFilter()', 1), ('EventEmitter(EventObserver', 1), ('XML', 1), ('RxJavaPlugins}', 1), ('errorAll(Subscriber<?>', 1), ('HpPrinter());\n', 1), ('cycle', 1), ('ObservableConcatMapMaybeEmptyPerf', 1), ('spellDao;\n', 1), ('PublishProcessor<PublishProcessor<Integer>>', 1), ('immediateError2()', 1), ('(predicate.test(candidate))', 1), ('t.setDaemon(true);\n', 1), ('(int)elements).publish().autoConnect()\n', 1), ('reloading', 1), ('(t.isAlive())', 1), ('".").substring(0,', 1), ('SubscriptionLambdaSubscriber(Subscriber<?', 1), ('commandService.bookPriceUpdated("title2",', 1), ('solve', 1), ('SingleSource<Object>()', 1), ('end.userAccount;\n', 1), ('assertNotNull(items);\n\n', 1), ('(DatagramChannel)', 1), ('this.panel.add(ok);\n', 1), ('BaseTypeParser.parse(MaybeNo2Dot0Since.findSource("Observable"),', 1), ('mentioned', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/maybe.png"', 1), ('session.functionRegistry();\n', 1), ('"Write', 1), ('MaybeFlatMapNotificationTest', 1), ('testNextId()', 1), ('source1,\n', 1), ('(Maybe.java:").append(ln).append(")\\r\\n\\r\\n");\n', 1), ('getWizardClass()', 1), ('(EmailAttachments)', 1), ('StringJoiner(delimiter,', 1), ('backpressure).</dd>\n', 1), ('videos.get(id).toString();\n', 1), ('operator-fusion.\n', 1), ('toSingle(toFlowable().retry(times,', 1), ('.append("Maybe(Maybe.java:").append(m.javadocLine', 1), ('XPackPlugin.bindFeatureSet(b,', 1), ('SpellDaoImpl', 1), ('MaybeOperator<?', 1), ('date)', 1), ("SingleObserver}s'", 1), ('propsMap.remove("description");\n', 1), ('esDir.resolve("config").resolve("elasticsearch.yml");\n\n', 1), ('deserializedFishV1.getLengthMeters(),', 1), ('field.', 1), ('fromSingle}', 1), ('initCapacity(int', 1), ('tenant.', 1), ('result1);\n', 1), ('assertTrue(collector.getMessages().contains(message));\n', 1), ('expectThrows(ScriptException.class,', 1), ('key.attachment();\n', 1), ('trustConfigs.stream().filter(TrustAllConfig.INSTANCE::equals).findAny();\n', 1), ('parallelFlowable2parallelFlowable', 1), ('prototype.get(stat);\n', 1), ('DragonSlayer})', 1), ('ParallelSortedJoinTest', 1), ('Throwables.getCausalChain(item);\n', 1), ('flowSingle', 1), ('potions.\n', 1), ('onePointSix', 1), ('equalTo(view.readAttributes().group()));\n', 1), ('(before', 1), ('open\n', 1), ("'d'))));\n", 1), ('AllSubscriber();\n\n', 1), ('XPackPlugin.transportClientMode(settings);\n', 1), ('2).elementAt(1).toFlowable().blockingSingle()\n', 1), ('helper', 1), ('System.out.println(e);\n', 1), ('sb.append(clazz);\n\n', 1), ('promising', 1), ('ExecutorWorker(Executor', 1), ('BufferedReader(reader);\n', 1), ('WatchExecutor', 1), ('innerNext(InnerQueuedSubscriber<R>', 1), ('installation",', 1), ('ObservableWindowBoundary(ObservableSource<T>', 1), ('SingleNever', 1), ('.mergeWith(Completable.complete())\n', 1), ('subscriber.onSubscribe(parent);\n\n', 1), ('struct);\n', 1), ('jt.getSelectedRow();\n', 1), ('read.getMetadata("es.to_string"));\n', 1), ('javadoc2.indexOf("}",', 1), ('albumRatingInputTextField.setText(albumRating);\n', 1), ('INVISIBILITY:\n', 1), ('(RuntimeException)', 1), ('FlowableMaterialize(Flowable<T>', 1), ('io.reactivex.Observer<T>,', 1), ('backpressureNotReady()', 1), ('spellbook1.addSpell(spell4);\n', 1), ('f.requestFusion(QueueSubscription.ANY);\n', 1), ('InnerQueuedSubscriber<T>\nextends', 1), ('handlers.put(eventType,', 1), ('Hobbits}', 1), ('List<MenuAction>', 1), ('SingleJob', 1), ('result.size());\n', 1), ('emit(Subject<T>', 1), ('INITIAL_COUNT', 1), ('assertFalse(atomicBoolean.get());\n\n', 1), ('compositeList(ts.errors().get(0));\n', 1), ('andThenMaybeNull()', 1), ('line"));\n', 1), ('Sentence\n', 1), ('jtAreas[1].getText());\n', 1), ('Job', 1), ('testGetItems(Item', 1), ('ignorant', 1), ('ParallelMap(ParallelFlowable<T>', 1), ('-3589550218733891694L;\n\n', 1), ('(!isCompleted())', 1), ('ESPolicyUnitTests', 1), ('SingleOperator', 1), ('Completable.error(ex).blockingGet());\n', 1), ('"Future', 1), ('exists");\n', 1), ('assertTrue(countries.isEmpty());\n', 1), ('success.\n', 1), ('2/5/18.\n', 1), ('periodicDirectTaskRaceIO()', 1), ('address.zipCode', 1), ('value.add(t);\n', 1), ('CsvListWriter', 1), ('scheduling</li>\n', 1), ('SpellbookDaoImpl', 1), ('flowableStripBoundary()', 1), ('EmptyCompletableObserver\nextends', 1), ('certificates.add(new', 1), ('ArrayList<>(index);\n', 1), ('ConnectableFlowable,', 1), ('testNullTask()', 1), ('Objects.requireNonNull(requestType);\n', 1), ('parent.onCancel.run();\n', 1), ('"for', 1), ('dependentPromiseIsFulfilledWithAnExceptionIfConsumerThrowsAnException()', 1), ('trustStoreAlgorithm;\n', 1), ('SubscribeOnObserver<T>(s,', 1), ('java.time.format.DateTimeFormatterBuilder;\nimport', 1), ('wizardDao.findAll();\n', 1), ('ATTRIBUTE', 1), ('unit.hashCode();\n', 1), ('s.onNext(Completable.complete());\n', 1), ('(cacheSize', 1), ('EXCLUDES),\n', 1), ('accumulates\n', 1), ('CustomerDto("2",', 1), ('noAbilities();\n', 1), ('FlowableTransformer<Upstream,', 1), ('CompletableUsing<R>', 1), ('this.nonBlocking', 1), ('Hero.Builder(Profession.MAGE,', 1), ('(add(inner))', 1), ('org.elasticsearch.cluster.metadata.AliasMetaData;\nimport', 1), ('getType("float");\n', 1), ('!once)', 1), ('(files/stores)', 1), ('LinkedHashSet<>(Arrays.asList(urls));\n', 1), ('SINGLE_THREAD_FACTORY;\n\n', 1), ('home."));\n\n', 1), ('freeze(Method', 1), ('cases.\n', 1), ('Publisher<Object>()', 1), ('io.reactivex.functions.*;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 1), ('testAllDaysWithoutDefaultObserver(specialDay,', 1), ('Files.newOutputStream(keystorePath))', 1), ('authorCount', 1), ('#dispose()}', 1), ('.scan(0,', 1), ('.assertFailure(IOException.class,', 1), ('passwordInputPasswordField.setText(password);\n', 1), ('BallItem}', 1), ('this.factory.apply(i).getTimeMs());\n', 1), ('FlowableEventStream', 1), ('ArrayList<>(paramList);\n', 1), ('assertTrue(appender.logContains("level2_b"));\n', 1), ('(!ts.isDisposed())', 1), ('ObjectHelper.requireNonNull(resourceDisposer,', 1), ('findPattern("CompletableSource<.*>\\\\s+ms");\n', 1), ('DoFinallySubscriber<T>(s,', 1), ('state.subscribe(s);\n', 1), ('handles\n', 1), ('HasPrivilegesRequest}\n', 1), ('(painlessObjectStruct', 1), ('java.util.concurrent.atomic.AtomicLong;\nimport', 1), ('Boolean.parseBoolean(properties.getProperty(PURGE_ENABLED_KEY));\n', 1), ('statusMember.accept(messageData);\n', 1), ('ticket.getNumbers());\n', 1), ('onComplete(Observer<?>', 1), ('12/11/15', 1), ('"Wizard";\n', 1), ('(paramType.isAssignableFrom(Function.class))', 1), ('"OK"', 1), ('arrayFirstCancels()', 1), ('FileLoggerModule\n', 1), ('counts\n', 1), ('Objects.requireNonNull(factoryWithoutDefaultObserver);\n', 1), ('Duplicated', 1), ('assertTrue(cakeInfo.calculateTotalCalories()', 1), ('ss.subscribe(observer);\n', 1), ('home\n', 1), ('*/\n@DynamoDBTable(tableName', 1), ('ElementType.METHOD})\npublic', 1), ('com.iluwatar.delegation.simple;\n\nimport', 1), ('ObservableDebounceTimed(ObservableSource<T>', 1), ('add(AsyncSubscription<T>', 1), ('(outerDone', 1), ('//Executor', 1), ('expectedValue', 1), ('163080509307634843L;\n\n', 1), ('requireNonNull(T', 1), ('AutoDetectParser', 1), ('IntervalObserver\n', 1), ('".java");\n\n', 1), ('"Lynda",', 1), ('add(T', 1), ('produced(AtomicLong', 1), ('validates', 1), ("'['", 1), ('CustomSingleObserver&lt;T&gt;', 1), ('URI(address);\n', 1), ('blobPath,', 1), ('MissingBackpressureException()', 1), ('LOGGER.info(msg);\n', 1), ('Validator#t}\n', 1), ('<logDirectory>");\n', 1), ('ConsoleLoggerModule\n', 1), ('testBuildWeakWizard()', 1), ('"try', 1), ('field.getAndSet(TERMINATED);\n', 1), ('client.admin().indices().getIndex(indexRequest,\n', 1), ('pointing\n', 1), ('propsMap;\n', 1), ('org.joda.time.ReadableInstant}</li>\n', 1), ('"1.7.0",', 1), ('JOptionPane.showMessageDialog(null,', 1), ('backpressureSpecEnd', 1), ('SQLException;\n}\n', 1), ('e.getMetadata("es.painless_class"));\n\n', 1), ('Flowable.<T>fromPublisher(items)\n', 1), ('SingleAmb(SingleSource<?', 1), ('to*}</li>\n', 1), ('perf\n', 1), ('longs.getValue());\n\n', 1), ('"FlowableToListSingle",\n', 1), ('onCancel.run();\n', 1), ('concurrentSetDisposableShouldNotInterleave()\n', 1), ('RxCustomThread(r,', 1), ('address.hashCode()', 1), ('clients");\n', 1), ('(bufferedReader', 1), ('tokenString.split("', 1), ('String(buf,', 1), ('onXXX}\n', 1), ('Assisted}\n', 1), ('FlowableThrottleLatest(Flowable<T>', 1), ('inUse', 1), ('LOGGER.info(Validator.of(user).validate(User::getName,', 1), ('decrease', 1), ('variable.', 1), ('query:', 1), ('commanderResponse', 1), ('MaybeIsEmptySingle<T>(this));\n', 1), ('q.poll());\n\n', 1), ('CompletableAmbTest', 1), ('CheckedBiFunction<InputStream,', 1), ('java.nio.file.attribute.PosixFilePermission.GROUP_EXECUTE;\nimport', 1), ('autodetector', 1), ('fieldJsonMapper;\n\n', 1), ('b.subscribe(new', 1), ('AllObserver(SingleObserver<?', 1), ('dependentPromiseIsFulfilledAfterTheFunctionTransformsTheResultOfThisPromise()', 1), ('FlattenJustPerf', 1), ('IntervalSubscriber(s);\n', 1), ('encrypted', 1), ('UserRoleMapper', 1), ('parameterName', 1), ('testDoOnEachWithError()', 1), ('TestHelper.assertBadRequestReported(Flowable.generate(new', 1), ('stop();\n\n', 1), ('(!b.isEmpty())', 1), ('this.trustStorePath', 1), ('Retry<T>', 1), ('System.out.println(filename', 1), ('Integers', 1), ('ElementAtObserver(MaybeObserver<?', 1), ('flowMaybe.subscribe(new', 1), ('setReceiver(SocketAddress', 1), ('guests', 1), ('thread-vise.\n', 1), ('price);\n', 1), ('assertFalse(first.isPresent());\n', 1), ('environment.configFile().resolve("discovery-file").resolve(UNICAST_HOSTS_FILE);\n', 1), ('querying', 1), ('"]").asList();\n', 1), ('cf.', 1), ('assertTrue(tc.errors.contains(error));\n', 1), ('firstFgnoredCancelAndOnNext()', 1), ('memoryLimitInMb="', 1), ('innerError(InnerQueuedObserver<T>', 1), ('"persons")\npublic', 1), ('OBSERVER_ONERROR_NOTIMPLEMENTED()', 1), ('Functions.justCallable((Maybe<Integer>)null))\n', 1), ('second",', 1), ('super(cancellable);\n', 1), ('java.time.Month;\n\nimport', 1), ('assertTrue(id.isPresent());\n', 1), ('ConcatMapImmediate(Subscriber<?', 1), ('this.op.perform();\n', 1), ('FlatMapMaybeObserver(AtomicReference<Disposable>', 1), ('MongoClient();\n', 1), ('createAndCacheHeavy();\n\n', 1), ('TakeObserver(Observer<?', 1), ('java.lang.reflect.InvocationTargetException;\nimport', 1), ('POI/PDFbox', 1), ('s,\n', 1), ('Optional.empty().\n', 1), ('MediaType.application("vnd.ms-visio.drawing.macroenabled.12"),\n', 1), ('MaybeAmb<T>(sources,', 1), ('defClassToObjectClass(Class<?>', 1), ('"/**",\n', 1), ('inSingle', 1), ('HelperHolder', 1), ('method.owner.clazz;\n', 1), ('templates,', 1), ('javaClassParameters);\n', 1), ('"Debug.explain(params.a)",', 1), ('Flowable.<Void>never().blockingMostRecent(null).iterator().next());\n', 1), ('(schhedulerSpec', 1), ('Observer[]', 1), ('org.junit.jupiter.api.Assumptions.assumeTrue;\n\n/**\n', 1), ('properties;\n\n', 1), ('SkipTckTest', 1), ('(note', 1), ('}).blockingForEach(System.out::println);\n', 1), ('testStackOverflowErrorIsThrown()', 1), ('(!key.isValid())', 1), ('testOnCompletedThrows2()', 1), ('withFutureDisposed()', 1), ('2.1.6', 1), ('CompletableAndThenObservable<R>', 1), ('interruptWait()', 1), ('types.get(i));\n', 1), ('((Long)ts', 1), ('SimpleMessageTest', 1), ('(!delayError)', 1), ('Flowable.combineLatestDelayError(Arrays.asList(\n', 1), ('(!once)', 1), ('play', 1), ('SampleData.submitTickets(service,', 1), ('Maybe<T>,', 1), ('UnicastProcessor.<T>create(bufferSize);\n\n', 1), ('Kihione"));\n', 1), ('m.invoke("INSTANCE");\n', 1), ('io.reactivex.Emitter;\nimport', 1), ('disposable.\n', 1), ('RxJavaPlugins.setOnConnectableFlowableAssembly(new', 1), ('org.joda.time.Instant.class.getName(),\n', 1), ('delegate)', 1), ('cakeLayerInfos);\n', 1), ('org.elasticsearch.example.role.CustomInMemoryRolesProvider.ROLE_B;\n\n/**\n', 1), ('supplier);\n}\n', 1), ('latchedObserver', 1), ('SingleAmbTest', 1), ('assertFalse(subscribed.get());\n', 1), ('state.onComplete();\n', 1), ('input;\n\n', 1), ('createVirtualDb()', 1), ('body(T', 1), ('Single.never());\n', 1), ('completeMatch,', 1), ('resourceSupplier;\n\n', 1), ('System.err.println("the', 1), ('countLines()', 1), ('(one', 1), ('subscribers.getAndSet(CANCELLED);\n', 1), ('comparer.test(a,', 1), ('subscribers);\n\n', 1), ('TimerObserver(to);\n\n', 1), ('org.elasticsearch.xpack.core.watcher.trigger.Trigger;\nimport', 1), ('onParallelAssembly()', 1), ('parallelFlowable)', 1), ('dataSource.\n', 1), ('group.onNext(v);\n\n', 1), ('getAvailableToppings()', 1), ('BasicFuseableObserver(Observer<?', 1), ('java.text.ParseException;\nimport', 1), ('3.\n', 1), ('formatter.parse(now);\n', 1), ('verifyZeroInteractions(callback);\n\n', 1), ('objects";\n', 1), ('AtomicReference<AsyncDisposable<T>[]>', 1), ('TestHelper.checkDisposed(Completable.timer(1,', 1), ('spell7', 1), ('expectedConfuseMethod,', 1), ('"Gopi",', 1), ('is.requestMore(produced);\n', 1), ('findAllSpellbooks();\n\n', 1), ('isLoaded();\n\n', 1), ('FunctionsTest', 1), ('org.elasticsearch.test.SecuritySettingsSource;\nimport', 1), ('this.elasticsearchVersion', 1), ('results.sort(Comparator.comparing(EsIndex::name));\n', 1), ('Retry}.\n', 1), ('heavy);\n\n', 1), ('onChannelAcceptable(SelectionKey', 1), ('setupSSL(ConnectionConfiguration', 1), ('addressLineOne)', 1), ('winner.get()', 1), ('LOGGER.info("Choose', 1), ('enumIvoryTower2', 1), ('Communicate\n', 1), ('PainlessExplainError(Object', 1), ('lambdaInfo;\n', 1), ('spValue(E', 1), ('SerializedEmitter(ObservableEmitter<T>', 1), ('otherDamaged', 1), ('org.apache.tika.parser.epub.EpubParser(),\n', 1), ('idempotent.\n', 1), ('struct.setters.put(member.getKey(),', 1), ('d.getMajorVersion());\n', 1), ('getType(structsMap.get(ClassToName(component)),', 1), ('basicDataSource.setDriverClassName("org.h2.Driver");\n', 1), ('embedding', 1), ('"+9872341324"));\n', 1), ('Single.just(Integer.valueOf(s));', 1), ('execute(WatchExecutionContext', 1), ('Completable.concat(Arrays.asList(new', 1), ('(n.startsWith("."))', 1), ('href="https://github.com/ReactiveX/RxJava/issues/748#issuecomment-32471495">RxJava:', 1), ('nullAuthor', 1), ('.stream()\n', 1), ('accept(TestObserver<Void>', 1), ('User("Alan', 1), ('con.getResponseCode();\n', 1), ('org.elasticsearch.cli.UserException;\nimport', 1), ('Files.isRegularFile(normalizedPath))', 1), ('data.</p>\n', 1), ('CsvPreference', 1), ('rangeObservableFlatMap(Blackhole', 1), ('"ObservableFromPublisher",', 1), ('AuthenticationFailureHandler', 1), ('sameName', 1), ('testGetLeft()', 1), ('subscriber.onError(e);\n', 1), ('container.persistIfNotAlready(obj);\n', 1), ('resides', 1), ('pp0.onNext(pp2);\n', 1), ('BlockingBaseSubscriber()', 1), ('accounts............");\n\n', 1), ('con.setRequestProperty("Content-Type",', 1), ('BlockingFlowableMostRecent<T>', 1), ('computeFunctionalInterfaceMethod(Struct', 1), ('testOnCompletedExceptionIsThrown()', 1), ('SerializedSubscriber<T>(s));\n', 1), ('System', 1), ('(!super.equals(o))', 1), ('availableLayers', 1), ('maxAttempts', 1), ('(Java)', 1), ('Whitelist(loader,', 1), ('this.panel.add(this.cancel);\n', 1), ('Objects.requireNonNull(name);\n', 1), ('subscriber.onError(error.terminate());\n', 1), ('flowableInner.blockingLast();\n', 1), ('assertTrue(last.isPresent());\n', 1), ('assertTrue(c.isDisposed());\n\n', 1), ('!m.signature.contains("Maybe")\n', 1), ('testForEach()', 1), ('io.reactivex.internal.operators.observable.BlockingObservableIterable.BlockingObservableIterator;\n\npublic', 1), ('list.add(newIterator.next());\n', 1), ('innerError(SwitchMapInnerObserver<T,', 1), ('Schedulers.trampoline()));\n', 1), ('partProperties.put(HasPrice.PROPERTY,', 1), ('BlockingIgnoringReceiver', 1), ('json.append(getString(video,', 1), ('object-oriented', 1), ('BCryptTests', 1), ('getTotalSpace()', 1), ('.subscribe().dispose();\n\n', 1), ('byte.class)', 1), ('org.jmock.Expectations;\nimport', 1), ('(!isValid(value))', 1), ('mpscLinkedQueueBiOffer()', 1), ('FlowableTakeUntilPredicate<T>', 1), ('(includeDuplicates)', 1), ('Completable.error(ex).blockingGet(1,', 1), ('context.get(IUnitOfWork.MODIFY).size());\n', 1), ('Global', 1), ('Arrays.asList("strict_date_optional_time",', 1), ('results)', 1), ('TestException("hasNext()");\n', 1), ('set(DISPOSED);\n', 1), ('@Ignore("The', 1), ('FlowableSwitchMapCompletable<T>', 1), ('(!numbers.equals(other.numbers))', 1), ('Objects.requireNonNull(certChainPath,', 1), ('current.get();\n\n', 1), ('.assertResult("1234");\n', 1), ('governed', 1), ('"FlowableSequenceEqualSingle",\n', 1), ('uniformly.\n', 1), ('dateList\n', 1), ('Maybe.zip(Maybe.error(new', 1), ('registerModified(Student', 1), ('AccountAggregate.getAccount(accountNoTo);\n', 1), ('ScriptException', 1), ('target));\n', 1), ('URLRepositoryPlugin', 1), ('discoNodes;\n', 1), ('re-fetches', 1), ('parsers)', 1), ('Otherwise', 1), ('FlatMapMaybeObserver<R>(this,', 1), ('visitor,', 1), ('files.offer(base.listFiles());\n\n', 1), ('RxJavaPlugins.onComputationScheduler(s));\n\n', 1), ('wip.decrementAndGet();\n', 1), ('PerfObserver', 1), ('CakeLayerInfo("layer3",', 1), ('account.handleEvent(this);\n', 1), ('*/\n@Target({METHOD,', 1), ('loop(10,', 1), ('never-signalling', 1), ('DeflaterOutputStream(bytesOut,', 1), ('contentActions.stream().map(ContentAction::getContent).filter(Content.PRODUCTS::equals).count());\n', 1), ('removing', 1), ('compose(MaybeTransformer<?', 1), ('BlockingLastSubscriber<T>', 1), ('io.reactivex.Single}-,', 1), ('Optional<InputStream>', 1), ('Meteoroid(10,', 1), ('service.submitTicket(LotteryTestUtils.createLotteryTicket("arg@boo.com",\n', 1), ("Letter('c'),", 1), ('student,', 1), ('failSingleObservableBlockingFirst()', 1), ('FutureSubscriber<Integer>();\n', 1), ('id);\n', 1), ('requested();\n', 1), ('MaybeFlatMapSingle(MaybeSource<T>', 1), ('lotteryTicket);\n', 1), ('stateless\n', 1), ('this.spellbooks', 1), ('relayed', 1), ('coming', 1), ('list.listIterator(7);\n', 1), ('Order(jtFields[0].getText(),', 1), ('.findFirst().orElse(null);\n', 1), ('org.elasticsearch.common.collect.ImmutableOpenMap;\nimport', 1), ('ByteBuffer[].class\n', 1), ('TestHelper.checkEnum(FlowableInternalHelper.RequestMax.class);\n', 1), ('~QueueFuseable.BOUNDARY);\n', 1), ('Collections.singletonList(painlessObjectStruct.name));\n', 1), ('"12324");\n', 1), ('getIndex()', 1), ('java.nio.file.StandardOpenOption.CREATE;\nimport', 1), ('Functions.HashSetCallable.class.getMethod("values");\n', 1), ('FlowableFlatMapSingle<T,', 1), ('16;\n\n', 1), ('upper)', 1), (':})', 1), ('request(5);\n', 1), ('baked', 1), ('urlEncode(relayState);\n', 1), ('Collision\n', 1), ('Output', 1), ('executorService.awaitTermination(4,', 1), ('FlatMapMaybeObserver(Observer<?', 1), ('.headers(headers())\n', 1), ('io.reactivex.observables;\n', 1), ('Student(2,', 1), ('@length:");\n', 1), ('especific', 1), ('org.elasticsearch.xpack.sql.jdbc.net.client;\n\nimport', 1), ('this.actual.get();\n', 1), ('Examples:\n', 1), ('(Scanner', 1), ('100).scan(0,', 1), ('whitelistFields;\n\n', 1), ('FindCustomer("123");\n', 1), ('Publisher"));\n', 1), ('result.getDateList().add(this.df.parse(this.dateValue));', 1), ('testBuildPoorWarrior()', 1), ('nodeSettings(int', 1), ('hashCode(Object', 1), ('to.assertFailure(NullPointerException.class);\n\n', 1), ('org.elasticsearch.core.internal.io.Streams;\nimport', 1), ('overrideSingleScheduler()', 1), ('presenter;\n\n', 1), ('Functions.justFunction(cs),', 1), ('assertFalse(d2.isDisposed());\n\n', 1), ('sneaky', 1), ('fusionMode()', 1), ('cycle\n', 1), ('ignore)\n', 1), ('rsa.sign();\n', 1), ('testIterator(Item', 1), ('serverPort)', 1), ('com.iluwatar.reactor.framework.ThreadPoolDispatcher;\nimport', 1), ('org.elasticsearch.action;\n\nimport', 1), ('anchor.click();\n', 1), ('com.iluwatar.flux.store.Store;\n\n/**\n', 1), ('found;\n', 1), ('(s)', 1), ('#done(Object)}.</p>\n', 1), ('requestType', 1), ('BufferedInputStream(Files.newInputStream(resolvedPath),', 1), ('org.elasticsearch.xpack.security.authc.support;\n\nimport', 1), ('pool)', 1), ('fileExists()', 1), ('this.getStudents().indexOf(studentToBeUpdated);\n\n', 1), ('scenario(travis,', 1), ('transformedList', 1), ('BlockingFlowableIterator(int', 1), ('assertEquals(existingCustomer,', 1), ('ParallelFilterTryTest', 1), ('children.count());\n', 1), ('(missing', 1), ('child.methods.entrySet())', 1), ('Iterator<Entry>', 1), ('EventManager()', 1), ('tracker', 1), ('readers.', 1), ('simpleTypesMap;\n\n', 1), ('assertEquals(memberClass.getSimpleName(),', 1), ('NazgulEnum.ADUNAPHEL);\n', 1), ('/RxJava\n', 1), ('this.resolveTimeout', 1), ('org.elasticsearch.xpack.core.watcher.execution.WatchExecutionContext;\nimport', 1), ('"bookname";\n', 1), ('curr))', 1), ('bounds.\n', 1), ('DelaySubscriptionTckTest', 1), ('to.assertTerminated();\n\n', 1), ('explicit', 1), ('Flowable.empty().delay(100,', 1), ('BasicFuseableObserver', 1), ('HOLY_WATER:\n', 1), ('exchange.getRequestURI().toString();\n', 1), ('Enumeration<URL>', 1), ('this.value;\n\n', 1), ('Runnable}.', 1), ('fromCompletable}', 1), ('org.springframework.test.context.support.AnnotationConfigContextLoader;\nimport', 1), ('assertEquals("prefetch', 1), ('io.reactivex.internal.operators.mixed.FlowableConcatMapMaybe.ConcatMapMaybeSubscriber;\nimport', 1), ('poison")});\n', 1), ('s.compareAndSet(a,', 1), ('mapFailWithSkipConditional()', 1), ('Runnable>', 1), ('Spam', 1), ('java.nio.file.attribute.FileStoreAttributeView;\nimport', 1), ('constructor)', 1), ('setFile(String', 1), ('writer.flush();\n\n', 1), ('Assert.assertTrue("Some', 1), ('org.elasticsearch.xpack.watcher.notification.email;\n\nimport', 1), ('sa.produced(1);\n\n', 1), ('verifyNoMoreInteractions(exceptionHandler);\n', 1), ('ParseException', 1), ('LoggerFactory.getLogger(Wizard.class);\n\n', 1), ('MaybeFromRunnable<T>', 1), ('25', 1), ('11;', 1), ('11:46', 1), ('LOGGER.info("With', 1), ('sarah);\n', 1), ('rco.start);\n\n', 1), ('PLAYERS;\n\n', 1), ('io.reactivex.internal.subscribers.FutureSubscriber;\nimport', 1), ('Observable.concat(\n', 1), ('this.onCallback', 1), ('purposes,', 1), ('writeRecord(String[]', 1), ('noPermissionsAcc', 1), ('discussed', 1), ('org.elasticsearch.xpack.sql.type.Schema.Entry;\nimport', 1), ('level1A', 1), ('sit;\n\n', 1), ('expectedExecutionTime', 1), ('SUCCESS_STATUS_CODE', 1), ('FlowableTakeLastTimed<T>', 1), ('initialDisposable', 1), ('basepath,', 1), ('loader\n', 1), ('scope', 1), ('gd', 1), ('ObservableFlatMapSingleTest', 1), ('fruit.size();\n', 1), ('Exclude', 1), ('aste.getMessage().contains("createCompletable"));\n//\n//', 1), ('file............");\n\n', 1), ('Api', 1), ('whitelistStruct)', 1), ('toSingle(Flowable.<T>fromFuture(future));\n', 1), ('fields[4];\n', 1), ('this.boxTo', 1), ('io.reactivex.functions.BiPredicate;\n\n/**\n', 1), ('LOGGER.info("--Running', 1), ('org.elasticsearch.license.licensor;\n\nimport', 1), ('flowSingle;\n\n', 1), ('UnicastHostsProvider,', 1), ('b.substring(schedulerDoc,', 1), ('Pune");\n', 1), ('that.caPaths', 1), ('Flowable.just(1).switchMap(Functions.justFunction(\n', 1), ('io.reactivex.disposables;\n\n/**\n', 1), ('Flowable<Upstream>', 1), ('Nazgul.getInstance(NazgulName.AKHORAHIL));\n', 1), ('com.iluwatar.serverless.baas.api.FindPersonApiHandler;\nimport', 1), ('subscriptionIndicator)', 1), ('INFE', 1), ('integerList', 1), ('demos', 1), ('Aras");\n', 1), ('object(the', 1), ('Disposables.fromFuture(ft,', 1), ('org.elasticsearch.xpack.security.authc.support.DnRoleMapper;\nimport', 1), ("sb.append(line).append('\\n');\n", 1), ('org.elasticsearch.xpack.sql.jdbc.jdbcx;\n\nimport', 1), ('got,', 1), ('getBody();\n}\n', 1), ('.withAbility("wisdom")\n', 1), ('getType("Boolean");\n', 1), ('UnsupportedOperationException("JavaPolicy', 1), ('value.get());\n', 1), ('Security.ensureDirectoryExists(path);\n', 1), ('ObservableSwitchMapSingle(Observable<T>', 1), ('java.util.zip.Deflater;\nimport', 1), ('ObservableConcatMapMaybeTest', 1), ('(QueueDisposable<T>)s;\n', 1), ('bus.subscribe(bar);\n', 1), ('ObservableSkipLast(ObservableSource<T>', 1), ('normalAsync()', 1), ('com.iluwatar.builder.Hero.Builder;\nimport', 1), ('secretInput.get(secretIndex++).toCharArray();\n', 1), ('bucket.setAnomalyScore(0.0);\n', 1), ('9:40', 1), ('paramList)', 1), ('severe', 1), ('criteria.\n', 1), ('"{"', 1), ('<repository', 1), ('book1', 1), ('byId', 1), ('readNext()', 1), ('s.schedulePeriodically(r,', 1), ('"singleFunction', 1), ('document.get(KEY));\n', 1), ('pieces', 1), ('sergeantResponse,', 1), ('hashLen', 1), ('((Callable<Void>)m).call());\n\n', 1), ('assertNull(AuditUtil.indices(new', 1), ('com.iluwatar.reactor.framework.NioReactor;\nimport', 1), ('responsibility.\n', 1), ('strategy)', 1), ('ObservableConcatMap<T,', 1), ('work.', 1), ('this.repositoryDir', 1), ('read/write)\n', 1), ('startup.\n', 1), ('to1.assertNoValues();\n\n', 1), ('ObjectPool<T>', 1), ('synchronized.\n', 1), ('ObjectHelper.requireNonNull(s,', 1), ('com.iluwatar.dependency.injection.utils;\n\nimport', 1), ('setup(Blackhole', 1), ('String.valueOf(value);\n', 1), ('lifetime,', 1), ('requestDescription)', 1), ('now(TimeUnit', 1), ('java.net.URL;\n\nimport', 1), ('management\n', 1), ('.count();\n\n', 1), ('addObserver(O', 1), ('this.initAmazonDynamoDb();\n', 1), ('Callable<Void>', 1), ('filterFailWithErrorConditional()', 1), ('signing;\n\n', 1), ('assertNull(RxJavaPlugins.onSubscribe(Completable.never(),', 1), ('IngestPlugin,', 1), ('U>)p))', 1), ('QueueFuseable.NONE;\n', 1), ('assertFalse(doc.cancel(true));\n\n', 1), ('cursor.value)', 1), ('SingleSource<U>>', 1), ('V>newConcurrentMapWithAggressiveConcurrency());\n', 1), ('10.000', 1), ('18', 1), ('testParse()', 1), ('executorService);\n', 1), ('Enter', 1), ('inOrder(ballThread);\n\n', 1), ('assertEquals("IdentityFunction",', 1), ('disable', 1), ('AtomicReference<SlotPair<T>>();\n\n', 1), ('[java.version]', 1), ('com.iluwatar.model.view.controller;\n\nimport', 1), ('"Change', 1), ('deferred.subscribe(secondObserver);\n\n', 1), ('ap(n);\n', 1), ('retain', 1), ('EventManager\n', 1), ('subject.subscribe(observer2);\n', 1), ('additional,', 1), ('assertThat(3,', 1), ('rightExpression);\n', 1), ('queue.remove(timedRunnable);\n', 1), ('testFileMessage()', 1), ('assertNotNull(topShelf);\n', 1), ('DoOnNextTckTest', 1), ('structsMap.put(def.class.getSimpleName(),\n', 1), ('considerable', 1), ('"album-list.html";\n', 1), ('doOnDisposeDispose()', 1), ('RxJavaPlugins.initNewThreadScheduler(c));\n\n', 1), ('Publisher<T>...', 1), ('currentWeather);\n', 1), ('converter.', 1), ("'/')", 1), ('sub(Example,', 1), ('Fruit.', 1), ('(checkNext)', 1), ('cfg,', 1), ('FileWriter(file))', 1), ('collector.accept(messageData);\n', 1), ('commitInsert();\n', 1), ('ElasticsearchException("Cannot', 1), ('change.', 1), ('lifted', 1), ('"b")));\n', 1), ('(terminal', 1), ('OWNER_WRITE);\n', 1), ('DelayTckTest', 1), ('rand', 1), ('Java8HolderTest', 1), ('s.onSubscribe(Disposables.disposed());\n', 1), ('transactional', 1), ('org.apache.log4j.PropertyConfigurator.configure("logging.properties");\n', 1), ('(!JavaVersion.isValid(targetVersion))', 1), ('javadoc2.substring(mm', 1), ('MaybeFlatMapIterableObservable<T,', 1), ('findByName(@ParameterLayout(named', 1), ('org.elasticsearch.cluster.metadata.IndexMetaData;\nimport', 1), ('supportsPosixPermissions);\n\n', 1), ('MaybeDelay(MaybeSource<T>', 1), ('owns', 1), ('updated");\n', 1), ('OBSERVER_SUCCESS(final', 1), ('ports.', 1), ('1000).ignoreElements().<Integer>toFlowable()\n', 1), ('Functions.ON_ERROR_MISSING,\n', 1), ('innerErrorDelayError2()', 1), ('middle-layer', 1), ('stores.stream().forEach(store', 1), ('Mumbai");\n\n', 1), ('FuseToMaybe)', 1), ('MulticastProcessorTckTest', 1), ('lpConsumerNode();', 1), ('access.\n', 1), ('trackPluginErrors()', 1), ('checkDoubleOnSubscribeSingleToObservable(Function<Single<T>,', 1), ('RoleDescriptor(role,', 1), ('com.unboundid.ldap.sdk.SearchResultEntry;\nimport', 1), ('org.elasticsearch.plugins.IngestPlugin;\nimport', 1), ('NioReactor(Dispatcher', 1), ('externally:\n', 1), ('}.mergeWith(Maybe.<Integer>empty())\n', 1), ('this.wizardDao', 1), ('futureMaybe.doOnCancel(()', 1), ('"12231-213132",', 1), ('"-XX:+UseG1GC"));\n', 1), ('assertNull(result[0]);\n', 1), ('createPotion(PotionType', 1), ('containt', 1), ('.filter(Functions.alwaysTrue()));\n', 1), ('javax.sound.sampled.LineUnavailableException;\nimport', 1), ('Class<?>[method.arguments.size()];\n', 1), ('struct.getters.put(member.getKey(),', 1), ('(def.class.getSimpleName()).equals(painlessStruct.name))', 1), ('super("number",', 1), ('ObservableCountSingle(ObservableSource<T>', 1), ('Tenant("FailTenant",', 1), ('ClassStep\n', 1), ('submitTicket(LotteryTicket', 1), ('frc);\n\n', 1), ('"Bang",', 1), ('timed.dispose();\n', 1), ('findPattern("CompletableSource<.*>\\\\s+ss");\n', 1), ('Overflow:\n', 1), ('1000).toSortedList().toFlowable()\n', 1), ('Target}.\n', 1), ('assertEquals("Plugin', 1), ('ToSingleMaybeSubscriber<T>(observer,', 1), ('defaults\n', 1), ('org.elasticsearch.xpack.sql.ServerSqlException;\n\nimport', 1), ('TreasureChest#getItems()}', 1), ('ArrayDeque<Object>();\n\n', 1), ('Flowable.merge(\n', 1), ('goodCompany.add(badMoodRoyalty);\n\n', 1), ('(O', 1), ('listener.onFailure(ex);\n', 1), ('FlowableFuseableTest', 1), ('LazyFluentIterable(Iterable<E>', 1), ('assertTrue(disposed.isDisposed());\n', 1), ('p.setProperty(ConnectionConfiguration.AUTH_USER,', 1), ('target.subscribe(o);\n\n', 1), ('parserError()', 1), ('AtomicReference<Disposable>(initialDisposable);\n', 1), ('topping=id=2345', 1), ('timeout(2000).atLeastOnce()).move();\n', 1), ('end::simple_example\n', 1), ('level3A', 1), ('org.elasticsearch.xpack.core.watcher.condition;\n\nimport', 1), ('ReduceSubscriber<T>(s,', 1), ('"command', 1), ('observer1;\n\n', 1), ('.flatMapObservable(new', 1), ('command.run();\n', 1), ('java.util.concurrent.*;\n\n/**\n', 1), ('stoppingData', 1), ('loaded");\n', 1), ('height="389"', 1), ('eEvans);\n', 1), ('deal\nin', 1), ('8082,', 1), ('Struct(Struct', 1), ('RuntimeException(e.getKey()', 1), ('maybeSupplier;\n', 1), ('serial;\n\n', 1), ('annotations[i]);\n', 1), ('EMPTY_LIST;\n', 1), ('BlockingSubscriber.TERMINATED\n', 1), ('EmptyComponent.INSTANCE;\n\n', 1), ('"FlowableConcatWithSingle",\n', 1), ('valueSupplier)', 1), ('Defers', 1), ('cuts', 1), ('Hero.Builder(Profession.WARRIOR,', 1), ('t.onSuccess(10);\n', 1), ('sake,', 1), ('Byte.parseByte(parts[1]),', 1), ('Long.compare.\n', 1), ('testWithFollowingFirstObservable()', 1), ('http://blog.joda.org/2014/03/valjos-value-java-objects.html', 1), ('SubscriptionHelper.deferredRequest(actual,', 1), ('spellDao;\n\n', 1), ('//now', 1), ('-1944085461036028108L;\n\n', 1), ('RandomNumberGenerator(MIN_NUMBER,', 1), ('findAttribute(attributes,', 1), ('shutdown.\n', 1), ('"new_title2");\n\n', 1), ('cancelDelayError()', 1), ('reactor.stop();\n', 1), ('http://docs.oracle.com/javase/7/docs/technotes/guides/language/try-with-resources.html\n', 1), ('port.\n', 1), ('childrenStream.count());\n', 1), ('Wipes', 1), ('Java8Holder();\n\n\n', 1), ('}).blockingSingle();\n', 1), ('getAllSubmittedTickets();\n', 1), ('initialRequest;\n', 1), ('kdx)', 1), ('Flowable.range(1,num).doOnNext(new', 1), ('collection-like\n', 1), ('deflaterStream.finish();\n', 1), ('blockingFirstNormal()', 1), ('stop\n', 1), ('Flowable.combineLatestDelayError(\n', 1), ('Files.newDirectoryStream(path,', 1), ('‘jump’\n', 1), ('System.err.println("Error', 1), ('worker3', 1), ('studentDatabase.insert(student);\n', 1), ('ObservableCollect(ObservableSource<T>', 1), ('testPluginExceptionWhileOnErrorThrows()', 1), ('TestHelper.checkDisposed(Flowable.just(1).toObservable());\n', 1), ('[\\"c\\",\\"d\\"]\\n"));\n', 1), ('newLastname));\n', 1), ('this.consumerIndex', 1), ('toFunction6()', 1), ('Spell("Entangle");\n', 1), ('merge4()', 1), ('acknowledgeFlush(...)', 1), ('emitter.timePasses(weekday);\n\n', 1), ('ts.assertValues(10,', 1), ('compatibility', 1), ('us.hide().concatMapCompletable(completableComplete(),', 1), ('TransformAction<V>(this,', 1), ('RxJavaPlugins.setOnSingleSubscribeError(errorHandler);\n//\n//', 1), ('promise.fulfillExceptionally(exception);\n', 1), ('ToFlowableIterable(Iterable<?', 1), ('MethodType.methodType(returnValue,', 1), ('RuntimeException("test")))\n', 1), ('doOnError(final', 1), ('assertSame(instance2,', 1), ('bound)', 1), ('range(Blackhole', 1), ('FlowableElementAtSingle(Flowable<T>', 1), ('CustomerResource(List<CustomerDto>', 1), ('AzureStorageTestServer.Response', 1), ('FlattenIterableObserver(Observer<?', 1), ('(pos++', 1), ('TRUST_MANAGER;\n', 1), ('ObservableTakeUntil<T,', 1), ('requests",', 1), ('fragment', 1), ('ps2.onComplete();\n', 1), ('core', 1), ('BackpressureHelper.produced(r,', 1), ('mapperReturnsNullObservable()', 1), ('2.1.8', 1), ('win.");\n', 1), ('list.lastIndexOf(6));\n\n', 1), ('initiate', 1), ('org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2.Mode;\nimport', 1), ('realmConfig,\n', 1), ('Date', 1), ('UserDto(user.getFirstName(),', 1), ('onError));\n', 1), ('org.elasticsearch.example.role.CustomInMemoryRolesProvider.ROLE_A;\nimport', 1), ('Dispatch', 1), ('data.limit()));\n', 1), ('java.util.Set.class.getName(),\n', 1), ('blkQueue;\n', 1), ('(simple', 1), ('spell.getSpellbook();\n', 1), ('byte[hashLen];\n', 1), ('FishingBoatAdapter}\n', 1), ('checkIn(T', 1), ('Process', 1), ('spells.add(spell);\n', 1), ('generation\n', 1), ('q.accept(actual);\n', 1), ('inUse.add(instance);\n', 1), ('java.lang.Math}</li>\n', 1), ('ObservableElementAtSingle(ObservableSource<T>', 1), ('this.dao;\n', 1), ('Observable<HorrorMovie>', 1), ('arrives.', 1), ('ENABLED\n', 1), ('Iterator<Entry<Character,', 1), ('entity.setName(expectedName);\n', 1), ('VolatileSizeArrayList<Integer>();\n', 1), ('fail.append("The', 1), ('menuActions.stream().map(MenuAction::getMenuItem).filter(MenuItem.HOME::equals).count());\n', 1), ('whitelistStruct);\n\n', 1), ('((ByteBuffer)readObject).array();\n', 1), ('createTempDir();\n', 1), ('Flowable.just(0L)\n', 1), ('tillTheEnd;\n', 1), ('scripting:', 1), ('Method}s)', 1), ('Toggle\n', 1), ('setSpellbooks(Set<Spellbook>', 1), ('testCurrentTimeDriftForwards()', 1), ('Character(name);\n\n', 1), ('Strings:', 1), ('fromRunnable(final', 1), ('Spell("Stun', 1), ('Single.merge(Single.just(Single.just(1)))\n', 1), ('Reflection', 1), ('pretend', 1), ('GeneralName(GeneralName.dNSName,', 1), ('findPersonApiHandler.handleRequest(apiGatewayProxyRequestEvent(),', 1), ('LicenseVerifier.class.getResourceAsStream("/public.key"))', 1), ('ParameterListKey(Type[]', 1), ('tempFileView.setOwner(attributes.owner());\n', 1), ('tokenList)', 1), ('(!has)', 1), ('set(true);\n', 1), ('IllegalArgumentException("Owner', 1), ('DB.\n', 1), ('keystorePath.toAbsolutePath());\n', 1), ('CountObserver(SingleObserver<?', 1), ('fishV2.getSleeping());\n', 1), ('"java.time.chrono.txt",\n', 1), ('super.offer(e);\n', 1), ('LOGGER.info("threadSafeIvoryTower2={}",', 1), ('assertFalse(visitor.found());\n\n', 1), ('onCompleteSupplier', 1), ('API,', 1), ('sb.append("----\\n");\n', 1), ('io.reactivex.internal.operators.completable.CompletableMergeDelayErrorArray.MergeInnerCompletableObserver;\nimport', 1), ('flag.set(true);\n', 1), ('saifasif\n', 1), ('RxJavaPlugins.onError(e1);\n', 1), ('cache}.\n', 1), ('8084,', 1), ('Single.wrap(new', 1), ('replaceResource(Disposable', 1), ('out;\n', 1), ('obsSingle', 1), ('ofPattern(String', 1), ('(states.size()', 1), ('dao.add(existingCustomer);\n', 1), ('"+498723"));\n', 1), ('600),', 1), ('Files.newInputStream(getPath(elasticsearchProperties)))', 1), ('TestHelper.checkUtilityClass(BlockingHelper.class);\n', 1), ('m.javadoc.indexOf("</dd>",', 1), ('Publisher<?>>()', 1), ('onNextOnErrorCrash()', 1), ('SimplePlainQueue<Object>', 1), ('java.util.Optional;\n\npublic', 1), ('page.getElementById("albumYear");\n', 1), ('(there', 1), ('SwitchMapSingleObserver<Object>', 1), ('noDisposeOnAllSuccess()', 1), ('T>)EQUALS;\n', 1), ('PROP_FILE_NAME', 1), ('PublisherBufferOverlappingSubscriber(Subscriber<?', 1), ('Collections.singletonList(Single.just(1)));\n\n', 1), ('BiPredicate.\n', 1), ('mapFailWithRetryConditional()', 1), ('instances!")', 1), ('ObjectHelper.requireNonNull(onErrorMapper,', 1), ('s.request(lim);\n', 1), ('owner.members.put(field.name,\n', 1), ('interestOps(int', 1), ('value);', 1), ('(cache.isFull()', 1), ('handled.', 1), ('prototype', 1), ('Set)', 1), ('MaybeMergeArray(MaybeSource<?', 1), ('SafeSubscriberTestException("failure', 1), ('enumClass.getMethod("valueOf",', 1), ('cakes.add(cake);\n\n', 1), ('TestHelper.checkDisposed(Flowable.just(Notification.createOnComplete()).dematerialize());\n', 1), ('createPrintAction(final', 1), ('this.topping', 1), ('getAcceptedIssuers()', 1), ('getType("Character");\n', 1), ('isEmpty().\n', 1), ('Node#getTreeSize()}', 1), ('failure"));\n', 1), ('BlockingObservableNext<T>', 1), ('root.relativize(file).toString();\n', 1), ('existence,', 1), ('FlowableGroupBy(Flowable<T>', 1), ('watch\n', 1), ('hasEntry("es.java_class",', 1), ('assertNotNull(composedMessage);\n', 1), ('tryOnErrorSerialized()', 1), ('error).test().assertComplete();\n', 1), ('cousins', 1), ('doThrow(exception).when(task).onPreCall();\n', 1), ('io.reactivex.internal.subscriptions.ScalarSubscription;\n\n/**\n', 1), ('cacheSize', 1), ('org.elasticsearch.xpack.sql.expression.function.FunctionRegistry;\nimport', 1), ('uniqueIdCount', 1), ('Formally,', 1), ('successfully".getBytes();\n\n', 1), ('hashSetCallableEnum()', 1), ('createBuffer()', 1), ('flushId', 1), ('Logger.getLogger(MessageCollectorMember.class.getName());\n\n', 1), ('Payload', 1), ('DoubleType', 1), ('ThreadLocalRandom.current().nextLong(5000))));\n', 1), ('assertTrue(Thread.interrupted());\n', 1), ('w3.schedule(countAction);\n\n', 1), ('*/\n@Retention(RUNTIME)\n@Target({ElementType.FIELD,', 1), ('registerStore(Store', 1), ('asyncFusedMapCrash()', 1), ('Jones\n', 1), ('com.iluwatar.servicelayer.app;\n\nimport', 1), ('rangePipeline(Blackhole', 1), ('to2.assertResult();\n', 1), ('trustStoreAlgorithm;\n\n', 1), ('merge(MaybeSource<?', 1), ('this.op', 1), ('longs.getValues().get(i).longValue());\n', 1), ('CompletableTimer(long', 1), ('org.apache.wicket.request.Response;\nimport', 1), ('i).intValue());\n', 1), ('verifyNoMoreInteractions(observers);\n', 1), ('IgnoreMaybeObserver<T>(observer));\n', 1), ('beyond', 1), ('redundant\n', 1), ('newEventId;\n', 1), ('Observable.unsafeCreate(Observable.just(1));\n', 1), ('anyway.', 1), ('DoOnDisposeObserver(SingleObserver<?', 1), ('ArgumentCaptor.forClass(Action.class);\n', 1), ('source1.subscribe(observer1);\n', 1), ('URLRepository.REPOSITORIES_URL_SETTING,\n', 1), ('t.sendOnCompleted();\n\n', 1), ('javaClassesToPainlessStructs.get(javaSuperClass);\n\n', 1), ('QueueSubscription<?>', 1), ('pair.getValue()).status();\n', 1), ('PartyImpl', 1), ('ObservableTakeLastTimed(ObservableSource<T>', 1), ('result.add(next);\n', 1), ('JavaVersion.current().toString()\n', 1), ('this.hasTimeZone', 1), ('create(SingleOnSubscribe<T>', 1), ('enumValues.length];\n', 1), ('presence', 1), ('(closed)', 1), ('retry(count,', 1), ('(esVersion.before(Version.V_6_3_0)', 1), ('testSortedList()', 1), ('"get', 1), ('accountNoFrom);\n', 1), ('produced(long', 1), ('unbalanced', 1), ('(!unbounded)', 1), ('stub\n\n', 1), ('com.iluwatar.specification.creature.KillerBee;\nimport', 1), ('StringBuilder((int)f.length());\n', 1), ('\\"License\\");', 1), ('signatures', 1), ('"\')");\n', 1), ('ReflectPermission("suppressAccessChecks"));\n', 1), ('assertNotSame(firstOliphaunt,', 1), ('MessageCollectorMember("Foo");\n', 1), ('clip.start();\n', 1), ('SkipLastObserver<T>', 1), ('Arity', 1), ('declaredField)', 1), ('currentlyRunningSyncEvent)', 1), ('MAX_NUMBER);\n', 1), ("clazz.getCanonicalName().replace('$',", 1), ('Book(String', 1), ('repositories.', 1), ('ExecutableInput>', 1), ('error"))\n', 1), ('mapper.delete(student);\n', 1), ('BackpressureSupport', 1), ('means\n', 1), ('observer.update(weather);\n', 1), ('etc.\n', 1), ('allParameters;\n', 1), ('afterTerminateActionNull()', 1), ('checkJarHell(Set<URL>', 1), ('trustConfigs.hashCode();\n', 1), ('400),', 1), ('multiple,', 1), ('days', 1), ('jar)', 1), ('<p>Essential', 1), ('FileReader(new', 1), ('innerComplete(InnerQueuedObserver<R>', 1), ('unicastHosts', 1), ('Init', 1), ('o.onNext(3);\n', 1), ('"XX:+UseG1GC\\nXX:+AggressiveOpts";\n', 1), ('ServerSocketChannel}.\n', 1), ('level2B', 1), ('("hanging")', 1), ('layers)', 1), ('addCancel(AtomicLong', 1), ('Cameron\\",\\"language\\":', 1), ('SpscLinkedArrayQueue<R>(Flowable.bufferSize());\n', 1), ('System.out.print(j);\n', 1), ('increments', 1), ('\\"English\\",}";\n', 1), ('height="182"', 1), ('Iterator<ConcurrentMap.Entry<String,', 1), ('somebody', 1), ('serialDisposable.update(subscription);\n', 1), ('prevented', 1), ('FlowableSingle<T>', 1), ('cleaning', 1), ('UnitVisitor>', 1), ('jtFields;\n', 1), ('org.junit.Assert.assertNotEquals;\n\npublic', 1), ('memoryLimitInMb.equals(that.memoryLimitInMb)', 1), ('SingleDisposable<T>\n', 1), ('ThreadDeath.class)\n', 1), ('indexes', 1), ('DwarvenGoldmineFacade();\n', 1), ('partProperties.put(HasType.PROPERTY,', 1), ('getDynamoDbMapper()', 1), ('RxJavaPlugins.onError(npe);\n', 1), ('BlockingFlowableMostRecentTest', 1), ('java.lang.Integer.class.getName(),\n', 1), ('ObjectUtils', 1), ('configurations', 1), ('"UTF-8");\n', 1), ('wizardDao.merge(wizard3);\n', 1), ('eggs', 1), ('Extension', 1), ('testAggregateAsIntSumAccumulatorThrowsObservable()', 1), ('workers.add(doWorkOnNewTrampoline("A",', 1), ('singleSubscribe0()', 1), ('ObservableFlatMapPerf', 1), ('Schedulers#io()', 1), ('Customer(resultSet.getInt("ID"),', 1), ('LinkedBlockingQueue<>(5);\n', 1), ('DateFormatCallableTestIncorrectDateFormat', 1), ('parallel,', 1), ('this.isBase64Encoded);\n', 1), ('assertTrue(appender.logContains(this.expectedTargetResult));\n', 1), ('this.throwable', 1), ('`#`', 1), ('service;\n', 1), ('excluded', 1), ('addingACustomerFailsWithExceptionAsFeedbackToClient()', 1), ('eventPool.get(eventId).stop();\n', 1), ('Flowable.fromArray(4,', 1), ('ps.onError(ex);\n', 1), ('PlayerDetails("harriet@google.com",', 1), ('java.lang.ref.WeakReference;\nimport', 1), ('SelectionKey#channel()}.\n', 1), ('collector));\n\n', 1), ('templates;\n', 1), ('wrap(values);\n\n', 1), ('//NTLNTL.', 1), ('s.onErrorResumeNext(Single.just(1));\n', 1), ('assertTrue(ticket2.isPresent());\n', 1), ('parses', 1), ('concatArrayEager(SingleSource<?', 1), ('testDoOnEachWithErrorInCallback()', 1), ('TimeUnit.MILLISECONDS).test();\n\n', 1), ('see\n', 1), ('stability', 1), ('overflowReported()', 1), ('height="243"', 1), ('TreasureChestItemIterator(TreasureChest', 1), ('TargetObserver(Observer<?', 1), ('"io.reactivex.internal.operators."', 1), ('WRONG_ADDRESS', 1), ('org.joda.time.ReadableInstant.class.getName()\n', 1), ('getRequestType()', 1), (':Thread.currentThread().getStackTrace())', 1), ('assertEquals(list.hashCode(),', 1), ('declaredField.get(video);\n', 1), ('Expression\n', 1), ('star', 1), ('statefulBiconsumer()', 1), ('"empty",', 1), ('SingleScheduler()).observeOn(Schedulers.single());\n', 1), ('ParallelCollectTest', 1), ('ExampleFixtureIT', 1), ('moreThanMaxWorkers()', 1), ('javaMethodHandleGetter;\n', 1), ('bounded;\n\n', 1), ('provided,', 1), ('to1.assertResult(1);\n', 1), ('(currConsumerNode', 1), ('command");\n', 1), ('Map<Message.Headers,', 1), ('IgnoreObservable<T>(t));\n', 1), ('2008', 1), ('SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).map(transformToString())\n', 1), ('usual,', 1), ('.result();\n\n', 1), ('readLock;\n', 1), ('Nazgul.getInstance(NazgulName.DWAR));\n', 1), ('System\n', 1), ('this.javaFieldName', 1), ('testRangeWithOverflow2()', 1), ('verifyZeroInteractions(underlying);\n', 1), ('mergeNSyncStreamsOf1(final', 1), ('exceptionHandlerIsCalledWhenPromiseIsFulfilledExceptionally()', 1), ('this.spellbookDao', 1), ('NullPointerException);\n//', 1), ('Constants.WINDOWS', 1), ('flexible', 1), ('-7954444275102466525L;\n\n', 1), ('assertFalse("Subscribers?",', 1), ('"+49332322");\n', 1), ('createCustomer(ResultSet', 1), ('Thread.sleep(750);\n', 1), ('"="', 1), ('IndexTemplateMetaData>>', 1), ('generic.', 1), ('(!result)', 1), ('VolatileSizeArrayListTest', 1), ('onComplete));\n', 1), ('"world.txt";\n', 1), ('BufferExactBoundaryObserver(Observer<?', 1), ('CharacterSteps', 1), ('ElfMage("cleaning"),', 1), ('TestHelper.checkDisposed(Maybe.timer(1,', 1), ('CompletableCache(CompletableSource', 1), ('consumerIndex.lazySet(newIndex);\n', 1), ('SecureSetting}.\n', 1), ('BackpressureHelper.addCap(size,', 1), ('columns().size();\n', 1), ('RxJavaPlugins.setInitComputationSchedulerHandler(callable2scheduler);\n', 1), ('ARE', 1), ('b.substring(javadocStart,', 1), ('Logstash(Settings', 1), ('testShop()', 1), ('"A.B.2",', 1), ('SingleCreateTest', 1), ('host/port', 1), ('this.api', 1), ('w2;\n\n', 1), ('io.reactivex.observables.GroupedObservable}.\n', 1), ('Worker}', 1), ('SingleZipArray(SingleSource<?', 1), ('this.server', 1), ('rangeObservable', 1), ('AbstractNioChannel(ChannelHandler', 1), ('Assert.assertTrue("All', 1), ('disposeAction}', 1), ('sb.append("\\n");\n', 1), ('ObserveOnCompletableObserver(s,', 1), ('TestSubscriber<Object>().withTag(""', 1), ('assertEquals(VALUE,', 1), ('RxJavaPlugins.setOnMaybeAssembly(maybe2maybe);\n', 1), ('FlowableDoOnTest', 1), ('3949248817947090603L;\n\n', 1), ('bar")));\n\n', 1), ('getWeightTons()', 1), ('name";\n', 1), ('TestHelper.checkDisposed(Single.just(1).flatMapCompletable(new', 1), ('//con.setRequestProperty("Accept-Encoding",', 1), ('assertNotNull(topping.name);\n', 1), ('"+131243252"));\n', 1), ('TestDisposableObserver<T>', 1), ('service.checkTicketForPrize(\n', 1), ('MaybeCreate<T>(onSubscribe));\n', 1), ('weakens', 1), ('path.getFileSystem().getSeparator()', 1), ('addressLineTwo=\'"', 1), ('serviceCache', 1), ('de.agilecoders.wicket.core.settings.IBootstrapSettings;\nimport', 1), ('java.util.concurrent.ConcurrentLinkedQueue;\n\n/**\n', 1), ('PropertiesFeatureToggleVersion(final', 1), ('properties.\n', 1), ('observer.errorCount);\n', 1), ('ps2)\n', 1), ('testMultipleCallsReturnTheSameObjectInDifferentThreads()', 1), ('OtherMaybeObserver(MaybeObserver<?', 1), ('MaybeToFlowable<Object>(t);\n', 1), ('SamlRedirect(StatusResponseType', 1), ('testOnStartCalledOnceViaSubscribe()', 1), ('properties.getProperty("mongo-host");\n', 1), ('Nazgul(NazgulName.DWAR));\n', 1), ('org.elasticsearch.xpack.watcher.input.chain.ChainInput.TYPE;\n\npublic', 1), ('testNonBooleanProperty()', 1), ('testGiveWine()', 1), ('testTrampolineWorkerHandlesConcurrentScheduling()', 1), ('BasicQueueSubscription<T>', 1), ('HibernateUtil.getSessionFactory().close();\n', 1), ('fusedOnErrorCrash()', 1), ('assertNull(RxJavaPlugins.onCompletableError(null));\n//\n//', 1), ('cakeToppingInfo.calories', 1), ('12/26/15', 1), ('timed.time(TimeUnit.MILLISECONDS));\n', 1), ('schema\n', 1), ('SerializedObserver<T>(t),', 1), ('(properties', 1), ('seem', 1), ('getMountPointLinux(final', 1), ('RuntimeException()));\n', 1), ('(set.size()', 1), ('lo;\n', 1), ('pooling', 1), ('DwarvenMineWorker.Action...', 1), ('PLAYERS', 1), ("ObservableSource's", 1), ('o.subscribe(to);\n\n', 1), ('JTextArea[2];\n', 1), ('Integer.toString(port).getBytes(StandardCharsets.UTF_8));\n', 1), ('unsafeCreate(MaybeSource<T>', 1), ('write();\n', 1), ('(!cdl.await(3,', 1), ('former', 1), ('this.input.setBounds(150,', 1), ('Completable.fromSingle(Single.error(new', 1), ('non-concurrent', 1), ('oldest', 1), ('ivoryTower2);\n\n', 1), ('World!").ignoreElements();\n', 1), ('failSingleMaybeBlockingGet()', 1), ('system\n', 1), ('angry!",', 1), ('getRestrictedPermissions()', 1), ('KingJoffreyTest', 1), ('MaybeObserver<?>[]', 1), ('Matcher<T>', 1), ('(firstName', 1), ('SpellDaoImplTest()', 1), ('resolveAsSeparateMappings(String', 1), ('.onErrorResumeNext(Single.just(1))\n', 1), ('parent.onErrorCall.accept(e);\n', 1), ('ArrayList<>(otherFiles);\n', 1), ('ForEachWhileSubscriber(Predicate<?', 1), ('are;\n', 1), ('testDistinctUntilChangedOfNone()', 1), ('Runtime.getRuntime().addShutdownHook(new', 1), ('assertSame(o1,', 1), ('(eggChoice.equalsIgnoreCase("O"))', 1), ('(SubscriptionHelper.isCancelled(s.get()))', 1), ('iter.next().test().assertResult(1);\n', 1), ('painlessInterfaceStruct.name;\n\n', 1), ('determined,', 1), ('Completable.ambArray(Completable.complete(),', 1), ('tenantCallsCount.put(e.getKey(),', 1), ('blockingLastEmpty()', 1), ('moment', 1), ('hashCode\n', 1), ('CompletableMerge', 1), ('MaybeCreate(MaybeOnSubscribe<T>', 1), ('jtAreas', 1), ('super(Orcs::new);\n', 1), ('monitored', 1), ('utilizeResource(resource);\n', 1), ('RxJavaPlugins.onSingleScheduler(SINGLE);\n', 1), ('fulfillExceptionally(ex);\n', 1), ('accept(T1', 1), ('observer);\n}\n', 1), ('downloadFile(String', 1), ('basic,', 1), (').\n', 1), ('(int)elements).skipUntil(Flowable.just(1))\n', 1), ('ActionDomainEvent<SimpleObjects>', 1), ('RefConnection(FlowableRefCount<?>', 1), ('io.reactivex', 1), ('assertTrue(Observable.fromArray(1)', 1), ('java.sql.Statement;\n\nclass', 1), ('DisposableHelper.setOnce(this.d,', 1), ('calculateLineCount()', 1), ('shutdown.', 1), ('(fulfillmentAction', 1), ('++i)', 1), ('InnerSubscriber<T>(s,', 1), ('this.handle', 1), ('filteredIssues', 1), ('Dispatcher\n', 1), ('webClient', 1), ('Spell("Haste");\n', 1), ('sequences\n', 1), ('s.schedule(r);\n\n', 1), ('(Enum<HashSetCallable>[])m.invoke(null))', 1), ('prefix;\n\n', 1), ('InternalError("Null', 1), ('Collections.unmodifiableList(arguments);\n', 1), ('null;)', 1), ('painlessTypeName;\n\n', 1), ('isOpened();\n\n', 1), ('assertTrue(cause.getExceptions().get(1)', 1), ('java.util.Queue#offer(java.lang.Object)\n', 1), ('#UNICAST_HOSTS_FILE}.\n', 1), ('never()).dispose();\n', 1), ('super.write(data,', 1), ('java.util.concurrent.Executor})\n', 1), ('contentType,', 1), ('move(String', 1), ('StreamOutput', 1), ('org.apache.isis.applib.fixturescripts.FixtureScript;\nimport', 1), ('BufferBoundaryObserver(BufferBoundarySupplierObserver<T,', 1), ('Request\n', 1), ('obsSingle(Blackhole', 1), ('scan(Maybe.class);\n', 1), ('SingleJust<Integer>(10);\n', 1), ('toString\n', 1), ('org.elasticsearch.xpack.upgrade.actions;\n\nimport', 1), ('.runOn(Schedulers.computation()));\n', 1), ('"FlowableAnySingle",\n', 1), ('safeObserver.onSubscribe(new', 1), ('OperatorWindowBoundaryCloseObserver(WindowBoundaryMainObserver<T,', 1), ('testTreeSize()', 1), ('ArrayDeque<Object>()));\n', 1), ('e.getCause().getMessage());\n', 1), ('TestingDeferredScalarSubscriber(ts);\n\n', 1), ('AccessController.doPrivileged((PrivilegedAction<ClassLoader>)resource::getClassLoader);\n\n', 1), ('LOGGER.info("Walking', 1), ('RuntimeException("hello");\n', 1), ('(compareAndSet(1,', 1), ('.assertFailure(NumberFormatException.class,', 1), ('firstName)', 1), ('OnBackpressureBufferTckTest', 1), ('ItemIterator}\n', 1), ('FilterManager}.\n', 1), ('PublishSubscription[0];\n\n', 1), ('"Something");\n', 1), ('Integer.parseInt(map.get("age")),', 1), ('(int)elements),', 1), ('back-end.', 1), ('to(@NonNull', 1), ('ConsoleLoggerModule();\n', 1), ('List<UserRoleMapper>', 1), ('ContentAction(Content.COMPANY));\n', 1), ('TakeLastObserver<T>', 1), ('assertTrue(Thread.currentThread().getName().equals(currentThreadName));\n', 1), ('javaMethodHandleSetter));\n', 1), ('.assertValueCount(2)\n', 1), ('Complex', 1), ('innerError(InnerQueuedSubscriber<Integer>', 1), ('randomAlphaOfLengthBetween(1,', 1), ('findAll();\n}\n', 1), ('withoutParentDisposed()', 1), ("Guava's", 1), ('crashOnSubscribe;\n\n', 1), ('assertThat(all).hasSize(0);\n', 1), ('javaHome', 1), ('(student.getStudentId()', 1), ('painlessStruct.clazz.getSuperclass();\n\n', 1), ('logically\n', 1), ('FlowableOnBackpressureDrop<T>', 1), ('DataBus}', 1), ('s.nextInt();\n\n', 1), ('isPowerOfTwo(final', 1), ('getTicketsCollection()', 1), ('TestHelper.checkDisposed(Single.just(1)\n', 1), ('cs\n', 1), ('testScanIntegersWithoutInitialValueAndOnlyOneValue()', 1), ('getRedirectUrl(String', 1), ('other.subscribe(otherObserver);\n', 1), ('testRandomNumbers()', 1), ('MAX_RUNNING_EVENTS', 1), ('requestDescription', 1), ('codebase.\n', 1), ('pattern.asJavaRegex()', 1), ('!pp.hasSubscribers())', 1), ('types).', 1), ('(!merged.get().mapping().equals(resolution.get().mapping()))', 1), ('apply(SingleObserver)}', 1), ('java.util.Arrays.asList;\nimport', 1), ('takeEmpty()', 1), ('ScanSubscriber(Subscriber<?', 1), ('core-bashing', 1), ('(urlElements.add(url)', 1), ('fromCallableObservable.subscribe();\n\n', 1), ('java.nio.file.attribute.FileAttributeView;\nimport', 1), ('delayIndicator)', 1), ('UnresolvedException(String', 1), ('Flowable<T>>\n', 1), ('setReadyOps(int', 1), ('staticMethodDef)', 1), ('TimerTask()', 1), ('null").get();\n', 1), ('db;\n', 1), ('HttpURLConnection.HTTP_OK;\n', 1), ('accepted\n', 1), ('(ByteArrayOutputStream', 1), ('assertFalse(DisposableHelper.validate(null,', 1), ('send(String', 1), ('declaredField.setAccessible(true);\n', 1), ('ofType}', 1), ('userConverter.convertFromDto(dtoUser);\n', 1), ('exist",', 1), ('nullness.\n', 1), ('book,', 1), ('initialRequest;\n\n', 1), ('mainErrorInnerErrorDelayedRace()', 1), ('com.iluwatar.value.object;\n\n/**\n', 1), ('BlockingFlowableLatest(Publisher<?', 1), ('channel}', 1), ('wrap(values);\n', 1), ('setReplaceNull()', 1), ('white-list.\n', 1), ('StealingMethod>', 1), ('CreateDomainEvent(final', 1), ('List<Arguments>', 1), ('checkInvalidParallelSubscribers(ParallelFlowable<T>', 1), ('UncheckedIOException("failed', 1), ('SafeSubscriberWithPluginTest', 1), ('fromCallableError()', 1), ('repository.findById(id.get());\n', 1), ('java.util.concurrent.LinkedBlockingQueue;\n\nimport', 1), ('spellbookDao.persist(spellbook3);\n', 1), ('NodeImpl("root",', 1), ('1000).all(new', 1), ('"java.time.zone.txt",\n', 1), ('onErrorReturn(Function<?', 1), ('org.mockito.Mockito.mock;\n\n/**\n', 1), ('testSortedListObservable()', 1), ('InetAddress[]', 1), ('env)', 1), ('sit)', 1), ('values.get(name);\n', 1), ('Assisted}', 1), ('Maybe.empty().delay(100,', 1), ('Close', 1), ('(group', 1), ('byte[MAGIC_LENGTH];\n', 1), ('(CompositeException)to.errors().get(0);\n\n', 1), ('commander"),\n', 1), ('sendOnNext(String', 1), ('Setting<String>', 1), ('bat");\n', 1), ('Boolean.toString(rainbowFish.getAngry()));\n', 1), ('ps.single(-99).test(false);\n\n', 1), ('ObservableFromFuture(Future<?', 1), ('AssertionError(b.toString());\n', 1), ('run;\n\n', 1), ('results.getInt(2));\n', 1), ('TRAMPOLINE;\n', 1), ('DatagramPacket(ByteBuffer', 1), ('policy.implies(\n', 1), ('org.elasticsearch.xpack.core.watcher.input.ExecutableInput;\nimport', 1), ('ObservableIgnoreElementsCompletable(ObservableSource<T>', 1), ('.subscribe(to);\n', 1), ('source.blockingFirst().intValue());\n', 1), ('LOGGER.info("Utilizing', 1), ('source.test(0L);\n\n', 1), ('getIndexResponse.getMappings();\n', 1), ('TestHelper.checkDisposed(PublishSubject.create().ignoreElements().unsubscribeOn(new', 1), ('MergerBiFunctionTest', 1), ('view.showMessage("The', 1), ('assertFalse(RxJavaPlugins.isLockdown());\n', 1), ('filterFailWithRetryConditional()', 1), ('level3.getLeft());\n', 1), ('(Modifier.isStatic(javaField.getModifiers())', 1), ('assertFalse(list3.equals(list));\n', 1), ('memory\n', 1), ('service.findAllSpells())', 1), ('toSingle(toFlowable().retry());\n', 1), ('((URLClassLoader)TikaImpl.class.getClassLoader()).getURLs();\n', 1), ('HasUpstreamMaybeSource<T>,', 1), ('ScalarSubscription<R>(subscriber,', 1), ('initialCapacity)', 1), ('java.security.AllPermission;\nimport', 1), ('EnvironmentAwareCommand', 1), ('RuntimePermission("getClassLoader"));\n', 1), ('-8938804753851907758L;\n\n', 1), ('perms.add(GROUP_EXECUTE);\n', 1), ('m.methodLine', 1), ('com.gargoylesoftware.htmlunit.html.HtmlPage;\n\nimport', 1), ('Whitelist.Field', 1), ('readingTime;\n\n', 1), ('(Error)error;\n', 1), ('SingleDisposable<T>(observer,', 1), ('org.elasticsearch.xpack.core.deprecation;\n\nimport', 1), ('driver\n', 1), ('Flowable.empty().blockingLatest().iterator().next();\n', 1), ('anonymous', 1), ('msg.addHeader(Message.Headers.DATE,', 1), ('Object>(w.w,', 1), ('customerStream.forEach((customer)', 1), ('visible', 1), ('MockTerminal', 1), ('assertEquals("HP', 1), ('JButton("OK");\n', 1), ('onPluginsXLift()', 1), ('(sourceFunds', 1), ('CompletableMergeTest', 1), ('(inputStream', 1), ('fillInStackTrace()', 1), ('.subscribeOn(Schedulers.computation()).blockingFirst().intValue());\n', 1), ('GameObject>', 1), ('registerNew(Student', 1), ('RxJavaPlugins.initIoScheduler(nullResultCallable);\n', 1), ('https://bugs.openjdk.java.net/browse/JDK-8129972\n', 1), ('changeArtist(String', 1), ('IT', 1), ('(int)elements).skipWhile(Functions.alwaysFalse())\n', 1), ('ProductInventoryClientImpl', 1), ('to.onError(new', 1), ('direct', 1), ('(wrapped)', 1), ('retriveShouldReturnTheCustomer()', 1), ('Timed<?>', 1), ('f.onError(new', 1), ('delayedRunnableCrash()', 1), ('testElementAtOrDefaultFlowable()', 1), ('SingleToObservable(v);\n', 1), ('"https://raw.githubusercontent.com/iluwatar/java-design-patterns/master/promise/README.md";\n', 1), ('CustomerResourceTest', 1), ('rco.errors.size());\n', 1), ('assertEquals("EmptyAction",', 1), ('"&RelayState="', 1), ('LocalDate.class)', 1), ('ObservableDoOnEach<T>', 1), ('equalsWith()', 1), ('interruptible()', 1), ('ServiceExecutor(msgQueue);\n\n', 1), ('userId));\n', 1), ('userDto.getLastName(),', 1), ('AppManager.initDb(false);', 1), ('EmptyDisposable.complete(o);\n', 1), ('separator', 1), ('connection.prepareStatement("UPDATE', 1), ('TakeObserver<T>', 1), ('opened.\n', 1), ('acknowledgeFlush(FlushAcknowledgement', 1), ('writeLock;\n', 1), ('AtomicReference<Cancellable>\nimplements', 1), ('ByteBuffer)', 1), ('coresponding', 1), ('Subscriber()', 1), ('this.attempts', 1), ('request;\n\n', 1), ('takeAsync()', 1), ('CakeToppingInfo(Long', 1), ('cucumber.api.java.en.Given;\nimport', 1), ('TestHelper.checkDoubleOnSubscribeFlowableToCompletable(\n', 1), ('scenarioExecution().install(new', 1), ('RxJavaPlugins.onSchedule(action));\n\n', 1), ('createDatabaseBuilder(Path', 1), ('c.onSubscribe(d);\n\n', 1), ('processPendingCommands()', 1), ('MaybeSubscribeOn(MaybeSource<T>', 1), ('http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html");\n', 1), ('CharacterType', 1), ('com.iluwatar.hexagonal.domain.LotteryTicketCheckResult.CheckResult;\nimport', 1), ('propsMap.remove("classname");\n', 1), ('store.toString();\n', 1), ("7's", 1), ('System.out.println(ex);\n', 1), ('!cache.contains(userAccount.getUserId()))', 1), ('}).toObservable().takeLast(1);\n\n', 1), ('assertEquals(Arrays.asList(1),', 1), ('TestSubscriber<Void>', 1), ('ArrayList<>(Arrays.asList(delegates));\n', 1), ('cancellation,', 1), ('DoFinallyObserver(MaybeObserver<?', 1), ('BufferSkipObserver(Observer<?', 1), ('DaoBaseImpl<E', 1), ('CsvPreference.Builder(\n', 1), ('refrain\n', 1), ('"+043842423"));\n', 1), ('headers.put("es.to_string",', 1), ('APIs,', 1), ('Thread.sleep(readingTime);\n', 1), ('props.load(stream);\n', 1), ('portable', 1), ('DisposeObserver', 1), ('(method.augmentation', 1), ('rangeFlatMap;\n\n', 1), ('CompletableMergeDelayErrorArray(CompletableSource[]', 1), ('(count.incrementAndGet()', 1), ('accountsCollection;\n', 1), ('lookAheadStep', 1), ('CoffeeMakingTask(9));\n', 1), ('org.elasticsearch.common.SuppressForbidden;\n\nimport', 1), ('8).equals("SingleObserver"))', 1), ('TimeUnit.SECONDS).blockingGet();\n', 1), ('GeneralName', 1), ('therefore,', 1), ('ServantTest', 1), ('FlowableIgnoreElementsCompletable<T>', 1), ('FlushReadyWrite', 1), ('responsibility\n', 1), ('run).\n', 1), ('ObservableConcatMapCompletable<T>', 1), ('level2_a\n', 1), ('any.isPresent()', 1), ('access.', 1), ('(LambdaInfo)', 1), ('assertTrue(bs1.isCancelled()', 1), ('parseTrigger(String', 1), ('entry.getValue(),\n', 1), ('sameType', 1), ('org.elasticsearch.common.io.PathUtils;\nimport', 1), ('schedulerCallable.call();\n', 1), ('injector).clearCache();\n', 1), ('(CREATE_TRACE)', 1), ('matching\n', 1), ('sourceObs', 1), ('(javaVersion.get(0)', 1), ('columns', 1), ('rangeObservableFlatMapJust', 1), ('DROP_OLDEST,\n', 1), ('doorProperties.put(HasModel.PROPERTY,', 1), ('TestHelper', 1), ('RESTRICTED_CONTEXT', 1), ('super(location);\n', 1), ('AnyObserver(SingleObserver<?', 1), ('TimedRunnable(Runnable', 1), ('addDirectoryPath(Permissions', 1), ('(trustStoreAlgorithm', 1), ('timeoutException()', 1), ('transportClient', 1), ('w2.dispose();\n', 1), ('ArrayList<Long>();\n//\n//', 1), ('wizardClass);\n', 1), ('mapper.apply(value).iterator();\n', 1), ('Initializes', 1), ('class)\n', 1), ('Byte.class;\n', 1), ('globals);\n', 1), ('ObservableRefCount<T>(this,', 1), ('FromIterableTckTest', 1), ('writer.invokeStatic(type,', 1), ('BasicIntQueueSubscription<GroupedFlowable<K,', 1), ('checkDisposed(Completable', 1), ('constructors;\n', 1), ('BackpressureDropSubscriber<T>\n', 1), ('resumeErrors()', 1), ('CustomSingleOperator&lt;T&gt;', 1), ('assertNotNull(document.toString().contains(VALUE));\n', 1), ('RxJavaPlugins#setSingleSchedulerHandler(io.reactivex.functions.Function)}', 1), ('"]";\n\n', 1), ('server;\n\n', 1), ('recovery\n', 1), ('reduceMaybeBadSource()', 1), ('Reset.\n', 1), ('responsiveness.', 1), ('deflateAndBase64Encode(this.samlObject);\n', 1), ('Practical', 1), ('height="332"', 1), ('Injector#injectMembers},\n', 1), ('tillTheEnd);\n', 1), ('writePluginProperties(Path', 1), ('assertEquals("Canon', 1), ('BufferExactObserver(Observer<?', 1), ('proxy;\n', 1), ('TABLE"),\n', 1), ('JavaVersion.parse("1.7");\n', 1), ('Single.unsafeCreate(Single.just(1));\n', 1), ('acquisition/release.\n', 1), ('They', 1), ('AppManager\n', 1), ('trim(now,', 1), ('bloat', 1), ('anti-pattern.', 1), ('ColorSelector', 1), ('PublishDisposable[0];\n\n', 1), ('terminal.println();\n', 1), ('io.reactivex.MaybeSource;\n\n/**\n', 1), ('completely.\n', 1), ('<code>readObject</code>.', 1), ('iterating', 1), ('checkDoubleOnSubscribeObservableToCompletable(Function<Observable<T>,', 1), ('document:', 1), ('Dao<E>', 1), ('others.\n', 1), ('src="https://github.com/ReactiveX/RxJava/wiki/images/rx-operators/B.toFuture.png"', 1), ('tokenString', 1), ('ID?', 1), ('OtherMaybeObserver<T>(actual,', 1), ('CakeTopping\n', 1), ('decimal', 1), ('creation.\n', 1), ('DematerializeSubscriber(Subscriber<?', 1), ('causal', 1), ('getNumbersAsString()', 1), ('}*/\n', 1), ('#get()},', 1), ('.withBody(getObjectMapper()\n', 1), ('((ScheduledExecutorService)executor).schedule(task,', 1), ('threading', 1), ('EmptyCompletableObserverTest', 1), ('replace(@Nullable', 1), ('[{}],', 1), ('(containsValue)', 1), ('onChannelReadable(SelectionKey', 1), ('com.iluwatar.observer.generic.GHobbits;\nimport', 1), ('constructor;\n\n', 1), ('(bufferedReader.readLine()', 1), ('SpscLinkedArrayQueue<InnerQueuedSubscriber<R>>', 1), ('white-listed),', 1), ('8:12', 1), ('such,', 1), ('unprepare();\n', 1), ('Inventory}', 1), ('dateField', 1), ('JARs,', 1), ('dollar', 1), ('v1;\n\n', 1), ('(value,', 1), ('SingleDelayWithCompletable<T>', 1), ('ObjectHelper.requireNonNull(defaultItem,', 1), ('"only_fqn".equals(tokens[1]))', 1), ('LOGGER.info("Writers', 1), ('createLotteryTicket(String', 1), ('data}', 1), ('@DynamoDBHashKey(attributeName', 1), ('StrictPerf', 1), ('whitelistConstructor)', 1), ('trustConfigs.stream().map(TrustConfig::toString).collect(Collectors.joining(",', 1), ('JdbcWrapper', 1), ('Suspension', 1), ('Functions.justCallable(Maybe.just(1))));\n', 1), ('printed.\n', 1), ("implementation's", 1), ('(cache.size()', 1), ('innerVisitor);\n', 1), ('"FlowableMergeWithMaybe",\n', 1), ('add(bot,', 1), ('(Integer)a[0]', 1), ('CompletableOperator>', 1), ('help\n', 1), ('file.toString().substring(base.toString().length());\n', 1), ('TRUST_MANAGER', 1), ('Stub.\n', 1), ('albumTitleInputTextField.setText(albumTitle);\n', 1), ('transactionManager', 1), ('sa.request(-99);\n\n', 1), ('Mutable();\n\n', 1), ('source)));\n', 1), ('Spellbook()', 1), ('io.reactivex.annotations;\n', 1), ('onComplete(T', 1), ('com.iluwatar.reactor.framework.NioDatagramChannel.DatagramPacket;\nimport', 1), ('jvmOptionConsumer', 1), ('arguments[i]', 1), ('unsubscribingTwiceDoesUnsubscribeOnce()', 1), ('His', 1), ('reduceWithObjectsFlowable()', 1), ('assertFalse(run.isDisposed());\n', 1), ('HELPER', 1), ('verify(sub).request(1);\n', 1), ('localhost', 1), ('terminal.', 1), ('.putInt(signedContent.length)\n', 1), ('-7370244972039324525L;\n\n', 1), ('MaybeObserver<U>', 1), ('armor"));\n', 1), ('Bcrypt', 1), ('MAGIC', 1), ('read.getMetadata("es.java_class"));\n', 1), ('ObservableSwitchMapCompletable<T>', 1), ('discoNodes.addAll(resolveHostsLists(\n', 1), ('System.out.print(b);\n', 1), ('Nazgul.getInstance(NazgulName.MURAZOR));\n', 1), ('prone', 1), ('ObservableElementAt<T>', 1), ('this.active;\n', 1), ('testEmptyRangeSendsOnCompleteEagerlyWithRequestZero()', 1), ('ObjectHelper.requireNonNull(collector,', 1), ('concern).', 1), ('b.indexOf("@SchedulerSupport(",', 1), ('e.getValue());\n\n', 1), ('Flowable.generate(Functions.justCallable(1),\n', 1), ('lookAheadStep;\n', 1), ('away!",', 1), ('StreamSupport.stream(spliterator(),', 1), ('level1.getLeft();\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.map.png"', 1), ("MaybeSource}'s", 1), ('level1.getRight());\n', 1), ('mock,', 1), ('18:43', 1), ('instead.";\n', 1), ('to-and-from', 1), ('check("Flowable");\n', 1), ('io.reactivex.internal.operators.flowable.FlowableRange;\nimport', 1), ('(BCrypt.checkpw(new', 1), ('blkQueue.poll();\n', 1), ('factoryWithDefaultObserver;\n\n', 1), ('register\n', 1), ('observableStripBoundary()', 1), ('ObserveOnTckTest', 1), ('Single.mergeDelayError(Flowable.just(\n', 1), ('FlowableDistinctTest', 1), ('warProto.set(Stats.RAGE,', 1), ('12);\n//', 1), ('ObjectHelper.requireNonNull(maybeSupplier.call(),', 1), ('testExecptions()', 1), ('undoLastSpell()', 1), ('ObservableEmpty', 1), ('Object.class;\n', 1), ('Arrays.asList(formats);\n', 1), ('innerComplete(T', 1), ('Collections.singleton(ATTRIBUTE);\n', 1), ('normalEmptyConditional()', 1), ('assertFalse(bs1.isCancelled());\n', 1), ('clock,', 1), ('ESPolicyTests', 1), ('fromSingle()', 1), ('requested)', 1), ('SubscribeOnObserver<T>(s);\n\n', 1), ('IoHolder.DEFAULT;\n', 1), ('storageTestServer.createBucket(args[1]);\n\n', 1), ('out!");\n', 1), ('ObservableSource-like', 1), ('assertTrue(Single.just(1).subscribe().isDisposed());\n', 1), ('SingleEqualsTest', 1), ('handleEvent(MoneyDepositEvent', 1), ('FUSED;\n', 1), ('Set<IndexInfo>', 1), ('source.subscribe(mostRecentObserver);\n\n', 1), ('Observable.just(1).throttleFirst(100,', 1), ('TestSubscriber.create(1);\n', 1), ('MoneyDepositEvent)', 1), ('FlowableDoOnEach<T>', 1), ('(parameter.isProvidedByFactory())', 1), ('ObservableMergeWithSingle<T>', 1), ('FlowableFlatMapCompletablePerf', 1), ('row', 1), ('type.hashCode();\n\n', 1), ('com.iluwatar.eda.framework;\n\nimport', 1), ('3/5/18.\n', 1), ('GWeather', 1), ('owner);\n', 1), ('initialToppings', 1), ('byteBuffer.get(signedContent);\n', 1), ('resolvedPath', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.ignoreElement.png"', 1), ('CompositeRoleMapper(String', 1), ('BehaviorSubject},', 1), ('withPublisherDoubleOnSubscribe()', 1), ('MaybeAmbTest', 1), ('tokens[1],', 1), ('this.storageServer', 1), ('("lucene".equals(name))', 1), ('encoded);\n', 1), ('ObservableNever()', 1), ('ObjectHelper.requireNonNull(onErrorMapper.apply(e),', 1), ('"319-826",', 1), ('10:53', 1), ('assertNull(value[0]);\n', 1), ('Modifier.isStatic(javaMethod.getModifiers()))', 1), ('consecutive', 1), ('allowedCallsPerSecond', 1), ('basicValue', 1), ('Emitter(CompletableObserver', 1), ('newLayer', 1), ('afterSuccess', 1), ('call.', 1), ('(type.equals(ItemType.ANY)', 1), ('MediaType.application("vnd.ms-visio.stencil.macroenabled.12"),\n', 1), ('(batchSize', 1), ('non-fatal', 1), ('RxJavaPlugins.onAssembly((Single<T>)', 1), ('super(GOrcs::new);\n', 1), ('is(version.get(0)));\n', 1), ('FROM,\nOUT', 1), ('!city.equals(address.city)', 1), ('BasicDataSource();\n', 1), ('FlowableAutoConnect<T>(this,', 1), ('(Synchronous)', 1), ('JarHell.class.getClassLoader();\n', 1), ('"true");\n', 1), ('pattern()', 1), ('.window(Flowable.just(1).concatWith(Flowable.<Integer>never()))\n', 1), ('testedPrototype.toString());\n\n', 1), ('bs.cancel();\n', 1), ('job;\n\n', 1), ('ROGUE\n', 1), ('name();\n', 1), ('list.remove(o);\n', 1), ('8200530050639449080L;\n\n', 1), ('onBeforeBlocking()', 1), ('roles)', 1), ('FlowableFromPublisher(Publisher<?', 1), ('FutureDisposable(Future<?>', 1), ('groupListener));\n', 1), ('.switchMapSingle(Functions.justFunction(Single.never()));\n', 1), ('testVisitSergeant()', 1), ('FlowableConcatMapSingle(Flowable<T>', 1), ('javax.persistence.OneToOne;\n\n/**\n', 1), ('ArrayList<>(whitelistMethod.painlessParameterTypeNames.size());\n', 1), ('source.onBackpressureLatest().subscribe(ts);\n\n', 1), ('FrontController();\n', 1), ('source2)\n', 1), ('SingleToObservable<T>(this));\n', 1), ('pp2.onError(new', 1), ('FlowableJoin(\n', 1), ('"+34453452"));\n', 1), ('ObservableSwitchMap<T,', 1), ('(InvalidKeyException\n', 1), ('commands.authorCreated("mFowler",', 1), ('IndexDeprecationChecks::indexSharedFileSystemCheck,\n', 1), ('OBSERVER_ONERROR_FAIL().onError(new', 1), ('org.elasticsearch.xpack.sql.tree.NodeInfo;\n\nimport', 1), ('videos);\n\n\n', 1), ('SpellDaoImplTest', 1), ('3972397474470203923L;\n\n', 1), ('ChainInput.Result(e);\n', 1), ('this.panel.add(pane);\n', 1), ('org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean;\n\n/**\n', 1), ('ConnectionSuccess', 1), ('io.reactivex.Observer', 1), ('bounded1m()', 1), ('InternalConsumer', 1), ('SYNC_DISPOSED))', 1), ('toString);\n', 1), ('pp.switchMapCompletable(new', 1), ('BlockingFlowableLatest<T>', 1), ('actively', 1), ('Collections.list(res);\n', 1), ('hint")', 1), ('delayMillis)', 1), ('FlowableConcatMapCompletable<T>', 1), ('subscriber.onError(error);\n', 1), ('SQLException}s', 1), ('DomainTest', 1), ('inventorySize={}",', 1), ('userAccount1', 1), ('him', 1), ('t[0]', 1), ('testGivenNumbers()', 1), ('Half-Sync/Half-Async', 1), ('sep', 1), ('Spell("Summon', 1), ('ArrayList<>(permissions);\n', 1), ('StringJoiner', 1), ('PrintWriter(outputStream);\n', 1), ('settingSameDisposableTwiceDoesUnsubscribeIt()', 1), ('ItemQueue()', 1), ('doPrivilegedVoidIOException(CheckedRunnable<IOException>', 1), ('checkJarHell(Consumer<String>', 1), ('//also', 1), ('sometime', 1), ('wheelProperties.put(HasModel.PROPERTY,', 1), ('confusing', 1), ('getAvailableToppings();\n\n', 1), ('ThrottleLatestObserver<T>(s,', 1), ('failure;\n', 1), ('specification</a>.\n', 1), ('data/objects\n', 1), ('o1.intersectsWith(o2))', 1), ('notifyObservers();\n', 1), ('resourceDisposer,\n', 1), ('counter.incrementAndGet());\n', 1), ('"Carl",', 1), ('to:', 1), ('java.time.temporal.ChronoField;\nimport', 1), ('createProxy(type,', 1), ('32;\n\n', 1), ('stat', 1), ('jBlochBooks);\n\n', 1), ('startTime', 1), ('MergerBiFunction(Comparator<?', 1), ('groupConfigPath.hashCode();\n', 1), ('Else,', 1), ('org.elasticsearch.xpack.sql.cli.FatalCliException;\n\nimport', 1), ('inDateValue\n', 1), ('computeNext();\n', 1), ('taskCompleted()', 1), ('MergeMaybeObserver<T>', 1), ('getScheduler();\n', 1), ('SkipWhileTckTest', 1), ('FindPersonApiHandler\n', 1), ('`RxJavaPlugins.onError`.\n', 1), ('Observable-specific', 1), ('g.put(12);\n', 1), ('BlockingFlowableIterator<T>', 1), ('seenJvmOption.getKey()', 1), ('functionName', 1), ('(O)', 1), ('specifications,', 1), ('hosts/ports\n', 1), ('BorderLayout.CENTER);\n\n', 1), ('org.elasticsearch.license.License;\n\nimport', 1), ('ClassPathXmlApplicationContext(\n', 1), ('(studentsToOperate', 1), ('io.reactivex.internal.disposables.*;\n/**\n', 1), ('FilePermissionUtils.addSingleFilePath(perms,', 1), ('r.subscribe(subscriber);\n', 1), ('registerHandler(Class<E>', 1), ('girl.");\n\n', 1), ('CompletableSource[8];\n', 1), ('zipCode.hashCode()', 1), ('Selector}.\n', 1), ('jpaProperties()', 1), ('headers.put(header,', 1), ('subscribers.length);\n', 1), ('com.iluwatar.servicelayer.wizard.Wizard;\n\n/**\n', 1), ('URLRepository.ALLOWED_URLS_SETTING,\n', 1), ('java.lang.Double}</li>\n', 1), ('assertThat(0,', 1), ('collected.addAll(overallBuckets);\n', 1), ('after()', 1), ('scheduler.schedulePeriodicallyDirect(Functions.EMPTY_RUNNABLE,', 1), ('InnerQueuedSubscriber<R>(this,', 1), ('map.add(exp.toAttribute(),', 1), ('type.cast(column(index));\n', 1), (').subscribe(to);\n\n', 1), ('privileges.hashCode();\n', 1), ('-5843758257109742742L;\n\n', 1), ('"+876423145"));\n', 1), ('1).toFlowable();\n', 1), ('ObservableEmitter\n', 1), ('makeServiceCalls(adidas));\n', 1), ('FlowableCollectSingle<T,', 1), ('Nazgul.getInstance(NazgulName.JI_INDUR));\n', 1), ('PlayerDetails("lisa@google.com",', 1), ('boxing/unboxing.', 1), ('io.reactivex.Scheduler.Worker}\n', 1), ('dtos.stream().map(this::convertFromDto).collect(Collectors.toList());\n', 1), ('"memento"', 1), ('printPlugin(Environment', 1), ('statement.execute();\n', 1), ('CompletableConcatArray(CompletableSource[]', 1), ('NormalizerTests', 1), ('checkDisposedMaybe(Function<Maybe<T>,', 1), ('org.junit.Assert.assertNotEquals;\n\nimport', 1), ('IllegalStateException("secure', 1), ('b.size())', 1), ('mock(ItemQueue.class);\n', 1), ('grab', 1), ('ScalarCallable', 1), ('times));\n', 1), ('ObjectHelper.requireNonNull(maybeSupplier,', 1), ('cachedService.getName(),', 1), ('inDateValue;\n', 1), ('`try-catch`es,', 1), ('consoleLoggerModule;\n\n', 1), ('CompletableToSingle<T>', 1), ('httpPortPattern.matcher(line);\n', 1), ('Functions.justCallable(Maybe.just(1)));\n', 1), ('DoFinallySubscriber<T>', 1), ('sameName)', 1), ('ClassToType(Class<?>', 1), ('dtos', 1), ('"+":\n', 1), ('TestException(""', 1), ('d1);\n\n', 1), ('Observable.just(1).test();\n', 1), ('indeed', 1), ('assertTrue("No', 1), ('members.add(member);\n', 1), ('innerNext(InnerQueuedObserver<R>', 1), ('moneyDepositEvent.isRealTime());\n', 1), ('testDamaged(other,', 1), ('assertEquals("Be', 1), ('from(version));\n', 1), ('jt', 1), ('org.elasticsearch.xpack.core.ml.datafeed.extractor;\n\nimport', 1), ('level\n', 1), ('(signedContent', 1), ('LoggerFactory.getLogger(WriterTest.class);\n\n', 1), ('bottomShelf)', 1), ('operator",', 1), ('TestHelper.checkDoubleOnSubscribeFlowableToCompletable(new', 1), ('e.onError(error.terminate());\n', 1), ('list.listIterator();\n', 1), ('ParallelFlowable#sequential(int)\n', 1), ('fromCopyOf(Iterable<E>', 1), ('Stores.\n', 1), ('org.junit.Assert.assertThat;\nimport', 1), ('Callable<Result>', 1), ('reader/writer.\n', 1), ('do.', 1), ('java.sql.SQLException;\n\n/**\n', 1), ('(in.getVersion().onOrAfter(Version.V_5_4_0))', 1), ('sources.offer(p);\n', 1), ('Optional<AsyncCallback<T>>', 1), ('-3176480756392482682L;\n\n', 1), ('org.elasticsearch.test.rest.yaml.section;\n\nimport', 1), ('a.onNext((T)v);\n\n', 1), ('(line.startsWith("public', 1), ('java.io.Closeable;\n\n/**\n', 1), ('engine', 1), ('Schedulers.ComputationHolder());\n\n', 1), ('schedulerSpecEnd);\n', 1), ('visitor;\n', 1), ('"addressLineOne=\'"', 1), ('1.8', 1), ('(s.contains("sun.reflect."))', 1), ('onCallback}', 1), ('StealingMethodTest(final', 1), ('this.whitelistFields', 1), ('e5', 1), ('mageProto.set(Stats.SPIRIT,', 1), ('setPermissions(Set<PosixFilePermission>', 1), ('((HasUpstreamMaybeSource<Integer>)source.map(Functions.<Integer>identity())).source());\n', 1), ('source.blockingFirst();\n', 1), ('getHeaders(Definition', 1), ('RxJavaPlugins#createNewThreadScheduler(ThreadFactory)}', 1), ('onSubscribe).\n', 1), ('(painlessSuperStruct', 1), ('!state.equals(address.state)', 1), ('User(null,', 1), ('filters.\n', 1), ('PerfBoundedSubscriber', 1), ('a.onNext(1);\n', 1), ('CsvPreference.STANDARD_PREFERENCE);\n', 1), ('only)\n', 1), ('testOnErrorExceptionIsThrownFromSubscribe()', 1), ('getAccountNoTo()', 1), ('"+32421255",', 1), ('ShortType', 1), ('org.opensaml.saml.saml2.core.RequestAbstractType;\nimport', 1), ('FsBlobContainer(FsBlobStore', 1), ('QueueDisposable<T>()', 1), ('com.iluwatar.delegation.simple.printers.EpsonPrinter;\nimport', 1), ('value.matches("^0*[0-9]+(\\\\.[0-9]+)*$");\n', 1), ('ObservableBufferBoundary(ObservableSource<T>', 1), ('OBJECT_MAPPER', 1), ('errorWithRetry()', 1), ('Callable<List<Object>>,', 1), ('wrap(SingleSource<T>', 1), ('tuple.v2().execute(ctx,', 1), ('testLayers()', 1), ('!m.signature.contains("Flowable"))', 1), ('scheduleDirectPeriodic()', 1), ('queryLotteryAccountFunds(WireTransfers', 1), ('MaybeConcatArrayDelayError(MaybeSource<?', 1), ('upstream.request(toRequest);\n', 1), ('Observable.fromArray(array);\n', 1), ('object’s', 1), ('ScheduledRunnable.wasScheduled', 1), ('lvElement(offset))', 1), ('mock(CakeBakingService.class);\n', 1), ('(accountCreateEvent.isRealTime())', 1), ('completableFunction', 1), ('(JarFile', 1), ('indefinitely', 1), ('ls', 1), ('FlowableDoOnRequestTest', 1), ('fnfe)', 1), ('ms.add(Completable.never());\n', 1), ('TestHelper.checkDisposed(Observable.just(1).throttleFirst(1,', 1), ('result.setException(ex);\n', 1), ('io.reactivex.CompletableSource;\n\n/**\n', 1), ('ResultSetProxy(DebugLog', 1), ('Database.', 1), ('toFunction4()', 1), ('context;\n\n', 1), ('Task>', 1), ('NUM_NUMBERS)', 1), ('//Default', 1), ('20000)\n', 1), ('object$")\n', 1), ('captain);\n', 1), ('spellDao.persist(spell4);\n', 1), ('this.dispose();\n', 1), ('blocking-queueing', 1), ('noErrors();\n', 1), ('exist.', 1), ('f1);\n', 1), ('checkEnum()', 1), ('type();\n', 1), ('numInstances))\n', 1), ('eventManager.status(eventId);\n', 1), ('executor.endProcess(asyncResult1);\n', 1), ('UnsubscribeOnMaybeObserver<T>', 1), ('String(reply.getData(),', 1), ('userConverter.convertFromEntity(userConverter.convertFromDto(u1));\n', 1), ('org.elasticsearch.xpack.sql.jdbc.net.protocol.ColumnInfo;\n\npublic', 1), ('Expressions.name(e)', 1), ('ids.size());\n', 1), ('MlFilter("filter_2",', 1), ('RxJavaPlugins.initNewThreadScheduler(unsafeDefault);\n', 1), ('HobbitsTest', 1), ('ob).subscribe(o);\n', 1), ('Refactor', 1), ('(!StringUtils.hasText(address))', 1), ('Environment#getFileStore(Path)\n', 1), ('pattern:', 1), ('FlatMapCompletableMainObserver(Observer<?', 1), ('"%d-%d-XX:+UseG1GC",', 1), ('processor.onComplete();\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.flatMapMaybe.png"', 1), ('Intergartion', 1), ('Collections.singletonList(ADDITIONAL_META_DATA_SETTING);\n', 1), ('UTF-8', 1), ('(matchAll.isPresent())', 1), ('List<Future<S>>', 1), ('testFilter()', 1), ('ImmediateThinWorker', 1), ('java.security.CodeSource;\nimport', 1), ('assertTrue(so.isDisposed());\n', 1), ('(depending', 1), ('first.getAndSet(CANCELLED);\n', 1), ('org.junit.Assert.assertFalse;\n\nimport', 1), ('DataAttachment.JSON.create("data",', 1), ('MySubscriber<T>', 1), ('Removed', 1), ('exec.executeAll();\n\n', 1), ('List<PlayerDetails>', 1), ('MethodHandles.publicLookup().unreflectSetter(javaField);\n', 1), ('calls/passes', 1), ('(TikaException)', 1), ('AudioSystem.getClip();\n', 1), ('MergeCompletableObserver(CompletableObserver', 1), ('DisposableSingleObserver&lt;Integer&gt;()', 1), ('publicKey', 1), ('spellDao)', 1), ('responsibilities', 1), ('org.elasticsearch.common.network.NetworkAddress;\nimport', 1), ('rail.\n', 1), ('developed.', 1), ('UdpLoggingClient', 1), ('FileWriter(u));\n\n', 1), ('io.reactivex.CompletableSource;\nimport', 1), ('getNextId();\n', 1), ('observableAsC()', 1), ('(anchor.getTextContent().equals(albumTitle))', 1), ('file.entries();\n', 1), ('Collections.emptyList(),', 1), ('field.setAccessible(true);\n', 1), ('schema,', 1), ('NumberCrunchingTask', 1), ('Completable.mergeArray(pp1.ignoreElements(),', 1), ('VolatileSizeArrayList(int', 1), ('RxJavaPlugins.setInit(scheduler', 1), ('Bjarne', 1), ('javaMethod.getReturnType()', 1), ('cache.remove(end.userId);', 1), ('List<Object>>()', 1), ('assertEquals(senderName,', 1), ('1000).toMultimap(Functions.<Integer>identity()).toFlowable()\n', 1), ('flatMapTwoNestedAsync(final', 1), ('allCollection', 1), ('innerError(InnerQueuedSubscriber<R>', 1), ('entry)', 1), ('Responsibility', 1), ('org.mockito.Matchers;\n\nimport', 1), ('pp.concatMapSingle(\n', 1), ('doubleOnSubscribe(SingleObserver<?>', 1), ('(this.soldierResponse.isPresent())', 1), ('FlowableSingleSingle<T>', 1), ('period}', 1), ('HasUpstreamSingleSource<T>', 1), ('stopLatch', 1), ('"lastName")\n', 1), ('super(environment.settings());\n', 1), ('disposable\n', 1), ('collectIntoFlowable()', 1), ('testElementAtOrDefaultWithIndexOutOfBoundsObservable()', 1), ('deque.offerFirst(exceptions.get(i));\n', 1), ('java.nio.channels.CompletionHandler;\nimport', 1), ('OldElasticsearch', 1), ('processFactory;\n', 1), ('wording', 1), ('fs.onSubscribe(s2);\n\n', 1), ('_.,()]*Flowable");\n', 1), ('reliability', 1), ('ToXContent.MapParams(licenseSpecViewMode));\n', 1), ('SingleTimeout(SingleSource<T>', 1), ('layering', 1), ('MESSAGE);\n\n', 1), ('WeatherObserverTest<O', 1), ('<code>cache-aside</code>', 1), ('java.util.List}</li>\n', 1), ('(capacity', 1), ('!logStreamName.equals(that.logStreamName)', 1), ('AudioSystem.getAudioInputStream(new', 1), ('tom', 1), ('"%d:%d-XX:+UseG1GC",', 1), ('onErrorNotImplementedFailureSafe()', 1), ('writer.write(testMessage));\n', 1), ('SingleSource[count', 1), ('RxJavaPlugins.setSingleSchedulerHandler(scheduler2scheduler);\n', 1), ('POI,', 1), ('andThenMaybeCompleteEmpty()', 1), ('BY', 1), ('painlessFieldTypeName;\n\n', 1), ('adapter\n', 1), ('differ', 1), ('onRequest', 1), ('readPrivateKey(CertUtils.resolvePath(keyPath,', 1), ('wrap((SingleSource<T>)sources[0]);\n', 1), ('four\n', 1), ('(shouldParseBody(con.getResponseCode()))', 1), ('testGetName(Creature', 1), ('factoryWithoutDefaultObserver;\n\n', 1), ('Behavior', 1), ('sourceOverflow()', 1), ('expectedMessage', 1), ('type.clazz;\n', 1), ('IntervalTckTest', 1), ('(entries.length', 1), ('NullPointerException(IllegalArgumentException)");\n', 1), ('Validator#exceptions}', 1), ('DelaySubscription(s));\n', 1), ('this.onCompleteCall', 1), ('FS\n', 1), ('ObservableAll<T>', 1), ('stop,', 1), ('2.1.13\n', 1), ('filterErrorNoError()', 1), ('badInnerSource()', 1), ('untilCompletableMainError()', 1), ('InstantPeriodicTaskTest', 1), ('verifyThread(Schedulers.newThread(),', 1), ('(guice', 1), ('QUEUE_LINK_SIZE', 1), ('SingleConcatPublisherTest', 1), ('FlowableElementAt(Flowable<T>', 1), ('Number",', 1), ('transportUri.substring(0,', 1), ('MessengerTest', 1), ('b.onNext(n', 1), ('"FlowableCollectSingle",\n', 1), ('ConcatArraySubscriber<T>(sources,', 1), ('testFeed()', 1), ('expectedPathList.add(groupConfigPath);\n\n', 1), ('simpleTypesMap', 1), ('enterUsername(String', 1), ('"eEvans");\n', 1), ('ObservableSwitchMapSingle<T,', 1), ('ArgumentCaptor<Action>', 1), ('ObservableAny(ObservableSource<T>', 1), ('PURGE_THREAD.get();\n', 1), ('pattern");\n', 1), ('"parallelism");\n', 1), ('(constructors,', 1), ('bs.poll();\n\n', 1), ('findAllSpells()', 1), ('trustStorePath.hashCode()', 1), ('listOfCacheData.add(temp.userAccount);\n', 1), ('deleteSchema(DataSource', 1), ('assertEquals(13,', 1), ('city', 1), ('java.io.InputStreamReader;\n\nimport', 1), ('Map.Entry<K,', 1), ('.retry()\n', 1), ('createTrustManager(Environment', 1), ('com.iluwatar.flux.store.Store;\nimport', 1), ('close(OperatorWindowBoundaryCloseObserver<T,', 1), ('(entry', 1), ('Functions.emptyConsumer()).isDisposed());\n', 1), ('noWeapon()', 1), ('LOGGER.info("Such', 1), ("'/');\n\n//", 1), ('index:', 1), ('mappings.', 1), ('Collections.unmodifiableMap(struct.staticMembers);\n', 1), ('org.elasticsearch.xpack.core.watcher.watch.Watch;\n\nimport', 1), ('SingleUnsubscribeOnTest', 1), ('latch,', 1), ('CharacterStepBuilder()', 1), ('spellbook3.addSpell(spell9);\n', 1), ('MostRecentObserver(T', 1), ('FlowableDematerialize(Flowable<Notification<T>>', 1), ('assertNotNull(exception);\n', 1), ('ZipCoordinator(MaybeObserver<?', 1), ('progress', 1), ('.andThen(Maybe.just(1))\n', 1), ('writeLock;\n\n', 1), ('ObservableEmpty()', 1), ('out.bytes().streamInput())', 1), ('State', 1), ('Proxy(type,', 1), ('OtherSubscriber<T>', 1), ('other.subscribe(parent.boundarySubscriber);\n\n', 1), ('(Enum<NaturalComparator>[])m.invoke(null))', 1), ('allowed");\n', 1), ('Setting.longSetting("ingest.geoip.cache_size",', 1), ('com.iluwatar.eda;\n\nimport', 1), ('assertEquals("Handler', 1), ('formatter.format(ZonedDateTime.ofInstant(Instant.ofEpochSecond(0),', 1), ('information:\\n")\n', 1), ('Arrays.asList(CustomRealm.USER_HEADER,', 1), ('heavyInstance;\n', 1), ('height="291"', 1), ('panel;\n\n', 1), ('"v"', 1), ('testServer', 1), ('legal', 1), ('level3_b\n', 1), ('(Exception)e;\n', 1), ('create(MaybeOnSubscribe<T>', 1), ('AtomicReference<SingleDisposable<T>[]>', 1), ('isSimpleType(final', 1), ('java.nio.file.attribute.PosixFilePermission.OTHERS_EXECUTE;\nimport', 1), ('1.0', 1), ('administration.resetLottery();\n', 1), ('week\n', 1), ('org.mockito.Mockito.verifyNoMoreInteractions;\n\nimport', 1), ('rangeObservableFlatMap.subscribe(new', 1), ('AnnotationConfigApplicationContext', 1), ('io.reactivex.internal.operators.parallel.ParallelFromPublisher;\nimport', 1), ('to1.assertResult(2);\n', 1), ('foundLayers', 1), ('address.', 1), ('NumberType;\n', 1), ('Flowable.just(1).startWithArray().test().assertResult(1);\n', 1), ('pf)', 1), ('ObservableAmb(ObservableSource<?', 1), ('customer);\n', 1), ('Stack<Class<?>>', 1), ('fromPublisher(final', 1), ('(!this.errors.isEmpty())', 1), ('Schedulers.from(exec).createWorker();\n\n', 1), ('lastOfFirstTwo));\n', 1), ('ein', 1), ('ObservableDistinct(ObservableSource<T>', 1), ('maybe;\n', 1), ('ObservableReduceTests', 1), ('technique', 1), ('RainbowFishV2("Scar",', 1), ('StandardCharsets.UTF_8);\n\n', 1), ('RecreateSimpleObjects()', 1), ('!email.contains("@"),', 1), ('InputStreamReader(resource.getResourceAsStream(filepath),', 1), ('MaybeSwitchIfEmpty<T>', 1), ('strictly', 1), ('processFile(fail,', 1), ('(TreasureChest', 1), ('mockedDatasource()', 1), ('InnerCompletableCache', 1), ('getRestrictedPermissions())\n', 1), ('APIGatewayProxyRequestEvent()\n', 1), ('executor.get().schedule(task,', 1), ('assertTrue(fs.isDone());\n\n', 1), ('JAVA_8', 1), ('evictionAction', 1), ('onSchedule(Schedulers.io().createWorker());\n', 1), ('"One");\n\n', 1), ('BAD_REQUEST_STATUS_CODE', 1), ('this.trustStoreAlgorithm', 1), ('assertTrue(abilities.contains("invisibility"));\n', 1), ('SerializedSubject<T>', 1), ('number;\n\n', 1), ('TestHelper.checkUtilityClass(ScalarXMapZHelper.class);\n', 1), ('FlowableStripBoundary(Flowable<T>', 1), ('Dispatcher.getInstance());\n', 1), ('Edition', 1), ('removeAll(Collection<?>', 1), ('overloading\n', 1), ('"io.reactivex.");\n', 1), ('outer.flatMap(new', 1), ('testFindWizardsWithSpell()', 1), ('1024.0);\n', 1), ('TestException());\n\n\n', 1), ('MaybeFlatMapIterableFlowable<T,', 1), ('InnerObserver[n', 1), ('.onErrorComplete()\n', 1), ('takeUntil(MaybeSource<U>', 1), ('winners\n', 1), ('->\n', 1), ('recover', 1), ('LoggerFactory.getLogger(FileLoader.class);\n\n', 1), ('RxJavaPlugins.initSingleScheduler(nullResultCallable);\n', 1), ('.assertResult(15);\n', 1), ('MaybeTransformer<Upstream,', 1), ('oliphaunt.getId());\n', 1), ('Shared', 1), ('CakeLayerInfo("layer1",', 1), ('Trigger,', 1), ('Clicking', 1), ('(expectedItem.toString().equals(name))', 1), ('LatestSubscriberIterator<T>();\n', 1), ('LOGGER.info("ivoryTower1={}",', 1), ('org.elasticsearch.repositories.url;\n\nimport', 1), ('TypeResolution(\n', 1), ('fusedFlatMapExecutionHidden()', 1), ('JsonProperty.Access.READ_ONLY)\n', 1), ('executor.startProcess(lazyval(10,', 1), ('enqueue(action,', 1), ('UnSubscribe/Error/etc', 1), ('Optional.ofNullable((Number)', 1), ('s2\n', 1), ('Base64.getEncoder().encodeToString(bytes))\n', 1), ('PrivilegedAction<Void>()', 1), ('agility', 1), ('(HtmlNumberInput)', 1), ('"certificate', 1), ('"hello");\n', 1), ('declarations.\n', 1), ('CommandServiceImpl();\n', 1), ('8:27', 1), ('SingleLift<T,', 1), ('commandService.bookAddedToAuthor("title2",', 1), ('members)', 1), ('failComputationObservableBlockingSingle()', 1), ('stringProps.length;', 1), ('File(this.fileName).exists();\n', 1), ('currentThreadName', 1), ('Func1<Integer,', 1), ('paramList.hashCode();\n', 1), ('MaybeOnErrorComplete<T>(this,', 1), ('ObjectHelper.requireNonNull(isEqual,', 1), ('FlowableSequenceEqualSingle<T>', 1), ('(ObjectCursor<List<AliasMetaData>>', 1), ('INITIAL_SCORE,', 1), ('SimpleTrollTest', 1), ('fromRunnableTwice()', 1), ('Observable.intervalRange(5,', 1), ('reply".getBytes());\n', 1), ('Client()', 1), ('PersonRepository}', 1), ('functionalMethod', 1), ('TrampolineScheduler();\n\n', 1), ('e.getMetadata("es.java_class"));\n', 1), ('assertEquals(expectedMessage,', 1), ('RandomAccess', 1), ('queryService.getAuthorsCount();\n', 1), ('createDatabaseBuilder(databasePath).withCache(cache);\n', 1), ('Flowable.fromIterable(sources).concatMapEager(SingleInternalHelper.<T>toFlowable());\n', 1), ('org.elasticsearch.xpack.sql.plan.physical;\n\nimport', 1), ('fileLocation', 1), ('FlowableSubscriber<Open>,', 1), ('c.request(-10);\n\n', 1), ('letter)', 1), ('singleReturn()', 1), ('MaybeConcatIterable<T>(sources));\n', 1), ('fishV1', 1), ('subscribeActual(subscriber);\n', 1), ('SkipLastTimedSubscriber<T>(s,', 1), ('FlowableLimit(Flowable<T>', 1), ('(intelligence', 1), ('verification', 1), ('expectedTargetResult;\n', 1), ('12:27', 1), ('initData();\n', 1), ('types.contains(IndexType.ALIAS);\n', 1), ('"username1");\n', 1), ('(E)e;\n', 1), ('PlayerDetails("anton@google.com",', 1), ('WRONG_NAME', 1), ('testError()', 1), ('path.toAbsolutePath()),', 1), ('"zipCode")\n', 1), ('epoch', 1), ('onPluginsXError()', 1), ('this.studentDatabase', 1), ('-1));\n', 1), ('DoOnDisposeObserver<T>(s,', 1), ('<li>Adaptability</li>\n', 1), ('2.1.4', 1), ('others[i].subscribe(subscribers[i]);\n', 1), ('dispose();\n\n', 1), ('aFile', 1), ('Files.delete(dir);\n', 1), ('machines.\n', 1), ('setter)', 1), ('FuseToObservable<Long>', 1), ('r.getFed();\n', 1), ('.flatMapSingle(Functions.justFunction(Single.just(2)))\n', 1), ('PromiseSupport()', 1), ('side-effecting', 1), ('testLastWithBackpressure()', 1), ('http://stackoverflow.com/a/32955708/61158\n', 1), ('SingleNever.INSTANCE);\n', 1), ('case.\n', 1), ('.assertResult(5,', 1), ('("float".equals(whitelistStruct.javaClassName))', 1), ('C>[]', 1), ('RxJavaPlugins.setComputationSchedulerHandler(replaceWithImmediate);\n\n', 1), ('cancel}', 1), ('SpscArrayQueue(int', 1), ('inUse=%d",', 1), ('f.subscribe(this);\n', 1), ('shouldSaveModifiedStudentWithoutWritingToDb()', 1), ('2.0\n//', 1), ('letter,', 1), ('SingleErrorTest', 1), ('@OneToMany(cascade', 1), ('JreHttpUrlConnection', 1), ('flatMapMaybe(final', 1), ('computeNext();\n}\n', 1), ('JavaVersion.parse("1.7.1.1");\n', 1), ('PosixPermissionsResetter', 1), ('WizardDaoImplTest', 1), ('errorAfterMainDelayError()', 1), ('DispatcherTest', 1), ('getType("Double");\n', 1), ('IllegalArgumentException("inconsistent', 1), ('TREE_ROOT.getRight();\n', 1), ('.flatMap(Functions.justFunction(Completable.complete().toFlowable()),', 1), ('com.iluwatar.fluentinterface.app;\n\nimport', 1), ('org.apache.wicket.request.Request;\nimport', 1), ('homeDir', 1), ('List<Future<Boolean>>', 1), ('requests!"));\n', 1), ('stack\n', 1), ('details2,', 1), ('testResume()', 1), ('SimpleQueue<CompletableSource>', 1), ('Flowable.fromArray(numbers)\n', 1), ('h)', 1), ('lineNum', 1), ('WeatherType.values();\n', 1), ('andThenMaybeError()', 1), ('completableSubscribe0()', 1), ('[description]', 1), ('Index', 1), ('CRUNCHED_NUMBER;\n', 1), ('createExecutor(ThreadFactory', 1), ('warProto.set(Stats.ARMOR,', 1), ('FlowableSwitchMapCompletable(Flowable<T>', 1), ('900));\n', 1), ('overrideInitIoSchedulerCrashes()', 1), ('long.class)', 1), ('exceptionHandler.accept(exception);\n', 1), ('Boolean.FALSE,', 1), ('flatMapSingle}', 1), ('java.lang.Character.class.getName(),\n', 1), ('jt.getSelectedRowCount();\n', 1), ('(!observer.completed.await(3,', 1), ('blobExists(String', 1), ('org.elasticsearch.common.network.NetworkService;\nimport', 1), ('Weapon}', 1), ('DataAttachment.YAML.create("data",', 1), ('BufferOpenObserver<Open>', 1), ('fs.get();\n', 1), ('assertEquals("Timed[time=5,', 1), ('flowable2subscriber', 1), ('fields.length;', 1), ('oneStreamOfNthatMergesIn1(final', 1), ('assertTrue(appender.logContains("level1_a"));\n', 1), ('o.onTerminateDetach();\n', 1), ('Files.isDirectory(esDir))', 1), ('AbilityStep,', 1), ('SecurityFilesTests', 1), ('UnitVisitor}', 1), ('privateKeyPath;\n\n', 1), ('fails"));\n', 1), ('testMergeWithCurrentThreadScheduler1()', 1), ('assertSame(action,', 1), ('"Data', 1), ('statement.setString(3,', 1), ('NumberExpression(result);\n', 1), ('fail.append(fn.substring(jdx', 1), ('org.elasticsearch.search.aggregations.InternalAggregation;\nimport', 1), ('.observeOn(Schedulers.single(),', 1), ('assertTrue(numbers1.equals(numbers2));\n', 1), ('trampoline().start();\n', 1), ('4));\n\n', 1), ('consumerClassName,', 1), ('Retry<>(\n', 1), ('assertEquals("aztec",', 1), ('ArrayObjectIterator(Object', 1), ('fromString(String', 1), ('installation.\n', 1), ('6760844284799736970L;\n\n', 1), ('MaybeDoOnEvent<T>(this,', 1), ('Message()', 1), ('getAllCakes()', 1), ('logging\n', 1), ('-8158322871608889516L;\n\n', 1), ('boxTo);\n', 1), ('"10")\npublic', 1), ('io.reactivex.functions.BiFunction;\n\npublic', 1), ('BufferedWriter(\n', 1), ('NULL_KEY', 1), ('AtomicInteger,\n', 1), ('readTrustGroup(Path', 1), ('TimerTckTest', 1), ('range.toList().blockingGet();\n', 1), ('Launchers.errPrintln(errorMessage);\n', 1), ('16M', 1), ('"Brown");\n', 1), ('Long.class)', 1), ('ec)', 1), ('(int)elements).subscribeOn(Schedulers.single())\n', 1), ('.assertResult(6);\n', 1), ('view.close();\n', 1), ('onSchedule(Worker', 1), ('DBMS,\n', 1), ('FuseToMaybe<Boolean>', 1), ('verify(adapter).row();\n', 1), ('FlowableSubscriber<R>', 1), ('uriPath.getFragment()).toURL();\n', 1), ('(con.getResponseCode()', 1), ('List<Normalizable>', 1), ('DoOnEachSubscriber<T>(\n', 1), ('ObjectHelper.requireNonNull(singleSource,', 1), ('maybeMaybe()', 1), ('.map((s)', 1), ('carried', 1), ('PUB_KEY_DIGEST', 1), ('isHandled()', 1), ('spell3', 1), ('byteBuffer.putInt(licenseSpec.version())\n', 1), ('ArrayList<Throwable>());\n\n', 1), ('Logger.getLogger(FileLoggerModule.class);\n\n', 1), ('ProducerTest', 1), ('DisposableHelper.isDisposed(inner.get());\n', 1), ('.flatMap((tc)', 1), ('closed.\n', 1), ('cache;\n', 1), ('Supplier::get);\n', 1), ('16;\n', 1), ('ints', 1), ('NazgulEnum}', 1), ('assertTrue(appender.logContains("Consumer', 1), ('this.augmentation', 1), ('this.length', 1), ('replenish', 1), ('items.get(tempIdx).getType().equals(type))', 1), ('errorAfterLimitReached()', 1), ('spaceDelimitedJvmOptions', 1), ('assertEquals(1', 1), ('scalar\n', 1), ('tear', 1), ('e.getMessage()', 1), ('handler.caught,', 1), ('CakeInfo(CakeToppingInfo', 1), ('startup\n', 1), ('sb.append(",");\n', 1), ('completed.");\n', 1), ('t1.toString());\n', 1), ('is("1.7.0"));\n', 1), ('#hasComplete()},\n', 1), ('LOGGER.info("Here', 1), ('TASK_COUNT', 1), ('"metadata",', 1), ('not-null', 1), ('Maybe.fromCallable(func);\n\n', 1), ('ObservableNever', 1), ('invalidRangeLine));\n', 1), ('AssertionError("Type', 1), ('RxJavaPlugins.setOnSingleReturn(new', 1), ('ParallelReduceSubscriber(Subscriber<?', 1), ('spscArrayQueueBiOffer()', 1), ('CakeLayerInfo("Layer3",', 1), ('realPath.getFileSystem().getSeparator()', 1), ('issue,', 1), ('AtomicReferenceArray<Disposable>', 1), ('replace(AtomicReference<Subscription>', 1), ('Maybe-specific', 1), ('(tryEmitScalar(((Callable<?', 1), ('Thread.sleep(500);\n', 1), ('is(version.get(1)));\n', 1), ('disposeOnCurrentThread()', 1), ('invalidLineConsumer)', 1), ('redoStack.offerLast(previousSpell);\n', 1), ('RxJavaPlugins.onSingleScheduler(s));\n\n', 1), ('com.iluwatar.featuretoggle.pattern.propertiesversion.PropertiesFeatureToggleVersion;\nimport', 1), ('"Plugins', 1), ('(int)elements).share()\n', 1), ('filePath)', 1), ('AssertionError}.\n', 1), ('(mac,', 1), ('onErrorResumeNext(Functions.justFunction(resumeSingleInCaseOfError));\n', 1), ('ObjectHelper.requireNonNull(valueSelector.apply(t),', 1), ('propsMap.remove("requires.keystore");\n', 1), ('drainMissedRequestedProduced()', 1), ('Function<Map.Entry<K,', 1), ('wrap(((MaybeTransformer<T,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.merge.oo.png"', 1), ('singletonInstanceMethod;\n', 1), ('FindPersonApiHandler();\n', 1), ('Monday")\n', 1), ('java.nio.file.FileSystem;\nimport', 1), ('org.hibernate.criterion.Restrictions;\n\nimport', 1), ('BufferCloseObserver(BufferBoundaryObserver<T,', 1), ('painless;\n', 1), ('AUT', 1), ('innerError(inner,', 1), ('pairs\n', 1), ('PathUtils.get(System.getProperty("java.io.tmpdir")),', 1), ('attr.getValues();\n', 1), ('in.");\n', 1), ('Setting.listSetting(\n', 1), ('java.net.UnknownHostException;\nimport', 1), ('FlowableLimitTest', 1), ('Maybe.just(1).delaySubscription(pp)\n', 1), ('mock(Party.class);\n', 1), ('lineCount;\n', 1), ('InnerQueuedSubscriber<Integer>', 1), ('errs.doOnEach(sideEffectObserver);\n\n', 1), ('err[0].getMessage());\n\n', 1), ('observed.\n', 1), ('ObjectInputStream', 1), ('Assert.assertEquals(Arrays.asList(1L),', 1), ('t1.start();\n\n', 1), ('BackpressureHelper.producedCancel(requested,', 1), ('timed.lazySet(DisposableHelper.DISPOSED);\n', 1), ('java.util.function.BiConsumer;\n\npublic', 1), ('voidType', 1), ('pendingCommands', 1), ('implement:', 1), ('Timer(true).schedule(new', 1), ('held.\n', 1), ('scanForBadMethod(b,', 1), ('issue);\n', 1), ('lock;\n', 1), ('times(1)).accept(Integer.valueOf(2));\n', 1), ('setWeapon(String', 1), ('LordVarys(kingsHand));\n', 1), ('"capacityHint");\n', 1), ('expectTargetOnFire)', 1), ('"ca', 1), ('setFunctionName(String', 1), ('BooleanType;\n', 1), ('classloader.', 1), ('certificate...),', 1), ('getCopyPermissions()', 1), ('assertNull(doc.get());\n\n', 1), ('"encountered', 1), ('super(2);\n', 1), ('curr.second', 1), ('#poll()}\n', 1), ('isLockFree()', 1), ('Predicate<Exception>...', 1), ('prefix;\n', 1), ('org.hibernate.SQLQuery;\nimport', 1), ('reused");\n', 1), ('PrintLogoCommand()', 1), ('NextObserver<T>();\n', 1), ('"initialSupplier");\n', 1), ('delaySubscription(time,', 1), ('add(CompletableDisposable', 1), ('checkCompletableBackpressure()', 1), ('accountsCollection;\n\n', 1), ('FlowableConcatWithMaybe<T>', 1), ('2L),', 1), ('DisposableSingleObserverTest', 1), ('.take(TestHelper.RACE_DEFAULT_LOOPS)\n', 1), ('getMemoryLimitInMb()', 1), ('level3.getTreeSize());\n', 1), ('decoratedRun),', 1), ('Single.just(1).delaySubscription(Flowable.timer(100,', 1), ('DisposableObserver<V>', 1), ('MinusExpression::new);\n', 1), ('add(AtomicLong', 1), ('fishingBoatAdapter', 1), ('l)', 1), ('targetVersion\n', 1), ('requestType;\n', 1), ('java.lang.Exception}.\n', 1), ('Schema(List<String>', 1), ('RxJavaPlugins.setInitIoSchedulerHandler(initReplaceWithImmediate);\n\n', 1), ('getAge()', 1), ('eventString', 1), ('mainErrors()', 1), ('singletonMap("Content-Length",', 1), ('TestObserver<Integer>()));\n', 1), ('RxJavaPlugins#setComputationSchedulerHandler(io.reactivex.functions.Function)}', 1), ('Mid\n', 1), ('ObservableFromIterable(Iterable<?', 1), ('PrimitiveIterator.class)', 1), ('source.blockingFirst().intValue());\n\n', 1), ('com.gargoylesoftware.htmlunit.html.HtmlNumberInput;\nimport', 1), ('xmlbeans,', 1), ('StrictSubscriber<T>\nextends', 1), ('NewThreadWorker(ThreadFactory', 1), ('Set<MediaType>', 1), ('cache.invalidate(userAccount.getUserId());', 1), ('nor', 1), ('assertNotNull(longs);\n', 1), ('AtomicReference<CompletableSubject>', 1), ('prettyPrint(",', 1), ('"posix",', 1), ('path.resolve(name);\n', 1), ('AmbInnerObserver<T>(this,', 1), ('mapConditionalNoError()', 1), ('this.factory.apply(children);\n', 1), ('"+928394235"));\n', 1), ('RxJavaPlugins.onObservableReturn(subscription));\n//\n//', 1), ('leniency!\n', 1), ('7);\n\n', 1), ('io.reactivex.Flowable;\n\n/**\n', 1), ('peek().', 1), ('DatagramChannel.open());\n', 1), ('this.attempts.intValue();\n', 1), ('#CUSTOM', 1), ('(JTextArea', 1), ('specialized', 1), ('presented.\n', 1), ('getUnallocatedSpace()', 1), ('permissions.\n', 1), ('2).blockingLast(3).intValue());\n', 1), ('cakeBakingService', 1), ('spellbookDao.persist(spellbook4);\n', 1), ('MaybeEmitter}', 1), ('tenantCallsCount.get(tenantName).incrementAndGet();\n', 1), ('spellDao.persist(spell8);\n', 1), ('too.\n', 1), ('uniqueExpectedIndices', 1), ('(!iterator.hasNext())', 1), ('Dispatcher()', 1), ('getWrappedRunnable();\n}\n', 1), ('Units\n', 1), ('AtomicReference<SingleSubject<T>>', 1), ('happen,', 1), ('callableListCreator()', 1), ('.parallel(1,', 1), ('HtmlNumberInput', 1), ('this.weightTons', 1), ('shorter', 1), ('AtomicReference<PublishDisposable<T>[]>(EMPTY);\n', 1), ('11:02', 1), ('System.out.println("Abnormal', 1), ('FlowableIntervalTest', 1), ('this.shortHash', 1), ('new,', 1), ('Testing', 1), ('JarHell', 1), ('AsyncResult<Long>', 1), ('shouldIncludePropsInToString()', 1), ('allCustomers)', 1), ('PlusExpressionTest()', 1), ('found"', 1), ('MaybeFromCallable(Callable<?', 1), ('E\n', 1), ('this.queue.offer(value);\n', 1), ('statement.close();\n', 1), ('CompletableLift(CompletableSource', 1), ('ScalarCallable);\n', 1), ('App(Dispatcher', 1), ('-5331524057054083935L;\n\n', 1), ('OnSuccess', 1), ('"epoch_millis");\n', 1), ('onCallback.accept(null,', 1), ('PropertyPermission("*",', 1), ('DebugTests', 1), ('testCollectorFailureDoesNotResultInErrorAndOnNextEmissionsFlowable()', 1), ('StudentRepository(Map<String,', 1), ('out.writeBoolean(false);\n', 1), ('inputStream.read(data,', 1), ('.registerChannel(tcpChannel(6667,', 1), ('assertTrue(q.offer(7,', 1), ('list3.addAll(Arrays.asList(1,', 1), ('doc.getString("bank"),\n', 1), ('testIoException()', 1), ('AmbMaybeObserver<T>(observer);\n', 1), ('IsoEra:\n', 1), ('fishing', 1), ('produces.</dd>\n', 1), ('MpscLinkedQueue<Runnable>();\n', 1), ('scheduleParser', 1), ('org.jmock.Sequence;\nimport', 1), ('cal.get(Calendar.DAY_OF_MONTH)', 1), ('checkNext;\n\n', 1), ('JavaVersionTests', 1), ('connectableObservable)', 1), ('((ScheduledExecutorService)executor).scheduleAtFixedRate(task,', 1), ('MaybePeekObserver<T>(observer,', 1), ('objectMapper;\n', 1), ('LOGGER.info("Char', 1), ('(info.getElasticsearchVersion().equals(Version.CURRENT)', 1), ('statement.setString(1,', 1), ('pp0.map(new', 1), ('Collection<FunctionDefinition>', 1), ('(acquire).\n', 1), ('DelayedDispose(dr),', 1), ('mapperThrows', 1), ('offer(v1)', 1), ('Iterator<Cake>', 1), ('DisposableHelperTest', 1), ('this.objectToExplain', 1), ('(super.equals(obj))', 1), ('m.value', 1), ('SAN\n', 1), ('Observable<Observable<HorrorMovie>>', 1), ('19.08.2017.\n', 1), ('TransformAction<V>', 1), ('Optional.empty()}', 1), ('inUse=1");\n', 1), ("Letter('M'),", 1), ('</i>\n', 1), ('FlowableWindowBoundarySelector(\n', 1), ('double.class)', 1), ('NodeImpl("level2_a",', 1), ('<V', 1), ('%.3f",', 1), ('email;\n\n', 1), ('builder.put(file.getFileName().toString(),', 1), ('NazgulEnum.HOARMURATH);\n', 1), ('PublishSubscription(Subscriber<?', 1), ('getOwner()', 1), ('occoured', 1), ('textInput.clear();\n', 1), ('CreateEmitter<T>\n', 1), ('thisDamaged);\n\n', 1), ('javax.swing.table.DefaultTableModel;\n\n/**\n', 1), ('nn', 1), ('innerDisposed()', 1), ('com.amazonaws.regions.Regions;\nimport', 1), ('attributes,', 1), ('Beta', 1), ('interface)', 1), ('StartingData(LocalDateTime.now());\n', 1), ('nextCancelRaceConditional()', 1), ('TaskGenerators', 1), ('payloads.put(tuple.v1(),', 1), ('NewThreadScheduler()', 1), ('serial.setSubscription(new', 1), ('assertEquals(Long.valueOf(2),', 1), ('w.close();\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/doAfterTerminate.png"', 1), ('pp.singleElement().delay(100,', 1), ('org.elasticsearch.xpack.security.audit;\n\nimport', 1), ('host(settings.getProperty(SOCKS_PROXY,', 1), ('[Hello!]', 1), ('def.class.getSimpleName();\n', 1), ('testWithFollowingFirst()', 1), ('path.resolve(target);\n', 1), ('Suppress', 1), ('assertTimeout(ofMillis(6000),', 1), ('org.mockito.Mockito.verifyZeroInteractions;\n\nimport', 1), ('group".\n', 1), ('(propsMap.isEmpty()', 1), ('SingleToFlowable<T>(sit.next());\n', 1), ('(!deferred.isCancelled())', 1), ('1).toObservable());\n', 1), ('SQL_STATE_BAD_SERVER', 1), ('CountSubscriber(s));\n', 1), ('RefCountSubscriber(Subscriber<?', 1), ('CompletableObserver>', 1), ('schedulerDocumentation;\n\n', 1), ('tuple', 1), ('com.iluwatar.serverless.faas.ApiGatewayResponse;\n\nimport', 1), ('assertEquals(expectedTarget,', 1), ('spscLinkedArrayQueueBiOffer()', 1), ('io.reactivex.observers.DisposableCompletableObserver;\nimport', 1), ('lambda.\n', 1), ('assertFalse(fallback.hasObservers());\n', 1), ('ExecutorWorker(executor);\n', 1), ('ScanSubscriber<T>(s,', 1), ('session.createSQLQuery(\n', 1), ('Observable<S', 1), ('this.sourceCount', 1), ('TRUNCATE_EXISTING,', 1), ('SpellbookDaoImplTest', 1), ('first.queue;\n', 1), ('Set<Object>', 1), ('zip3()', 1), ('weird', 1), ('getType("char");\n', 1), ('Account(int', 1), ('CertificateTrustRestrictions(trustNodeNames);\n', 1), ('schedule(run);\n', 1), ('Spell("Levitation");\n', 1), ('closed\n', 1), ('fs.getPath("bar");\n', 1), ('WithLatestFromSubscriber<?,', 1), ('Timed<Integer>(null,', 1), ('CUSTOMER', 1), ('apiGatewayProxyResponseEvent\n', 1), ('SerializedProcessor<T>', 1), ('DEFAULT_TICKETS_COLLECTION', 1), ('IllegalArgumentException.class);\n', 1), ('elasticsearch!\n', 1), ('requestType,', 1), ('this.direct', 1), ('(out.getVersion().onOrAfter(Version.V_5_4_0))', 1), ('usernameInputTextField', 1), ('allocation/deallocation', 1), ('request();\n', 1), ('javaMethodName;\n\n', 1), ('parent.innerNext(t);\n', 1), ('asyncDisposeIdempotent()', 1), ('java.lang.management.*;\nimport', 1), ('(infinite', 1), ('allCakes)', 1), ('.concatMapCompletable(new', 1), ('extracting', 1), ('CompletableSubject.\n', 1), ('java.lang.Long}</li>\n', 1), ('Single-like', 1), ('eq(BUCKET_SPAN),', 1), ('IUnitOfWork.MODIFY);\n\n', 1), ('CompletableError(new', 1), ('mapperThrowsObservable()', 1), ('.build()\n', 1), ('1891866368734007884L;\n\n', 1), ('rejectFlowableFusion()', 1), ('(int)elements).timeout(1,', 1), ('doOnDisposeCrash()', 1), ('SingleObserver<Boolean>', 1), ('SessionScoped', 1), ('Cupertino");\n', 1), ('getTrustedNames()', 1), ('failComputationObservableBlockingFirst()', 1), ('Usually', 1), ('ByteBuffer.wrap("Server', 1), ('resolutions\n', 1), ('NullPointerException("Operator', 1), ('BlockingQueue<Item>', 1), ('flowMaybe;\n\n', 1), ('WeatherObserver}', 1), ('this.data', 1), ('SpellbookDaoImpl();\n', 1), ('ScheduledTask', 1), ('IgnoreElementsSubscriber<T>', 1), ('assertTrue(d3.isDisposed());\n', 1), ('org.junit.Assert.assertThat;\n\nimport', 1), ('hasEntry("es.painless_class",', 1), ('assertEquals(3', 1), ('a.onNext(n', 1), ('(servers)', 1), ('15.12.2015', 1), ('LoggerFactory.getLogger(ConsoleAdministration.class);\n\n', 1), ('crop', 1), ('NoAnonymousInnerClassesTest', 1), ('cache.containsKey(userId);\n', 1), ('Integer[100', 1), ('9:-Xlog:age*=trace,gc*,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m}\n', 1), ('DisposableLambdaObserver(Observer<?', 1), ('(first.compareAndSet(current,', 1), ("':')", 1), ('exchange.getResponseBody().write(storageResponse.body);\n', 1), ('assumes', 1), ('types.size(),', 1), ('cost', 1), ('actionThrowsConditional()', 1), ('user-supplied', 1), ('buffers.offer(b);\n', 1), ('BasicFuseableConditionalSubscriber(ConditionalSubscriber<?', 1), ('io.reactivex.internal.observers.DeferredScalarDisposable;\n\npublic', 1), ('ObservableLastSingle(ObservableSource<T>', 1), ('onNext}.\n', 1), ('list.add(m);\n', 1), ('.get();', 1), ('"joda.time.txt"\n', 1), ('cd.assertError(CompositeException.class);\n', 1), ('CacheDisposable<T>(s,', 1), ('finishes', 1), ('any(RuntimeException.class));\n', 1), ('assertTrue(checkResult.getPrizeAmount()', 1), ('head!"));\n', 1), ('AtomicReference<PublishDisposable<T>[]>', 1), ('this(25L);\n', 1), ('(javaMethod.getReturnType()', 1), ('\'").append(mname).append("\'\\r\\n")\n', 1), ('second));\n', 1), ('onErrorMissingShouldReportNoCustomOnError()', 1), ('Observable.fromArray(innerArray);\n\n', 1), ('Result[4];\n\n', 1), ('com.iluwatar.dirtyflag.DataFetcher;\n\n/**\n', 1), ('statically', 1), ('<i>Handle</i>', 1), ('flatMap(@NonNull', 1), ('ConcatMapTckTest', 1), ('readThrough(String', 1), ('overrideNewThreadScheduler()', 1), ('rxThreadsAfter,', 1), ('9:55', 1), ('TestHelper.checkDisposed(Completable.concat(Flowable.just(Completable.complete())));\n', 1), ('connectableObservableAsCf()', 1), ('nullScheduler()', 1), ('Comparable<TimedRunnable>', 1), ('BlockingHelperTest', 1), ('nextSubscriber', 1), ('Completable.ambArray(ps.ignoreElements(),', 1), ('SubscriptionHelperTest', 1), ('SecurityIntegTestCase', 1), ('org.springframework.test.context.support.AnnotationConfigContextLoader;\n\nimport', 1), ('(idx2', 1), ('initCachingPolicy(CachingPolicy', 1), ('multicasted', 1), ('ResponseHandler(storageTestServer));\n', 1), ('unsubscribeComposes()', 1), ('threads1.add(Thread.currentThread().getName());\n', 1), ('#hide()}\n', 1), ('builder.putList("discovery.zen.ping.unicast.hosts",', 1), ('SafeSubscriberTestException', 1), ('org.elasticsearch.xpack.sql.jdbc.net.protocol;\n\nimport', 1), ('DomainEvent(long', 1), ('directory");\n', 1), ('Maybe.amb(Arrays.asList(pp1.singleElement(),', 1), ('org.hamcrest.Matchers;\n\nimport', 1), ('SecurityFiles', 1), ('CompositeDisposable());\n', 1), ('Maybe.concatArrayDelayError(source,', 1), ('EventConsumer(int', 1), ('DocumentImplementation(new', 1), ('SoldierVisitorTest', 1), ('threadPoolExecutor', 1), ('subscribeActual(observer);\n', 1), ('KeyStore.getInstance("JKS");\n', 1), ('normalDelayErrors()', 1), ('iae', 1), ('onLift)', 1), ('DefaultSubscriberImpl();\n', 1), ('materialize', 1), ('encapsulate!\n', 1), ('DoOnEachObserver<T>', 1), ('mergeArrayDelayError(MaybeSource<?', 1), ('checkCompletableScheduler()', 1), ('java.util.Collections.emptyList;\n\nimport', 1), ('fail(b.toString());\n', 1), ('mn', 1), ('subj.onError(ex);\n', 1), ('b.indexOf("{",', 1), ('String[]{"1","a","2"}).flatMapSingle(new', 1), ('HtmlSelect', 1), ('io.reactivex.plugins;\n\nimport', 1), ('assertFalse(list.remove((Integer)10));\n\n', 1), ('assertTrue(d.isCancelled());\n\n//', 1), ('ObservableCount<T>(source));\n', 1), ('cancellation");\n', 1), ('normalizedPath', 1), ('withdrawMoney(money);\n', 1), ('DataSource,', 1), ('500));\n', 1), ('"+987324454"));\n', 1), ('1.4.\n', 1), ('maybe)', 1), ('"284-936",', 1), ('Collections.sort(requested);\n\n', 1), ('(this.attributeNames.length', 1), ('getReceiver()', 1), ('levels.', 1), ('SingleCache(SingleSource<?', 1), ('"plugin', 1), ('serialization\n', 1), ('soProducerIndex(long', 1), ('Richard', 1), ('LinkedTransferQueue<>();\n', 1), ('iterableFirstCancels()', 1), ('assertThat(obj).isEqualTo(simpleObject);\n', 1), ('(weekday', 1), ('s1.onError(e);\n', 1), ('leftExpression,', 1), ('assertTrue(r.get());\n\n', 1), ('ArrayList<Throwable>();\n', 1), ('terminate()', 1), ('out.writeString(classname);\n', 1), ('<i>IMPLEMENTATION</i>', 1), ('assertNotNull(cakeInfo.toString());\n', 1), ('MergeInnerCompletableObserver(CompletableObserver', 1), ('Optional.of(ticket);\n', 1), ('Settings.builder().loadFromPath(path).build();\n', 1), ('instantiating.\n', 1), ('items.size());\n\n', 1), ('super("Lists', 1), ('3).sorted(new', 1), ('consoleLoggerModule.unprepare();\n', 1), ('exception.getClass());\n\n', 1), ('Flowable.empty().blockingSingle();\n', 1), ('"&SigAlg="', 1), ('9:34', 1), ('(int)elements).delaySubscription(1,', 1), ('RxJavaPlugins.setInitComputationSchedulerHandler(initReplaceWithImmediate);\n\n', 1), ('TimeIntervalSubscriber<T>', 1), ('Files.delete(blobPath);\n', 1), ('start(int', 1), ('onXError()', 1), ('forEachColumn(action::accept);\n', 1), ('@Produces\n', 1), ('Objects.requireNonNull(factoryWithDefaultObserver);\n', 1), ('FieldJsonMapper(),', 1), ('ExecutableCondition', 1), ('testAll()', 1), ('IUnitOfWork<Student>', 1), ('findPattern("BehaviorSubject<.*>\\\\s+bp");\n', 1), ('Files.walkFileTree(blobPath,', 1), ('method.rtn.clazz)', 1), ('writer.append("', 1), ('TestException()).doOnSubscribe(new', 1), ('assertTrue(result.equals(expected));\n', 1), ('CacheStore.writeBehind(userAccount);\n', 1), ('Observable.timer(1,', 1), ('org.apache.tika.exception.TikaException;\nimport', 1), ('innerError(InnerQueuedSubscriber<T>', 1), ('SpscLinkedArrayQueue<CompletableSource>(Flowable.bufferSize());\n', 1), ('LOGGER.debug("ConsoleLoggerModule::unprepare();");\n', 1), ('ParallelReduceFullMainSubscriber<T>(s,', 1), ('sword"},\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timeout.2s.png"', 1), ('io.reactivex.internal.schedulers.ExecutorScheduler.DelayedRunnable;\n\npublic', 1), ('})\n@interface', 1), ('SkipLastObserver<T>(s,', 1), ('enabled()', 1), ('timeout);\n}\n', 1), ('cupertino");\n', 1), ('ObservableAll(ObservableSource<T>', 1), ('majorVersion(final', 1), ('sysprops\n', 1), ('Setting<Long>', 1), ('"layers=[id=3456', 1), ('handleRequest(APIGatewayProxyRequestEvent\n', 1), ('replaceWithImmediate', 1), ('mock(CompletableObserver.class);\n', 1), ('predicate);\n\n', 1), ('deque,', 1), ('spellbook3.addSpell(spell8);\n', 1), ('channel.getJavaChannel().close();\n', 1), ('Word\n', 1), ('onNext()', 1), ('logo\n', 1), ('userDto.isActive(),\n', 1), ('javaHandle;\n\n', 1), ('Single.just(5),\n', 1), ('CharacterType;\n', 1), ('structure/implementation', 1), ('logger.debug("[discovery-file]', 1), ('this.lazySet(n);\n', 1), ('boat', 1), ('checkSchedulerBadMethod(Completable.class.getSimpleName());\n', 1), ('30,', 1), ('15', 1), ('WeatherObserverTest<Hobbits>', 1), ('Supplier[]{Wizard::new}\n', 1), ('wrapping\n\n', 1), ('LdapMetaDataResolver(Settings', 1), ('spellbook1.addSpell(spell2);\n', 1), ('kvPair.getKey();\n', 1), ('io.reactivex.exceptions.CompositeException;\nimport', 1), ('VisitorTest<SoldierVisitor>', 1), ('captain.row();\n\n', 1), ('.startTime(ZonedDateTime.ofInstant(Instant.ofEpochMilli(1511395200000L),', 1), ('Wadler}\n', 1), ('.assertErrorMessage("test");\n', 1), ('guardedQueue.put(20);\n', 1), ('Struct}s', 1), ('(error.compareAndSet(null,', 1), ('FlowableFlatMapCompletableAsyncPerf', 1), ('replenishMain', 1), ('RetrySubscriber(Subscriber<?', 1), ('child.onSubscribe(frc);\n\n', 1), ('DatagramSocket())', 1), ('NioDatagramChannel(int', 1), ('DisposeOnCancelTest', 1), ('assertTrue(!countries.isEmpty());\n', 1), ('pairwise', 1), ('testBackpressureWithNoInitialValueObservable()', 1), ('map.put("hungry",', 1), ('threadpool);\n\n', 1), ('checkDoubleOnSubscribeObservable(Function<Observable<T>,', 1), ('sourceCode.indexOf("This', 1), ('this.lengthMeters', 1), ('.thenApply(value', 1), ('(Modifier.PUBLIC', 1), ('dtm', 1), ('to2.assertNotComplete();\n\n', 1), ('orphanRemoval', 1), ('.subscribe(ts);\n', 1), ('Concurrently', 1), ('NUL', 1), ('source.subscribe(tss);\n\n', 1), ('drainMissedRequestedMoreProduced()', 1), ('(arity', 1), ('Function<Single<Integer>,', 1), ('DbManager}).', 1), ('HashSet<String>();\n', 1), ('Low-level', 1), ('ObservableSingleSingle<T>', 1), ('height="393"', 1), ('deals', 1), ('.writeValueAsString(body));\n\n', 1), ('statement.setInt(3,', 1), ('validateNullThrows()', 1), ('from(ExecutorService)', 1), ('us.onNext(2);\n', 1), ('aggregator.\n', 1), ('(line.length()', 1), ('s.onSubscribe(gd);\n', 1), ('Ok', 1), ('fundamental', 1), ('Service#getWelcomeMessage(User)}', 1), ('org.elasticsearch.action.admin.cluster.node.stats.NodeStats;\nimport', 1), ('page.getElementById("albumTitle");\n', 1), ('bufferedReader.close();\n', 1), ('compl[0]);\n\n', 1), ('WRONG_CONTACT', 1), ('Arrays.fill(arrayInner,', 1), ("line.indexOf('(');\n", 1), ('source.onNext(8);\n', 1), ('Opens', 1), ('"Bar",', 1), ('collection.\n', 1), ('crashes', 1), ('ArrayDeque<InnerQueuedObserver<R>>();\n', 1), ('TestMultiValueAggregation', 1), ('PRODUCTS:\n', 1), ('ByteArrayOutputStream.', 1), ('TEST_PART_TYPE', 1), ('java.util.function.Supplier;\nimport', 1), ('done(final', 1), ('newEvent.addListener(this);\n', 1), ('javaName,', 1), ('"FlowableReduceSeedSingle",\n', 1), ('topping.setId(2345L);\n\n', 1), ('inMemoryDao', 1), ('otherFiles', 1), ('FlowableBlockingSubscribe()', 1), ('assertFalse(JavaVersion.isValid(version));\n', 1), ('getPath(final', 1), ('types).\n', 1), ('run.dispose();\n\n', 1), ('"lotteryTestTickets";\n', 1), ('org.elasticsearch.xpack.security.authc.ldap.support;\n\nimport', 1), ('assertNull(RxJavaPlugins.onAssembly((Flowable)null));\n\n', 1), ('level2B);\n', 1), ('//NOSONAR\n\n', 1), ('tuple\n', 1), ('assertEquals(this.soldierResponse.get(),', 1), ('toSortedListCapacity()', 1), ('org.apache.tika.parser.microsoft.ooxml.OOXMLParser(),', 1), ('otherSignalsAndCompletes()', 1), ("'rail'\n", 1), ('ExecutorSchedulerDelayedRunnableTest', 1), ('observableNoSubscribers()', 1), ('"three");\n\n', 1), ('sergeantResponse', 1), ('crashing', 1), ('pattern.pattern(),', 1), ('(QueueDisposable<R>)', 1), ('LoggerFactory.getLogger(ReaderWriterLock.class);\n\n\n', 1), ('SingleDelayTest', 1), ('3.6\n', 1), ('cleared............");\n', 1), ('this.it;\n\n', 1), ('java.math.BigDecimal.class.getName(),\n', 1), ('databasePath', 1), ('spaces.\n', 1), ('notifyObservers()', 1), ('def.class;\n', 1), ('(this.sergeantResponse.isPresent())', 1), ('rangeAsyncPipeline', 1), ('session.persist(entity);\n', 1), ('invalidLines.entrySet())', 1), ('remove(int', 1), ('gold."));\n', 1), ('Database', 1), ('HolderNaive();\n\n', 1), ('userDto.firstName)', 1), ('CsvRecordWriter(OutputStream', 1), ('e.dataType().esType', 1), ("'wins')\n", 1), ('JavaVersion.parse("1.7.2.1");\n\n', 1), ('SimpleFluentIterable\n', 1), ('super("No', 1), ('this.keyPassword', 1), ('assertFalse(Functions.predicateReverseFor(s).test(1));\n', 1), ('ExecutorScheduler', 1), ('MultiplyExpression::new);\n', 1), ('otherDamaged,', 1), ('tempFileView', 1), ('readFile(g);\n\n', 1), ('SequentialDispose', 1), ('eq(false),\n', 1), ('AssertionError(e.toString());\n', 1), ('idToCustomer', 1), ('biconsumer()', 1), ('value0\n', 1), ('fusedOnErrorCrashConditional()', 1), ('Flowable.intervalRange(5,', 1), ('SingleScheduler(ThreadFactory', 1), ('LotteryTicketTest', 1), ('files)', 1), ('14)));\n', 1), ('Sergeant());\n', 1), ('deregister\n', 1), ('clearIsPassthrough()', 1), ('org.apache.isis.viewer.wicket.viewer.integration.wicket.AuthenticatedWebSessionForIsis;\n\nimport', 1), ('assertExpectedJvmOptions(randomIntBetween(8,', 1), ('readFromDb(String', 1), ('cancelAndChange()', 1), ('FlowableStartWithTests', 1), ('dao;\n\n', 1), ('BlockingFlowableNext(Publisher<?', 1), ('PlayMessage[MAX_PENDING];\n\n', 1), ('org.elasticsearch.painless.api.Debug;\nimport', 1), ('(HeroStat)', 1), ('received,', 1), ('Type(final', 1), ('BytesWriteHandler', 1), ('SpaceStationMir(1,', 1), ('unboxFrom(Class<?>', 1), ('lazySet(idx,', 1), ('createConsumerThrows()', 1), ('SingleDoOnTest', 1), ('promise;\n\n', 1), ('PlayerDetails("elsa@foo.bar",', 1), ('value:', 1), ('\'"\',\n', 1), ('io.reactivex.internal.operators.maybe.MaybeZipArray.ZipCoordinator;\n\npublic', 1), ('"four");\n', 1), ('EQUALS', 1), ('RxMethod();\n\n', 1), ('create().\n', 1), ('deserializedFishV2.getWeightTons());\n', 1), ('}}\n', 1), ('iterableCancelled()', 1), ('BlockingSubscriber<Integer>', 1), ('spellName', 1), ('inOrder.verify(ballThread).resumeMe();\n', 1), ('b0', 1), ('newCapacity;\n', 1), ("what's", 1), ('Software.\n\nTHE', 1), ('DoFinallyObserver(Observer<?', 1), ('delegateTrustManager,', 1), ('InnerCompletableCache(s);\n', 1), ('entityName', 1), ('addService(Service', 1), ('FlowableWindowBoundary(Flowable<T>', 1), ('MappingMetaData', 1), ('reuseScheduledExecutorAsWorker()', 1), ('FlowableJust(final', 1), ('flush(SelectionKey', 1), ('testFilterChecks()', 1), ('IllegalStateException}.</dd>\n', 1), ('methods;\n\n', 1), ('2,\n', 1), ('X509ExtendedKeyManager', 1), ('toSortedList(comparator,', 1), ('parsed)', 1), ('(!found)', 1), ('gathered', 1), ('MoneyDepositEvent(long', 1), ('LazyFluentIterable.from(integerList).filter(positives()).first(4).last(2)\n', 1), ('NoPermission\n', 1), ('separately.', 1), ('DefaultTableModel(new', 1), ('Short.class;\n', 1), ('MongoTicketRepository()', 1), ('java.util.function.BiConsumer;\n\n/**\n', 1), ('CompletableNever()', 1), ('(eventClassName.equals("MoneyDepositEvent"))', 1), ('InterruptedException\n', 1), ('CompletableMergeIterable(Iterable<?', 1), ('assertNull(ex.terminate());\n\n', 1), ('o.scan("",', 1), ('SwitchMapMaybeSubscriber<?,', 1), ('whitelistFields)', 1), ('Servant}', 1), ('readerMutex', 1), ('ThreadPoolDispatcher}.\n', 1), ('(cancelled', 1), ('contentActions', 1), ('cucumber.api.java.After;\nimport', 1), ('(Files.isRegularFile(databasePath)', 1), ('{@xxx', 1), ("StringBuilder(prefix).append('-').append(incrementAndGet());\n\n//", 1), ('CacheDisposable[0];\n', 1), ('s.schedule(Functions.EMPTY_RUNNABLE));\n\n', 1), ('moment.\n', 1), ('FlowableMergeWithSingle(Flowable<T>', 1), ('function8', 1), ('move\n', 1), ('AmbMaybeObserver(MaybeObserver<?', 1), ('(existingValue', 1), ('(tailIndex', 1), ('.andThen((Maybe<Object>)', 1), ('function6', 1), ('blood"));\n', 1), ('this.status', 1), ('StatusMember(1));\n', 1), ('Objects.requireNonNull(headers);\n', 1), ('(!value.matches("^0*[0-9]+(\\\\.[0-9]+)*$"))', 1), ('ownerStruct.clazz', 1), ('bottomShelf;\n\n', 1), ('ObservableFlatMapCompletableCompletable(ObservableSource<T>', 1), ('requestCancelCrash()', 1), ('commands.authorCreated("eEvans",', 1), ('ThreadLocalRandom.current().nextInt(1,', 1), ('resultSet.getString("FNAME"),', 1), ('requested.addAndGet(-scalarEmission);\n', 1), ('resources.\n', 1), ('onError(IllegalArgumentException)</li>\n', 1), ('concatMap}', 1), ('current()', 1), ('equalTo(1));\n', 1), ('FlowableSkipLastTimed<T>', 1), ('6285096158319517837L;\n\n', 1), ('guardedQueue.get();\n', 1), ('CompletableOperator()', 1), ('ConcatMapSingleMainObserver<?,', 1), ('overloads)', 1), ('(!files.isEmpty())', 1), ('this.reactor', 1), ('checkObservableSchedulerDoc()', 1), ('Moreover,', 1), ('Event-based', 1), ('"new_email2",', 1), ('path.substring(1);\n', 1), ('hardware', 1), ('*/TrampolineScheduler()', 1), ('secureStrings', 1), ('RxThreadFactory("Test",', 1), ('ON_COMPLETE', 1), ('writeLock()', 1), ('loginButton', 1), ('java.util.concurrent.ThreadLocalRandom;\nimport', 1), ('createFromEntities(final', 1), ('Consumer<TestObserver<Void>>()', 1), ('SpscArrayQueue<T>(batchSize);\n', 1), ('cake.addLayer(newLayer);\n\n', 1), ('duration,', 1), ('testScanWithRequestOne()', 1), ('list.addAll(index,', 1), ('this.params.put(key,', 1), ('thrown:\n', 1), ('StudentDatabase();\n', 1), ('Async', 1), ('283-284\n', 1), ('cakeInfo.cakeLayerInfos)', 1), ('assertEquals(100,', 1), ('(AmbInnerObserver<T>', 1), ('@Transactional\n', 1), ('current.shutdownNow();\n', 1), ('pane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);\n', 1), ('Maybe.just(1))\n', 1), ('r.getDrink();\n', 1), ('courage")});\n', 1), ('attempted', 1), ('this.other;\n', 1), ('.flatMap(Functions.justFunction(Maybe.<Integer>empty()),\n', 1), ('DATA(SQLDataException::new),\n', 1), ('(SubscriptionHelper.setOnce(upstream,', 1), ('material', 1), ('shifts', 1), ('@SuppressWarnings("unchecked")', 1), ('Emitter(MaybeObserver<?', 1), ('TSYNC', 1), ('SingleAmb<T>(null,', 1), ('Flowable.switchOnNext(Flowable.just(\n', 1), ('mockContainer;\n\n', 1), ('stopLatch.countDown();\n', 1), ('fs.request(-99);\n\n', 1), ('IncrementingIterable(size);\n\n', 1), ('assertNotEquals(String.valueOf(Version.CURRENT.minor),', 1), ('SubscribeOnObserver<T>\n', 1), ('DNSOnlyHostnameVerificationTests', 1), ('verifyPositive(int', 1), ('schedulers', 1), ('schedulers:\n', 1), ('sequentialDelayError(Flowable.bufferSize());\n', 1), ('filter(Functions.isInstanceOf(clazz)).cast(clazz);\n', 1), ('com.iluwatar.throttling.CallsCount;\n\n/**\n', 1), ('testGetAuthorBooksCount()', 1), ('assertFalse(list2.equals(list));\n', 1), ('Mockito.doAnswer(new', 1), ('"key";\n', 1), ('IntervalObserver(to);\n', 1), ('(DebounceInnerObserver<T,', 1), ('Flowable<Event>', 1), ('testSimpleBackpressure()', 1), ('TakeUntilPredicateObserver<T>(s,', 1), ('CompletableObserveOnTest', 1), ('1,jvmArgsAppend', 1), ('returned)', 1), ('con.setRequestMethod(requestMethod);\n', 1), ('invalidLines.put(lineNumber,', 1), ('timedRunnable;\n\n', 1), ('mapFailHandlerThrows()', 1), ('inject', 1), ('regression', 1), ('assertEquals(name,', 1), ('((nextNode', 1), ('transformToString()', 1), ('successful\n', 1), ('cleanupKeystore()', 1), ('height="335"', 1), ('HTTP_PROXY', 1), ('presenter.cancelled();\n', 1), ('ComputationTask());\n\n', 1), ('grow', 1), ('entries.length);\n', 1), ('eventually', 1), ('ClqSimpleQueue()', 1), ('MostRecentObserver<T>(initialValue);\n\n', 1), ('perInstanceEvent)', 1), ('price;\n\n', 1), ('testExecute(Filter', 1), ('entity.toString());\n\n', 1), ('SingleObserver<U>,', 1), ('(lines.get(i', 1), ('CreateEmitter<T>', 1), ('"test-part-type";\n', 1), ('"\\\\");\n', 1), ('inner.actual.onComplete();\n', 1), ('names.size();\n', 1), ('Flowable.fromArray(sources).concatMapEager((Function)MaybeToPublisher.instance());\n', 1), ('SingleSource.\n', 1), ('ScanSubscriber<T>', 1), ('url.openConnection(p)', 1), ('Maybe.amb(ms)\n', 1), ('RxJavaPlugins.setIoSchedulerHandler(scheduler2scheduler);\n', 1), ('OtherSubscriber();\n', 1), ('LatchedSingleObserver(Blackhole', 1), ('works.', 1), ('assertTrue(abilities.contains("speed"));\n', 1), ('SingletonTest<S>', 1), ('another);\n\n', 1), ('Color.DARK}\n', 1), ('FlushAcknowledgementHolder>>', 1), ('ObjectHelper.requireNonNull(initialCollection.call(),', 1), ('DEFAULT_COUNTERS_COLLECTION', 1), ('matchesPattern(Pattern', 1), ('issued', 1), ('}).blockingIterable();\n', 1), ('FishingBoatAdapter());\n', 1), ('MaybeUnsafeCreate(MaybeSource<T>', 1), ('FlowableOnBackpressureError(Flowable<T>', 1), ('unicastHostsFilePath;\n\n', 1), ('to1.assertResult();\n', 1), ('reactor)', 1), ('Constructor},', 1), ('CompletableDoFinally', 1), ('memento.\n', 1), ('Again', 1), ('lengthMeters,', 1), ('cake1', 1), ('WizardDaoImplTest()', 1), ('instances");\n', 1), ('Iterator");\n', 1), ('assertNull(task.call());\n\n', 1), ('furious!",', 1), ('processor\n', 1), ('RemoteFailure.parseFromResponse(stream);\n', 1), ('RuntimeException.class,', 1), ('observableInner.blockingLast();\n', 1), ('2875964065294031672L;\n', 1), ('size.\n', 1), ('?:', 1), ('Tamaex");\n', 1), ('secretInput.add(input);\n', 1), ('Idores"));\n', 1), ('doOnSuccess()', 1), ('!!!!!!!!!");\n', 1), ('Field}\n', 1), ('matchAll', 1), ('source.getParameterTypes()))', 1), ('SingleTransformer<Upstream,', 1), ('this.factoryWithDefaultObserver', 1), ('selections', 1), ('combine(List<?', 1), ('getRedirectUrl(null);\n', 1), ('CompletableAndThenPublisher<R>', 1), ('AtomicInteger(sources.length', 1), ('nodeConfigPath(nodeOrdinal).resolve("keystore.jks");\n', 1), ('singletonList(toString));\n', 1), ('flat', 1), ('UsingObserver(CompletableObserver', 1), ('DnRoleMapper(realmConfig,', 1), ('-7012088219455310787L;\n\n', 1), ('"fishV2', 1), ('.subscribeOn(Schedulers.io());\n\n', 1), ('System.getProperty("hexagonal.properties.path");\n', 1), ('cake.setLayers(foundLayers);\n', 1), ('MaybeDetachTest', 1), ('DelayedRunnable(Runnable', 1), ('this.visitor.visitSergeant(new', 1), ('Request(final', 1), ('seenInvalidLines.put(lineNumber,', 1), ('1422943772.875342698,', 1), ('set()', 1), ('java.util.Set}</li>\n', 1), ('FileInputStream(path))', 1), ('DoFinallyObserver(s,', 1), ('Configuration.unix().toBuilder().setAttributeViews("basic",', 1), ('index++);\n', 1), ('Exceptions.throwIfFatal(ex1);\n', 1), ('-4445381578878059054L;\n\n', 1), ('singleMaybe()', 1), ('concatArrayEager(MaybeSource<?', 1), ('flowableNoObserver()', 1), ('PublicFinalMethods', 1), ('book.getPrice();\n', 1), ('indexOf(Object', 1), ('V>(evictedGroups);\n', 1), ('Account.\n', 1), ('SingleTckTest', 1), ('whenNone()', 1), ('assertEquals(Arrays.asList(1L,', 1), ('FlowableSubscriber<Notification<T>>,', 1), ('onError},\n', 1), ('Event\n', 1), ('ObservableFlatMapMaybeEmptyPerf', 1), ('CompletableConcatIterable', 1), ('menuItem)', 1), ('List<Completable>', 1), ('*/\n@Entity\npublic', 1), ('1024d));\n', 1), ('UndeliverableException}.\n', 1), ('"someState";\n', 1), ('libraryFunctionActingOnMovieObservables(Flowable<Movie>', 1), ('functionThrows()', 1), ('getType("Integer");\n', 1), ('layerInfo.calories));\n', 1), ('AtomicMoveNotSupportedException', 1), ('whitelistMethod.painlessParameterTypeNames', 1), ('TestHelper.checkDisposed(PublishProcessor.create().singleElement().onTerminateDetach());\n', 1), ('s1.subscribe(shared);\n', 1), ('Crappy', 1), ('handlers;\n\n', 1), ('ZipSingleObserver<T>\n', 1), ('nazguls.put(NazgulName.MURAZOR,', 1), ('assertTrue(sa.isUnbounded());\n\n', 1), ('senses', 1), ('cls', 1), ('SubscribeOnMaybeObserver<T>', 1), ('problem', 1), ('assertTrue(s.isCancelled());\n\n', 1), ('foundJars++;\n', 1), ('last(1).iterator();\n', 1), ('CapturingObserver<Object>', 1), ('getType(def.class.getSimpleName());\n', 1), ('java.time.LocalDateTime;\n\nimport', 1), ('StringArrayList();\n\n', 1), ('assertNotNull(getHeavy());\n', 1), ('SingleFromUnsafeSource<T>(onSubscribe));\n', 1), ('awaitTimeoutInterrupted()', 1), ('simpleMixed()', 1), ('turnedOff.put("enhancedWelcome",', 1), ('.append(abilities', 1), ('getCreatedTime()', 1), ('Single>', 1), ('org.opensaml.core.xml.util.XMLObjectSupport;\nimport', 1), ('Struct}\n', 1), ('ts.assertFailure(NullPointerException.class);\n', 1), ('"text/plain",\n', 1), ('System.out.println("JDK', 1), ('SingleFlatMapPublisher(SingleSource<T>', 1), ('BasicFileAttributes.class);\n', 1), ('description\n', 1), ('IndexType(String', 1), ('Inventory\n', 1), ('Completable.complete()).test();\n\n', 1), ('LOGGER.warn("Interrupted!",', 1), ('FileOutputStream(aFile,', 1), ('inDateFormat\n', 1), ('fatal.\n', 1), ('LocalDateTime.now().toString());\n', 1), ('(Spellbook', 1), ('Observable<Upstream>', 1), ('persists', 1), ('exclusive.\n', 1), ('SpscLinkedArrayQueue<R>(bufferSize);\n', 1), ('"leading', 1), ('source.scan(0,', 1), ('doLogging(datagram.getData());\n', 1), ('Modifier.FINAL)', 1), ('Schedulers.shutdown();\n', 1), ('condition\n', 1), ('Create,', 1), ('verify(exceptionHandler).uncaughtException(eq(ballThread),', 1), ('studentRepository.commit();\n', 1), ('BlockingObservableLatestIterator<T>();\n\n', 1), ('onePointSeven', 1), ('io.reactivex.internal.operators.maybe.MaybeToFlowable;\nimport', 1), ('workDone.size());\n', 1), ('TestHelper.checkDisposed(CompletableSubject.create().doOnComplete(Functions.EMPTY_ACTION));\n', 1), ('customerResource.save(customer);\n\n', 1), ('cancel;\n\n', 1), ('able\n', 1), ('FUSED', 1), ('gave', 1), ('translates', 1), ('d.cancel();\n', 1), ('MergeInnerObserver\n', 1), ('SingleError<T>', 1), ('IntervalTckTest()', 1), ('issue:', 1), ('simpleObjects.create("Foobar");\n\n', 1), ('version.size()', 1), ('constructors\n', 1), ("King's", 1), ('emitters.add(kingsHand);\n', 1), ('Matchers', 1), ('assertThat(filesToMonitor,', 1), ('freeGroup.add(user);\n', 1), ('javaInteraceLookups', 1), ('-8583764624474935784L;\n\n', 1), ('SimpleObjectsTearDown());\n\n', 1), ('removeObserver(O', 1), ('slot', 1), ('LOG.info("Yet', 1), ('s.onSubscribe(bs);\n\n', 1), ('DisposableHelper.dispose(subscription);\n\n', 1), ('compose()', 1), ('(Runtime.getRuntime().availableProcessors()', 1), ('TimestampConverter}\n', 1), ('RxJavaPlugins.setOnConnectableObservableAssembly(connectableObservable2ConnectableObservable);\n', 1), ('scenario(Servant', 1), ('Document()).into(new', 1), ('permission).getUnresolvedActions();\n', 1), ('org.elasticsearch.action.MockIndicesRequest;\nimport', 1), ('sleeping={}', 1), ('http://martinfowler.com/eaaCatalog/lazyLoad.html\n', 1), ('list3.toString());\n\n', 1), ('getAccountNoFrom()', 1), ('parameters.env.configFile().resolve("ingest-geoip");\n', 1), ('SingleFromTest', 1), ('testInterrupt()', 1), ('writer.putStatic(field.owner.type,', 1), ('spellbook3', 1), ('structsMap', 1), ('Tenant(String', 1), ('onNextDisposeCrash()', 1), ('machineStateGlobal);\n', 1), ('"1.7."};\n', 1), ('draw");\n', 1), ('this.strength', 1), ('org.elasticsearch.xpack.core.security.SecurityExtension;\n\nimport', 1), ('delayErrors);\n', 1), ('JavaVersion.parse("1.7.2");\n', 1), ('onCompleteWithoutOnSubscribe()', 1), ('downloadPromise;\n', 1), ('requestMaxEnum()', 1), ('Friday\\n"', 1), ('1.8.\n', 1), ('io.reactivex.subscribers.DefaultSubscriber;\n\n@SuppressWarnings("unchecked")\npublic', 1), ('RuntimeException))', 1), ('level2A', 1), ('res.get();\n', 1), ('that.trustStoreAlgorithm', 1), ('(Issue', 1), ('railSorted.reduce(new', 1), ('properties.setProperty("hibernate.hbm2ddl.auto",', 1), ('Multiplies', 1), ('open(path,', 1), ('spell12', 1), ('(paramType.isAssignableFrom(Boolean.TYPE))', 1), ('ConnectableObservable<Long>', 1), ('(s.contains("junit.runners."))', 1), ('TimeUnit.SECONDS.toNanos(1)', 1), ('pp2.ignoreElements()))\n', 1), ('per-rail', 1), ('lazySet(null);\n', 1), ('"file");\n\n', 1), ('replaceRace()', 1), ('"create', 1), ('SingleFlatMapIterableObservable<T,', 1), ('System.getProperty("java.class.path"));\n', 1), ('Under', 1), ('SubscribeOnMaybeObserver(MaybeObserver<?', 1), ('super("-",', 1), ('below.', 1), ('this.sourceMode', 1), ('queryService', 1), ('Single.just(1);\n\n', 1), ('Scheduler#createWorker()}\n', 1), ('setReactor(NioReactor', 1), ('exceptions.size());\n', 1), ('"lucene:minor_device_number":', 1), ('attempts;\n', 1), ('java.util.Arrays.class.getName(),\n', 1), ('Id\n', 1), ('RepeatUntilObserver(Observer<?', 1), ('ProtocolViolationException(composeMessage(consumer.getName())));\n', 1), ('rest.getAndSet(CANCELLED);\n', 1), ('ScheduledWorker(executor.get());\n', 1), ('assertEquals("Cuauhtemoc",', 1), ('(Supplier<Heavy>)', 1), ("MaybeSource's", 1), ('accept(Set<String>', 1), ('ClassToName(Class<?>', 1), ('file:', 1), ('.toFormatter();\n\n', 1), ('assertEquals(JavaVersion.parse("1.8"),', 1), ('this.fromEntity', 1), ('compliance\n', 1), ('Collections.unmodifiableSet(new', 1), ('RDBMS.\n', 1), ('(items.isEmpty())', 1), ('assertTrue(times.size()', 1), ('blockingSubscribeConsumerConsumerError()', 1), ('(FileLoggerModule.singleton', 1), ('ArrayBlockingQueue<>(bound);\n', 1), ('inputStudent.getStudentId())', 1), ('IllegalStateException("Classpath', 1), ('attribute)', 1), ('8)));\n', 1), ('#subscribe(MaybeObserver)}', 1), ('observers.delete(observer);\n', 1), ('certPaths=["', 1), ('blockingFirstDefault()', 1), ('AbstractDocument})', 1), ('com.maxmind.db.Reader;\nimport', 1), ('ObjectHelper.requireNonNull(resultSelector,', 1), ('DragonSlayingStrategyTest', 1), ('ObserverResourceWrapper(Observer<?', 1), ('iterate\n', 1), ('doc.accept(out);\n', 1), ('accept(int', 1), ('exitVM', 1), ('assertEquals(fromDtos,', 1), ('resultSelector\n', 1), ('SerializedSubscriber<Flowable<T>>(s),\n', 1), ('SingleFromUnsafeSource<T>(source));\n', 1), ('correctly\n', 1), ('JavaVersion.parse("1.6");\n', 1), ('AtomicReferenceArray<E>', 1), ('reach', 1), ('w);\n', 1), ('this.method.pickTarget());\n', 1), ('onScheduleIO()', 1), ('other(via', 1), ('minor;\n', 1), ('us.concatMap(new', 1), ('assertFalse(f.isDisposed());\n\n', 1), ('-3521127104134758517L;\n', 1), ('javaField', 1), ('sourceEmpty', 1), ('passphrase', 1), ('javaVersion.getVersion();\n', 1), ('CanonPrinter());\n', 1), ('Schedulers.SingleHolder());\n', 1), ('Single.toObservable()}', 1), ('testBackpressureWithInitialValueObservable()', 1), ('first.done;\n\n', 1), ('-6120223772001106981L;\n', 1), ('DestroyFailedException,', 1), ('this.stdOutBuffer', 1), ('MulticastProcessorTckTest()', 1), ('ClassNotFoundException,', 1), ('SwitchOnNextTckTest', 1), ('RemoteFailure', 1), ('b.indexOf("<dt><b>Backpressure:</b></dt>",', 1), ('SpscLinkedArrayQueue<InnerQueuedSubscriber<R>>(Math.min(prefetch,', 1), ('single-element', 1), ('TEST_TICKETS_COLLECTION', 1), ('null}.\n', 1), ('RestrictedTrustManager', 1), ('terminal)', 1), ('org.elasticsearch.xpack.core.deprecation.DeprecationIssue;\n\nimport', 1), ('.assertValueCount(values.length)\n', 1), ('assertTrue(list2.equals(list));\n', 1), ('this.test', 1), ('c.calories).sum();\n', 1), ('IncrementingIterator();\n', 1), ('DbCustomerDao}', 1), ('InvalidKeyException', 1), ('"illegally', 1), ('Normalizer(JOB_ID,', 1), ('String.format("%s', 1), ('accept(TestObserver<Integer>', 1), ('set(@Nullable', 1), ('LOGGER.debug("FileLoggerModule::prepare();");\n\n', 1), ('layer.setCake(cake);\n', 1), ('assertEquals(String.valueOf(NumberCrunchingTask.CRUNCHED_NUMBER),', 1), ('undoStack.pollLast();\n', 1), ('badInnerDelayError()', 1), ('func);\n', 1), ('*/\n@Target({CONSTRUCTOR})\n@Retention(RUNTIME)\n@Deprecated\npublic', 1), ('IteratorType;\n', 1), ('structsMap.get(children.get(count));\n\n', 1), ('HolderThreadSafeTest', 1), ('Service>', 1), ('RxJavaPlugins.class.getMethod("is"', 1), ('creation\n', 1), ('LotteryConstants.SERVICE_BANK_ACCOUNT,', 1), ('org.elasticsearch.xpack.core.deprecation.DeprecationInfoAction;\nimport', 1), ('o\n', 1), ('AppConfigTest', 1), ('3.0\n', 1), ('fishV2.getLengthMeters(),', 1), ("'only_fqn'?", 1), ('(name.endsWith(".class")', 1), ('Arrays.stream(ignoreTests).reduce(Predicate::or).orElse(e', 1), ('"cold",', 1), ('ObjectType;\n', 1), ('Oranges,', 1), ('his', 1), ('Collections.addAll(list,', 1), ('entityManager;\n', 1), ('getAllParameters()', 1), ('FlowableTakeWhile<T>', 1), ('struct.type;\n', 1), ('assertFalse(q.offer(8,', 1), ('spellbookDao.merge(spellbook1);\n', 1), ('Single.never().doOnDispose(new', 1), ('OnBackpressureBufferStrategySubscriber(Subscriber<?', 1), ('realm)', 1), ('Student\n', 1), ('com.iluwatar.specification.property.Movement;\n\n/**\n', 1), ('STANDARD_CLASSES.contains(other.getName()))', 1), ('signing.sign(queryParam,', 1), ('Completable.concatArray(new', 1), ('this.sender', 1), ('org.junit.*;\n\n/**\n', 1), ('testCancellationDuringFutureGet()', 1), ('FlowableIgnoreElements<T>(source));\n', 1), ('sergeant"),\n', 1), ('Thread.sleep(150);\n//\n//', 1), ('oos', 1), ('sourceObs.reduce(second).toObservable();\n\n', 1), ('testScanIntegersWithInitialValue()', 1), ('compensating\n', 1), ('---------------------------------------------\n\n', 1), ('disposeEagerly}', 1), ('assertEquals("EmptyConsumer",', 1), ('mo.onSuccess(1);\n\n', 1), ('(schedulerDoc', 1), ('LotteryNumbers(givenNumbers);\n', 1), ('ReduceObserver<T>', 1), ('DISPOSED\n', 1), ('RequestHandler<APIGatewayProxyRequestEvent,', 1), ('fusedFlatMapExecution()', 1), ('headers.put("es.painless_class",', 1), ('<b>if</b>', 1), ('SingleSubjects', 1), ('Single.just((Object)1).delaySubscription(s);\n', 1), ("name.indexOf('[');\n\n", 1), ('InnerObserver<T>', 1), ('customerDao.update(customer);\n', 1), ('declaration.analyze(locals);\n', 1), ('"io.reactivex:new-thread";\n', 1), ('customers.removeIf(customer', 1), ('updateThread.isAlive()', 1), ('ParseField("attachments");\n', 1), ('(int)elements).sorted()\n', 1), ('spscLinkedArrayQueueNoNepotism()', 1), ('boundaryObserver.getAndSet((WindowBoundaryInnerObserver)BOUNDARY_DISPOSED);\n', 1), ('PublishSubject<Void>', 1), ('happen:\n', 1), ('io.reactivex.observers.DisposableSingleObserver;\nimport', 1), ('create,', 1), ('("char".equals(whitelistStruct.javaClassName))', 1), ('numChecksFailed;', 1), ('(!deque.isEmpty())', 1), ('compareAndSet(PARENT_INDEX,', 1), ('Specific', 1), ('contentActions.size());\n', 1), ('Duration', 1), ('Version.class.getName().replace(".",', 1), ('inner.request(e);\n', 1), ('Termination', 1), ('Flowable()', 1), ('InnerQueuedSubscriberSupport<Integer>', 1), ('AStatement', 1), ('BufferOpenSubscriber<Open>(this);\n', 1), ('TestMaybe<T>', 1), ('nextObserver);\n', 1), ('boundarySubscriber.compareAndSet(sender,', 1), ('nearly', 1), ('Whether', 1), ('sourceSupplier', 1), ('fromEntity;\n\n', 1), ('senderName);\n', 1), ('"15C");\n', 1), ('trampoline()', 1), ('"bar")', 1), ('href="http://reactivex.io/documentation/observable.html">ReactiveX\n', 1), ('convertDatesToString(result[i]);\n', 1), ('Observable.fromArray(mainArray);\n', 1), ('SwitchIfEmptyTckTest', 1), ('ArrayList<Completable>();\n\n', 1), ('SimpleFluentIterable.fromCopyOf(integerList).filter(positives()).last(2).asList();\n', 1), ('<i>dirty', 1), ('io.reactivex.internal.fuseable.HasUpstreamObservableSource;\n\npublic', 1), ('io.reactivex.subscribers.SubscriberFusion;\n\npublic', 1), ('(onSuccess)', 1), ('entity,', 1), ('in.getVersion();\n', 1), ('messageStr', 1), ('Stack<>();\n', 1), ('treats', 1), ('sqlQuery.setResultTransformer(Transformers.aliasToBean(Book.class)).list();\n', 1), ('onSchedule(Schedulers.newThread().createWorker());\n', 1), ('RxThreadFactoryTest', 1), ('JarHell.checkVersionFormat(javaVersionString);\n', 1), ('DelayObserver<T>', 1), ('throwable\n', 1), ('aggregation\n', 1), ('handlers.get(event.getClass());\n', 1), ('Certificate[]{cert});\n', 1), ('MergeWithMaybeTckTest', 1), ('LOGGER.info(dcl2.toString());\n\n', 1), ('values[1]));\n', 1), ('org.elasticsearch.xpack.sql.cli.CliTerminal;\nimport', 1), ('prev.next.\n', 1), ('CompletableDoFinally(CompletableSource', 1), ('org.elasticsearch.plugins.RepositoryPlugin;\nimport', 1), ('assertSame(expectedOliphaunt,', 1), ('rootPane.setDefaultButton(del);\n', 1), ('delaySubscription(ObservableSource<U>', 1), ('occurs.', 1), ('cause)', 1), ('<code>stop</code>,', 1), ('subject.ignoreElements()\n', 1), ('pendingCommands.iterator();\n', 1), ('goodCompany.add(goodMoodRoyalty);\n\n', 1), ('proxy()', 1), ('intentions', 1), ('added...");\n\n', 1), ('ColorSelector(Color', 1), ('Concurrent', 1), ('DataType.DATE,', 1), ('page.getElementById("loginButton");\n', 1), ('assertEquals("Plugins', 1), ('result.add(line);\n', 1), ('resumeThrows()', 1), ('TemplateUtils.loadTemplateIntoMap("/"', 1), ('that.awsRequestId', 1), ('FlowableReduceTests', 1), ('v2;\n\n', 1), ('Observable[8];\n', 1), ('dispose(AtomicReference<Disposable>', 1), ('getRandomCustomerId();\n', 1), ('errors.addThrowable(t))', 1), ('SingleDoOnDispose(SingleSource<T>', 1), ('stack.push(i);\n', 1), ('50).reduce(second).toObservable();\n', 1), ('createdExceptions', 1), ('contents;\n\n', 1), ('(non-null)', 1), ('"ticketId");\n', 1), ('backpressureKind;\n\n', 1), ('SpscLinkedArrayQueue<Integer>(16);\n\n', 1), ('numberOfSongs', 1), ('setup(MethodWriter', 1), ('first",', 1), ('"jBloch@email.com");\n', 1), ('getStrength()', 1), ('io.reactivex.schedulers;\n', 1), ('java.nio.file.FileAlreadyExistsException;\nimport', 1), ('lately,', 1), ('ScalarXMapFlowable(T', 1), ('addressLineOne.hashCode()', 1), ('numberExpression', 1), ('ArithmeticSumTask(long', 1), ('accountsCollection', 1), ('p.setProperty(ConnectionConfiguration.AUTH_PASS,', 1), ('em', 1), ('java.lang.String.format;\n\n/**\n', 1), ('PosixFileAttributes', 1), ('NodeImpl("level1_a",', 1), ('file.getFileName().toString().endsWith("tmp"))', 1), ('Dehooge");\n', 1), ('classpath=\'"', 1), ('Value:', 1), ('com.unboundid.ldap.sdk.Attribute;\nimport', 1), ('org.elasticsearch.xpack.sql.client.shared.ConnectionConfiguration.CONNECT_TIMEOUT;\n\npublic', 1), ('MlFilter("filter_1",', 1), ('hit', 1), ('name.startsWith("get")', 1), ('addCustomers(CustomerDao', 1), ('runnableThrows()', 1), ('b.title=:title");\n', 1), ('null}\n', 1), ('PlayerDetails("bruno@google.com",', 1), ('height="485"', 1), ('key.append(argument.getName());\n', 1), ('h,', 1), ('mustard.");\n', 1), ('#subscribe(SingleObserver)}', 1), ('FlowableWindowBoundarySelector<T,', 1), ('messageFromOrcs()', 1), ('FlowableSubscriber<Integer>', 1), ('filterFailWithRetry()', 1), ('RxJavaPlugins#onSchedule(Runnable)}', 1), ('fishV1.getLengthMeters(),', 1), ('((d1', 1), ('java.util.Collections.singletonMap;\n\n/**\n', 1), ('innerNext(WindowBoundaryInnerSubscriber<T,', 1), ('platform', 1), ('org.mockito.Mockito.verifyZeroInteractions;\n\n/**\n', 1), ('Thread.sleep(1000);\n\n\n', 1), ('io.reactivex.observables;\n\nimport', 1), ('RxJavaPlugins.setOnCompletableSubscribeError(errorHandler);\n//\n//', 1), ('beans;\n\n', 1), ('SingleDoAfterTerminateTest', 1), ('failComputationObservableBlockingForEach()', 1), ("'.'));\n\n", 1), ('JdbcIntegrationTestCase', 1), ('GHobbits());\n\n', 1), ('functionVersion', 1), ('this.declarations', 1), ('.switchMapSingle(Functions.justFunction(Single.error(new', 1), ('ExternalConsumer(bh,', 1), ('connection.prepareStatement("DELETE', 1), ('trustConfigs.stream().flatMap((tc)', 1), ('ToListSubscriber(Subscriber<?', 1), ('spellbook1.addSpell(spell1);\n', 1), ('onSuccessCall,', 1), ('"21/06/2016"\n', 1), ('assertNoOffer(SimpleQueue<?>', 1), ('will(returnValue(simpleObject));\n\n', 1), ('assertTrue(onePointSix.compareTo(onePointSeven)', 1), ('headers(Map<String,', 1), ('"LambdaInfo{"\n', 1), ('MaybeTimer', 1), ('Stack\n', 1), ('bi-predicate.\n', 1), ('keyPath;\n', 1), ('normalDelayErrorAll()', 1), ('OnErrorNotImplementedException(e);\n', 1), ('film\\",\\"director\\":', 1), ('testWalk()', 1), ('findPattern("ConnectableObservable<.*>\\\\s+cf(0-9|\\\\b)");\n', 1), ('FlowableFromCallable(Callable<?', 1), ('contents.");\n', 1), ('Delegation', 1), ('chain[i];\n', 1), ('com.google.gson.JsonElement;\nimport', 1), ('NO_REQUEST)', 1), ('Objects.requireNonNull(javaFieldName);\n', 1), ('matter.\n', 1), ('prototype\n', 1), ('(handle)', 1), ('up.onNext(1);\n\n', 1), ('<p>Developer/Tester', 1), ('filterFailWithSkip()', 1), ('Single.concat(Flowable.fromCallable(new', 1), ('IMMEDIATE,\n', 1), ('assertNotNull(split);\n', 1), ('afterTerminateThrows()', 1), ('commandService.bookAddedToAuthor("title1",', 1), ('file.getManifest();\n', 1), ('ID_GENERATOR.incrementAndGet();\n', 1), ('ps2;\n', 1), ('CakeTopping("topping",', 1), ('producedMoreCancel()', 1), ('(no-op)', 1), ('WashingMachineState', 1), ('\\\\d+-', 1), ('work;\n\n', 1), ('add(PublishDisposable<T>', 1), ('height="349"', 1), ('ticketId);\n', 1), ('keystorePath', 1), ('querying.', 1), ('whitelistMethod.painlessParameterTypeNames.size());\n\n', 1), ('names.\n', 1), ('java.lang.reflect.Modifier;\n\nimport', 1), ('.concatMapMaybe(Functions.justFunction(ms))\n', 1), ('ConcatInnerObserver(CompletableConcatSubscriber', 1), ('(Desktop.isDesktopSupported())', 1), ('(headIndex', 1), ('obsMaybe', 1), ('Publisher<V>', 1), ('crashOnError;\n\n', 1), ('violated,', 1), ('noSubsequentSubscriptionDelayError()', 1), ('FlatMapCompletableMainSubscriber(CompletableObserver', 1), ('executor.schedule(periodicWrapper,', 1), ('SleepingRunnable(Runnable', 1), ('REQUEST_MASK)', 1), ('.append(".java:").append(m.javadocLine).append(")\\r\\n\\r\\n");\n', 1), ('ImageClient', 1), ('args[0]);\n', 1), ('times(1)).accept(Integer.valueOf(3));\n', 1), ('c.setAccessible(true);\n\n', 1), ('entries)', 1), ('canned', 1), ('depth-first', 1), ('Whitelist.Method(origin,', 1), ('io.reactivex.Maybe}-\n', 1), ('resultCalc', 1), ('(Socket', 1), ('nextFunction));\n', 1), ('IntervalRangeObserver(s,', 1), ('potion;\n', 1), ('FlowableBlockingTest', 1), ('source.reduce(sum).toObservable();\n\n', 1), ('temp2', 1), ('Single<Number>', 1), ('cake.setLayers(initialLayers);\n', 1), ('repository.findById(saved.get());\n', 1), ('this.types', 1), ('next.scheduleAtFixedRate(new', 1), ('numberOfSubscribers,\n', 1), ('this.attributeNames', 1), ('api!\n', 1), ('.toFlowable(BackpressureStrategy.MISSING)\n', 1), ('QueueDrainHelper.postComplete(actual,', 1), ('BlockingFlowableIterator<T>\n', 1), ('100%', 1), ('"gzip";\n\n', 1), ('DoFinallyConditionalSubscriber(ConditionalSubscriber<?', 1), ('Collections.unmodifiableList(trustConfig);\n', 1), ('verify(royalty).getFed();\n', 1), ('countersCollection;\n', 1), ('SimpleFileWriterTest', 1), ('Dispose', 1), ('character.setSpell(spell);\n', 1), ('params,', 1), ('threaded', 1), ('column(pos++);\n', 1), ('m0', 1), ('org.elasticsearch.xpack.logstash;\n\nimport', 1), ('Math.log(n)', 1), ('Selenium', 1), ('LoggerFactory.getLogger(ProductInformationClientImpl.class);\n\n', 1), ('dao.delete(existingCustomer);\n', 1), ('filterErrorConditionalNoError()', 1), ('IllegalArgumentException("parallelism', 1), ('throughout', 1), ('hasNativeController;\n\n', 1), ('MagicServiceImplTest', 1), ('testOnErrorExceptionIsThrownFromSingleUnsafeSubscribe()', 1), ('File(p);\n\n', 1), ('watcherService),', 1), ('struct.equals(type.struct);\n', 1), ('<br>Instance', 1), ('TestHelper.checkDisposed(Observable.just(1).all(Functions.alwaysTrue()).toObservable());\n\n', 1), ('executor.startProcess(null);\n\n', 1), ('EmptyComponentTest', 1), ('R>(subject,', 1), ('org.apache.isis.applib.annotation.Action;\nimport', 1), ('ft.run();\n', 1), ('complete(a);\n', 1), ('Event,', 1), ('Practice",', 1), ('notifications.ticketSubmitError(ticket.getPlayerDetails());\n', 1), ('Single.fromFuture(Flowable.never().toFuture(),', 1), ('servletRequest,', 1), ('converted,', 1), ('abilities,', 1), ('backpressure-related', 1), ('in.', 1), ('LinkedHashSet<>();', 1), ('dimension++)', 1), ('languages', 1), ('setupDownstream()', 1), ('File.createTempFile("promise_pattern",', 1), ('created.\n', 1), ('engines', 1), ('CakeToppingInfo("topping",', 1), ('author);\n\n', 1), ('FlowableTakeWhile(Flowable<T>', 1), ('GoogleCloudStorageFixture}', 1), ('SwitchMapTckTest', 1), ('onNextWithoutOnSubscribe()', 1), ('assertEquals(Action.values().length', 1), ('POST', 1), ('disposerThrows', 1), ('MeleeStrategy());\n', 1), ('currConsumerNode.lvNext())', 1), ('testFollowingFirst()', 1), ('TestSubscriber<Integer>(observer);\n', 1), ('-4945028590049415624L;\n\n', 1), ('NazgulName}.\n', 1), ('LOG.info("Sometimes', 1), ('maxConcurrencyOneDelayErrorFirst()', 1), ('#set(Disposable)\n', 1), ('R>>();\n\n', 1), ('CompletableConcat(Publisher<?', 1), ('inUse=0");\n', 1), ("'new'", 1), ('read.', 1), ('accounts.put(destinationBankAccount,', 1), ('createSingle()', 1), ('").append(e.getValue()).append("]"));\n', 1), ('Supplier<Weapon>>', 1), ('testDeferFunctionThrows()', 1), ('so.onError(null);\n\n', 1), ('(children.hasNext())', 1), ('verify(singleObserver).onSuccess(1', 1), ('ObservableOperator<Integer,', 1), ('.delaySubscription(Observable.error(new', 1), ('HasUpstreamObservableSource<T>', 1), ('handleEvent(MessageData', 1), ('nsme)', 1), ('fetches', 1), ('studentDatabase);\n', 1), ('(java.lang.reflect.Modifier.isStatic(modifiers))', 1), ('chest.getItems().get(idx);\n', 1), ('observableNoSubscription()', 1), ('propagated.\n', 1), ('PURGE_THREAD.getAndSet(null);\n', 1), ('will(returnValue(all));\n', 1), ('testInvalidVersions()', 1), ('takeSome()', 1), ('SimpleObject.class)\n@DomainServiceLayout(menuOrder', 1), ('org.elasticsearch.xpack.sql.client.shared.Version;\n\nimport', 1), ('this.panel.add(info);\n', 1), ('program...");\n', 1), ('this.address', 1), ('biconsumerError()', 1), ('fieldJsonMapper', 1), ('afterTerminate', 1), ('JoinDisposable(Observer<?', 1), ('journal', 1), ('contains\n', 1), ('"Fizz",', 1), ('Flowable.just(6,', 1), ('(driver', 1), ('URLRepository.SUPPORTED_PROTOCOLS_SETTING\n', 1), ('getCountersCollection()', 1), ('cs2', 1), ('root\n', 1), ('ObservableTimeIntervalTest', 1), ('TakeUntilTckTest', 1), ('gather', 1), ('TestHelper.checkDisposed(ps.switchMapCompletable(Functions.justFunction(cs)));\n', 1), ('BiConsumerSingleObserver(BiConsumer<?', 1), ('armor', 1), ('de.agilecoders.wicket.themes.markup.html.bootswatch.BootswatchTheme;\nimport', 1), ('overrideInitSingleSchedulerCrashes()', 1), ('#hasValue()},', 1), ('idx1)', 1), ('HtmlUnit', 1), ('ObservableZipIterable<T,', 1), ('accept(TestSubscriber<T>', 1), ('asyncResult,\n', 1), ('HolderThreadSafe();\n\n', 1), ('subject.subscribe(observer1);\n', 1), ('getAvailableLayers();\n}\n', 1), ('function4', 1), ('assertNotNull(scheduler);\n', 1), ('(string),', 1), ('this.onDisposeCall', 1), ('ds.downstreamRequest(-99);\n\n', 1), ('CompletableResult<>(callback);\n', 1), ('position.', 1), ('ObservableFlatMapSinglePerf', 1), ('"+375245"));\n', 1), ('s.onNext(value);\n', 1), ('evaluate\n', 1), ('AttributeSet();\n', 1), ('layerInfo);\n\n', 1), ('ReadLock();\n', 1), ('throttled.\n', 1), ('(String[])null)));\n', 1), ('Array.get(array,', 1), ('DisposeTask());\n', 1), ('getLuck()', 1), ('CombiningTrustConfig))', 1), ('assertEquals(V1.getName(),', 1), ('"chocolate",', 1), ('CrashDummy(boolean', 1), ('ObservableConcatMapSingle<T,', 1), ('mountPoint', 1), ('listed', 1), ('toSingle(toFlowable().retry(times));\n', 1), ('ci)', 1), ('TakeUntilPredicateObserver(Observer<?', 1), ('ObservableSingleSingle(ObservableSource<?', 1), ('(whichever', 1), ('ProtocolViolationException("")));\n', 1), ('consumer.await(count);\n', 1), ('HelperHolder.INSTANCE;\n', 1), ('CompletableConverter<R>', 1), ('ParallelPeekSubscriber(Subscriber<?', 1), ('subscription.request(Long.MAX_VALUE);\n', 1), ('org.apache.wicket.request.IRequestParameters;\nimport', 1), ('withPublisherCallAfterTerminalEvent()', 1), ('Observable.intervalRange(Long.MIN_VALUE,', 1), ('Runtime', 1), ('Observer<S,', 1), ('"Empty', 1), ('TestException("next()");\n', 1), ('FlowableSwitchMapMaybeTest', 1), ('Collections.singletonList(layer2)));\n', 1), ('CakeBakingException(String.format("Topping', 1), ('super(3);\n', 1), ('quick', 1), ('"946-384",', 1), ('msg.addHeader(Headers.DATE,', 1), ('Collections.unmodifiableMap(struct.constructors);\n', 1), ("Letter('y'))));\n\n", 1), ('addField(String', 1), ('received");\n', 1), ('socket.send(request);\n\n', 1), ('composedMessage.print();\n\n', 1), ('findAll', 1), ('assertTrue(appender.log.get(i).getFormattedMessage().contains("items.size()="', 1), ('SingleDefer<T>', 1), ('TestHelper.race(parallel1,', 1), ('withParameters(queryParam);\n', 1), ('LOGIN_PAGE_HTML_FILE', 1), ('com.maxmind.geoip2.DatabaseReader;\nimport', 1), ('dependant', 1), ('5718521705281392066L;\n\n', 1), ('throughput.\n', 1), ('errors.get(0).getCause().getCause()', 1), ('String(new', 1), ('ticket2);\n', 1), ('FlowableConcatArray<T>', 1), ('706635022205076709L;\n\n', 1), ('this.dao.find(entity.getId());\n', 1), ('7;\n', 1), ('SingleFromCallable(Callable<?', 1), ('it);\n\n', 1), ('subscriber}', 1), ('System.setProperty("mongo-host",', 1), ('c.request(10);\n\n', 1), ('asAttributes(List<?', 1), ('errorNonEager()', 1), ('.doAfterSuccess(new', 1), ('entitiesLeft.size());\n', 1), ('delayErrorWithMaxConcurrencyAsyncError()', 1), ('CompletableResult(AsyncCallback<T>', 1), ('org.springframework.data.jpa.repository.config.EnableJpaRepositories;\nimport', 1), ('before(ScenarioExecutionScope.INTEGRATION);\n', 1), ('Iterable}', 1), ('trustStoreAlgorithm)', 1), ('limiting', 1), ('io.reactivex.parallel;', 1), ('withObservableError2()', 1), ('BiFunction\n', 1), ('AndThenObservableObserver<R>', 1), ('assertNotNull(layer.id);\n', 1), ('runFuture()', 1), ('NewThreadHolder', 1), ('paidGroup', 1), ('Decorates', 1), ('Integer.parseInt(transportUri.substring(lastColon', 1), ('"get"', 1), ('readAllLines(f2);\n\n', 1), ('jl', 1), ('MaybeObserver>', 1), ('-4745803872902019069L;\n', 1), ('StripBoundary(Flowable<T>', 1), ('com.iluwatar.hexagonal.mongo;\n\nimport', 1), ('restarting', 1), ('"024-653",', 1), ('bookDTo;\n', 1), ('properties.store(out,', 1), ('CREATE_TRACE;\n\n', 1), ('MaybeError(new', 1), ('con.setRequestProperty("Accept-Charset",', 1), ('script.', 1), ('dr.direct.replace(scheduleDirect(dr));\n', 1), ('java.util.concurrent.FutureTask;\n\nimport', 1), ('attributeNames,', 1), ('LastObserver(SingleObserver<?', 1), ('BackpressureKind', 1), ('onComplete()\n', 1), ('"RxThreadFactory["', 1), ('ObservableFlatMapCompletable<T>', 1), ('too,', 1), ('.window(2)\n', 1), ('(eventType.equalsIgnoreCase("A"))', 1), ('servant.giveCompliments(royalty);\n', 1), ('o2);\n', 1), ('tested\n//\n//', 1), ('shouldSaveDeletedStudentWithoutWritingToDb()', 1), ('service.shutdownNow();\n\n', 1), ('.toArray(new', 1), ('onError.get().getMessage());\n', 1), ('event.setDataBus(this);\n', 1), ('result);\n', 1), ('apply(PublishSubject<Integer>', 1), ('randomize', 1), ('compositeList(Throwable', 1), ('resetState()', 1), ('IncrementingPublisher', 1), ('playerDetails', 1), ('BlockingObservableIterator<T>\n', 1), ('UNICAST_HOST_PREFIX,\n', 1), ('element.', 1), ('(purgeEnable', 1), ('channels)', 1), ('(reply.getLength()', 1), ('saveButton', 1), ('ExecutorService)', 1), ('delimited', 1), ('workerDisposed()', 1), ('studentRepository.registerModified(shyam);\n', 1), ('t.setPriority(priority);\n', 1), ('unwrapScheduleDirectTaskAfterDispose()', 1), ('FlowableDoOnLifecycle<T>', 1), ('World();\n', 1), ('DwarvenGoldmineFacade#digOutGold()}', 1), ('flushAcknowledgement;\n\n', 1), ('sortCancelRace2()', 1), ('cs.test().assertEmpty().cancel();;\n', 1), ('TakeLastObserver(Observer<?', 1), ('io.reactivex.flowable.FlowableCovarianceTest.*;\n\npublic', 1), ('subscribers.add(open);\n\n', 1), ('ComputationTask', 1), ('java.io.Serializable;\n\nimport', 1), ('RuntimeException("unable', 1), ('org.hamcrest.CustomMatcher;\nimport', 1), ('QueryServiceImpl', 1), ('http://programmers.stackexchange.com/questions/179386/what-are-the-downsides-of-implementing\n', 1), ('(IndexPrivileges', 1), ('collision', 1), ('href="http://reactivex.io/documentation/observable.html">ReactiveX', 1), ('assertNull(statusMember.getStopped());\n', 1), ('Method},', 1), ('RoleDescriptor.IndicesPrivileges[]', 1), ('add(PublishSubscription<T>', 1), ('attrs.size()));\n', 1), ('counts.', 1), ('polling', 1), ('SafeSubscriber<String>(OBSERVER_ONNEXT_ONERROR_FAIL()).onNext("one");\n', 1), ('(textIndex', 1), ('field),', 1), ('java.lang.String.class.getName(),\n', 1), ('org.apache.isis.applib.services.i18n.TranslatableString;\n\n/**\n', 1), ('tenantName);\n', 1), ('Arrays.asList(pool.checkOut(),', 1), ('BlockingQueue<Object>', 1), ('result()', 1), ('delayedErrorOnError()', 1), ('Nazgul.getInstance(NazgulName.REN));\n', 1), ('Future\n', 1), ('TestHelper.checkDisposed(PublishProcessor.create().singleElement().doOnSuccess(Functions.emptyConsumer()));\n', 1), ('IllegalArgumentException("unsafeCreate(Single)', 1), ('super.writeTo(out);\n', 1), ('(\\\\d+)', 1), ('organized', 1), ('src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.doOnDispose.png"', 1), ('o.hashCode()', 1), ('JTextArea', 1), ('+1"));\n', 1), ('PartyImpl()', 1), ('pool.checkOut());\n', 1), ('assertEquals("level3_a",', 1), ('fromIterator;\n\n', 1), ('MultiplyExpressionTest()', 1), ('(Files.isDirectory(path))', 1), ('firstEmpty()', 1), ('1210314339075855074L;\n\n', 1), ('MockUncasedHostProvider(Supplier<DiscoveryNode>', 1), ('Observable.just(\n', 1), ('numberOfNodes', 1), ('"s', 1), ('times(1)).onPostCall(eq(result));\n\n', 1), ('Debug#explain(Object)}', 1), ('MaybeUnsubscribeOn<T>', 1), ('java.lang.UNIXProcess.<init>(UNIXProcess.java:248)\n', 1), ('AppManager.save(userAccount5);\n\n', 1), ('baking', 1), ('BooleanType', 1), ('BootStrapping', 1), ('"testCounters";\n\n', 1), ('Data-Bus.', 1), ('unsafe()', 1), ('cancellation/completion.\n', 1), ('ds.onComplete();\n\n\n', 1), ('PARENT_DISPOSED))', 1), ('30)));\n', 1), ('(!queue.isEmpty())', 1), ('timer.get();\n', 1), ('SampleData', 1), ('defaultObserver', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/retryWhen.f.png"', 1), ('write(DomainEvent', 1), ('(Class<E>)', 1), ('compare(final', 1), ('FlowableBlockingSubscribe', 1), ('dispose().', 1), ('MockSecureSettings()', 1), ('doOnDisposeDoubleOnSubscribe()', 1), ('Callable#call()}', 1), ('GHobbitsTest()', 1), ('\\u0000)\n', 1), ('re-used', 1), ('onSuccess(U', 1), ('200);\n', 1), ('produced(r);\n', 1), ('wizard).', 1), ('indexWildcard', 1), ('staticMethodDef;\n', 1), ('Object[]{"Archer",', 1), ('DATE,', 1), ('R>(observer);\n\n', 1), ('AsyncSubject&lt;Object&gt;', 1), ('parser.nextToken())', 1), ('over\n', 1), ('ts.assertValue(10);\n', 1), ('DoOnEachSubscriber<T>', 1), ('singleObserver;\n', 1), ('System.out.println("\\t"', 1), ('expression.interpret());\n', 1), ('DebounceTimedSubscriber<T>\n', 1), ('onSubscribeDispose()', 1), ('is:\n', 1), ('loginButton.click();\n', 1), ('LOGGER.info("fishV1', 1), ('List<Maybe<Integer>>', 1), ('MultiMatchQueryPredicate::new,', 1), ('assumeFalse("need', 1), ('Metadata', 1), ('mag.set(Stats.ARMOR,', 1), ('statusIgnoresMessageData()', 1), ('moon");\n', 1), ('MaybeToSingle(MaybeSource<T>', 1), ('lowestFrequencyChar()', 1), ('lit', 1), ('group);\n\n', 1), ('ds.isCancelled());\n', 1), ('ObservableTake<T>', 1), ('PrivilegedExceptionAction<T>', 1), ('CacheStore.clearCache();\n', 1), ('onErrorResumeNext()', 1), ('batchSize;\n', 1), ('-8127758972444290902L;\n\n', 1), ('ParallelFilterSubscriber<T>', 1), ('bin', 1), ('I/O\n', 1), ('5"));\n\n', 1), ('"spellname";\n', 1), ('Flowable.<String>error(new', 1), ('[\\"a\\",\\"b\\"]\\nfilter.filter_2', 1), ('title,', 1), ('Single.just(2).contains(1).test().assertResult(false);\n', 1), ('</i>', 1), ('IRequestParameters', 1), ('innerComplete(LeftRightSubscriber', 1), ('author.getUsername());\n', 1), ('identifier,', 1), ('groupConfigPath,', 1), ('complete(R', 1), ('SimpleFileVisitor<Path>', 1), ('ObjectHelper.requireNonNull(onSuccessMapper.apply(value),', 1), ('service.saveNewTopping(topping1);\n\n', 1), ('subscribers.get();\n\n', 1), ('constructorTest()', 1), ('(MIT)\n\nCopyright', 1), ('number,\n', 1), ('"SPELLBOOK")\npublic', 1), ('PlayerDetails("richard@google.com",', 1), ('getElasticsearchVersion()', 1), ('it?', 1), ('(retry)', 1), ('link\n', 1), ('java.lang.annotation.RetentionPolicy.RUNTIME;\n\n\n@BindingAnnotation\n@Target({FIELD,', 1), ('volume)', 1), ('Enhancement', 1), ('spellbook4', 1), ('verifyZeroInteractions(factory);\n\n', 1), ('com.iluwatar.observer.WeatherType;\nimport', 1), ('pollFlushOperations()', 1), ('ObservableDoOnSubscribeTest', 1), ('spellbookDao.persist(spellbook5);\n', 1), ('LOGGER.info("notifying");\n', 1), ('10).firstElement().toFlowable()\n', 1), ('hasKey,', 1), ('m.javadoc.subSequence(idx', 1), ('org.elasticsearch.ingest.Processor;\nimport', 1), ('MaybeTimeoutPublisher(MaybeSource<T>', 1), ('doneButNotEmpty()', 1), ('IoScheduler', 1), ('//100', 1), ('realStdOut', 1), ('restoring\n', 1), ('ScheduledTask(),', 1), ('MessageCollectorMember("Bar");\n', 1), ('OtherObserver(MaybeObserver<?', 1), ('Shares', 1), ('15/12/2015', 1), ('free.', 1), ('gWeather', 1), ('ID.\n', 1), ('otherSubscriber', 1), ('(MenuAction)', 1), ('just(1,', 1), ('-622603812305745221L;\n\n', 1), ('repeatTimes()', 1), ('Map<Class<?>,', 1), ('studentRepository.registerModified(student1);\n', 1), ('8).equals("@link', 1), ('assertFalse(d.isDisposed());\n', 1), ('Task\n', 1), ('"WIZARD_ID")\n', 1), ('MaybeEmitter<T>,', 1), ('staticMembers;\n', 1), ('(Entry<String,', 1), ('"src/perf/java")));\n//', 1), ('java.sql.ParameterMetaData;\nimport', 1), ('dispatched', 1), ('PrintStream(System.out);\n', 1), ('service.submitTicket(LotteryTestUtils.createLotteryTicket("lucky@orb.com",\n', 1), ('be).\n', 1), ('SingleTimer', 1), ('tm.dispose();\n\n', 1), ('loadData()', 1), ('mo.onComplete();\n\n', 1), ('String.valueOf(content.length));\n', 1), ('"+35448"));\n', 1), ('setException(Exception', 1), ('toEpochMillis(String', 1), ('think\n', 1), ('Validator.of(sarah).validate(User::getName,', 1), ("'ERROR'", 1), ('timedRunnable)', 1), ('reactor;\n\n', 1), ('Observable.just(2))\n', 1), ('structure.', 1), ('assertTrue(it.isDisposed());\n', 1), ('main.actual.onError(t);\n', 1), ('(Constants.WINDOWS', 1), ('accounts\n', 1), ('serviceName', 1), ('org.elasticsearch.xpack.core.template.TemplateUtils;\n\nimport', 1), ('eventManager.create(eventTime);\n', 1), ('http://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html\n', 1), ('transportSSLEnabled()', 1), ('nodeOrdinal)', 1), ('System.out.println("Waiting', 1), ('NioReactor}.\n', 1), ('getService(String', 1), ('"300SL");\n', 1), ('writer.flush();\n', 1), ('"MoneyTransferEvent");\n', 1), ('ts.onSubscribe(new', 1), ('is(1L));\n', 1), ('(!tillTheEnd)', 1), ('NativeRoleMappingStore', 1), ('content...");\n\n', 1), ('DelayedDispose(DelayedRunnable', 1), ('Thanks', 1), ('Request.\n', 1), ('q.offer(group);\n', 1), ('LdapMetaDataResolverSettings', 1), ('"jumped', 1), ('ps.single(-99).subscribe(Functions.<Integer>emptyConsumer());\n\n', 1), ('this.scalarLimit', 1), ('io.reactivex.schedulers.Schedulers;\n\n@BenchmarkMode(Mode.Throughput)\n@OutputTimeUnit(TimeUnit.SECONDS)\npublic', 1), ('msg.addHeader(Headers.SENDER,', 1), ('BackpressureErrorSubscriber(Subscriber<?', 1), ('Document})', 1), ('customerOne', 1), ('300L);\n\n', 1), ('MySubscriber(long', 1), ('1");\n', 1), ('delayErrorWithMaxConcurrencyAsync()', 1), ('MessageCollectorMember(String', 1), ('(this.attempts.incrementAndGet()', 1), ('FlowableSerialized<T>', 1), ('tickets;\n', 1), ('Collections.emptyList();\n\n', 1), ('RxJavaPlugins.setOnSingleSubscribe(single2observer);\n', 1), ('"test-car-model";\n', 1), ('ObservableFromUnsafeSource(ObservableSource<T>', 1), ('LotteryTest()', 1), ('"unicast_hosts.txt";\n', 1), ('"mapping_exception":\n', 1), ('Saves', 1), ('pp.onNext(i);\n', 1), ('databaseFiles.iterator();\n', 1), ('shouldPutAndGetValue()', 1), ('[studentId="', 1), ('otherOnFire,\n', 1), ('doOnComplete(Action', 1), ('purging.\n', 1), ('currentReaderCount++;\n', 1), ('ErrorMode.END', 1), ('Character("Player_2",', 1), ('assertEquals("RxThreadFactory[Test]",', 1), ('concatMapToFlowableEmpty.subscribeWith(new', 1), ('<li>A', 1), ('write-back', 1), ('crashOnError,', 1), ("subscriber's\n", 1), ('".B.2",', 1), ('InvalidLineConsumer()', 1), ('Observable.just(ps1,', 1), ('error.get())', 1), ('LOGGER.info("(5)', 1), ('"fatal"', 1), ('CustomerResource(new', 1), ('uname', 1), ('.ifPresent(lastOfFirstTwo', 1), ('2012', 1), ('consumerDispose()', 1), ('ts.awaitTerminalEvent(2,', 1), ('FlowableConcatMapCompletableTest', 1), ('roll', 1), ('java.sql.SQLClientInfoException;\nimport', 1), ('subscribedObserver', 1), ('NodeImpl("level3_b",', 1), ('collector);\n', 1), ('(private,', 1), ('testVisitSoldier()', 1), ('FlowableTimeIntervalTest', 1), ('doGetConnection(p);\n', 1), ('CompletableSource.\n', 1), ('ParallelCollect(ParallelFlowable<?', 1), ('Single.just(1).repeat(5)\n', 1), ('DROP_LATEST:\n', 1), ('StringBuilder(def.class.getSimpleName());\n\n', 1), ('FileBasedUnicastHostsProvider', 1), ('resumeSingleInCaseOfError', 1), ('Collections.unmodifiableList(Objects.requireNonNull(whitelistConstructors));\n', 1), ('(WithLatestInnerSubscriber', 1), ('LeafExpression', 1), ('empty;\n\n', 1), ('assertFalse(ticket1.equals(ticket3));\n', 1), ('testSubsequentCheckinCheckout()', 1), ('baseDir', 1), ('SelectionKey\n', 1), ('zero-to-many', 1), ('ConcurrentMap<String,', 1), ('onErrorNoHandler()', 1), ('markHandled()', 1), ('brittle.', 1), ('parser,\n', 1), ('condition.\n', 1), ('}).toObservable().blockingLast().toString();\n\n', 1), ('-61,', 1), ('specs\n', 1), ('expand', 1), ('Getter', 1), ('LocalDate.getEra()', 1), ('LOGGER.info("Just', 1), ('MaybeUnsafeCreate<T>', 1), ('transportClientMode;\n', 1), ('results;\n', 1), ('ObserveOnSingleObserver(SingleObserver<?', 1), ('this.deque', 1), ('testBackpressureWithInitialValue()', 1), ('Flowable.empty().blockingFirst();\n', 1), ('CustomInMemoryRolesProvider\n', 1), ('processor.subscribe(subscriber1);\n', 1), ('"io.reactivex:computation";\n', 1), ('LambdaInfo();\n', 1), ('socks\n', 1), ('Collections.singletonList(CertUtils.resolvePath(trustStorePath,', 1), ('packets",', 1), ('from(temporaryList);\n', 1), ('MaybeMergeArray<T>', 1), ('file1', 1), ('jsonElement.getAsJsonObject().get("eventClassName").getAsString();\n', 1), ('Request,', 1), ('singletonInstanceMethod;\n\n', 1), ('SPI.\n', 1), ('.filter((i)', 1), ('clearScalarQueue()', 1), ('load()', 1), ('builder.append("]");\n', 1), ('.withAbility("strength")\n', 1), ('37497744973048446L;\n\n', 1), ('modules.add(b', 1), ('Queue<File[]>', 1), ('observableFlowable()', 1), ('list.size();\n', 1), ('IntegrationTesting', 1), ('methodDefEnd;\n', 1), ('k);\n\n', 1), ('(s.isFull())', 1), ('attempt\n', 1), ('PhysicalPlan', 1), ('(StringUtils.hasText(cfg.authUser()))', 1), ('streams\n', 1), ('JvmOptionsParserTests', 1), ('certs";\n', 1), ('api)', 1), ('(backpressureDoc', 1), ('(key.isAcceptable())', 1), ('SingleDoFinally(SingleSource<T>', 1), ('LastObserver<T>', 1), ('onCompleteOnError()', 1), ('ParallelFilter<T>', 1), ('java.security.Policy;\nimport', 1), ('this.readingTime', 1), ('Converter', 1), ('IllegalArgumentException\n', 1), ('key.attach(channel);\n', 1), ('a.request(n);\n', 1), ('(reactor)', 1), ('outcome', 1), ("player's", 1), ('queue.offer(f);\n\n', 1), ('painlessReturnClass,', 1), ('desc.substring(0,', 1), ('of(T', 1), ('objects$")\n', 1), ('hasNativeControllerValue', 1), ('RuntimeException(jsonProcessingException);\n', 1), ('ExceptionHelper', 1), ('1\\n"\n', 1), ('FailOnBlockingTest', 1), ('event);\n}\n', 1), ('TestException()).doOnTerminate(new', 1), ('firstName.hashCode()', 1), ('org.elasticsearch.xpack.core.ml.job.process.autodetect.output.FlushAcknowledgement;\n\nimport', 1), ('eventManager.shutdown();\n', 1), ('Event}\n', 1), ('MAX_STACK_DEPTH)', 1), ('assertThat(javaVersion9.toString(),', 1), ('jBlochBooks', 1), ('subscriber.assertNotTerminated();\n', 1), ('SecurityPermission("putProviderProperty.BC"));\n', 1), ('reproduce', 1), ('basepackage)', 1), ('SwitchMapSingleMainObserver(Observer<?', 1), ('executor.submit(taskRunnable1);\n', 1), ('LOGGER.info("Exception', 1), ('respond', 1), ('replace()', 1), ('Files.exists(path,', 1), ('(m.getReturnType()', 1), ('virtualDB;\n\n', 1), ('jimFsConfiguration', 1), ('command.add("-p");\n', 1), ('key.interestOps(interestedOps);\n', 1), ('CharacterStepBuilderTest', 1), ('dtm.addRow(new', 1), ('Keep', 1), ('incomingPacket,', 1), ('LOGGER.info("operator:', 1), ('COMPANY:\n', 1), ('exception")).subscribe(new', 1), ('passwordInputPasswordField', 1), ('onComplete(Subscriber<?>', 1), ('System.out.print(clazz2.getSimpleName());\n\n', 1), ('deposit?");\n', 1), ('TestHelper.checkDisposed(Flowable.just(1).takeLast(1));\n', 1), ('execute(args);\n', 1), ('"+134124"));\n', 1), ('assertTrue(onePointSeven.compareTo(onePointSix)', 1), ('postFulfillment()', 1), ('useCacheAsideStategy()', 1), ('castSpell(Command', 1), ('assembly\n', 1), ('testGetHeavy()', 1), ('List<EsIndex>', 1), ('Function.identity()));\n', 1), ('assertEquals(V2.getLengthMeters(),', 1), ('"jar2:', 1), ('javaImplClass.getMethod(whitelistMethod.javaMethodName,', 1), ('.calendarId("calendar_id").build());\n', 1), ('dao.delete(CUSTOMER);\n\n', 1), ('(!q.isEmpty()', 1), ('FlatMapSingleObserver(Observer<?', 1), ('assertTrue(w.isDisposed());\n', 1), ('(exp.anyMatch(predicate))', 1), ('emptyPolicy;\n', 1), ('g.getName().replace(".java",', 1), ('getWriter()', 1), ('cancel(K', 1), ('nullError()', 1), ('old.\n', 1), ('this.pattern', 1), ('"Subscription",\n', 1), ('d2)', 1), ('TestException("cancel()");\n', 1), ('javaClass;\n\n', 1), ('ArrayDeque<ObservableSource<?', 1), ('String(brackets)', 1), ('bookDTos;\n', 1), ('mar.replace(schedule(decoratedRun));\n', 1), ('(list.size()', 1), ('this.groupConfigPath', 1), ('collected.', 1), ('NioDatagramChannel}', 1), ('ticket);\n\n', 1), ('"265-748",', 1), ("'model'", 1), ('ExpressionTest<E', 1), ('objectMapper;\n\n', 1), ('onNextOnSubscribeCrash()', 1), ('albumYearSelectOption.getOptionByValue(Integer.toString(year));\n', 1), ('Assert.assertTrue(exceptions.get(0)', 1), ('toSingle(T', 1), ('(Observer<T>)t;\n', 1), ('buildGetIndexResult(String', 1), ('Flowable.fromArray(sources).concatMapEager(SingleInternalHelper.<T>toFlowable());\n', 1), ('innerDoubleOnError()', 1), ('RuntimePermission("accessDeclaredMembers"));\n', 1), ('so.onSubscribe(cd);\n', 1), ('TrustAllConfig();\n\n', 1), ('onSuccessThrows()', 1), ('FilePermissionUtils', 1), ('script\n', 1), ('"FlowableElementAtMaybe",\n', 1), ('SkipUntilMainSubscriber(Subscriber<?', 1), ('extendedString', 1), ('packets.\n', 1), ('org.elasticsearch.xpack.core.common.socket;\n\nimport', 1), ('channel.getJavaChannel().register(selector,', 1), ('org.elasticsearch.test.ESTestCase;\n\n/**', 1), ('f.toObservable();\n', 1), ('(path.length()', 1), ('subscribedObserver;\n', 1), ('writeTo(StreamOutput', 1), ('ScheduledThreadPoolExecutor)', 1), ('assertSame(a,', 1), ('handled;\n\n', 1), ('"scheduledevent.1.rules', 1), ('setRealTime(boolean', 1), ('completionValue;\n\n', 1), ('SimpleFluentIterable<E>', 1), ('getStudentId()', 1), ('subject1m()', 1), ('capturing', 1), ('Student(student.getStudentId(),', 1), ('Long.valueOf(1234L);\n', 1), ('indexRequest', 1), ('AbstractDirectTask(Runnable', 1), ('movement,', 1), ('disconnect()', 1), ('reactor.registerChannel(tcpChannel(6666,', 1), ('lineNumber++;\n', 1), ('[you]', 1), ('height="390"', 1), ('Retry<String>', 1), ('mockedDataSource;\n', 1), ('FullTextUtils.parseFields(fieldString,', 1), ('accountFrom', 1), ('writingTime;\n\n', 1), ('temporaryList', 1), ('Observable.fromPublisher(Flowable.just(1))\n', 1), ('SingleFromCallable<T>(callable));\n', 1), ('enhanced.\n', 1), ('RxJavaPlugins.setOnCompletableAssembly(new', 1), ('changeNumberOfSongs(int', 1), ('member.joinedParty(this);\n', 1), ('specify",', 1), ('SubscriberCompletableObserver<T>', 1), ('MaybeEmpty();\n\n', 1), ('parent.innerComplete(value);\n', 1), ('TimeIntervalObserver(Observer<?', 1), ('manualThrowIfFatal()', 1), ('Options', 1), ('ParallelTransformer<Upstream,', 1), ('V>>(bufferSize);\n', 1), ('pulled', 1), ('luck\n', 1), ('errorFlowable()', 1), ('Whitelist.Method', 1), ('Streams.copy(is,', 1), ('org.mockito.*;\n\nimport', 1), ('com.iluwatar.observer.generic.GWeather;\nimport', 1), ('upstream\n\n', 1), ('Struct(painlessTypeName,', 1), ('Supplier[]{Hobbit::new},\n', 1), ('timestamp\n', 1), ('BCrypt.hashpw(new', 1), ('"Bass");\n', 1), ('mine\n', 1), ('Constructor<T>', 1), ('io.reactivex.Flowable}', 1), ('FlowableFlattenIterable<T,', 1), ('LeafExec(Location', 1), ('Desktop.getDesktop().open(applicationFile);\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/mergeMap.nce.png"', 1), ('targetVersion);\n', 1), ('createDataSource();\n', 1), ('System.out.println(")");\n', 1), ('3).subscribe(subscriber.get());\n\n', 1), ('error");\n', 1), ('functionName)', 1), ('SubscribeOnTckTest', 1), ('step.', 1), ('pp.purgeEnable;\n', 1), ('(!clazz.clazz.isInterface())', 1), ('CakeLayerInfo(Long', 1), ('name="', 1), ('uri.getHost(),', 1), ('w.schedule(Functions.EMPTY_RUNNABLE,', 1), ('handleEvent(StoppingData', 1), ('roleDescriptors.add(\n', 1), ('IntervalSubscriber(Subscriber<?', 1), ('Collections.<Integer>emptyList();\n', 1), ('whitelistField.origin;\n', 1), ('healing")});\n', 1), ('com.iluwatar.servicelayer.hibernate.HibernateUtil;\nimport', 1), ('onErrorResumeNext(Function<?', 1), ('DeferredScalarSubscription<U>\n', 1), ('uriPath.getQuery()', 1), ('FlowableForEachTest', 1), ('spell9', 1), ('Objects.requireNonNull(keyPassword).clone();\n', 1), ('onSuccessCleansUp()', 1), ('BackpressureHelper.multiplyCap(n,', 1), ('key));\n', 1), ('denied");\n', 1), ('main.onComplete();\n\n', 1), ('onSuccess));\n', 1), ('setUrl(String', 1), ('com.iluwatar.servicelayer.wizard.Wizard;\n\n\n/**\n', 1), ('super(input,', 1), ('Caused', 1), ('"A.B.1",', 1), ('TestHelper.checkDisposed(PublishProcessor.create().ignoreElements().onTerminateDetach());\n', 1), ('SingleContains<T>(this,', 1), ('Consumer<TestSubscriber<Integer>>()', 1), ('CompletableConcatTest', 1), ('Flowable.just(1).subscribe(tc);\n\n', 1), ('consumerIndex++;\n', 1), ('(int)elements).scan(new', 1), ('MAX_PENDING)', 1), ('OK', 1), ('ROLE_A', 1), ('BackpressureLatestSubscriber<T>', 1), ('sourceList;\n\n', 1), ('con.setRequestProperty("Accept",', 1), ('this.rolePermissionSettings', 1), ('&lt;param-value&gt;webapp.SimpleApplication&lt;/param-value&gt;\n', 1), ('onErrorAfterCrash()', 1), ('Linked', 1), ('field.set(Dispatcher.getInstance(),', 1), ('shortType;\n', 1), ('flatMapSingleElement}', 1), ('weightTons;\n\n', 1), ('(servant.checkIfYouWillBeHanged(guests))', 1), ('LOGGER.error(ie.getMessage());\n', 1), ('zipCode=\'"', 1), ('StatementProxy(log,', 1), ('assertFalse(up.hasSubscribers());\n', 1), ('io.reactivex.internal.operators.observable.ObservableTimer.TimerObserver;\nimport', 1), ('ts.request(5);\n', 1), ('7:00', 1), ('(getAndSet(null)', 1), ('non-positive.\n', 1), ('TASK_COUNT;', 1), ('propertiesFile,', 1), ('Version.writeVersion(elasticsearchVersion,', 1), ('Prototype()', 1), ('queue.put(message);\n', 1), ('super.newIsisWicketModule();\n\n', 1), ('Timed)', 1), ('defaultPort', 1), ('SelectionKey.OP_READ;\n', 1), ('buggy', 1), ('Observable<V>', 1), ('MatcherType;\n', 1), ('(CsvListReader', 1), ('1000),\n', 1), ('ObjectHelper.requireNonNull(d,', 1), ('identifier,\n', 1), ('this.spellDao', 1), ('(Statement', 1), ('calcElementOffset(index);\n', 1), ('allBooks)', 1), ('ScriptException}', 1), ('"+09843212345"));\n', 1), ('java.util.HashMap.class.getName(),\n', 1), ('ownerStruct.staticMembers.put(whitelistField.javaFieldName,', 1), ('wizardDao.merge(wizard2);\n', 1), ('assertTrue(results.next());\n', 1), ('builder.field("page_count",', 1), ('listeners', 1), ('this.assistedParameters', 1), ('InMemoryCustomerDao}.\n', 1), ('(outputFused', 1), ('onErrorSuccessWithUnsubscribeFailure()', 1), ('onBackpressureBuffer.\n', 1), ('crashRequest;\n', 1), ('700));\n', 1), ('map.put(lotteryTicket.getId(),', 1), ('this.inputs', 1), ('Boolean.TYPE)', 1), ('printAndCountExceptions(result[i]);\n', 1), ('Extract', 1), ('Executors.newFixedThreadPool(THREAD_COUNT);\n', 1), ('testCancelledWorkerDoesntRunTasks()', 1), ('AlchemistShop();\n\n', 1), ('10).elementAt(5).toFlowable()\n', 1), ('PriceClient', 1), ('descriptor:', 1), ('4066607327284737757L;\n\n', 1), ('feed\n', 1), ('IndexType.INDEX));\n', 1), ('normalized', 1), ('onPostCall(O', 1), ('SubscriptionHelper.CANCELLED.cancel();\n', 1), ('downloading', 1), ('Objects.hash(name,', 1), ('QueueDisposable#BOUNDARY}', 1), ('TEST_COUNTERS_COLLECTION);\n', 1), ('primitives', 1), ('"{\\"type\\":\\"time\\",\\"condition\\":{\\"operator\\":\\"lt\\",\\"value\\":\\"1515369600\\"}}]}]\\n"', 1), ('SafeSubscriber<Integer>(actual);\n\n', 1), ('performed\n', 1), ('bes', 1), ('Observable.just(1).flatMapSingle(Functions.justFunction(ps.singleOrError()))\n', 1), ('DwarvenGoldDigger());\n', 1), ('LOGGER.info(thief.toString());\n\n', 1), ('Integer.parseInt(properties.getProperty("mongo-port"));\n', 1), ('commitModify()', 1), ('servant.giveCompliments(guests.get(compliment));\n\n', 1), ('inappropriate', 1), ('float', 1), ('parent.onAfterNext.accept(t);\n', 1), ('Collections.singletonMap(CustomRealm.TYPE,', 1), ('Response();\n', 1), ('ResourceCompletableObserver', 1), ('CakeBakingException;\n\n', 1), ('head;', 1), ('observers.length;', 1), ('"Bip",', 1), ("struct's", 1), ('tells', 1), ('strings', 1), ('word.length();\n', 1), ('NPEs', 1), ('assertTrue(rco.errors.isEmpty());\n', 1), ('"scheduler");\n', 1), ('ms.add(Maybe.just(1));\n\n', 1), ('released\n', 1), ('java.lang.annotation.Target;\n/**\n', 1), ('List<ScheduledEvent>', 1), ('LordBaelish(kingsHand));\n', 1), ('syncFusedMapCrash()', 1), ('tc.errors.size());\n', 1), ('1).contains("public', 1), ('voidType;\n', 1), ('DistinctTckTest', 1), ('assertEquals(101,', 1), ('NetworkAddress.format(inetAddress);\n', 1), ('address[1]));\n', 1), ('ParameterListKey(List<Type>', 1), ('fillShelves()', 1), ('CakeToppingInfo(String', 1), ('assertNotNull(SingleInternalHelper.ToFlowable.valueOf("INSTANCE"));\n', 1), ('LazyFluentIterable}', 1), ('s.indexOf("<code>",', 1), ('ObservableSwitchIfEmptyTest', 1), ('prototype.type;\n', 1), ('create.\n', 1), ('}\n\n}\n\n', 1), ('fail.append(".java:1)\\r\\n\\r\\n");\n\n', 1), ('7:47', 1), ('model:', 1), ('completableCreate()', 1), ('javaClassLoader,', 1), ('multipleOnError()', 1), ('pp.publish().autoConnect(0);\n\n', 1), ('channel.flush(key);\n', 1), ('FACTOR));\n', 1), ('Arrays.asList(CACHE_SIZE);\n', 1), ('startRace()', 1), ('CryptUtils.readEncryptedPrivateKey(Files.readAllBytes(privateKeyPath));\n', 1), ('Apples,', 1), ('SingleFromCallableTest', 1), ('increases', 1), ('updateable', 1), ('RxJavaPlugins.onSingleReturn(subscription));\n//\n//', 1), ('(Application', 1), ('cs.onError(null);\n', 1), ('(painlessInterfaceStruct', 1), ('io.reactivex.Observable}-,', 1), ('ObservableSwitchMapMaybe(Observable<T>', 1), ('SergeantVisitorTest', 1), ('spellDao.persist(spell3);\n', 1), ('.withHairType(HairType.LONG_CURLY).withArmor(Armor.CHAIN_MAIL).withWeapon(Weapon.SWORD)\n', 1), ('dematerialize.subscribe(to);\n\n', 1), ('(delayErrors', 1), ('*/\n@Service\n@Transactional\npublic', 1), ('<p>it', 1), ('onErrorReturnValue()', 1), ('f.doFinally(MaybeDoFinallyTest.this).filter(Functions.alwaysTrue());\n', 1), ('wizards");\n', 1), ('b.append("Thread', 1), ('((ScheduledWorker)w).executor.shutdownNow();\n\n', 1), ('allParameters.add(parameter);\n', 1), ('quality', 1), ('<li>Sets', 1), ('publicKeyData)', 1), ('Flowable.just("one").doOnNext(new', 1), ('df.fetch();\n\n', 1), ('Completable.amb(ms)\n', 1), ('(relayState', 1), ('listener.accept(event));\n', 1), ('Work', 1), ('(SubscriptionHelper.setOnce(subscription,', 1), ('super("*",', 1), ('ArrayList<>(parameterTypes.size());\n\n', 1), ('matcher.group("start");\n', 1), ('"234-987",', 1), ('com.gargoylesoftware.htmlunit.html.HtmlPasswordInput;\nimport', 1), ('ObserveOnCompletableObserver(CompletableObserver', 1), ('RainbowFishSerializer}', 1), ('ObservableConcatMapTest', 1), ('second</li>\n', 1), ('HashSet<>());\n', 1), ('System.out.println("Press', 1), ('1/26/17.\n', 1), ('startNewDay()', 1), ('studentsToOperate.add(student);\n', 1), ('Flowable.concatEager(Arrays.asList(\n', 1), ('Test).\n', 1), ('io.reactivex.observables.ConnectableObservable;\n\n/**\n', 1), ('ProtocolViolationException("Disposable', 1), ('IOTask());\n\n', 1), ('600;\n', 1), ('(Character.isDigit(s.charAt(0)))', 1), ('Completable.fromCallable(func);\n\n', 1), ('serial)', 1), ('classical', 1), ('publish(final', 1), ('#update(Disposable)\n', 1), ('structsMap.get(painlessTypeName);\n', 1), ('(STANDARD.equals(getName())', 1), ('painlessObjectStruct', 1), ('timedRunnable;\n', 1), ('m.doOnEvent(new', 1), ('MaybeEqualSingle<T>', 1), ('car.getParts().forEach(p', 1), ('List<String>[]', 1), ('testSortedListWithCustomFunctionFlowable()', 1), ('TestHelper.assertBadRequestReported(Flowable.never().onBackpressureLatest());\n', 1), ('CompletableToFlowableTest', 1), ('assertEquals(words.length,', 1), ('declarations;\n\n', 1), ('Flowable#subscribe}', 1), ('DisposeTask(AtomicBoolean', 1), ('observer.onNext(10);\n', 1), ('executeAll()', 1), ('actual.onSuccess(o1', 1), ('completed.set(true);\n', 1), ('q.isEmpty();\n', 1), ('parent.onSubscribeCall.accept(d);\n', 1), ('overproduction', 1), ('Character.class;\n', 1), ('instead...\n', 1), ('entity.setId(expectedId);\n', 1), ('Here', 1), ('Loader");\n', 1), ('SkipLastSubscriber(Subscriber<?', 1), ('subject.onError(e);\n', 1), ('certificate));\n', 1), ('thereAreNumSimpleObjects(int', 1), ('org.hamcrest.TypeSafeMatcher;\nimport', 1), ('tryStart(PURGE_ENABLED);\n', 1), ('"lotteryTickets";\n', 1), ('ResumeMainSingleObserver<T>', 1), ('OBSERVER_ONCOMPLETED_FAIL(onError).onComplete();\n', 1), ('org.elasticsearch.common.xcontent.ToXContentObject;\nimport', 1), ('java.lang.String.valueOf;\n\nimport', 1), ('InMemoryAppender(Writer.class);\n', 1), ('Appender\n', 1), ('Constructor.\n', 1), ('67.81.244.11:9305\n', 1), ('dao.persistentClass.getSimpleName();\n', 1), ('city=\'"', 1), ("SingleSource}'s", 1), ('parent.onError.accept(t);\n', 1), ('SchedulerPoolFactory()', 1), ('FUSED_READY)', 1), ('wireTransfers.transferFunds(LotteryConstants.PRIZE_AMOUNT,\n', 1), ('configuring', 1), ('plus\n', 1), ('assertNull(filter.getNext());\n', 1), ('Flowable<Notification<Integer>>', 1), ('aliases.nextElement();\n', 1), ('EventDispatcher()', 1), ('ObjectHelper.requireNonNull(singleSupplier,', 1), ('(ticket', 1), ('Completable.merge(Flowable.just(pp1.ignoreElements(),', 1), ('IndexDynamicSettings', 1), ('(multicasts)', 1), ('cakeBean.save(cake);\n', 1), ('(latch.getCount()', 1), ('(Tuple<String,', 1), ('version--");\n', 1), ('frc.setResource(1,', 1), ('createdDateValues.length;', 1), ('Code.', 1), ('authorDTo;\n', 1), ('shouldGiveVideoDetailsById()', 1), ('shouldParseBody(int', 1), ('MaybeIsEmptySingle(MaybeSource<T>', 1), ('female")\n', 1), ('this.attributeNames);\n', 1), ('"java.util.List";</pre>\n', 1), ('9:31', 1), ('noted', 1), ('forEach', 1), ('onCompleteSuccessWithUnsubscribeFailure()', 1), ('update),', 1), ('SubscriptionHelper.CANCELLED))', 1), ('doOnSubscribe()', 1), ('JarInputStream(url.openStream()))', 1), ('ts.onNext(t);\n', 1), ('LotteryConstants.SERVICE_BANK_ACCOUNT);\n', 1), ('UncaughtExceptionHandler', 1), ('Checkout', 1), ('BlockingPerf', 1), ('s.actual);\n', 1), ('(run', 1), ('jarpath)', 1), ('javadocs.\n', 1), ('12:12', 1), ('eq(QUANTILES_STATE),', 1), ('CompletableTimeout', 1), ('Retry(5,', 1), ('meantime.', 1), ('primitives.\n', 1), ('Spliterator.ORDERED)', 1), ('java.util.concurrent.ExecutorService\n', 1), ('this.unboxTo', 1), ('boundarySubscriber.getAndSet((WindowBoundaryInnerSubscriber)BOUNDARY_DISPOSED);\n', 1), ('storageServer)', 1), ('parsePermissions(Path', 1), ('MaybeConcatArray<T>(sources));\n', 1), ('Completable.concat(pp1.map(new', 1), ('BasicIntQueueDisposable<T>\n', 1), ('org.elasticsearch.common.inject.binder.LinkedBindingBuilder#toInstance(Object)}', 1), ('actionGet();\n\n', 1), ('tenant.getName(),', 1), ('sum).map(error);\n\n', 1), ('testBackpressureWithNoInitialValue()', 1), ('getDimensions(String', 1), ('aliasRequest', 1), ('Observable.just(1).startWithArray().test().assertResult(1);\n', 1), ('(because', 1), ('Object-equals', 1), ('results.\n', 1), ('processKey(key);\n', 1), ('ALIAS);\n\n', 1), ('sources.length', 1), ('{"@integration",', 1), ('AsyncTask}', 1), ('loadDatabaseReaders(Path', 1), ('org.hamcrest.CoreMatchers.is;\n\npublic', 1), ('DwarvenMineWorker.Action.GO_TO_SLEEP);\n', 1), ('FlowableLift(Flowable<T>', 1), ('javaImplClass.getName()', 1), ('OperatorFlatMapPerf', 1), ('e.contains("RxComputationThreadPool"));\n', 1), ('io.reactivex.internal.operators.observable.ObservableReduceSeedSingle.ReduceSeedObserver;\n\n/**\n', 1), ('grants', 1), ('Iterable<Module>', 1), ('observable2observable', 1), ('dateField.formats);\n', 1), ('ContentAction(Content.PRODUCTS));\n', 1), ('StringReader(invalidRangeLine);\n', 1), ('container.allMatches(new', 1), ('"verification_exception":\n', 1), ('DoubleType;\n', 1), ('IndexResolution.invalid("["', 1), ('w.schedule(task);\n\n', 1), ('JTable', 1), ('schedulersUtility()', 1), ('com.iluwatar.specification.creature.Shark;\nimport', 1), ('Promise<Map<Character,', 1), ('mute,', 1), ('testWriteAndRead()', 1), ('MaybeFromRunnableTest', 1), ('factory(Consumer<Builder>', 1), ('when(bakingService.getAllCakes()).thenReturn(cakes);\n\n', 1), ('doPrivileged(PrivilegedAction<T>', 1), ('"new_email2");\n', 1), ('part.getModel().get());\n', 1), ('assertTrue(bq.isCancelled());\n', 1), ('schedulerCallable)', 1), ('StarMemento})', 1), ('org.elasticsearch.xpack.security.authc.ldap.support.LdapUtils.searchForEntry;\n\npublic', 1), ('g.onComplete();\n', 1), ('message.getHeaders().get(Message.Headers.SENDER));\n', 1), ('"536-738",', 1), ('CompletableDefer(Callable<?', 1), ('count).\n', 1), ('MaybeAmb(MaybeSource<?', 1), ('8:-XX:+PrintGCDateStamps}\n', 1), ('super(Spellbook::new,', 1), ('ByteArrayInputStream(content),', 1), ('method.getKey().name;\n', 1), ('com.iluwatar.proxy.utils;\n\nimport', 1), ('iterator.', 1), ('System#out}\n', 1), ('TestHelper.checkDisposed(Flowable.just(1).timeInterval());\n', 1), ('handles.', 1), ('inclusive.', 1), ('toString,', 1), ('con.setConnectTimeout((int)', 1), ('FlowableConcatMapSinglePerf', 1), ('newSubscriber()', 1), ('RxJavaPlugins.setNewThreadSchedulerHandler(scheduler2scheduler);\n', 1), ('testedCreature.getName());\n', 1), ('NewThreadScheduler(ThreadFactory', 1), ('request\n//', 1), ('getRandomCustomerId()', 1), ('c.andThen(Single.just((Object)1));\n', 1), ('.registerChannel(udpChannel(6668,', 1), ('testUnboundedVersionOption()', 1), ('ObjectHelper.compare(execTime,', 1), ('service(SimpleObjects.class).create(UUID.randomUUID().toString());\n', 1), ('at",\n', 1), ('pidPattern', 1), ('Captain();\n', 1), ('CatalogOfFixturesGlue', 1), ("customer's", 1), ('(!resultSet.next())', 1), ('speed.\n', 1), ('X-pack', 1), ('testGetUpdatedAuthorByUsername()', 1), ('dependents,', 1), ('t.set(throwable);\n', 1), ('d.run();\n', 1), ('FlowableNever', 1), ('once"));\n', 1), ('msgQueue', 1), ('FlowableFlatMapMaybePerf', 1), ('(JTextField', 1), ('returned.</p>\n', 1), ('checkJarHell(parseClassPath(),', 1), ('props.put(KEY,', 1), ('attributes,\n', 1), ('"]."));\n', 1), ('domainapp.fixture.scenarios.RecreateSimpleObjects;\n\n/**\n', 1), ('(!m.signature.contains("Maybe"))', 1), ('checkVersionFormat(targetVersion);\n', 1), ('list.addAll(c);\n', 1), ('org.junit.jupiter.api.Assertions.assertTrue;\n\n\n/**\n', 1), ('super(format(Locale.ROOT,', 1), ('com.iluwatar.throttling.timer.Throttler;\nimport', 1), ('t1);\n\n', 1), ('LinkedHashSet<>();\n\n', 1), ('keystore.load(null,', 1), ('PerfObserver(Blackhole', 1), ('magicLen', 1), ('f.isDone();\n', 1), ('testSwitchShouldTriggerUnsubscribe()', 1), ('java.util.function.IntFunction;\nimport', 1), ('resolveGroupConfigPath(@Nullable', 1), ('useMongoDB;\n\n', 1), ('Function<List<T>,', 1), ('Single.just(8),\n', 1), ('assertEquals(byId.getId(),', 1), ('Inventory}\n', 1), ('FlowableDeferTest', 1), ('getDynamoDbMapper().save(person);\n', 1), ('FiniteRangeIterator', 1), ('ArrayList<>(delegate.filesToMonitor(environment));\n', 1), ('"B.B.1",', 1), ('handleDeposit(moneyDepositEvent.getMoney(),', 1), ('useOfMute();\n', 1), ('-3830916580126663321L;\n', 1), ('SequentialDisposable()', 1), ('(int)((time', 1), ('wheelProperties', 1), ('Subscriber<?>[]', 1), ('re-subscribed;', 1), ('possible,', 1), ('HalfSerializer', 1), ('checkSchedulerBadMethod(String', 1), ('fromRunnable}', 1), ('large\n', 1), ('t3)', 1), ('findAll);\n\n', 1), ('AuditUtilTests', 1), ('(loader', 1), ('tryDispose()', 1), ('Executors.newFixedThreadPool(4);\n\n', 1), ('io.reactivex.internal.operators.single.*;\nimport', 1), ('HtmlOption', 1), ('layerBean.save(layer);\n', 1), ('.subscribeOn(Schedulers.computation()).blockingFirst(1).intValue());\n', 1), ('io.reactivex.internal.fuseable.FuseToObservable;\n\nimport', 1), ('participating', 1), ('merged;\n', 1), ('PublishSubject<Mutable>', 1), ('fromActionInvokesLazy()', 1), ('AsyncTask#onError(Throwable)}.\n', 1), ('parse(System.getProperty("java.specification.version"));\n\n', 1), ('oneOf(mockContainer).newTransientInstance(SimpleObject.class);\n', 1), ('perms;\n', 1), ('setFighterClass(String', 1), ('jj)', 1), ('cancelNoOp()', 1), ('expectedTopping', 1), ('(inputObject', 1), ('-6246093802440953054L;\n\n', 1), ('setMemoryLimitInMb(Integer', 1), ('Flowable.just("three",', 1), ('fusedAsyncConditional2()', 1), ('list.set(i', 1), ('com.iluwatar.cqrs.dto.Book;\n\n/**\n', 1), ('"Don', 1), ('widgets,', 1), ('cake\n', 1), ('releaseIndex', 1), ('this.completableSupplier', 1), ('ObservableThrottleLastTests', 1), ('improperly\n', 1), ('WeatherType.SUNNY;\n', 1), ('exhibit', 1), ('compliment\n', 1), ('.filter(Functions.alwaysFalse())\n', 1), ('MoneyTransferEvent(long', 1), ('list.get(0)', 1), ('this(SINGLE_THREAD_FACTORY);\n', 1), ('isCancelled(Subscription', 1), ('PURGE_THREAD', 1), ('purge:', 1), ('ArithmeticSumTask(500));\n', 1), ('(boundaryObserver.compareAndSet(null,', 1), ('augmentedOffset]', 1), ('org.mockito.ArgumentCaptor;\nimport', 1), ('TestHelper.checkDisposed(Maybe.just(1).delaySubscription(Flowable.never()));\n', 1), ('expectedItem.toString().equals(item.toString());\n', 1), ('io.reactivex.schedulers.AbstractSchedulerTests;\nimport', 1), ('domain\n', 1), ('EmptyDisposable.complete(t);\n', 1), ('ExecutionException;\n\n', 1), ('unwrapScheduleDirectTask()', 1), ('generates', 1), ('SkipLastTimedSubscriber<T>', 1), ('LOGGER.info("...............Recovered', 1), ('FlowableInterval', 1), ('AccountAggregate', 1), ('a.run();\n', 1), ('create(int', 1), ('human-readable', 1), ('RESTRICTED_CONTEXT);\n', 1), ('varieties', 1), ('java.awt.Color;\nimport', 1), ('Page\n', 1), ('getType("HashMap");\n', 1), ('NumberExpressionTest()', 1), ('java.io.ObjectInputStream;\nimport', 1), ('FlowableDoOnLifecycle(Flowable<T>', 1), ('lower)', 1), ('com.iluwatar.featuretoggle.user;\n\nimport', 1), ('plus', 1), ('List<HtmlAnchor>', 1), ('assertTrue(cause.getExceptions().get(0)', 1), ('delegate;\n\n', 1), ('org.elasticsearch.wildfly.transport;\n\nimport', 1), ('this.completeMatch', 1), ('intersected', 1), ('setter;\n', 1), ('#create(SingleOnSubscribe)\n', 1), ('distribution', 1), ('Completable.amb(Arrays.asList(pp1.ignoreElements(),', 1), ('ObservableDefer(Callable<?', 1), ('listBlobsByPrefix(String', 1), ('(inner.isDisposed())', 1), ('getUrl()', 1), ('ThreadPoolExecutor(10,', 1), ('senderName', 1), ('Tuple', 1), ('Struct(def.class.getSimpleName(),', 1), ('FileVisitResult.TERMINATE;\n', 1), ('XPackBuild(String', 1), ('MessageQueue();\n', 1), ('"captain";\n\n', 1), ('lvNext()', 1), ('SingleElementObserver<T>(t,', 1), ('SingleCreate(SingleOnSubscribe<T>', 1), ('Collections.singletonList("xpack.security.authc.realms.*.filtered_setting");\n', 1), ('infix', 1), ('ReferenceDisposable<Action>', 1), ('shortHash()', 1), ('t.getName().equals(cakeInfo.cakeToppingInfo.name))\n', 1), ('FlowableFlatMap<T,', 1), ('isEqual\n', 1), ('getActiveNodesForCurrentCluster()', 1), ('SingleCreate<T>(source));\n', 1), ('isGroup();\n', 1), ('return;', 1), ('"installation', 1), ('MaybeObserver};', 1), ('ignoreReferralErrors;\n', 1), ('(context.containsKey(IUnitOfWork.DELETE))', 1), ('"HeroStat', 1), ('testSimpleError()', 1), ('shyam', 1), ('testAsynchronousDrop()', 1), ('doc.getString("additionalInfo"));\n', 1), ('RxJavaPlugins.getOnSingleCreate();\n//', 1), ('DEFAULT_PORT;\n', 1), ('worker");\n', 1), ('parts[2];\n', 1), ('18:12', 1), ('ResourceMaybeObserver<T>', 1), ('JScrollPane(jt);\n', 1), ('Audio.playSound(Audio.getAudioStream("./etc/Closed-Hi-Hat-1.wav"),', 1), ('Schedule.Parser>', 1), ('createFromDtos(final', 1), ('(DataSource)', 1), ('spells;\n\n', 1), ('observeOn.\n', 1), ('timerCancelRace()', 1), ('opened,', 1), ('onCallback;\n\n', 1), ('AbstractFlowableWithUpstreamTest', 1), ('(S)?:', 1), ('SingleDoFinally<T>', 1), ('FlowableDelay<T>', 1), ('rxThreads.add(t);\n', 1), ('source.test()\n', 1), ('queue.offer(br);\n\n', 1), ('java.util.concurrent.ExecutorService;\n\npublic', 1), ('mock(UnitVisitor.class);\n', 1), ('PromiseTest', 1), ('List<BiFunction<List<NodeInfo>,', 1), ("'.class'\n", 1), ('spellbook5', 1), ('painlessConstructor.arguments);\n', 1), ('here,\n', 1), ('interestedOps));\n', 1), ('java.sql.Statement;\n\nfinal', 1), ('Allowing', 1), ('onComplete()}', 1), ('assertSame(o2,', 1), ('(exec', 1), ('getTopShelf()', 1), ('"Inner");\n\n', 1), ('this.observers.add(observer);\n', 1), ('s.onSubscribe(EmptyComponent.INSTANCE);\n', 1), ('deserializedFishV2', 1), ('instance!\n', 1), ('observableReturn()', 1), ('See:\n', 1), ('k,', 1), ('ScheduledEventsWriterTests', 1), ('(currentlyRunningSyncEvent', 1), ('(AStatement', 1), ('signatureBytes', 1), ('7514387411091976596L;\n\n', 1), ('(Whitelist.Field', 1), ('Iterable<Object>', 1), ('wizardDao.persist(wizard4);\n', 1), ('dq.pollLast();\n', 1), ('sa.setSubscription(bs2);\n\n', 1), ('doPrivileged(CheckedRunnable<IOException>', 1), ('ObservableDistinct<T,', 1), ('maxAttempts,', 1), ('done");\n\n', 1), ('structsMap.get(painlessStructName);\n\n', 1), ('spaces\n', 1), ('DateTimeFormatter}', 1), ('random.nextBytes(magic);\n', 1), ('instanceMethodDef;\n', 1), ('11);\n', 1), ('1000).toList().toFlowable()\n', 1), ('LoggerFactory.getLogger(NioDatagramChannel.class);\n\n', 1), ('io.reactivex.parallel.ParallelFlowable},\n', 1), ('11:48', 1), ('height="191"', 1), ('queries.getAuthorByUsername("username");\n', 1), ('version);\n', 1), ('section\\r\\n")\n', 1), ('!m.signature.contains("TestSubscriber")\n', 1), ('("short".equals(whitelistStruct.javaClassName))', 1), ('org.springframework.context.annotation.Bean;\nimport', 1), ('ObservableDebounce(ObservableSource<T>', 1), ('UNKNOWN("UKNOWN");\n\n', 1), ('groupBy(Blackhole', 1), ('create(String', 1), ('-87,', 1), ('onePointSevenPointZero', 1), ('ThrottleLatestSubscriber(Subscriber<?', 1), ('PlayerDetails("ted@google.com",', 1), ('AbstractApplicationContext', 1), ('DISCOVERY_ZEN_PING_UNICAST_HOSTS_RESOLVE_TIMEOUT.get(settings);\n', 1), ('mapper.insert(student);\n\n', 1), ('"Mapper");\n', 1), ('this.ok.addActionListener(this);\n\n', 1), ('boolean.class', 1), ('ObservableToSortedListTest', 1), ('Single.concat(Flowable.just(Single.just(1)))\n', 1), ('nulls.', 1), ('Completable.concat(Arrays.asList(a));\n\n', 1), ('queueDisposableInsteadOfQueueFuseable()', 1), ('LOGGER.info("Congratulations!', 1), ('doPrivilegedVoid(Runnable', 1), ('sophistication.\n', 1), ('Later', 1), ('constructor/method', 1), ('SimpleTroll();\n', 1), ('<p>It', 1), ('"Multiple', 1), ('verifyThread(Scheduler', 1), ('observableForEachWhile()', 1), ('NullPointerException("Observable', 1), ('frc;\n\n', 1), ("1).replace('$',", 1), ('Single.just(9),\n', 1), ('product\n', 1), ('this.dao.delete(originalEntities.get(1));\n', 1), ('sos', 1), ('DelaySubscriber(serial,', 1), ('com.iluwatar.specification.creature.Dragon;\nimport', 1), ('output.accept("excluding', 1), ('testHandledErrorIsNotDeliveredToThreadHandler(Scheduler', 1), ('MAX_STACK_DEPTH);\n', 1), ('(entry.getValue()', 1), ('io.reactivex.subscribers.DefaultSubscriber;\n\nfinal', 1), ('getDeclaredExceptions()', 1), ('project', 1), ('ignoreReferralErrors;\n\n', 1), ('pauseExecution();\n\n', 1), ('Delay(SequentialDisposable', 1), ('FindPersonApiHandlerTest', 1), ('errorAndDisposerThrowsNonEager()', 1), ('indicesNames)', 1), ('props.stringPropertyNames().stream().collect(Collectors.toMap(Function.identity(),', 1), ('LoggerFactory.getLogger(ConsoleLottery.class);\n\n', 1), ('deviceNumbers', 1), ('timeout(3000).times(1)).onComplete(eq(result),', 1), ('assertTrue("Diff', 1), ('onAfterTerminated;\n', 1), ('slidingDoor', 1), ('OrcBeast("axe"),', 1), ('trustConfigs)', 1), ('effectively', 1), ('ExceptionHelper()', 1), ('DisposableSingleObserver}', 1), ('doOnDispose()', 1), ('StandardCharsets.US_ASCII.name());\n', 1), ('source.reduce(second);\n\n', 1), ('paidUser', 1), ('CustomException(e.getMessage(),', 1), ('onSubscribeAndDisposeCrashes()', 1), ('*/\n@ViewModel\npublic', 1), ('getWeapon()', 1), ('hasAnnotation', 1), ('holders()', 1), ('!m.getName().contains("GenericScheduledExecutorService"))', 1), ('appClient.start();\n', 1), ('See",\n', 1), ('data.add(line);\n', 1), ('CascadeType.REMOVE,', 1), ('level2.getTreeSize());\n\n', 1), ('tryTerminate()', 1), ('singletonList(response.contentType));\n', 1), ('.asList();\n', 1), ('ConcatMapMaybeTckTest', 1), ('con.setDoOutput(true);\n', 1), ('lock.readLock()));\n\n', 1), ('assertEquals(stop,', 1), ('org.elasticsearch.discovery.zen.UnicastHostsProvider;\n\nimport', 1), ('byte...', 1), ('testUnversionedOptions()', 1), ('methodThrowingException());\n', 1), ('instances!",', 1), ('observer.nextCount);\n\n', 1), ('HasUpstreamPublisher<T>', 1), ('CakeViewImpl(cakeBakingService);\n', 1), ('Javadoc', 1), ('retries,', 1), ('tail;\n', 1), ('EvictionAction(Queue<GroupedUnicast<K,', 1), ('(owner.members.get(field.name)', 1), ('shutdown!");\n', 1), ('FlowableErrorHandlingTests', 1), ('(T)o2);\n', 1), ('tempPath);\n\n', 1), ('wizardsWithSpellbook', 1), ('secureStrings.get(setting);\n', 1), ('CompletableTransformer', 1), ('(Student)', 1), ('RxJavaPlugins.onSubscribe(Flowable.never(),', 1), ('cleanly', 1), ('(System.getenv("CI")', 1), ('parent.innerNext();\n\n', 1), ('mock(Unit.class));\n\n', 1), ('name.equals(struct.name);\n', 1), ('CertUtils.keyManager(certificateChain,', 1), ('ActionListener.wrap(response', 1), ('java.text.ParseException;\n\n/**\n', 1), ('listener.onResponse(Rows.of(output(),', 1), ('<li>Swaps', 1), ('delaySubscriptionTimeCustomScheduler()', 1), ('isDone.get();\n', 1), ('ForEachWhileObserver(Predicate<?', 1), ('predicate("Matches', 1), ('testUnsubscribeHappensAgainstParent()', 1), ('eventPool.put(newEventId,', 1), ('log.info(cust));\n', 1), ('UnitTest(final', 1), ("Don't", 1), ('ts.values().size();\n', 1), ('ObservableError<T>', 1), ('addAndGet(-missing);\n', 1), ('MediaType.application("vnd.ms-visio.stencil"),\n', 1), ('exceptions");\n', 1), ('ObjectHelper.requireNonNull(unit', 1), ('APPLE:\n', 1), ('setWizardClass(String', 1), ('Many-to-Many', 1), ('178,\\"description\\":', 1), ('ObservableConcatMapSingle(Observable<T>', 1), ('field.name', 1), ('v.ignoreElements();\n', 1), ('Architecture', 1), ('ParallelTransformer<T,', 1), ('synonymous', 1), ('Completable.concatArray(Completable.complete(),', 1), ('subscribeConsumerConsumer()', 1), ('TestException("Disposer");\n', 1), ('AuthenticatedWebSessionForIsis', 1), ('#mergeArrayDelayError(MaybeSource...)\n', 1), ('(aka', 1), ('"test";\n', 1), ('fromPublisherDoubleOnSubscribe()', 1), ('CompletableObservers', 1), ('assertTrue(emitter.toString().contains(ObservableCreate.CreateEmitter.class.getSimpleName()));\n', 1), ('crashOnComplete;\n\n', 1), ('javaPushInterface', 1), ('dataFileName', 1), ('sourceList.add(e);\n', 1), ('this.groups', 1), ('"032-045",', 1), ('MergerBiFunction<T>(comparator));\n\n', 1), ('MergeIterableTckTest', 1), ('Function<PublishSubject<Integer>,', 1), ('ScalarCallable);\n\n', 1), ('debug,', 1), ('laser"},\n', 1), ('io.reactivex.disposables;\n', 1), ('(converted', 1), ('getLogStreamName()', 1), ('(latches.hasNext())', 1), ('"\\"conditions\\":[{\\"type\\":\\"time\\",\\"condition\\":{\\"operator\\":\\"gte\\",\\"value\\":\\"1519603200\\"}},"', 1), ('SequentialDispose(SequentialDisposable', 1), ('onComplete}.', 1), ('.withWeapon(Weapon.DAGGER).build();\n', 1), ('CANCELLED),', 1), ('say,', 1), ('FlowableRetryPredicate<T>', 1), ('ConcatMapEagerMainObserver(Observer<?', 1), ('}});\n', 1), ('LOGGER.info("Adding', 1), ('testPluginException()', 1), ('MaybeEqualSingle<T>(source1,', 1), ('ObjectHelper.requireNonNull(singleSupplier.call(),', 1), ('@Disabled\n', 1), ('continuously\n', 1), ('add(panel,', 1), ('Flowable.just(Maybe.just(1)))\n', 1), ('ExternalConsumer(Blackhole', 1), ('"observable."', 1), ('"analysis_exception":\n', 1), ('BUCKET_SPAN', 1), ('Maybe.just(2)))\n', 1), ('addFundsToLotteryAccount(WireTransfers', 1), ('java.util.HashSet}</li>\n', 1), ('BlockingIgnoringReceiver()', 1), ('ex);\n}\n', 1), ('MulticastProcessorRefCountedTckTest', 1), ('assertEquals(expectedValue,', 1), ('Maybe.just(15)\n', 1), ('keyPassword;\n', 1), ('MergeObserver(Observer<?', 1), ('buffers\n', 1), ('.switchMapMaybe(Functions.justFunction(Maybe.error(new', 1), ('this.onTerminate', 1), ('(closed.get())', 1), ('"See', 1), ('ObjectHelper.requireNonNull(observableSource,', 1), ('org.elasticsearch.ingest.geoip;\n\nimport', 1), ('createCallbackThrows()', 1), ('"746-936",', 1), ('fluent\n', 1), ('Arrays.fill(values,', 1), ('ToListObserver(Observer<?', 1), ('allPotions.stream().map(System::identityHashCode).distinct().count());\n\n', 1), ('eventProcessor;\n\n', 1), ('Task(final', 1), ('columns();\n\n', 1), ('completableSourceAsMs()', 1), ('"isEqual', 1), ('io.reactivex.flowables.ConnectableFlowable}', 1), ('etc', 1), ('subpackages', 1), ('registerObserver(EventObserver', 1), ('authorization', 1), ('"scheduledevent.1.description', 1), ('NumberExpression(testStringValue);\n', 1), ('org.elasticsearch.ElasticsearchParseException;\nimport', 1), ('IllegalStateException("Unable', 1), ('numChecksFailed', 1), ('list.removeAll(c);\n', 1), ('verify(dispose,', 1), ('results.add(new', 1), ('handleEvent((StoppingData)', 1), ('(though', 1), ('Set<Member>', 1), ('trustStorePassword,', 1), ('race(r1,', 1), ('entities)', 1), ('down".', 1), ('Customizes', 1), ('dao.getAll();\n', 1), ('FlowableTakeLast(Flowable<T>', 1), ('INDEX_SETTINGS_CHECKS', 1), ('super("Order', 1), ('functions)', 1), ('"Bob",', 1), ('#merge(Iterable)\n', 1), ('disposition', 1), ('inserted");\n\n', 1), ('TestSubscriber<Integer>(1L)', 1), ('Future},', 1), ('parsers,', 1), ('MaybeIsEmpty<T>(source));\n', 1), ('readingTime;\n', 1), ('assertEquals(this.expectedStealMethod,', 1), ('CertUtils.resolvePath(trustStorePath,', 1), ('intermittently,', 1), ('source.subscribe(inner);\n\n', 1), ('Built-in', 1), ('reused', 1), ('"+0898245"));\n', 1), ('RxJavaPlugins.getErrorHandler();\n', 1), ('order)', 1), ('allWizards)', 1), ('Java-compliant', 1), ('MaybeFromFuture(Future<?', 1), ('spellDao.findByName(name);\n', 1), ('properties\n', 1), ('commands.authorNameUpdated("eEvans",', 1), ('requestCancelRaceDelayError()', 1), ('formatter.parse(timestamp);\n', 1), ('lock");\n', 1), ('ThreadPoolDispatcher(int', 1), ('list.remove(index);\n', 1), ('.onErrorResumeNext(Single.just(2))\n', 1), ('IntervalRangeSubscriber(s,', 1), ('Throttling', 1), ('assertFalse(dao.getById(existingCustomer.getId()).isPresent());\n', 1), ('onCompleteAfter()', 1), ('Maybe.just(4))\n', 1), ('doOnSubscribeJustCrash()', 1), ('innerComplete(MergeInnerObserver', 1), ('HasPrivilegesResponse()', 1), ('out.writeVInt(index.size());\n', 1), ('ParallelMapConditionalSubscriber(ConditionalSubscriber<?', 1), ('createdDateValues[i]);\n', 1), ('realizing', 1), ('mouth."\n', 1), ('first.subscribe(new', 1), ('checkAndUpdateLicenses()', 1), ('assertAfterTerminateCalledOnce()', 1), ('anymore",ex.getCause().getMessage());\n', 1), ('"Terry",', 1), ('BackpressureHelper.multiplyCap(3,', 1), ('"sarah@det.org");\n', 1), ('-5417183359794346637L;\n\n', 1), ('TimerObserver(s);\n', 1), ('numberOfIndices;', 1), ('setFactory},', 1), ('cs.test();\n', 1), ('Enum', 1), ('AnyTckTest', 1), ('Specification', 1), ('.\n', 1), ('service.saveNewLayer(layer2);\n', 1), ('operations:\n', 1), ('member.act(Action.GOLD);\n', 1), ('lazySet(COMPLETE_MASK', 1), ('statusCode(Integer', 1), ('LOGGER.info("\\t{}/{}/{}",', 1), ('paths)', 1), ('ChangeKeyOpsCommand(SelectionKey', 1), ('licenseSpec.toXContent(contentBuilder,', 1), ('javaClassesToPainlessStructs.get(Object.class);\n\n', 1), ('mutableWithSelector()', 1), ('assertFalse(empty.isDisposed());\n', 1), ('AppManager.save(userAccount5);\n', 1), ('reported', 1), ('scheduleTimed()', 1), ('repeatedly', 1), ('delivering', 1), ('((AbstractNioChannel)', 1), ('AccessController.doPrivileged(new', 1), ('createTempDir().resolve("keystore.jks");\n', 1), ('tc.onSubscribe(new', 1), ('this.c', 1), ('QueueDisposable.requestFusion', 1), ('implementing\n', 1), ('com.iluwatar.dirtyflag.App;\n\n/**\n', 1), ('state.onError(e);\n', 1), ('org.elasticsearch.ingest.attachment;\n\n/*\n', 1), ('subsystems', 1), ('file2', 1), ('(handler', 1), ('Clip', 1), ('ClqSimpleQueue<T>', 1), ('directly,', 1), ('observableCreate()', 1), ('(means', 1), ('enumMethods()', 1), ('f.serialize());\n\n', 1), ('ErrorMode.END));\n', 1), ('"Where', 1), ('.onErrorReturnItem(2)\n', 1), ('(slightly', 1), ('ObservableThrottleLatest(Observable<T>', 1), ('ObservableSwitchMapMaybe<T,', 1), ('tm', 1), ('testJust()', 1), ('12:05', 1), ('TrampolineSchedulerTest', 1), ('List<?', 1), ('array;\n\n', 1), ('BackpressureErrorSubscriber<T>(s));\n', 1), ('disposeWhenFallback()', 1), ('FlowableFromObservableTest', 1), ('this.index.equals(other.index)', 1), ('process();\n\n', 1), ('expectedTargetResult', 1), ('java.class.path})\n', 1), ('changeAlbumYear(int', 1), (':(\n', 1), ('machine', 1), ('TestHelper.checkDisposed(Single.create(new', 1), ('paramList.equals(other.paramList);\n', 1), ('testSubscriberAsTo()', 1), ('.concatMapSingle(Functions.<Single<Integer>>identity(),', 1), ('nuke', 1), ('}).filter(new', 1), ('ObservableFlatMapCompletable(ObservableSource<T>', 1), ('expectation', 1), ('Trampline.Worker\n', 1), ('BaseTypeParser.parse(MaybeNo2Dot0Since.findSource("Completable"),', 1), ('Streams.copy(inputStream,', 1), ('customer.getId().equals(customerId));\n', 1), ('DbManager.createVirtualDb();\n', 1), ('Single.<String>error(new', 1), ('default\n', 1), ('arguments[];\n', 1), ('fieldName', 1), ('repeatUntil()', 1), ('de-multiplexing', 1), ('normalized)', 1), ('url:', 1), ('isEmpty(int[]', 1), ('SynchronizeTest', 1), ('flushCache()', 1), ('blobStore,', 1), ('(toBeRemoved', 1), ('server;\n', 1), ('getStudents()', 1), ('writer.write("\\n");\n', 1), ('CustomSingleObserver(SingleObserver&lt;?', 1), ('invalidLowerJavaMajorVersion));\n', 1), ('expectedTarget;\n\n', 1), ('assertNotNull(availableLayers);\n', 1), ('Strategies', 1), ('javax.swing.JOptionPane;\nimport', 1), ('elements);\n', 1), ('observableProducer()', 1), ('RefConnection(ObservableRefCount<?>', 1), ('FiniteRange(long', 1), ('major;\n', 1), ('upper;\n', 1), ('org.apache.isis.applib.annotation.SemanticsOf;\nimport', 1), ('equalTo("XX:+UseG1GC"));\n', 1), ('prove', 1), ('8465401857522493082L;\n', 1), ('SpecialPermission.check();\n\n', 1), ('queue).consume();\n\n', 1), ('java.util.function.UnaryOperator;\nimport', 1), ('DeferredScalarSubscription<T>\n', 1), ('Initialize-on-demand-holder', 1), ('child2', 1), ('Float.class)', 1), ('FlowableSubscriber<T>()', 1), ('ac.onComplete(value,', 1), ('(int)elements).replay((Function)Functions.identity())\n', 1), ('assertTrue(list.addAll(Arrays.asList(3,', 1), ('treasureChest', 1), ('(collection)\n', 1), ('Single.just(1).contains(1).test().assertResult(true);\n\n', 1), ('myb', 1), ('onError(IllegalStateException)', 1), ('UpgradeActionRequired>', 1), ('rangeFlatMapJust(Blackhole', 1), ('DelayedRunnable(decoratedRun);\n\n', 1), ('INDEX', 1), ('delegate.createTrustManager(environment);\n', 1), ('LOG.error("unable', 1), ('IllegalArgumentException("error', 1), ('RxJavaPlugins#setInitNewThreadSchedulerHandler(io.reactivex.functions.Function)}', 1), ('Functions.toFunction(function4);\n', 1), ('single;\n', 1), ('BiPredicate<T,', 1), ('t.getMovement().equals(m);\n', 1), ('certificates.addAll(tc.certificates(environment));\n', 1), ('onSubscribeCrashes()', 1), ('grovy', 1), ('assertFalse(fallback.hasObservers());\n\n', 1), ('List<Action>', 1), ('ProxyConfig(Properties', 1), ('assertTrue(appender.logContains("doDraw"));\n\n', 1), ('"+980742154"));\n', 1), ('Arrays.toString(urls));\n', 1), ('Integer.parseInt(deviceNumbers[1]);\n', 1), ('ZipSubscriber(ZipCoordinator<T,', 1), ('StringUtils.asUTFString(Base64.getEncoder().encode(StringUtils.toUTF(basicValue)));\n', 1), ('second.queue;\n\n', 1), ('Color.GREEN},\n', 1), ('call(Subscriber<?', 1), ('"type";\n\n', 1), ('18\n', 1), ('guardedQueue\n', 1), ('useOfLoggedMute();\n\n', 1), ('assertTrue(dao.add(CUSTOMER));\n', 1), ('PlayerDetails("johnie@google.com",', 1), ('onSuccessEmpty()', 1), ('IllegalArgumentException(message);\n', 1), ('s[0]', 1), ('Does', 1), ('loop.', 1), ('<br>return', 1), ('logger)', 1), ('DefaultIfEmpty</a>\n', 1), ('MaybeObserver<Object>,\nSingleObserver<Object>,', 1), ('B2BService(Throttler', 1), ('toException.apply(message);\n', 1), ('(SubscriptionHelper.setOnce(field,', 1), ('.ifPresent(evenNumber', 1), ('sortCancelRace()', 1), ('errors[0]', 1), ('csub.add(w4);\n', 1), ('String.format("CakeLayerInfo', 1), ('FlowableDefer<T>', 1), ('map.get(name).get();\n', 1), ('timeUnitNullFail()', 1), ('org.elasticsearch.xpack.core.ml.job.results.OverallBucket;\n\nimport', 1), ('comprises', 1), ('applicationFile', 1), ('onCompleteFailure()', 1), ('finish()', 1), ('registerChannel(AbstractNioChannel', 1), ('boilerplate\n', 1), ('DefaultSubscriberTest', 1), ('TypeSafeMatcher<Throwable>()', 1), ('users.forEach(System.out::println);\n\n', 1), ('nonExistingFile', 1), ('"Yasha",', 1), ('withFutureDisposed2()', 1), ('fail("countAction', 1), ('accountsCollectionName);\n', 1), ('writeFileAtomically(final', 1), ('this.major', 1), ("Doesn't", 1), ('DoOnDisposeObserver<T>\n', 1), ('list.get(index).getMessage());\n', 1), ('(!child.clazz.isAssignableFrom(owner.clazz))', 1), ('Hierarchies', 1), ('lines.addAll(0,', 1), ('Functions.EMPTY_ACTION.toString());\n', 1), ('assertThat(seenInvalidLines,', 1), ('LOGGER.info(videoDetails);\n\n', 1), ('Integer.class)', 1), ('DisposableHelper.set(d,', 1), ('lineCount++;\n', 1), ('o.elementAt(0).toObservable();\n', 1), ('callback.', 1), ('base.getParentFile();\n\n', 1), ('user.getLastName().toLowerCase()', 1), ('node.previous.next', 1), ('SYNTAX(SQLSyntaxErrorException::new),\n', 1), ('getAllowedCallsPerSecond()', 1), ('SerializedEmitter<T>(this);\n', 1), ('(!redoStack.isEmpty())', 1), ('EventConsumer(numInstances,', 1), ('"first', 1), ('optionally\n', 1), ('getTestData()', 1), ('ArrayList<Object>(s', 1), ('assertSame(Functions.EMPTY_RUNNABLE,', 1), ('"john@qwe.bar");\n', 1), ('2).skip(elements)\n', 1), ('reference\n', 1), ('rangeObservableFlatMap', 1), ('MaybeZipIterable(Iterable<?', 1), ('PerfConsumer(bh));\n\n', 1), ('DisposableMaybeObserverTest', 1), ('assertThat(result,', 1), ('createdDateValues);\n', 1), ('*/\n@DynamoDBDocument\npublic', 1), ('Callable<Observable<Movie>>()', 1), ('(attachments', 1), ('onLift;\n\n', 1), ('TakeWhileSubscriber<T>(s,', 1), ('checkTicket(LotteryService', 1), ('handler.caught.printStackTrace();\n', 1), ('none\n', 1), ('takeFirst()', 1), ('shorterSequence()', 1), ('unbounded1m()', 1), ('(mapFactory', 1), ('io.reactivex.internal.subscriptions.ScalarSubscription;\nimport', 1), ('(ScriptException)', 1), ('Completable.mergeArray(new', 1), ('TimeUnit.MILLISECONDS))', 1), ('jobs;\n\n', 1), ('Writeable,', 1), ('useInfinite,', 1), ('IndexResolver.IndexInfo', 1), ('flowable2Flowable', 1), ('list.addAll(items);\n', 1), ('converting\n', 1), ('initiated', 1), ('onErrorResumeNext(Functions.justFunction(next));\n', 1), ('LOGGER.info(statA.toString());\n\n', 1), ('DelayWithMainObserver<T>(this,', 1), ('ticket.getPlayerDetails().getBankAccount(),', 1), ('rogueDouble.set(Stats.ATTACK_POWER,', 1), ('shrieks', 1), ("Thread's\n", 1), ('entries);\n', 1), ('NonThrowingPredicate<Object>', 1), ('FlowableTimeInterval(Flowable<T>', 1), ('scalarLimit;\n\n', 1), ('(Example,', 1), ('mar', 1), ('urlString);\n', 1), ('events-and-delegates', 1), ('"934-734",', 1), ('getTypeInternal(Struct', 1), ('trustStorePassword.getChars(),', 1), ('identity,', 1), ('RxJavaPlugins.setErrorHandler(null);\n', 1), ('postfix,\n', 1), ('Files.move()', 1), ('accessor', 1), ('consumer.accept(map::put);\n', 1), ('org.elasticsearch.ElasticsearchSecurityException;\nimport', 1), ('assertTrue(onePointSevenPointTwo.compareTo(onePointSevenPointTwoPointOne)', 1), ('StudentDataMapperImpl', 1), ('MaybeConcatPublisherTest', 1), ('Account(accountNo,', 1), ('this.ok', 1), ('Mammoth', 1), ('numTickets;', 1), ('Flowable<Completable>()', 1), ('org.supercsv.io.CsvListWriter;\nimport', 1), ('customers;\n\n', 1), ('SystemCallFilter.init(createTempDir());\n', 1), ('doAfterTerminated(@NonNull', 1), ('(actions', 1), ('checks\n', 1), ('1,\n', 1), ('unrecognized\n', 1), ('overrideConnectableFlowable()', 1), ('w.println(s);\n', 1), ('PURGE_PERIOD_SECONDS;\n\n', 1), ('dtm.removeRow(temp);\n', 1), ('4;\n', 1), ('getInstance(NazgulName', 1), ('UserAttributeGroupsResolverSettings', 1), ('MaybeFlatMapSingleElement(MaybeSource<T>', 1), ('perms);\n\n', 1), ('methodKey', 1), ('MongoTicketRepository(TEST_DB,', 1), ('a.onNext(o);\n\n', 1), ('ResumeSingleObserver<T>', 1), ('assertTrue(Single.error(new', 1), ('subject1k()', 1), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;\nimport', 1), ('getAvailableLayerEntities()', 1), ('assertTrue(list.equals(list3));\n\n', 1), ('beginning.\n', 1), ('ScalarDisposable<R>(observer,', 1), ('Completable.complete().hide().andThen(Flowable.range(0,', 1), ('resultant', 1), ('javaClassParameters[parameterCount]', 1), ('3628800,', 1), ('Setting<>("user_group_attribute",', 1), ('super("Client', 1), ('workDone', 1), ('jobId', 1), ('connectableFlowable2ConnectableFlowable', 1), ('Flowables.\n', 1), ('jsp;\n', 1), ('AtomicReference<AsyncSubscription<T>[]>(EMPTY);\n', 1), ('(NamedExpression)', 1), ('testServer.createContainer(args[1]);\n\n', 1), ('never()).request(anyInt());\n', 1), ('.withAbility("speed")\n', 1), ('ObservableFlatMapMaybe(ObservableSource<T>', 1), ('throttling,', 1), ('plugin!!");\n', 1), ('assertThat(JvmOptionsParser.spaceDelimitJvmOptions(Arrays.asList("-Xms1g",', 1), ('<code>AsyncExecutor</code>\n', 1), ('Scheduler.Worker})', 1), ('<b>thread-safe</b>\n', 1), ('readLines', 1), ('tss[i]', 1), ('studentRepository;\n\n', 1), ('AccountAggregate.getAccount(accountNoFrom);\n', 1), ('func;\n', 1), ('views.add(view);\n', 1), ('MockSocket(address,', 1), ('.flatMapIterable(new', 1), ('asAttributeMap(List<?', 1), ('instanceField.get(supplier);\n', 1), ('"resumeFunctionInCaseOfError', 1), ('org.elasticsearch.common.inject.binder.LinkedBindingBuilder#toProvider(Provider)}.\n', 1), ('"+678324123"));\n', 1), ('Event>,', 1), ('SingleDetachTest', 1), ('restored', 1), ('Functions.toFunction(function3);\n', 1), ('1000];\n', 1), ('list.get(i).intValue());\n', 1), ('error%s', 1), ('HTTP_PROXY_DEFAULT', 1), ('builder.field("java_version",', 1), ('JLabel("Order"));\n', 1), ('TestSubscriber<Integer>(2L);\n\n', 1), ('RxJavaPlugins.getOnObservableCreate());\n//', 1), ('"3",', 1), ('&lt;init-param&gt;\n', 1), ('List<Server>', 1), ('asyncResult5', 1), ('checkNext', 1), ('leak).\n', 1), ('ConcatPublisherEagerTckTest', 1), ('href="http://docs.oracle.com/javase/8/docs/api/java/lang/doc-files/ValueBased.html">\n', 1), ('aggregation.\n', 1), ('SequentialDisposable(first);\n\n', 1), ('PatternType', 1), ('ActionResponse', 1), ('LOGGER.error("Thread', 1), ('tests/IDE)\n', 1), ('MaybeErrorCallable<T>(supplier));\n', 1), ('reportSubscriptionSet()', 1), ('subscribers\n', 1), ('Subscription#request(long)}.', 1), ('contents\n', 1), ('methodName,', 1), ('JON.\n', 1), ('(entity,', 1), ('argument);\n', 1), ('username="', 1), ('CompletableEmpty();\n\n', 1), ('mutedClose(Connection', 1), ('(context.containsKey(IUnitOfWork.MODIFY))', 1), ('queue();\n\n', 1), ('assertTrue(u.isDisposed());\n', 1), ('rmo.errors.size());\n', 1), ('"proxy.http";\n', 1), ('painlessSuperStructs.add(painlessInterfaceStructName);\n', 1), ('BlockingSubscriberTest', 1), ('level3.getName());\n', 1), ('singleLineToString(prefix,', 1), ('shortHash,', 1), ('ToListObserver(SingleObserver<?', 1), ('Collections.unmodifiableMap(privileges);\n', 1), ('Partial', 1), ('org.elasticsearch.test.SecuritySettingsSourceField;\nimport', 1), ('ObservableSource<TLeftEnd>', 1), ('s.request(maxConcurrency', 1), ('ObservableOnErrorNext(ObservableSource<T>', 1), ('name(Expression', 1), ('poison', 1), ('assertEquals(Arrays.asList(100),', 1), ('owner.\n', 1), ('ThreadPoolDispatcher(2)).start();\n', 1), ('SubscriptionHelper.validate(null,', 1), ('outside', 1), ('Object()).reduce(new', 1), ('availableToppings.size());\n', 1), ('(long', 1), ('"event"', 1), ('testSuccess()', 1), ('processButton', 1), ('FlowableOnSubscribe<T>', 1), ('assertTrue("Too', 1), ('AsyncSubject<T>();\n', 1), ('ProtocolViolationException("Subscription', 1), ('message)\n', 1), ('rescheduled', 1), ('java.nio.channels.AsynchronousServerSocketChannel;\nimport', 1), ('scan', 1), ('testBuildWizard()', 1), ('(Thread.currentThread()', 1), ('source),', 1), ('getProperty(List<String>', 1), ('FlowableDematerialize<T>', 1), ('ObservableRange(1,', 1), ('total.\n', 1), ('UnaryOperator<Map<String,', 1), ('UncheckedIOException(String.format(Locale.ROOT,', 1), ('ConcurrentLinkedQueue<T>(items);\n', 1), ('permissions;\n', 1), ('this.javaVersion', 1), ('perms.add(OWNER_EXECUTE);\n', 1), ('errorCount;\n', 1), ('FlowableTimeoutTimed<T>', 1), ('whitelist!\n', 1), ('10)));\n\n', 1), ('CUSTOMERS");', 1), ('multipleOnComplete()', 1), ('mapping));\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/finallyDo.png"', 1), ('\'Fireball\'");\n', 1), ('KingJoffrey}', 1), ('executor..\n', 1), ('references(List<?', 1), ('Node}s', 1), ('this.students;\n', 1), ('execute(String[]', 1), ('32));\n\n', 1), ('ChainInput.Result(results,', 1), ('Sending', 1), ('setSize(300,', 1), ('negativeCount()', 1), ('ScalarSubscription(subscriber,', 1), ('(Function)Functions.identity()));\n', 1), ('mapFactory;\n\n', 1), ('memoryLimitInMb)', 1), ('fish.getWeightTons());\n', 1), ('testLast()', 1), ("'price'", 1), ('"\\"";\n', 1), ('RxJavaPlugins#createIoScheduler(ThreadFactory)}', 1), ('6667));\n', 1), ('worthwhile', 1), ('Object)}', 1), ('SubscribeTask(parent)));\n', 1), ('HttpURLConnection}.\n', 1), ('observer.onError(t);\n', 1), ('fail.append("Found', 1), ('doorProperties));\n\n', 1), ('verifyVisit(unit,', 1), ('params[];\n', 1), ('con.getInputStream())', 1), ("Letter('h'))));\n\n", 1), ('accounts.put(bankAccount,', 1), ('IndexInfo(indexName,', 1), ('java.io.File")\n', 1), ('ScheduledDirectPeriodicTask(Runnable', 1), ('java.io.LineNumberReader;\nimport', 1), ('onErrorCall;\n', 1), ('PublishProcessor.create().ignoreElements().blockingAwait();\n', 1), ('millis)', 1), ('Version(version,', 1), ('read:\n', 1), ('CustomInMemoryRolesProvider(Settings', 1), ('app.setUp();\n', 1), ('Completable.mergeDelayError(pp1.map(new', 1), ('deleteBlob(String', 1), ('asNormalizables.get(0).getNormalizedScore(),', 1), ('destination,', 1), ('worth', 1), ('0L\n', 1), ('(javaInteraceLookups.isEmpty()', 1), ('backpressureDocLine;\n\n', 1), ('requirements', 1), ('setString(String', 1), ('objectToExplain.toString();\n', 1), ('7898995095634264146L;\n\n', 1), ('SingleOnSubscribe\n', 1), ('documentation.\n', 1), ('this.crashDispose', 1), ('finish...");\n', 1), ('influencer.setProbability(probability);\n', 1), ('classLoader', 1), ('eventManager.createAsync(eventTime);\n', 1), ('this.videos', 1), ('org.elasticsearch.common.logging.Loggers;\nimport', 1), ('java.util.Scanner;\nimport', 1), ('.assertResult((Number)1d);\n', 1), ('normalized.add(StringUtils.normalize(url.toString()));\n', 1), ('io.reactivex.processors.ReplayProcessor;\nimport', 1), ('abilities)', 1), ('alias,', 1), ('IllegalArgumentException("duplicate', 1), ('base.doOnEach(sideEffectObserver);\n\n', 1), ('Technically', 1), ('level3', 1), ('SubscriptionHelper.cancel(s);\n\n', 1), ('item(s).\n', 1), ('(Disposable)', 1), ('java.util.Collection', 1), ('Flowable.fromIterable(sources).concatMapDelayError((Function)MaybeToPublisher.instance());\n', 1), ('JTextField(100);\n', 1), ('interested,', 1), ('Pattern.compile("((?<start>\\\\d+)(?<range>-)?(?<end>\\\\d+)?:)?(?<option>-.*)$");\n\n', 1), ('observables.add(Flowable.just(i));\n', 1), ('findAll();\n\n', 1), ('"xx";\n', 1), ('withPublisherError()', 1), ('tickets.clear();\n', 1), ('includeDuplicates', 1), ('})\n@OutputTimeUnit(TimeUnit.SECONDS)\n@State(Scope.Thread)\npublic', 1), ('level1_a\n', 1), ('truststore,', 1), ('Realm.Factory>', 1), ('tcpChannel(int', 1), ('SingleElementSubscriber(SingleObserver<?', 1), ('assertThat(lineNumber,', 1), ('randomFrom(EnumSet.allOf(UpgradeActionRequired.class)));\n', 1), ('Asynchronous</b>', 1), ('((token', 1), ('function4Fail()', 1), ('MulticastProcessorRefCountedTckTest()', 1), ('Schedulers.newThread();', 1), ('DateTimeFormatterBuilder()\n', 1), ('pushes', 1), ('s3.dispose();\n\n', 1), ('testCurrentTimeDriftBackwards()', 1), ('SecuritySettingsSourceField.TEST_PASSWORD.toCharArray(),\n', 1), ('nothing")\n', 1), ('LineNumberReader(\n', 1), ('height="333"', 1), ('MaybeDelayWithCompletable(MaybeSource<T>', 1), ('System.err.println("Should', 1), ('super.fulfill(value);\n', 1), ('TestHelper.checkEnum(EmptyComponent.class);\n\n', 1), ('MaybeSource<Downstream>', 1), ('setting);\n', 1), ('"non-existing-file");\n', 1), ('ConnectableObservable>', 1), ('SubscribeOnObserver(s,', 1), ('\\"key\\"', 1), ('SubscriberResourceWrapper<T>', 1), ('Dispatcher.getInstance();\n\n', 1), ('(Files.exists(env.pluginsFile())', 1), ('(exceptions.isEmpty())', 1), ('toIndex);\n', 1), ('createConsumerThrowsResource()', 1), ('mock(Context.class));\n', 1), ('"Goblin",', 1), ('subprocess', 1), ('toSql;\n', 1), ('TestHelper.checkDisposed(\n', 1), ('getEventPool()', 1), ('MaybeAmb<T>', 1), ('my.package.Example', 1), ('errorConsumerEmpty()', 1), ('LoggerFactory.getLogger(Reader.class);\n\n', 1), ('Completable.amb(Arrays.asList(pp0.ignoreElements(),', 1), ('setNumber(final', 1), ('clazzes.put(clazz,', 1), ('subscriptions.add(subscription);\n\n', 1), ('transportClient.addTransportAddress(new', 1), ('serializedConcurrentOnNext()', 1), ("BiFunction's", 1), ('Observable\n\n', 1), ('Observable.<Void>never().blockingMostRecent(null).iterator().next());\n', 1), ('FlowableIgnoreElementsCompletable(Flowable<T>', 1), ('foregrounded\n', 1), ('videos;\n\n', 1), ('Servant("test").checkIfYouWillBeHanged(goodCompany));\n', 1), ('StandardCharsets.UTF_8))\n', 1), ('children);\n\n', 1), ('"Kelly",', 1), ('(element.length()', 1), ('characterFrequency(String', 1), ('errorHandler1);\n\n', 1), ('DisposeTask(once,', 1), ('assertTrue(list.containsAll(Arrays.asList(2,', 1), ('(inner.done)', 1), ('proxy")\n', 1), ('textInput.get(textIndex++);\n', 1), ('TakeLastTimedObserver(Observer<?', 1), ('observableSubscribe0()', 1), ('checkDoubleOnSubscribeFlowableToSingle(Function<Flowable<T>,', 1), ('ZipMaybeObserver<T>\n', 1), ('RxJavaPlugins.setOnObservableSubscribe(observable2observer);\n', 1), ('.append(prefix).append("Name:', 1), ('ROWING_BEAN', 1), ('rco.onSubscribe(Disposables.empty());\n\n', 1), ('addSecretInput(String', 1), ('TestHelper.checkUtilityClass(Disposables.class);\n', 1), ('(potion', 1), ('AtomicReference<CacheDisposable<T>[]>', 1), ('elements!', 1), ('this.crashOnComplete', 1), ('handleEvent(StartingData', 1), ('fields[2].split(":");\n', 1), ('targetVersion', 1), ('deflater', 1), ('flatMapSingleElement(final', 1), ('Coder");\n', 1), ('getParams()', 1), ('Collections.unmodifiableSet(urlElements);\n', 1), ('ToXContentFragment', 1), ('Single#as}', 1), ('java.sql.ResultSetMetaData;\nimport', 1), ('IllegalArgumentException("GoogleCloudStorageFixture', 1), ('frontController.handleRequest(request);\n', 1), ('(hasNativeControllerValue)', 1), ('Flowable.just(2).delay(100,', 1), ('checkSingleBackpressure()', 1), ('1000).collect(Functions.<Integer>createArrayList(128),', 1), ('WRONG_DEPOSIT', 1), ('SecureString>', 1), ('far.', 1), ('"email2");\n', 1), ('Function6', 1), ('org.apache.logging.log4j.message.ParameterizedMessage;\nimport', 1), ('createFluentIterable(integers).forEach(consumer);\n\n', 1), ('doubleComplete2()', 1), ('structsMap.get(struct);\n\n', 1), ('assertEquals("TEST",', 1), ('apples++;\n', 1), ('mock(DataSource.class);\n', 1), ('assertTrue(ticket4.isPresent());\n', 1), ('DbManager.upsertDb(userAccount);\n', 1), ('doPrivilegedVoid(final', 1), ('userId;\n\n', 1), ('languages,', 1), ('.assertResult(1024);\n', 1), ('b.indexOf("<dt><b>Scheduler:</b></dt>",', 1), ('(connect())', 1), ('-6298857009889503852L;\n\n', 1), ('email\n', 1), ('executor.startProcess(lazyval("callback",', 1), ('testCancelledTasksDontRun()', 1), ('((ScheduledExecutorService)executor).schedule((Callable<Object>)sr,', 1), ('HELPER.scheduleDirect(new', 1), ('terminal.println(line);\n', 1), ('"calc"', 1), ('builder.field("extended_plugins",', 1), ('CryptUtils.readPublicKey(publicKeyBytes);\n', 1), ('testVisitCommander()', 1), ('ownerStruct.constructors.put(painlessMethodKey,', 1), ('LOGGER.info("(cache', 1), ('assertEquals(Integer.valueOf(12),', 1), ('EmptyCompletableObserver();\n\n', 1), ('testScanIntegersWithoutInitialValue()', 1), ('Future<Object>()', 1), ('joshzambales\n', 1), ('Observable.just(2).delay(100,', 1), ('-754898800686245608L;\n\n', 1), ('this.in', 1), ('items.size()={},', 1), ('methods.add(m);\n', 1), ('threadFactory', 1), ('ObservableEventStream.getEventStream("HTTP-ClusterB",', 1), ('scalar,', 1), ('FlowableOnBackpressureBufferStrategy<T>', 1), ('Subclass', 1), ('FUSED_EMPTY', 1), ('fields);\n\n', 1), ('request()}', 1), ('countLines()\n', 1), ('view;\n', 1), ('restrictedTrustConfig.filesToMonitor(environment);\n', 1), ('(!HeavyFactory.class.isInstance(heavy))', 1), ('testPutDocument()', 1), ('testFindAllSpells()', 1), ('(AuthenticatedWebSessionForIsis)', 1), ('io.reactivex.subscribers.TestSubscriber}', 1), ('crashOnNext);\n', 1), ('times(0)).onNext("one");\n', 1), ('this.add(panel);\n', 1), ('times(3)).onNext(anyInt());\n', 1), ('MaybeConcatArrayTest', 1), ('delegates.size(),', 1), ('panel.\n', 1), ('MaybeSource[count', 1), ('super(key);\n', 1), ('assertTrue(pp.offer(1));\n', 1), ('setFunds(sourceBackAccount,', 1), ('interaction', 1), ('o.time\n', 1), ('Objects.hash(username,', 1), ('MERCHANTABILITY,\nFITNESS', 1), ('ps*}</li>\n', 1), ('curr.first', 1), ('delayErrorIterableCancelAfterNext()', 1), ('RxJavaPlugins.initIoScheduler(c));\n\n', 1), ('(m.getName().startsWith("set"))', 1), ('onRequest.accept(n);\n', 1), ('intent', 1), ('<i>{@literal', 1), ('.append(prefix).append("', 1), ('MaybeTimer(Math.max(0L,', 1), ('SimpleExampleTestCase', 1), ('getBoxedType(Class<?>', 1), ('default:', 1), ('accounts.getOrDefault(bankAccount,', 1), ('Scheduler.scheduleDirect}', 1), ('entry.getKey();\n\n', 1), ('giveWine(Royalty', 1), ('"(",', 1), ('CountObserver(t));\n', 1), ('Enumeration<String>', 1), ('csvReader.getHeader(true);\n', 1), ('reason();\n}\n\n', 1), ('Socket(InetAddress.getLocalHost(),', 1), ('d3', 1), ('threads1.size());\n', 1), ('zip7()', 1), ('emits)', 1), ('MaybeFlatMapCompletable(MaybeSource<T>', 1), ('error(Functions.justCallable(exception));\n', 1), ('AndThenObservableObserver<R>\n', 1), ('mapFailWithStop()', 1), ('spin,', 1), ('writingTime;\n', 1), ('parsed.isSupported(ChronoField.INSTANT_SECONDS);\n', 1), ('HideTckTest', 1), ('spellbook)', 1), ('Timed<T>', 1), ('playerDetails,', 1), ('serviceExecutor', 1), ('rangeSource()', 1), ('unit.sleep(delay);\n', 1), ('CompositeException(errors));\n', 1), ('between...").get().toString());\n', 1), ('ObservableCreate(ObservableOnSubscribe<T>', 1), ('Design");\n', 1), ('notifyObservers(A', 1), ('org.apache.tika.metadata.Metadata;\nimport', 1), ('apply(int', 1), ('Maybe.just(1).delaySubscription(100,', 1), ('getStarted()', 1), ('testedCreature.getSize());\n', 1), ('"error', 1), ('terms,', 1), ('(existingStruct.clazz.equals(javaClass)', 1), ('anything.', 1), ('Disposables.fromFuture(ft);\n', 1), ('(AbstractNioChannel', 1), ('(PartyMember', 1), ('#hasValue()}', 1), ('assertTrue(appender.logContains("level3_b"));\n', 1), ('testMessage(final', 1), ('customerResource.save(customerThree);\n', 1), ('Pojo', 1), ('List<TrustConfig>', 1), ('IntegerType;\n', 1), ('{}.",', 1), ('-1517510584253657229L;\n\n', 1), ('DoFinallyObserver(SingleObserver<?', 1), ('3));\n', 1), ('unbox', 1), ('X500Principal("CN="', 1), ('handler.</li>\n', 1), ('MemoryUsage', 1), ('flatMapIntPassthruSync(Input', 1), ('lastIndexOf(Object', 1), ('ComputationScheduler();\n', 1), ('.parallel(2,', 1), ('List<Task>', 1), ('URL[]', 1), ('terminal.println("WARNING:', 1), ('CompletableSubject()', 1), ('deque.offer(t);\n\n', 1), ('optimization.\n', 1), ('newlines', 1), ('Flowable.<String>empty().ignoreElements();\n', 1), ('bindings', 1), ('assertNotNull(availableToppings);\n', 1), ('[{}].', 1), ('parent.onNext.accept(t);\n', 1), ('CompletableMerge(Publisher<?', 1), ('float.class)', 1), ('TestDisposableSubscriber<T>', 1), ('"\'");\n', 1), ('RxJavaPlugins.setIoSchedulerHandler(replaceWithImmediate);\n\n', 1), ('workQueue}', 1), ('delayedErrorOnSuccess()', 1), ('System.out.printf("Starting:', 1), ('retryBiPredicate()', 1), ('ObjectHelper.requireNonNull(nextFunction.apply(e),', 1), ('set!"', 1), ('filterFalse()', 1), ('(Stream<Path>', 1), ('storageResponse.body.length);\n', 1), ('Named', 1), ('checkFusedIsEmptyClear(Observable<T>', 1), ('checkDoubleOnSubscribeFlowableToCompletable(Function<Flowable<T>,', 1), ('dest.fulfill(null);\n', 1), ('LoggerFactory.getLogger(GuardedQueue.class);\n', 1), ('PlayerDetails("jacob@google.com",', 1), ('FlowableCollectSingle(Flowable<T>', 1), ('injector.getInstance(LotteryAdministration.class);\n', 1), ('Tika', 1), ('accountFrom.handleTransferFromEvent(this);\n', 1), ('exceptions.forEach(e::addSuppressed);\n', 1), ('createWith(K', 1), ('CompletableFuture\n', 1), ('FlowableOnErrorNext(Flowable<T>', 1), ('apply(GroupedFlowable<Integer,', 1), ('.subscribe().dispose();\n', 1), ('SingleDelay(SingleSource<?', 1), ('mergeArrayDelayError}', 1), ('ROLE_B', 1), ('buffer\n', 1), ('Publisher[8];\n\n', 1), ('AsyncTask<Long>', 1), ('PlusExpressionTest', 1), ('scripts.\n', 1), ('com.iluwatar.specification.property.Size;\n\n/**\n', 1), ('org.elasticsearch.xpack.sql.session.Rows;\nimport', 1), ('createNewSimpleObject()', 1), ('(!cdl.await(5,', 1), ('.validate(User::getName,', 1), ('expectedJvmOption', 1), ('CompletableAndThenTest', 1), ('moves', 1), ('testThatOriginalPermissionsAreKept()', 1), ('singletonList(javaClassName));\n', 1), ('Banking', 1), ('configure()', 1), ('AbstractObservableWithUpstreamTest', 1), ('drift;\n', 1), ('[%s]",', 1), ('assertNotNull(layer.name);\n', 1), ('Callable<Map<K,', 1), ('call)', 1), ('32\n', 1), ('Publisher<Timed<Object>>>()', 1), ('assertEquals(expectedDates[d].length', 1), ('StringReader(multipleInvalidLines);\n', 1), ('((CompositeException)ex).getExceptions();\n', 1), ('paidGroup.contains(user);\n', 1), ('EventDoesNotExistException\n', 1), ('Primitive', 1), ('availableToppings', 1), ('Fetched', 1), ('ToSortedListTckTest', 1), ('ownerStruct.clazz.getConstructor(javaClassParameters);\n', 1), ('times(1)).modify(student1);\n', 1), ('ambiguity', 1), ('supportsFileAttributeView(Class<?', 1), ('Collections.singleton("["', 1), ('this.eventClassName', 1), ('150', 1), ('testLottery()', 1), ('(X509', 1), ('reside', 1), ('instanceMethodDef)', 1), ('java.lang.String}</li>\n', 1), ('nature</li>\n', 1), ('org.elasticsearch.common.blobstore.support.PlainBlobMetaData;\nimport', 1), ('JUnitRuleMockery2', 1), ('winningNumbers.add(Integer.parseInt(parts[i]));\n', 1), ('(lower', 1), ('BiFunction<List<Object>,', 1), ('JLabel("Contact', 1), ('ParallelRunOn<T>(this,', 1), ('Effective', 1), ('FlowableFlatMapCompletableCompletable(Flowable<T>', 1), ('RxJavaPlugins.initNewThreadScheduler(new', 1), ('BootstrappingGlue', 1), ('this.addressLineTwo', 1), ('InnerQueuedSubscriber<Integer>(support,', 1), ('SingleDoOnSuccess<T>(this,', 1), ('AlbumPage(webClient);\n', 1), ('java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)\n', 1), ('testSuspend()', 1), ('Completable.complete().ambWith(error).test().assertComplete();\n', 1), ('builder.fileMode(Reader.FileMode.MEMORY_MAPPED);\n', 1), ('remains', 1), ('BiPredicate', 1), ('subscriber.onSubscribe(s1);\n\n', 1), ('action.toString(),', 1), ('async.', 1), ('MaybePeek(MaybeSource<T>', 1), ('java.awt.GridLayout;\n\nimport', 1), ('signedContent.length];\n', 1), ('node.next.previous', 1), ('subject.onNext(value);\n', 1), ('(!Arrays.equals(source.getGenericParameterTypes(),', 1), ('assertTrue(emitter.serialize().toString().contains(ObservableCreate.CreateEmitter.class.getSimpleName()));\n', 1), ('roles,', 1), ('initializeData(cakeBakingService);\n\n', 1), ('com.iluwatar.hexagonal.service;\n\nimport', 1), ('emitted.</dd>\n', 1), ('MaybeObserveOn(MaybeSource<T>', 1), ('setDynamoDbMapper(DynamoDBMapper', 1), ('complete).', 1), ('ObservableReduceMaybe<T>', 1), ('verify(underlying,', 1), ('executeService.submit(writer1);\n\n', 1), ('groupCount', 1), ('CacheDisposable(SingleObserver<?', 1), ('NEW_TRHEAD})\n', 1), ("Letter('p'),", 1), ('email)', 1), ('*/\n@Disabled\npublic', 1), ('delete(String', 1), ('CertUtils.readCertificates(Collections.singletonList(path),', 1), ('spin-up");\n', 1), ('actionsCount;', 1), ('a.getArgument(0);\n', 1), ('Dispatcher}.\n', 1), ('3L),', 1), ('assertTrue(depth.get()', 1), ('history', 1), ('DatabaseMetaData)', 1), ('\\"value\\"\\n"));\n', 1), ('Collections.unmodifiableMap(cluster);\n', 1), ('createSchema()', 1), ('Thread(CacheStore::flushCache));\n', 1), ('MySubscriber<Integer>', 1), ('(HtmlSelect)', 1), ('8080,', 1), ('TieredFeatureToggleVersion();\n\n', 1), ('evenItems.get(2));\n', 1), ('Iterator<Integer>()', 1), ('soldierResponse;\n', 1), ('cancelOnRequest()', 1), ('.putInt(pubKeyFingerprint.length)\n', 1), ('schedulePeriodically(@NonNull', 1), ('org.joda.time.DateTimeUtils}</li>\n', 1), ('(newIterator.hasNext())', 1), ('retrievedMsg;\n', 1), ('compile-time\n', 1), ('u.getName());\n', 1), ('.delay(100,', 1), ('prompt(terminal,', 1), ('com.iluwatar.hexagonal.domain.PlayerDetails;\n\nimport', 1), ('t3', 1), ('io.reactivex.internal.fuseable;\n', 1), ('"760-009",', 1), ('List<Whitelist.Field>', 1), ('dq.clear();\n', 1), ('foundJars', 1), ('org.objectweb.asm.Type.getType(Object.class)));\n\n', 1), ('ss.onSuccess(1);\n\n', 1), ('(ByteBuffer[])', 1), ('structsMap.put(painlessTypeName,', 1), ('started");\n', 1), ('java.util.Locale;\n\nimport', 1), ('writeAround(UserAccount', 1), ('MlFilterWriter(Collections.emptyList(),', 1), ('FileLoggerModule();\n', 1), ('AtomicReference<PublishSubscription<T>[]>(EMPTY);\n', 1), ('numArray)', 1), ('letter', 1), ('com.iluwatar.databus.DataBus;\nimport', 1), ('errorAfterCancel()', 1), ('DoOnEachSubscriber(\n', 1), ('*/\n@Test\npublic', 1), ('FlowableIntervalRange(long', 1), ('MaybeSource}\n', 1), ('fromFuture}\n', 1), ('resetting', 1), ('testIfFunctionThrowsThatNoMoreEventsAreProcessed()', 1), ('rejectingExecutorWorker()', 1), ('host);\n', 1), ('findPattern("QueueSubscription\\\\.(NONE|SYNC|ASYNC|ANY|BOUNDARY)");\n', 1), ('wireTransfers', 1), ('times(1)).onNext(Arrays.asList(5,', 1), ('Flag</b>', 1), ('that.functionVersion', 1), ('Single.just(1).doFinally(null);\n', 1), ('action.writeFile(writer);\n', 1), ('ClassStep,', 1), ('Files.exists(path.resolve(blobName));\n', 1), ('filterFailWithStop()', 1), ('sEventId', 1), ('Maybe.just(1).delaySubscription(Flowable.error(new', 1), ("'getInstance'", 1), ('path.resolve(source);\n', 1), ('SQLClientInfoException(message,', 1), ('this.numberOfSubscribers', 1), ('unsupported', 1), ('AndThenPublisherSubscriber<R>(s,', 1), ('BufferBoundarySubscriber(BufferBoundarySupplierSubscriber<T,', 1), ('Single<T>,', 1), ('f.concatMapCompletable(\n', 1), ('wrapOrThrow(Throwable', 1), ('(int)elements).hide();\n', 1), ('Defect");\n\n', 1), ('view.displayGiant(model);\n\n', 1), ('Console),', 1), ('OtherSingleObserver(SingleObserver<?', 1), ('toInstant(timestamp).toEpochMilli();\n', 1), ('maybeStart()', 1), ('semantically', 1), ('java.util.concurrent.CopyOnWriteArrayList;\n\n/**\n', 1), ('arguments.\n', 1), ('exec("Debug.explain(params.a)",', 1), ('org.springframework.context.support.ClassPathXmlApplicationContext;\n\n/**\n', 1), ('subscribe(flatMap,', 1), ('-1L,', 1), ('function7Fail()', 1), ('request(\n', 1), ('CertUtils.resolvePath(groupConfigPath,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.just.png"', 1), ('org.elasticsearch.discovery.zen.UnicastZenPing.resolveHostsLists;\n\n/**\n', 1), ('io.reactivex.annotations.SchedulerSupport#COMPUTATION', 1), ('FlowableBufferBoundarySupplier<T,', 1), ('rnd', 1), ('a.getType().equals(ActionType.MENU_ITEM_SELECTED))\n', 1), ('ObserverTest<GHobbits>', 1), ('w4.schedule(countAction);\n\n\n', 1), ('DONE;\n', 1), ('bs.offer(b);\n', 1), ('(interactiveMode)', 1), ('conversions\n', 1), ('input\n', 1), ('super(50);\n', 1), ('LotteryUtils()', 1), ('201', 1), ('10).subscribe(sub);\n\n', 1), ('fromEntity.apply(entity);\n', 1), ('Observable.just(1).safeSubscribe(new', 1), ('TimeoutFallbackObserver(SingleObserver<?', 1), ('.put(pubKeyFingerprint)\n', 1), ('STANDARD_CLASSES', 1), ('-a-singleton-with-javas-enum\n', 1), ('cancelOnError()', 1), ('OtherSingleObserver<T>(actual,', 1), ('5170026210238877381L;\n\n', 1), ('ts.values().get(0);\n', 1), ('StripBoundaryObserver<T>', 1), ('accountOfDaenerysBeforeShotDown', 1), ('toString());\n', 1), ('filesToMonitor(Environment', 1), ('store(MethodWriter', 1), ('elasticsearchVersion);\n', 1), ('personalized', 1), ('nextSubscriber);\n', 1), ('assertFalse(DisposableHelper.replace(d,', 1), ('first.request();\n', 1), ('251330541679988317L;\n\n', 1), ('normalNonEager()', 1), ('shop.getBottomShelf();\n', 1), ('non-delayed,', 1), ('assertThat(permissionsAfterWrite,', 1), ('Emitter(s);\n', 1), ('FlowableFlatMapSingle(Flowable<T>', 1), ('-XX:+UseG1GC"));\n', 1), ('onError}).\n', 1), ('servletRequest.getParameter("user");\n', 1), ("'.').substring(0,", 1), ('create();\n\n', 1), ('writeRecord(List<String>', 1), ('combined', 1), ('D>(observer,', 1), ('Weather();\n', 1), ('Single&lt;Integer&gt;', 1), ('TestException("Outer"));\n\n', 1), ('interception.\n', 1), ('Producer("Producer_"', 1), ('ObservableTakeUntilPredicate<T>', 1), ('failed(Throwable', 1), ('LoggerFactory.getLogger(Producer.class);\n\n', 1), ('isBug()', 1), ('putAccount(Account', 1), ('verifyNoMoreInteractions(consumer);\n\n', 1), ('b.indexOf("*/",', 1), ('ObservableFlatMapSingle(ObservableSource<T>', 1), ('createKeyManager(@Nullable', 1), ('menuActions.size());\n', 1), ('org.elasticsearch.cluster.ClusterState;\nimport', 1), ('(DateEsField)', 1), ('(org.elasticsearch.common.util.CollectionUtils.isEmpty(collections))', 1), ('useMongoDb)', 1), ('ObservableTake(ObservableSource<T>', 1), ('msg.setBody(message);\n', 1), ('"capacityHint");\n\n', 1), ('cancel</li>\n', 1), ('interrupt', 1), ('testExecute(DragonSlayingStrategy', 1), ('opens.");\n', 1), ('CompletableDisposeOnTest', 1), ('"/";\n\n', 1), ('(out.getVersion().onOrAfter(Version.V_6_2_0))', 1), ('testedCreature.getMovement());\n', 1), ('FlowableDistinct(Flowable<T>', 1), ('finished.\n', 1), ('io.reactivex.internal.subscriptions.DeferredScalarSubscription;\nimport', 1), ('.buffer(Flowable.just(1).concatWith(Flowable.<Integer>never()))\n', 1), ('Annotations', 1), ('account.copy();\n', 1), ('Single.just(1).repeat().take(5)\n', 1), ('shouldConstructPart()', 1), ('horror', 1), ('FIELD})\n@Retention(RUNTIME)\n@Documented\npublic', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.flatMap.png"', 1), ('(e.g.,', 1), ('promiseIsFulfilledWithAnExceptionIfTaskThrowsAnException()', 1), ('signature;\n\n', 1), ('Class.\n', 1), ('!inMaybe)', 1), ('DisposableHelper', 1), ('bot.setLayout(new', 1), ('Event>(MAX_RUNNING_EVENTS);\n\n', 1), ('setOnceAndRequest()', 1), ('toException)', 1), ('dataSource.getConnection().createStatement().executeQuery("SELECT', 1), ('PlayerDetails("peter@google.com",', 1), ('health.getNumberOfNodes();\n', 1), ('fromAction}', 1), ('csub', 1), ('declarations);\n', 1), ('this.completionValue', 1), ('Booleans.parseBoolean(System.getProperty("es.geoip.load_db_on_heap",', 1), ('Flowable.timer(0,', 1), ('forever,', 1), ('NazgulEnum.KHAMUL);\n', 1), ('1000).any(new', 1), ('times(1)).onComplete(eq(result),', 1), ('firstObservable', 1), ('ps1.onError(ex);\n', 1), ('ActionListener.wrap(aliases', 1), ('3).toSortedList(4).toObservable()\n', 1), ('org.elasticsearch.common.inject.Provides', 1), ('AsyncExecutor\n', 1), ('(destination.endsWith("?"))', 1), ('(QueueSubscription<U>)', 1), ('System#err}.\n', 1), ('FlowableConcatMapMaybe<T,', 1), ('result.setValue(task.call());\n', 1), ('angry={}",\n', 1), ('right.size())', 1), ('.putInt(magic.length)\n', 1), ('b.size()', 1), ('org.elasticsearch.common.util.concurrent.ConcurrentCollections;\nimport', 1), ('started");\n\n', 1), ('io.reactivex;\nimport', 1), ('unmodifiableMap(builder);\n', 1), ('ObservableDelay<T>', 1), ('body);\n\n', 1), ('member.getClass();\n', 1), ('whitelistStruct.whitelistConstructors)', 1), ('<b>else</b>', 1), ('testUnderLoad()', 1), ('"Received', 1), ('MessageData}.\n', 1), ('(cls.isAssignableFrom(throwable.getClass()))', 1), ('LOGGER.info("Downloading', 1), ('updateThread.interrupt();\n', 1), ('RuntimeException(error);\n', 1), ('getUsableSpace()', 1), ('FlowableNever();\n\n', 1), ('dependentPromise.get());\n', 1), ('successErrorRace()', 1), ('us.concatMapCompletable(completableComplete(),', 1), ('java.util.zip.GZIPInputStream;\n\nimport', 1), ('comparer', 1), ('getTitle()', 1), ('VideoResourceTest', 1), ('corruption', 1), ('doOnEventThrowsError()', 1), ('"\\n";\n', 1), ('FileSelectorJFrame()', 1), ('ConcatMapSingleTckTest', 1), ('line.size());\n\n', 1), ('ObservableConcatMapMaybe(Observable<T>', 1), ('(paramNumber', 1), ('capped()', 1), ('retained:', 1), ('"RxNewThreadScheduler";\n', 1), ('logStreamName=\'"', 1), ('Broken', 1), ('RxJavaPlugins.setOnParallelAssembly(new', 1), ('address="', 1), ('maintaining', 1), ('Flowable.just(1).ignoreElements().<Integer>toFlowable().subscribe(ds);', 1), ('PrintStream(System.err);\n\n', 1), ('ex;\n\n', 1), ('3000);\n', 1), ('AsyncSubscription(Disposable', 1), ('type.value;\n', 1), ('("double".equals(whitelistStruct.javaClassName))', 1), ('scalarXMap(T', 1), ('panel.add(jtAreas[0]);\n', 1), ('"resource_not_found_exception":\n', 1), ('Flowable<Flowable<HorrorMovie>>', 1), ('bufferSize())', 1), ('Dispatcher.class.getDeclaredField("instance");\n', 1), ('rowSize;\n', 1), ('executor.submit(task);\n', 1), ('standard(Class<?>', 1), ('Performs', 1), ('//TLTL\n//', 1), ('throttler', 1), ('nextCount++;\n', 1), ('innerComplete(InnerQueuedSubscriber<R>', 1), ('RainbowFish(String', 1), ('assertNotNull(initialLayers);\n', 1), ('customers.add(customerOne);\n', 1), ('ImplementedBy', 1), ('title);\n\n', 1), ('Schedulers\n', 1), ('com.iluwatar.featuretoggle;\n\nimport', 1), ('pointing', 1), ('this.timed', 1), ('ByteBuffer.wrap(ACK);\n', 1), ('oneOf(mockContainer).allInstances(SimpleObject.class);\n', 1), ('in.name();\n', 1), ('io.reactivex.subscribers.TestSubscriber;\n\n/**\n', 1), ('isEmpty();\n\n', 1), ('PlusExpression(left,', 1), ('a[i].cancel();\n', 1), ('Set<V>', 1), ('DisposableHelper.isDisposed(observer1.get());\n', 1), ('available";\n\n', 1), ('executor.submit(periodicWrapper);\n', 1), ('onCallback;\n', 1), ('Deque<BusinessException>', 1), ('LOGGER.info(customer.getFirstName()));\n', 1), ('resourceDisposedIfMapperCrashes()', 1), ('automatically\n', 1), ('getLayers()', 1), ('RxJavaPlugins.onBeforeBlocking()))', 1), ('SimpleFluentIterable.fromCopyOf(integerList).filter(negatives()).first(3).asList();\n', 1), ('overrideIoScheduler()', 1), ('"maybeSupplier', 1), ('testDistinctUntilChangedOfNormalSourceWithKeySelector()', 1), ('parent.onError(new', 1), ('name"', 1), ('flowable)', 1), ('emitter,\n', 1), ('(LinkageError)', 1), ('(!right.isEmpty())', 1), ('*/\n/*\nThe', 1), ('java.util.Iterator;\n\npublic', 1), ('Inventory(INVENTORY_SIZE);\n', 1), ('(IndexResolver.IndexInfo)', 1), ('soConsumerIndex(long', 1), ('toMaybe}', 1), ('t1}\n', 1), ('three}");\n', 1), ('ToSingleMaybeSubscriber<T>', 1), ('jvmOptions.add(jvmOption);\n', 1), ('doOnComplete}', 1), ('inserting,', 1), ('(int)elements).publish((Function)Functions.identity())\n', 1), ('FlowableDelaySubscriptionOther<T,', 1), ('ActionListener)', 1), ('org.elasticsearch.xpack.watcher.trigger;\n\nimport', 1), ('being\n', 1), ('robertt240', 1), ('this.decoratedRun', 1), ('Item}s', 1), ('ResponseOrException<>(type.asException(failure.reason()));\n', 1), ('etc...\n', 1), ('(Consumer)', 1), ('unboundedIn()', 1), ('Part::new);\n', 1), ('resolveNameForMachine()', 1), ('executeService.submit(reader2);\n\n', 1), ('errorAfterTermination()', 1), ('ObservableWindowTests', 1), ('"whatever[at]wherever.com");\n', 1), ('600;', 1), ('LinkageError)', 1), ('onScheduleComputation()', 1), ('java.nio.file.attribute.PosixFilePermission.OWNER_READ;\nimport', 1), ('DeprecationInfoAction.filterChecks(checks,', 1), ('Collections.singleton(pid));\n', 1), ('PublisherBufferSkipSubscriber(Subscriber<?', 1), ('"value";\n\n', 1), ('supplierClass', 1), ('io.reactivex.disposables.Disposables;\n\npublic', 1), ('"Account{"\n', 1), ('CombineLatestArrayTckTest', 1), ('sqlQuery.setResultTransformer(Transformers.aliasToBean(Author.class)).uniqueResult();\n', 1), ('UserDto(String', 1), ('reactorMain.shutdownNow();\n', 1), ('whitelistMethod', 1), ('BlockingObserver<Object>(q);\n\n', 1), ('Pisa', 1), ('time)\n', 1), ('callables.add(new', 1), ('TestSubscriber<Disposable>', 1), ('letter.print();\n', 1), ('Enumeration<Permission>', 1), ('AccountAggregate.getAccount(accountNo);\n', 1), ('"994-989",', 1), ('Modifier.ABSTRACT)', 1), ('.toSingleDefault(0)\n', 1), ('tunnel."));\n\n', 1), ('account);\n', 1), ('specialDay;\n', 1), ('File(filePath).getAbsoluteFile());\n', 1), ('(available.isEmpty())', 1), ('FlowableBufferExactBoundary<T,', 1), ('digging', 1), ('CustomMaybeOperator&lt;T&gt;', 1), ('(randomizedrunner', 1), ('unmaintained', 1), ('dir.resolve("pid"),', 1), ('formatter;\n', 1), ('resourceDisposer;\n', 1), ('onError");\n', 1), ('o.subscribe(new', 1), ('crashOnError;\n', 1), ('methodThrowingException()', 1), ('ObservableTimeInterval<T>', 1), ('publishers\n', 1), ('ignoreReferralErrors,\n', 1), ('Node(userId,', 1), ('AppManager.save(userAccount1);\n', 1), ('(CustomerNotFoundException', 1), ('rtn,', 1), ('username;\n\n', 1), ('countersCollection.findOneAndUpdate(find,', 1), ('networkService.resolvePublishHostAddresses(null);\n', 1), ('java.sql.SQLSyntaxErrorException;\nimport', 1), ('(ps.isDisposed())', 1), ('completableFunction,', 1), ('disposeInDrainLoop()', 1), ('go\n', 1), ('fromEntity;\n', 1), ('mock(UncaughtExceptionHandler.class);\n', 1), ('Completable.fromObservable(ps2);\n', 1), ('addCap(long', 1), ('height="309"', 1), ('Builder}s.\n', 1), ('regex)', 1), ('NoSuchElementException);\n', 1), ('risks', 1), ('ThrottleLatestSubscriber<T>(s,', 1), ('resumeDoubleOnSubscribe()', 1), ('rejected,', 1), ('("<init>".equals(name))', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/delaySubscription.s.png"', 1), ('ThrottleTimerImpl(10);\n', 1), ('MaterializeSubscriber<T>', 1), ('getHeavy', 1), ('(at.hasNext())', 1), ('UnsubscribeSubscriber<T>(s,', 1), ('(backpressureSpec', 1), ('wizardClass)\n', 1), ('addressLineTwo', 1), ('initReplaceWithImmediate', 1), ('Printed";\n\n', 1), ('second,\n', 1), ('TimeUnit.MINUTES)\n', 1), ('Files.newOutputStream(file,', 1), ('calculates', 1), ('realmType,', 1), ('painlessInterfaceStructName', 1), ('deserializedFishV2.getName(),', 1), ('manager,\n', 1), ('transactionManager()', 1), ('ElementAtSubscriber(SingleObserver<?', 1), ('ParallelFilterTest', 1), ('\\".\\"\'s', 1), ('way)\n', 1), ('that.certPath', 1), ('request(initialRequest);\n', 1), ('onAfterTerminated,\n', 1), ('cache);\n', 1), ('keyPassword,', 1), ('System.out.println("---', 1), ('MaybeRetryTest', 1), ('actualPermissions.add(permission);\n', 1), ('processing;', 1), ('service.findAllSpellbooks())', 1), ('constructor.setAccessible(true);\n\n', 1), ('this.field', 1), ('WhitelistLoader', 1), ('paramList.toString();\n', 1), ('are.*', 1), ('DeferredScalarSubscriberTest', 1), ('org.elasticsearch.xpack.security.authc.support.CachingUsernamePasswordRealm;\nimport', 1), ('abilities;\n\n', 1), ('delayOnError()', 1), ("'Error'", 1), ('toException;\n', 1), ('isEnhanced;\n', 1), ('defaultZoneId;\n\n', 1), ('java.lang.Math.class.getName(),\n', 1), ('SingleInternalHelper.iterableToFlowable(\n', 1), ('ObjectClassTodefClass(Class<?>', 1), ('com.iluwatar.servicelayer.spell.SpellDaoImpl;\nimport', 1), ('"could', 1), ('java.util.concurrent.Callable;\n\npublic', 1), ('getStream(HttpURLConnection', 1), ('java.util.UUID;\nimport', 1), ('thenApply(Function<?', 1), ('assertFalse(list.isEmpty());\n', 1), ('subscribers.delete(subscriber);\n', 1), ('org.elasticsearch.xpack.sql.session;\n\nimport', 1), ('list1', 1), ('reduceIntsObservable()', 1), ('usage\n', 1), ('received?",', 1), ('drop();\n\n', 1), ('mute-idiom', 1), ('Objects.equals(attachments,', 1), ('IndexDeprecationChecks::dynamicTemplateWithMatchMappingTypeCheck,\n', 1), ('executor.', 1), ('Map<PotionType,', 1), ('"Publisher",\n', 1), ('org.elasticsearch.discovery.zen.UnicastZenPing.DISCOVERY_ZEN_PING_UNICAST_HOSTS_RESOLVE_TIMEOUT;\nimport', 1), ('fin', 1), ('loggedMute(CheckedRunnable', 1), ('actions\n', 1), ('this.dao.delete(originalEntities.get(2));\n\n', 1), ('initCacheCapacity(int', 1), ('effects', 1), ('System.out.print(".java:");\n\n', 1), ('LimitSubscriber(Subscriber<?', 1), ('topping)', 1), ('12/9/15', 1), ('SingleRetryTest', 1), ('logGroupName)', 1), ('De-multiplexer\n', 1), ('topping,', 1), ('(BytesStreamOutput', 1), ('exceptions.add(new', 1), ('Version.fromString(esVersionString);\n', 1), ('org.elasticsearch.client.Client;\nimport', 1), ('this.fields', 1), ('getProperties();\n', 1), ('s.schedule(r,', 1), ('jBlochBooksCount);\n', 1), ('subscription.request(n);\n', 1), ('notifyChange()', 1), ('this.memoryLimitInMb', 1), ('universal', 1), ('IntegerType', 1), ('FlowableSingleSingle(Flowable<T>', 1), ('TestSingle<T>', 1), ('tempIdx++;\n', 1), ('name!"});\n', 1), ('s1.dispose();\n', 1), ('MaybeMergeArray<T>(sources));\n', 1), ('onNextThenOnCompleteTwice()', 1), ('AbstractObservableWithUpstream<TLeft,', 1), ('COMPLETE_MASK))', 1), ('2.0.9', 1), ('washingMachine.getWashingMachineState());\n', 1), ('needs.\n', 1), ('header);\n\n', 1), ('java.util.zip})\n', 1), ('.concatMapCompletable(Functions.justFunction(Completable.error(new', 1), ('mageProto', 1), ('Flowable>', 1), ('SingleFromPublisher<T>', 1), ('assertNotNull(allCakes);\n', 1), ('EnumIvoryTower}.', 1), ('studentsToOperate);\n', 1), ('ObservableMergeWithMaybe(Observable<T>', 1), ('doOnSuccessCrash()', 1), ('list("src/test/java/io/reactivex/internal/operators/",', 1), ('page.getElementById("albumRating");\n', 1), ('spinning")\n', 1), ('MediaType.application("vnd.ms-visio.drawing"),\n', 1), ('serialDisposable.update(firstSet);\n\n', 1), ('assertFalse(\n', 1), ('obsSingle;\n\n', 1), ('PrintStream(stdOutBuffer));\n', 1), ('(e.isNothing())', 1), ('LOGGER.info(rogue.toString());\n\n', 1), ('increased.\n', 1), ('whitelistField)', 1), ('bus.publish(StoppingData.of(LocalDateTime.now()));\n', 1), ('reduceMaybeCheckDisposed()', 1), ('asObserver()', 1), ('soldier")\n', 1), ('community.\n', 1), ('Executors.newScheduledThreadPool(0);\n', 1), ('FlowableAny(Flowable<T>', 1), ('PrintLogoCommand', 1), ('syncDisposeIdempotent()', 1), ('parse(Clock', 1), ('Single.just(5)\n', 1), ('(token', 1), ('RxJavaPlugins.onNewThreadScheduler(NEW_THREAD);\n', 1), ('items.size())', 1), ('spellbook.getWizards().add(this);\n', 1), ('RxThreadFactory("RxSchedulerPurge"));\n', 1), ('support\n', 1), ('seenJvmOptions.entrySet())', 1), ('350));\n\n', 1), ('actual.onNext(b);\n\n', 1), ('io.reactivex.internal.operators.completable.CompletableAmb.Amb;\nimport', 1), ('boolean-valued', 1), ('spell14', 1), ('.flatMap(Functions.justFunction(Maybe.<Integer>error(new', 1), ('way."\n', 1), ('timer.replace(scheduler.schedulePeriodicallyDirect(this,', 1), ('String.format("Pool', 1), ('spamming', 1), ('fulfilling\n', 1), ('innerComplete(InnerQueuedObserver<T>', 1), ('RxJavaPlugins.onAssembly((Maybe<T>)MaybeNever.INSTANCE);\n', 1), ('timeouts\n', 1), ('SECURITY(SQLInvalidAuthorizationSpecException::new),\n', 1), ('ArrayCompositeDisposable(int', 1), ('PluginTestUtil', 1), ('SubscriberResourceWrapper(Subscriber<?', 1), ('this.isStopped', 1), ('TEST_PART_PRICE);\n', 1), ('asyncResult3', 1), ('fromSingleNull()', 1), ('interpreted', 1), ('obsSingle.subscribe(new', 1), ('executeService.submit(reader1);\n\n', 1), ('transferred', 1), ('resolve(LDAPInterface', 1), ('goldMine.startNewDay();\n\n', 1), ('Thread.sleep(i);\n', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleOrError().delaySubscription(Observable.just(1)));\n', 1), ('items.size(),', 1), ('Hero.Builder}\n', 1), ('info.\n', 1), ('FileLoggerModuleTest', 1), ('C++', 1), ('MergeMaybeObserver(Subscriber<?', 1), ('email=\'"', 1), ('reactorMain', 1), ('ConcatTckTest', 1), ('words,\n', 1), ('threaded,', 1), ('CompletableFromUnsafeSource', 1), ('never()).modify(student1);\n', 1), ('journal.', 1), ('parent.error;\n\n', 1), ('b.append("', 1), ('java.util.concurrent.atomic.AtomicBoolean;\n\n/**\n', 1), ('id.getId());\n', 1), ('tailIndex;\n\n', 1), ('javaClassName;\n\n', 1), ('testDoOnError()', 1), ('(supplierClass.isLocalClass())', 1), ('"read', 1), ('mask', 1), ('doOnSubscribe(final', 1), ('Collections.synchronizedList(new', 1), ('hero\n\n', 1), ('u),', 1), ('JScrollPane(area);\n', 1), ('resumeDispose()', 1), ('UndeliverableException(Throwable', 1), ('mustard.");\n\n', 1), ('wheelProperties.put(HasType.PROPERTY,', 1), ('BlockingHelper()', 1), ('org.elasticsearch.painless.Definition.Field;\nimport', 1), ('Null-value', 1), ('StatusMemberTest', 1), ('java.security.InvalidParameterException;\n\n/**\n', 1), ('defaultTimezone', 1), ('Math.max(1,', 1), ('safety\n', 1), ('Maybe.<Integer>empty().delaySubscription(100,', 1), ('7-8:-XX:+PrintGCDateStamps}\n', 1), ('[%d]', 1), ('!lines.get(1).equals(header[1]))', 1), ('FlowableFromFuture(Future<?', 1), ('outerDone', 1), ('.name("Cuauhtemoc")\n', 1), ('MethodKey("<init>",', 1), ('fishV1.getName(),\n', 1), ('Map<NazgulName,', 1), ('expected.\n', 1), ('ParallelFlowable<Integer>()', 1), ('objIn', 1), ('once",', 1), ("'unhandle'", 1), ('MaybeIsEmptySingle<T>', 1), ('priority;\n', 1), ('Paths.get()', 1), ('deployment', 1), ('this.blobStore', 1), ('serverSocketChannel', 1), ('FutureTask,', 1), ('EmptySubscription.error(t,', 1), ('toInstantUnsafelyIgnoringAmbiguity(parsed);\n', 1), ('writer.println(clientName', 1), ('FlowableSwitchMapMaybePerf', 1), ('flowableSubscribe0()', 1), ('first.replace(sr);\n\n', 1), ('Objects.equals(name,', 1), ('FileLoggerModule.getSingleton().prepare();\n', 1), ('"#zen_file_unicast_host_";\n\n', 1), ('PlayerDetails("ron@google.com",', 1), ('supported");\n', 1), ('<em>may</em>', 1), ('query;', 1), ('aggregator,', 1), ('assertEquals(model.toString(),', 1), ('addConstructor(painlessTypeName,', 1), ('TriggerEvent>', 1), ('io.reactivex.subscribers.TestSubscriber;\n\n\npublic', 1), ('SwitchMapMaybeMainObserver(Observer<?', 1), ('SingleTask', 1), ('super(100);\n', 1), ('PrototypeTest<P', 1), ('10)));\n', 1), ('Consumer<Integer>\n', 1), ('observables)', 1), ('.assertResult(0L);\n', 1), ('filename', 1), ('.assertFailure(Throwable.class);\n', 1), ('ObjectHelper.requireNonNull(valueSupplier,', 1), ('clusterName).build();\n', 1), ('ReadWriteHandler', 1), ('testSingleVersionOption()', 1), ('Functions.EMPTY_CONSUMER.toString());\n', 1), ('RxJavaPlugins.getOnCompletableCreate();\n//\n//', 1), ('PreBuiltTransportClient(settings,', 1), ('java.lang.Short.class.getName(),\n', 1), ('logGroupName=\'"', 1), ('java.sql.ResultSetMetaData;\n\n//', 1), ('innerWrapper', 1), ('IllegalArgumentException("field', 1), ('Lines:', 1), ('update(Disposable', 1), ('#onSubscribe(Disposable)},', 1), ('KEY_SINGLE_PRIORITY', 1), ('write-through', 1), ('healing"));\n', 1), ('scripts', 1), ('clazz.methods.get(new', 1), ('Map.Entry<String,', 1), ('empty.dispose();\n', 1), ('assertEquals(2L,', 1), ('"334-746",', 1), ('accountsCollection.find(search).limit(1).into(new', 1), ('poison()', 1), ('(!gate)', 1), ('"properties', 1), ('Executors.newFixedThreadPool(poolSize);\n', 1), ('UserAttributeGroupsResolverSettings()', 1), ('(Long)a[0]', 1), ('out.writeMap(index.privileges,', 1), ('(Modifier.isFinal(javaField.getModifiers())', 1), ('RxJavaPlugins.setOnFlowableAssembly(flowable2Flowable);\n', 1), ('con.getInputStream()))', 1), ('CancellationException("unit', 1), ('RxJavaPlugins.clearAssemblyTracking();\n//', 1), ('whitelistStruct.whitelistFields)', 1), ('w4', 1), ('IllegalArgumentException("unsafeCreate(Maybe)', 1), ('(painlessClassName', 1), ('ObjectHelper.requireNonNull(onAfterTerminated,', 1), ('Validator', 1), ('SecurityPermission("insertProvider"));\n', 1), ('this.expectedTarget', 1), ('Schedulers.from(executorScheduler);\n', 1), ('esVersionString', 1), ('gold!\n', 1), ('userDto.email);\n', 1), ('nameBuilder.append(s).append("\\r\\n");\n//', 1), ('zipWith(SingleSource<U>', 1), ('necessary).\n', 1), ('"observable/").listFiles();\n\n', 1), ('possibility\n', 1), ('BootswatchThemeProvider(BootswatchTheme.Flatly));\n', 1), ('(port', 1), ('jdbcMinorVersion()', 1), ('groups.get(mapKey);\n', 1), ('2).take(elements)\n', 1), ('getType("Long");\n', 1), ('implementation,', 1), ('"java.util.function.txt",\n', 1), ('MessageDigests.sha256();\n', 1), ('f.delay(100,', 1), ('8-:-XX:+PrintGCDateStamps}\n', 1), ('CustomerDao},', 1), ('Inject}ed).\n', 1), ('testFullWorkDay()', 1), ('name.toUpperCase(Locale.ROOT);\n', 1), ('changeAlbumRating(String', 1), ('SkipUntilTckTest', 1), ('Observable.timer(0,', 1), ('elasticsearch', 1), ('assertSame(cos,', 1), ('capture', 1), ('Completable.error(error).subscribe(rco);\n\n', 1), ('password);\n', 1), ('open.\n', 1), ('Paths.get(args[1]);\n\n', 1), ('"")\n', 1), ('Binder#requestStaticInjection}.\n', 1), ('pipeline', 1), ('RxJavaPlugins.initNewThreadScheduler(null);\n', 1), ('other.attachments);\n', 1), ('first-out', 1), ('"895-345",', 1), ('identity-based\n', 1), ('wrapper\n', 1), ("sender's", 1), ('assertNull(q.peek());\n', 1), ('this.hash', 1), ('NewThreadTask());\n', 1), ('backing\n', 1), ('purgePeriod;\n\n', 1), ('behalf', 1), ('association', 1), ('accountsCollection.updateOne(search,', 1), ('readObject;\n', 1), ('CakeToppingInfo(cake.getTopping().getId(),', 1), ('emptyPolicy', 1), ('broken', 1), ('continuous', 1), ('total++;\n', 1), ('Collections.unmodifiableList(this.errors);\n', 1), ('booleanType;\n', 1), ('HolderNaiveTest', 1), ('Flowable<List<Integer>>>()', 1), ('abilities.', 1), ('administration', 1), ('<code>write-around</code>', 1), ('source.subscribe(bes);\n', 1), ('(IndexPrivileges)', 1), ('RxThreadFactory("TestCustomPool"));\n\n', 1), ('immediateOuterInnerErrorRace()', 1), ('performance,', 1), ('Thread.sleep(writingTime);\n', 1), ('given,', 1), ('org.elasticsearch.common.xcontent.NamedXContentRegistry;\nimport', 1), ('BlockingHelper.awaitForComplete(callback,', 1), ('bill:', 1), ('ConcatMapMaybeObserver(ConcatMapMaybeMainObserver<?,', 1), ('"email1");\n\n', 1), ('V>(t,', 1), ('statA.equals(statB));\n', 1), ('ts.assertFailure(CompositeException.class);\n\n', 1), ('separator\n', 1), ('bufferSupplier);\n', 1), ('testSuccessfulTaskWithCallback()', 1), ('followed\n', 1), ('Functions.identity()));\n', 1), ('Arrays.asList("http.port:', 1), ('source.subscribe(st);\n', 1), ('CompositeException(new', 1), ('cakeLayerInfos,', 1), ('IntervalObserver(Observer<?', 1), ('StandardCharsets.UTF_8,', 1), ('onErrorReturn(final', 1), ('LotteryNumbers.create(givenNumbers);\n', 1), ('WebRequest', 1), ('.doAfterNext(new', 1), ('testMove()', 1), ('(manifest', 1), ('ObservableConverter<T,', 1), ('CombineLatestIterableTckTest', 1), ('"Argument', 1), ('builder.append("Character', 1), ('SwitchIfEmptyMaybeObserver(SingleObserver<?', 1), ('Deregister', 1), ('rangeFlatMap.subscribe(new', 1), ('.thenApply(Utility::characterFrequency);\n', 1), ('wizardsWithSpell', 1), ('Arrays.asList(rp1,', 1), ('builder.field("has_native_controller",', 1), ('numOtherFiles;', 1), ('Observable.range(1,num).doOnNext(new', 1), ('String(this.stdOutBuffer.toByteArray()).trim());\n', 1), ('path.indexOf("/RxJava");\n', 1), ('ExceptionHelper.<Exception>throwIfThrowable(new', 1), ('Objects.requireNonNull(getTestedObject());\n\n', 1), ('awaitForComplete(CountDownLatch', 1), ('IgnoreElementsSubscriber<T>(t));\n', 1), ('assertFalse(bs1.isCancelled());\n\n', 1), ('"1")\n', 1), ('"\\r\\n");\n', 1), ('testUnsubscribed()', 1), ('"-Xms1g\\n%d-%d:-Xmx1g\\n%d-%d:-XX:+UseG1GC\\n%d-%d:-Xlog:gc",\n', 1), ('breaks\n', 1), ('mag', 1), ('Trampoline::jump)\n', 1), ('NO_REQUEST;\n', 1), ('ObjectHelper.requireNonNull(delayIndicator,', 1), ('getStatusCode()', 1), ('ToXContentObject', 1), ('CombineLatestIterableDelayErrorTckTest', 1), ('flatMapIntPassthruAsync(Input', 1), ('SingleObserveOn(SingleSource<T>', 1), ('ount1)', 1), ('public.', 1), ('timedEmpty()', 1), ('1L', 1), ('to.assertFailure(IOException.class);\n\n', 1), ('CustomerDto}', 1), ('tricky', 1), ('scan(Observable.class);\n', 1), ('org.elasticsearch.bootstrap.FilePermissionUtils;\nimport', 1), ('blobNamePrefix;\n', 1), ('is",\n', 1), ('addLayer(CakeLayer', 1), ('ObservableReduceWithSingle(ObservableSource<T>', 1), ('thread",', 1), ('secret', 1), ('"+12421255",', 1), ('(Struct)object;\n\n', 1), ('iterable,', 1), ('arguments[0]', 1), ('LOGGER.info("another={}",', 1), ('parent.subscribe(source1,', 1), ('Validator}', 1), ('sandbox', 1), ('PublishDisposable<T>(t,', 1), ('ObjectHelper.requireNonNull(collectionSupplier,', 1), ('--------------------------------------------\n', 1), ('InputStreamReader(System.in));\n', 1), ('FlatMapIterableObserver(Subscriber<?', 1), ('Policy}', 1), ('Arrays.fill(innerArray,', 1), ('List<AbstractNioChannel>', 1), ('public:', 1), ('parse("1.8");\n\n', 1), ('javaClassesToPainlessStructs', 1), ('.noSpell()\n', 1), ('SubscriptionHelper.CANCELLED', 1), ('org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcConnection;\nimport', 1), ('isEqual);\n', 1), ('ScheduledEventsWriter(Collections.emptyList(),', 1), ('JavadocWording', 1), ('Entity', 1), ('ObjectHelper.requireNonNull(completableSource,', 1), ('assertSame(filter,', 1), ('LOGGER.info("deserializedFishV1', 1), ('task.run();\n\n', 1), ('get/set\n', 1), ('java.lang.Long.class.getName(),\n', 1), ('org.elasticsearch.license.CryptUtils;\nimport', 1), ('setSpells(Set<Spell>', 1), ('numArray', 1), ('non-array', 1), ('.findFirst();\n', 1), ('it.iterator();\n\n', 1), ('executorScheduler', 1), ('2.13', 1), ('pipelines', 1), ('manually\n', 1), ('UdpLoggingClient(String', 1), ('jvmOptionConsumer,\n', 1), ('udpChannel(int', 1), ('CWD', 1), ('instructing', 1), ('store.\n', 1), ('toSortedListComparatorCapacityObservable()', 1), ('CompletableSubscribeOn(CompletableSource', 1), ('compose(SingleTransformer<?', 1), ('column);\n\n', 1), ('be.\n', 1), ('third-party', 1), ('pseudo-random', 1), ('LotteryTicketRepository}\n', 1), ('javadoc2.substring(0,', 1), ('String.valueOf(expectedValue);\n', 1), ('CompletableRetryTest', 1), ('SingleElementObserver<T>(t));\n', 1), ('List<Disposable>', 1), ('473971317683868662L;\n\n', 1), ('spells)', 1), ('U>(serial,', 1), ('registered.\n', 1), ('requested.addAndGet(-produced);\n', 1), ('DelayObserver', 1), ('org.junit.Assert.fail;\n\npublic', 1), ('org.elasticsearch.common.ParseField;\nimport', 1), ("plugin's", 1), ('assertEquals(between.toString(),', 1), ('byte[signedContentLen];\n', 1), ('TestHelper.compositeList(ex);\n', 1), ('Receives', 1), ('Publisher<Object>>', 1), ('SingleObserver<Integer>()', 1), ('rolePermissionSettings;\n\n', 1), ('allocates', 1), ('org.elasticsearch.xpack.core.watcher.trigger.TriggerEvent;\nimport', 1), ('-2311252482644620661L;\n\n', 1), ('Configuration', 1), ('customers.add(customer1);\n', 1), ('assertNull(RxJavaPlugins.onSubscribe(Flowable.never(),', 1), ('logger.error("failed', 1), ('terminate(AtomicReference<Throwable>', 1), ('SecureString(value.toCharArray()));\n', 1), ('BlockingQueue}', 1), ('crashOnIterator;\n', 1), ('constructors.', 1), ('.repeatUntil(new', 1), ('assertNull(Observable.fromArray(1,', 1), ('client.admin().cluster().prepareHealth().setWaitForYellowStatus().get();\n', 1), ('CakeViewImplTest', 1), ('@Param({"10000"})\n', 1), ('Author");\n', 1), ('Flowables', 1), ('PainlessDocGenerator}', 1), ('(bufferedReader.ready())', 1), ('times(1)).onSuccess(Arrays.asList(1,', 1), ('-7508389464265974549L;\n\n', 1), ('13', 1), ('rxThreadsAfter.isEmpty());\n', 1), ('hierarchies.', 1), ('q.get()', 1), ('command.execute(target);\n', 1), ('children.add(letter);\n', 1), ('Flowable.just((String)null);\n', 1), ('fs.onSubscribe(s);\n\n', 1), ('FlowableScalarXMap()', 1), ('handy', 1), ('(resultSet', 1), ('conditions:\n\nThe', 1), ('initCounters()', 1), ('RestrictedTrustManager\n', 1), ('state,\n', 1), ('remnant', 1), ('System.err.println("Input/Output', 1), ('queryService.getAuthorBooksCount("username1");\n', 1), ('ObservableSwitchMapCompletable(Observable<T>', 1), ('computation-bound', 1), ('AnyObserver(Observer<?', 1), ('socketChannel.configureBlocking(false);\n', 1), ('lastServedId;\n', 1), ('3",', 1), ('ConsoleLoggerModule.singleton', 1), ('path.toAbsolutePath());\n', 1), ('testRepeatObservableThrowsError()', 1), ('<li>Synchronous', 1), ('"+34203542"));\n', 1), ('observer.assertTerminated();\n', 1), ('RxJavaPlugins.onBeforeBlocking();\n', 1), ('rogueProto.set(Stats.AGILITY,', 1), ('filterFailWithSkipConditional()', 1), ('getObjects().size()', 1), ('assertNull(RxJavaPlugins.onSingleError(null));\n//\n//', 1), ('tailIndex)', 1), ('Assert.fail();\n', 1), ('t.getStackTrace())', 1), ('chain.\n', 1), ('FlowableFromCallable<T>', 1), ('IndexResolver(Client', 1), ('tryPutIntoPool(boolean', 1), ('administration\n', 1), ('deserializedFishV1.getAge(),\n', 1), ('TestException("Two")))\n', 1), ('ElementAtTckTest', 1), ('Field(field.name,', 1), ('attributeNames.toArray(new', 1), ('audio");\n', 1), ('(HttpsURLConnection)', 1), ('crashOnSubscribe,', 1), ('customers)', 1), ('Observable.fromArray(numbers)\n', 1), ('Callable<Void>,', 1), ('"Second").ignoreElements();\n', 1), ('ObservableSource<List<Integer>>', 1), ('ToFlowablePerf();\n', 1), ('<code>Cake</code>,', 1), ('separately', 1), ('"Boo"));\n\n', 1), ('LoginPage(WebClient', 1), ('blobNamePrefix)', 1), ('dart");\n', 1), ('TakeLastSubscriber<T>(s,', 1), ('address.equals(person.address)', 1), ('Observable},\n', 1), ('session,', 1), ('produced(1);\n', 1), ('testRender()', 1), ('components,', 1), ('PlayerDetails("nadja@google.com",', 1), ('esJdbc())', 1), ('.single(-99)\n', 1), ('readLock.lock();\n', 1), ('InternalError.class)\n', 1), ('separators\n', 1), ('maj,', 1), ('KeyConfig', 1), ('inclusive\n', 1), ('NotificationLite.acceptFull(v,', 1), ('").append(version).append("\\n")\n', 1), ('OnErrorNotImplementedExceptionTest', 1), ('s.request(m);\n', 1), ('FutureDisposable(ft,', 1), ('sourceFused;\n\n', 1), ('unsafeDefault', 1), ('com.carrotsearch.hppc.cursors.ObjectObjectCursor;\n\nimport', 1), ('flowableSubscribe1()', 1), ('comparer;\n\n', 1), ('save(UserAccount', 1), ('completableObserver2completableObserver', 1), ('anomalyScore)', 1), ('onChannelReadable(key);\n', 1), ('positive.\n', 1), ('this.addressLineOne', 1), ('ToSingle', 1), ('sb.append(actions);\n', 1), ('org.elasticsearch.common.network;\n\nimport', 1), ('normalDone()', 1), ('FutureTask<T>(task)', 1), ('DematerializeObserver<T>', 1), ('CompletableMergeSubscriber\n', 1), ('AllObserver(Observer<?', 1), ('expectedIndices.toArray(new', 1), ('CakeInfo(cake.getId(),', 1), ('Method}s,', 1), ('panel.add(clearButton);\n', 1), ('Collections.singletonMap("foo",', 1), ('isSynchronous)\n', 1), ('deletingACustomerFailsWithExceptionAsFeedbackToTheClient()', 1), ('this.timeMs', 1), ('VolatileSizeArrayList<Integer>', 1), ('initAmazonDynamoDb()', 1), ('ticketsCollection.deleteMany(new', 1), ('subscriptionIndicator));\n', 1), ('.name("Weak', 1), ('module', 1), ('this(Arrays.asList(types));\n', 1), ('singleSource)', 1), ('spaceDelimitedJvmOptionsBuilder.append("', 1), ('schema.', 1), ('ObserveOnCompletableObserver\n', 1), ('lvProducerNode();\n', 1), ('(java.lang.reflect.Method', 1), ('service.findWizardsWithSpell(spellName);\n', 1), ('LOGGER.info("popped', 1), ('this.username', 1), ('repeat(Long.MAX_VALUE);\n', 1), ('printCustomerDetails(List<CustomerDto>', 1), ('computed', 1), ('chain)', 1), ('UserAccount("002",', 1), ('given.', 1), ('.append(fname)\n', 1), ('sender.\n', 1), ('queue.put(Message.POISON_PILL);\n', 1), ('Collections.singletonMap(License.LICENSE_SPEC_VIEW_MODE,', 1), ('ObserverTest<GOrcs>', 1), ('concat(Flowable.fromIterable(sources));\n', 1), ('HealingPotion();\n', 1), ('System.err.println("The', 1), ('happen.</dd>\n', 1), ('Publisher<Completable>()', 1), ('Completable.concatArray(a);\n\n', 1), ('subscribe(FlowableEmitter<Long>', 1), ('org.elasticsearch.xpack.core.upgrade.UpgradeActionRequired;\nimport', 1), ('this.layers.add(layer);\n', 1), ('compareTo(JavaVersion', 1), ('Resulting', 1), ('first.get());\n', 1), ('HasType,', 1), ('org.elasticsearch.common.blobstore.BlobContainer}', 1), ('getObjectMapper().readValue(apiGatewayProxyRequestEvent.getBody(),', 1), ('BlobPath', 1), ('deserializedFishV2.getAge(),\n', 1), ('passes\n', 1), ('LOGGER.info("Boil', 1), ('Collection<T>', 1), ('last(1).asList();\n', 1), ('InetAddresses', 1), ('ArrayDeque<Object>());\n\n', 1), ('logGroupName.hashCode()', 1), ('g;\n', 1), ('instance1', 1), ('https://github.com/ReactiveX/RxJava/pull/147#issuecomment-13624780\n', 1), ('countries)', 1), ('for,', 1), ('InMemoryAppender(KingJoffrey.class);\n', 1), ('testToString(Creature', 1), ('Evans");\n\n', 1), ('-100L;\n\n', 1), ('practically', 1), ('clearButton', 1), ('StringUtils.EMPTY;\n\n', 1), ('LotteryTicketId(Integer.parseInt(id)),', 1), ('params\n', 1), ('accept(GroupedUnicast<K,V>', 1), ('IllegalArgumentException("Timestamp', 1), ('zip8()', 1), ('TestObserver<Integer>(observer);\n', 1), ('pi', 1), ('ParallelReduceFullTest', 1), ('SingleZipArrayTest', 1), ('fusedFlatMapNull()', 1), ('checked.\n', 1), ('resource;', 1), ('succeeded.\n', 1), ('onLift(CompletableOperator', 1), ('.collect(toList());\n', 1), ('unsubscribing.",', 1), ('findPattern("BehaviorProcessor<.*>\\\\s+bs");\n', 1), ('apply(MaybeObserver)}', 1), ('#toSingle(Object)}', 1), ('MaybeOperator#apply(MaybeObserver)', 1), ('trails', 1), ('hairy,', 1), ('"FlowableMergeWithSingle",\n', 1), ('case)', 1), ('testLongRunningTaskWithCallback()', 1), ('this.logGroupName', 1), ('writeLock.lock();\n', 1), ('SingleFlatMapCompletable<T>(this,', 1), ('ItemQueue();\n\n', 1), ('this.trustConfigs', 1), ('[1,2,3,4]:', 1), ('PluginInfo(final', 1), ('localNode.equals(n)', 1), ('savings', 1), ('Definition(List<Whitelist>', 1), ('bankAccount).append("funds",', 1), ('booleanType', 1), ('getFunctionName()', 1), ('IOException()));\n', 1), ('result.add(topping);\n', 1), ('times(1)).onNext(6);\n', 1), ('Byte.parseByte(parts[0]),', 1), ('testAllDaysWithDefaultObserver(specialDay,', 1), ('List<java.lang.reflect.Method>', 1), ('(boundarySubscriber.compareAndSet(null,', 1), ('-1296597691183856449L;\n', 1), ('testMessageFromElves()', 1), ('ArrayObjectIterator(array);\n', 1), ('MostRecentSubscriber(T', 1), ('com.iluwatar.specification.selector.ColorSelector;\nimport', 1), ('RxJavaPlugins.setOnObservableAssembly(new', 1), ('Supplier[]{Rogue::new},\n', 1), ('(!JNANatives.LOCAL_SYSTEM_CALL_FILTER_ALL)', 1), ('threadFactory;\n\n', 1), ('EventConsumer(type,', 1), ('java.util.Map.class.getName(),\n', 1), ('generateId()', 1), ('appears', 1), ('ToSingle(SingleObserver<?', 1), ('UserAccount(userId,', 1), ('Callable<?>', 1), ('InnerObserver(int', 1), ('sorted(comparator,', 1), ('testDelegationOfFilesToMonitor()', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/AsyncProcessor.png"', 1), ('BackpressureHelper.multiplyCap(1,', 1), ('state));\n', 1), ('sideEffectObserver;\n\n', 1), ('balking', 1), ('influencer;\n', 1), ('TimedTest', 1), ('merge2()', 1), ('TREE_ROOT.getLeft();\n', 1), ('{},', 1), ('this.errors.add(e);\n', 1), ('InnerQueuedSubscriberTest', 1), ('biConsumerDispose()', 1), ('com.iluwatar.serverless.baas.api.SavePersonApiHandler;\nimport', 1), ('SingleSource<Downstream>', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.legend.png"', 1), ('Thread.sleep(10000);\n', 1), ('DisposableLambdaObserver<Integer>', 1), ('-2421395018820541164L;\n\n', 1), ('trustStorePassword', 1), ('List<Whitelist.Method>', 1), ('id));\n', 1), ('DateTimeFormatterTimestampConverter(formatter,', 1), ('FlowableFlatMapCompletable<T>(source,', 1), ('RACE_DEFAULT_LOOPS', 1), ('mock(NormalizerProcessFactory.class);\n', 1), ('AsyncSubject()', 1), ('factory-kit', 1), ('assertEquals(userDto.getEmail(),', 1), ('<code>handler</code>\n', 1), ('ObserveOnSingleObserver<T>', 1), ('(Map.Entry<String,Struct>', 1), ('innerComplete(LeftRightObserver', 1), ('LotteryNumbers()', 1), ('PublishSubject\n', 1), ('/*if', 1), ('-4767392946044436228L;\n\n', 1), ('*/\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Target(ElementType.METHOD)\npublic', 1), ('inner.queue().offer(value);\n', 1), ('spellDao.persist(spell12);\n', 1), ('firehose', 1), ('this.fromIterator', 1), ('elements.nextElement().getName();\n', 1), ('New', 1), ('3:04', 1), ('org.apache.isis.applib.annotation.DomainServiceLayout;\nimport', 1), ('client.prepareSearch(index).get();\n', 1), ('"publisher', 1), ('e.onNext(v);\n', 1), ('VisitorTest<SergeantVisitor>', 1), ('emitter.onNext(t);\n', 1), ('ObservableElementAtTest', 1), ('EXIT");\n', 1), ('}).toFlowable());\n', 1), ('doOnErrorThrows()', 1), ('ArrayList<>(inventorySize);\n', 1), ('DelayObserver(serial,', 1), ('name.length();\n\n', 1), ('CollectSubscriber(Subscriber<?', 1), ('U}\n', 1), ('kdx;', 1), ('"Blair");\n', 1), ('(produced', 1), ('testDefer()', 1), ('WizardDaoImpl', 1), ('singletonList', 1), ('nazguls;\n\n', 1), ('context.get(IUnitOfWork.INSERT).size());\n', 1), ('FutureTask<Long>', 1), ('ObservableReduceSeedSingle(ObservableSource<T>', 1), ('License.",\n', 1), ('System.getProperty("elasticsearch.properties");\n', 1), ('getType("Short");\n', 1), ('storageResponse', 1), ('q.producerIndex()', 1), ('Callable<List<T>>()', 1), ('cluster;\n', 1), ('Thread.NORM_PRIORITY,', 1), ('ObservableMap<T,', 1), ('EmptySubscription.error(iae,', 1), ('java.sql.SQLException;\n\nimport', 1), ('Response(RestStatus.OK,', 1), ('add(LetterComposite', 1), ('(parent)', 1), ('curr;\n', 1), ('zeros', 1), ('seenJvmOption.getValue().get());\n', 1), ('(b.size()', 1), ('fromIndex,', 1), ('Response(RestStatus.NOT_FOUND,', 1), ('protocol,', 1), ('Objects.requireNonNull(action);\n', 1), ('BiObjectPredicate();\n\n', 1), ('CachedThreadScheduler.\n', 1), ('ArrayDeque<File[]>();\n\n', 1), ('FlowableSequenceEqualSingle(Publisher<?', 1), ('(JavaVersion.current().compareTo(JavaVersion.parse("10"))', 1), ('(index++', 1), ('messing', 1), ('Flowable.zip(\n', 1), ('misconfiguration,\n', 1), ('left.get(i)', 1), ('SingleInternalHelper.toObservable(),', 1), ('com.iluwatar.observer.utils.InMemoryAppender;\n\nimport', 1), ('Queue.offer', 1), ('Collections.singletonList(WhitelistLoader.loadFromResourceFiles(Whitelist.class,', 1), ('java.util.TreeMap;\n\nimport', 1), ('speed\n', 1), ('s.test().assertResult(i);\n', 1), ('ConcatMapEagerDelayErrorSubscriber(Subscriber<?', 1), ('(path.startsWith(javaHome))', 1), ('ExecutionException)', 1), ('(normalized.size()', 1), ('!lastName.equals(person.lastName)', 1), ('line.contains("2.0")', 1), ('Promise<Character>', 1), ('(Object[])h[cap];\n', 1), ('Defaulting', 1), ('initialCollection;\n\n', 1), ('ThreadCompleteListener', 1), ('coding.', 1), ('tiered', 1), ('utilizes', 1), ('String(data.array(),', 1), ('.first()\n', 1), ('com.iluwatar.servicelayer.wizard.WizardDaoImpl;\nimport', 1), ('Iterable,', 1), ('org.elasticsearch.xpack.sql.tree.NodeInfo;\nimport', 1), ('getBodies()', 1), ('serialize/deserialize', 1), ('allToppings', 1), ('1).toFlowable());\n\n', 1), ('"Maxmind', 1), ('a.hasNext();\n', 1), ('QueueFuseable.ASYNC)', 1), ('fine.\n', 1), ('datagram,', 1), ('greaterThan(0));\n', 1), ('mandates\n', 1), ('disk', 1), ('sources.size();\n', 1), ('java.lang.invoke.MethodHandles;\nimport', 1), ('times(1)).onNext("123");\n', 1), ('5).limit(3));\n', 1), ('consumer,', 1), ('acquireResource()', 1), ('Arrays.fill(signedContent,', 1), ('this.getter', 1), ('boundaryError()', 1), ('.<Void>toFlowable()\n', 1), ('noSuchElementCallableEnum()', 1), ('bookCount);\n', 1), ('PlayerDetails("lars@google.com",', 1), ('supplier\n', 1), ('LOGIN_PAGE_HTML_FILE;\n\n', 1), ('homeDir).build();\n', 1), ('HtmlPasswordInput', 1), ('BlockingLastObserver<T>', 1), ('scalarEmission', 1), ('store.onAction(action));\n', 1), ('assertSame(o3,', 1), ('maintenance', 1), ('mergeWith(SingleSource<?', 1), ('boy', 1), ('com.iluwatar.privateclassdata.utils;\n\nimport', 1), ('assertEquals(accountOfJonBeforeShotDown.getMoney(),', 1), ('assertThrows(IOException.class,', 1), ('testAdapter()', 1), ('clazzes,', 1), ('Completable.complete().subscribe(tc);\n\n', 1), ("'grade", 1), ('releaseSlot()', 1), ('spaceDelimitedJvmOptionsBuilder.append(it.next());\n', 1), ('change).', 1), ('scanForBadMethod(StringBuilder', 1), ('delete(final', 1), ('occur";\n\n', 1), ('refreshRealmOnChange(CachingUsernamePasswordRealm', 1), ('purposes.\n', 1), ('SingleDoOnSubscribe(SingleSource<T>', 1), ('io.reactivex.internal.disposables.SequentialDisposable;\n\n@RunWith(MockitoJUnitRunner.class)\npublic', 1), ('!keyPassword.equals(that.keyPassword)', 1), ('ObservableUnsubscribeOn(ObservableSource<T>', 1), ('#connect(io.reactivex.functions.Consumer)}', 1), ('NextIterator(ObservableSource<T>', 1), ('result3);\n', 1), ('PainlessExplainError}', 1), ('http://martinfowler.com/apsupp/spec.pdf\n', 1), ('TestEnvironment(timeout));\n', 1), ('PatternType;\n', 1), ('executorService.scheduleAtFixedRate(new', 1), ('ObservableCollectTest', 1), ('utils', 1), ('constructed,', 1), ('com.iluwatar.delegation.simple.printers.HpPrinter;\nimport', 1), ('descriptions', 1), ('TestHelper.assertBadRequestReported(Flowable.interval(1,', 1), ('databaseFiles', 1), ('builder.append("[").append(e.getKey()).append("', 1), ('FlushListener', 1), ('beginning', 1), ('whitelistConstructor.painlessParameterTypeNames.size();', 1), ('ArrayList<Long>();\n', 1), ('LNAME', 1), ('cn);\n\n', 1), ('super(blobPath);\n', 1), ('wildcard', 1), ('user.home', 1), ('stop}', 1), ('Boud");\n', 1), ('LazyFluentIterable<T>()', 1), ('ArrayDeque<Throwable>', 1), ('num:', 1), ('FlowableAmb(Publisher<?', 1), ('assertNotNull(level2);\n', 1), ('System.out.println("Won\'t', 1), ('javaClassParameters[0]', 1), ('(getIndexResult.isValid())', 1), ('getById(final', 1), ('java8Holder.getHeavy();\n', 1), ('MaybeToPublisher', 1), ('noSpell()', 1), ('MaybeFromAction(Action', 1), ('RxJavaPlugins.setSingleSchedulerHandler(replaceWithImmediate);\n\n', 1), ('child.members.values())', 1), ('innerComplete();\n\n', 1), ('ArrayList<>();\n\n\n', 1), ('testMap()', 1), ('commandService.authorEmailUpdated("username2",', 1), ('Function4', 1), ('findAside(String', 1), ('ParallelFilterSubscriber<T>(a,', 1), ('KingJoffrey}.\n', 1), ('(thin)', 1), ('Never</a>\n', 1), ('<tt>true</tt>', 1), ('timeUnit)', 1), ('.toFuture(),', 1), ('ElementAtSubscriber(Subscriber<?', 1), ('assertSame(countDownRunnable,', 1), ('NewThreadTask', 1), ('NioServerSocketChannel(port,', 1), ('get(THREAD_INDEX)', 1), ('spellDao.persist(spell17);\n\n', 1), ('"Address",', 1), ('threadSafeIvoryTower1', 1), ('entity.', 1), ('names.size();', 1), ('PrivilegedActionException', 1), ('java.lang.Iterable<Object>', 1), ('part.getType().get());\n', 1), ('RestrictedTrustConfigTests', 1), ('MaybeObservers.\n', 1), ('FlowableDematerializeTest', 1), ('HeroStat.valueOf(5,', 1), ('NioServerSocketChannel(int', 1), ('testGetBook()', 1), ('javax.swing.JTextField;\n\n/**\n', 1), ('null);//', 1), ('assertNull(entity.getId());\n\n', 1), ('zip6()', 1), ('TestHelper.checkDoubleOnSubscribeObservableToCompletable(new', 1), ('toStringOf()', 1), ('service);\n\n', 1), ('CakeTopping("DummyTopping",', 1), ('countersCollection;\n\n', 1), ('newConcurrentMapLongWithAggressiveConcurrency()', 1), ('dynamodb', 1), ('System.out.println(count);\n', 1), ('Thread}.\n', 1), ('addSpell(Spell', 1), ('delaySubscriptionFlowable()', 1), ('matchesPattern(String', 1), ('source.flatMapSingle(new', 1), ('(secretIndex', 1), ('TakeUntilObserver(Observer<?', 1), ('linebreaks', 1), ('normalDelayError()', 1), ('RainbowFish(map.get("name"),', 1), ('phantom', 1), ('star.setMemento(states.pop());\n', 1), ('IntervalRangeObserver\n', 1), ('commands.bookAddedToAuthor("Domain', 1), ('-4101336210206799084L;\n\n', 1), ('accounts.\n', 1), ('Nazgul(NazgulName.ADUNAPHEL));\n', 1), ('(!parent.delayErrors)', 1), ('mock(SingleObserver.class);\n', 1), ('delaySubscriptionSingle()', 1), ('q.forEachWhile(this);\n', 1), ('Initialization', 1), ('loader.setFileName(view.getFileName());\n', 1), ('(TrustConfig', 1), ('LOGGER.info(mage.toString());\n\n', 1), ('filter.execute(order);\n', 1), ('CompletableToSingle(CompletableSource', 1), ('cakeLayerInfos;\n\n', 1), ('LOGGER.info("Hello.', 1), ('optionalTicket', 1), ('beneath\n', 1), ('CompletableSubscribeOn', 1), ('IllegalArgumentException("ExampleTestFixture', 1), ('org.elasticsearch.mocksocket.MockSocket;\nimport', 1), ('Process.\n', 1), ('DisposableSingleObserver&lt;Integer&gt;', 1), ('user,', 1), ('.collect(toList())));\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.observeOn.png"', 1), ('ArrayList<Disposable>();\n\n', 1), ('assertEquals(5000,', 1), ('handle.type();\n', 1), ('spValue(val);\n', 1), ('page.getByXPath("//tr[@class=\'album\']//a");\n', 1), ('(JavaVersion.compare(JavaVersion.CURRENT,', 1), ('newNode', 1), ('LastSubscriber(SingleObserver<?', 1), ('manifest,', 1), ('m.schedulerKind', 1), ('RxJavaPlugins.setOnObservableAssembly(observable2observable);\n', 1), ('io.reactivex.internal.operators.completable.CompletableError;\nimport', 1), ('LOGGER.info("Constructing', 1), ('defaultObserver,', 1), ('FactoryProvider}.', 1), ('org.apache.isis.applib.fixturescripts.FixtureScript;\n\nimport', 1), ('OperatorWindowBoundaryOpenObserver(WindowBoundaryMainObserver<T,', 1), ('apiGatewayProxyResponseEvent(Integer', 1), ('RxJavaPlugins.setOnSingleSubscribe(new', 1), ('studentToBeInserted)', 1), ('CertUtils.trustManager(null,', 1), ('assertTrue(e.getMessage(),', 1), ('equalTo(view.getOwner()));\n', 1), ('Flowable.<Long>empty();\n', 1), ('studentRepository.registerDeleted(student1);\n', 1), ('finished.");\n', 1), ('Logger.getLogger(LambdaInfoApiHandler.class);\n', 1), ('this.groupConfigPath.equals(that.groupConfigPath)', 1), ('noWeapon();\n', 1), ('explains\n', 1), ('PrimitiveIterator.OfInt', 1), ('AtomicThrowableTest', 1), ('27017;\n\n', 1), ('unsubscribe");\n', 1), ('(rolePermissionSettings.containsKey(role))', 1), ('testThatOwnerAndGroupAreChanged()', 1), ('observableInner', 1), ('maybes', 1), ('benefit.', 1), ('!queue.offer(t))', 1), ('delaySubscription(CompletableSource', 1), ('armor")});\n', 1), ('checkSource(String', 1), ('TestObserver<Mutable>', 1), ('IllegalArgumentException()));\n', 1), ('(min,', 1), ('cakeBean.findAll().iterator();\n', 1), ('INITIAL_SCORE', 1), ('SingleToFlowable<T>(this));\n', 1), ('exceptionList;\n', 1), ('constructor.getParameterAnnotations();\n\n', 1), ('expectedStealMethod;\n', 1), ('Builds', 1), ('pp2.onError(ex);\n', 1), ('t.onSubscribe(parent.arbiter);\n', 1), ('userConverter.createFromDtos(userConverter.createFromEntities(users));\n', 1), ('boxTo;\n\n', 1), ('ObservableAutoConnect<T>', 1), ('LiteralAttribute(Literal.of(e));\n', 1), ('TestException("One")),', 1), ('BlockingObservableIterator<T>(bufferSize);\n', 1), ('(success', 1), ('trustStoreAlgorithm.equals(that.trustStoreAlgorithm)', 1), ('SingleSubscribeOn<T>(this,', 1), ('structure.");\n', 1), ('list3.hashCode());\n', 1), ('Definition.MethodKey(oneMethod.getName(),', 1), ('(file.getFileName().toString().startsWith(path.getFileName().toString())', 1), ('this.observer2', 1), ('down.",', 1), ('all";\n', 1), ('assertTrue(Functions.predicateReverseFor(s).test(1));\n\n', 1), ('simplifies', 1), ('discards', 1), ('doubleOnSubscribe(Subscriber<?>', 1), ('Maybe#as}', 1), ('FlowableOnBackpressureError<T>', 1), ('SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256;\n', 1), ('time(@NonNull', 1), ('System.out.println("Unable', 1), ('zero.\n', 1), ('BlockingFlowableToFutureTest', 1), ('8;\n', 1), ('ObservableWindowBoundarySupplier<T,', 1), ('createSchema(DataSource', 1), ('wind', 1), ('simpleObjects.listAll();\n\n', 1), ('from.\n', 1), ('(def.class.getSimpleName().equals(type.struct.name))', 1), ('hasSize(1));\n', 1), ('referencing\n', 1), ('InstantPeriodicTask(Runnable', 1), ('IndexType.VALID)', 1), ('resource,\n', 1), ('service2.getWelcomeMessage(paidUser);\n', 1), ('DoFinallyObserver', 1), ('advise', 1), ('200);\n\n', 1), ('Executors.newFixedThreadPool(THREAD_COUNT);\n\n', 1), ('67.81.244.15:9400\n', 1), ('idToCustomer.put(customer.getId(),', 1), ('ObservableForEachTest', 1), ('frc)', 1), ('(paramType.isAssignableFrom(BooleanSupplier.class))', 1), ('wizard3', 1), ('firstLine;\n', 1), ('queries.getBook("Domain-Driven', 1), ('ScanObserver<T>', 1), ('servletRequest.getSession().invalidate();\n', 1), ('replace', 1), ('INTERNAL', 1), ('CompletableConcatSubscriber', 1), ('ac++;\n', 1), ('expectedStealMethod;\n\n', 1), ('essence', 1), ('second.subscribe(new', 1), ('MaybePeekObserver(MaybeObserver<?', 1), ('getLogGroupName()', 1), ('BasicPermissionCollection', 1), ('shop.getTopShelf();\n', 1), ('toppingBean', 1), ('FileSelectorView,', 1), ('-7449079488798789337L;\n\n', 1), ('PathUtils.get(element).toUri().toURL();\n', 1), ('processor.onNext("two");\n', 1), ('verifyNoMoreInteractions(task,', 1), ('"Contact', 1), ('info.getVersion()', 1), ('0)))', 1), ('properties.put(key,', 1), ('numbers2);\n', 1), ('subscribeActualThrows()', 1), ('this.certPath', 1), ('ScheduledDirectPeriodicTask(new', 1), ('LastTckTest', 1), ('TreasureChestTest', 1), ('head();\n', 1), ('times(1)).onNext("12");\n', 1), ('IOException.\n', 1), ('emptyRunnableToString()', 1), ('BiConsumerSingleObserver<T>(onCallback);\n', 1), ('queryService;\n', 1), ('(acquired', 1), ('something,', 1), ('this.input', 1), ('filterFailWithRetryLimitedConditional()', 1), ('remove(AsyncDisposable<T>', 1), ('"Producer', 1), ('source.parallel(cpu).runOn(Schedulers.computation()).map(this).sequential();\n', 1), ('flatMapTwoNestedSync(final', 1), ('utilities,', 1), ('spell11', 1), ('CallsCount.getCount(tenantName);\n', 1), ('crashRequest)', 1), ('FlowableLift<R,', 1), ('ObservableMaterialize<T>(items).subscribe(observer);\n', 1), ('ts.assertValue(0L);\n\n', 1), ('"onError(java.lang.NullPointerException:', 1), ('serializedConcurrentOnNextOnError()', 1), ('testValidVersions()', 1), ('ownerStruct.methods.get(painlessMethodKey);\n\n', 1), ('mapFailWithSkip()', 1), ('Computes', 1), ('our\n', 1), ('Dao<E', 1), ('"Bop",', 1), ('this.rest', 1), ('veryEnd;\n', 1), ('JavadocForAnnotations', 1), ('mapFailWithRetry()', 1), ('list.indexOf(o);\n', 1), ('troll.fleeBattle();\n', 1), ('this.bodies.add(body);\n', 1), ('SHUTDOWN', 1), ('java.util.Date.class.getName(),\n', 1), ('CertUtils.readCertificates(caPaths,', 1), ('Object()));\n', 1), ('callable2scheduler', 1), ('Inventory#addItem(Item)}\n', 1), ('onNextOnErrorFailureSafe()', 1), ('ScheduledDirectPeriodicTaskTest', 1), ('LOGGER.info("Running', 1), ('idx.incrementAndGet()).start();\n', 1), ('thread-local', 1), ('asList(new', 1), ('NamedXContentRegistry', 1), ('messenger.messageFromOrcs(),\n', 1), ('emitters', 1), ('to.assertSubscribed().assertNoValues().assertNotComplete();\n\n', 1), ('backpressureMentionedWithoutAnnotation(StringBuilder', 1), ('assertTrue(list.addAll(4,', 1), ('model–view–controller', 1), ('between.size());\n', 1), ('(node.previous', 1), ('impl;\n', 1), ('subscriber.onNext(1);\n', 1), ('ObservableScanSeed<T,', 1), ('UserGroup#isPaid(User)}', 1), ('nope,', 1), ('User("Sarah",', 1), ('bolt");\n', 1), ('LOGGER.info("Executed', 1), ('*/\n@EnableJpaRepositories\npublic', 1), ('com.iluwatar.hexagonal.test;\n\nimport', 1), ('basicDataSource.setUsername("sa");\n', 1), ('trustedNames;\n\n', 1), ('setLayers(new', 1), ('pluginCrash()', 1), ('statusMember.accept(startingData);\n', 1), ('deferredRace()', 1), ('allLayers.stream().filter(layer', 1), ('THE\nSOFTWARE.\n*/\n\npackage', 1), ('applications.', 1), ('org.elasticsearch.common;\n\nimport', 1), ('current.lazySet(t);\n', 1), ('serverSocketChannel.accept();\n', 1), ('Single.using(new', 1), ('com.iluwatar.abstractdocument.Document;\n\nimport', 1), ('redoStack.pollLast();\n', 1), ('blockingFirstEmpty()', 1), ('update,', 1), ('bot', 1), ('IndexPrivileges(String', 1), ('assertNull(statusMember.getStarted());\n', 1), ('retrieveAliases', 1), ('ORDER', 1), ('Random().ints(min,', 1), ('javaConstructor', 1), ('ScalarXMapObservable(T', 1), ('Optional.of(new', 1), ('linked-list.', 1), ('collected\n', 1), ('Date().toString());\n', 1), ('PropertiesFeatureToggleVersion\n', 1), ('Recommended', 1), ('Observable</a>\n', 1), ('legend', 1), ('paramList;\n\n', 1), ('jar-hell', 1), ('AnnotationConfigApplicationContext(\n', 1), ('assertSame(source,', 1), ('Schedulers#computation()', 1), ('assertEquals(V2.getAge(),', 1), ('com.iluwatar.observer.generic.GOrcs;\nimport', 1), ('Marks', 1), ('Pattern.compile("pid\\\\[(\\\\d+)\\\\]");\n', 1), ('merged.get().mapping()));\n', 1), ('assertNull(ara.get(16));\n', 1), ('printLogo(terminal);\n', 1), ('BackpressureHelper.multiplyCap(Long.MAX_VALUE,', 1), ('StringReader(numberFormatExceptionsLine);\n', 1), ('TakeTckTest', 1), ('UserGroup.addUserToPaidGroup(paidUser);\n', 1), ('anti-pattern', 1), ('successTimeoutRace()', 1), ('to.assertValues(Integer.MAX_VALUE', 1), ('@Ignore("BackpressureHelper', 1), ('SingleObserveOn<T>', 1), ('AtomicBoolean();\n\n\n', 1), ('stringProps);\n', 1), ('fromIterator.next()', 1), ('copy-pasted', 1), ('wrap(MaybeSource<T>', 1), ('setSpell(String', 1), ('3).subscribe(ts);\n//\n//', 1), ('tryPutIntoPool(PURGE_ENABLED,', 1), ('Class.forName(className);\n\n', 1), ('configuration.', 1), ('TrustConfig()', 1), ('"order");\n\n', 1), ('testComplexOptions()', 1), ('unbounded.subscribe(new', 1), ('"1422936876.262044869,', 1), ('IOException)', 1), ('weather\n', 1), ('testIssue1451Case1()', 1), ('(!handler.completed.await(3,', 1), ('fail("access', 1), ('asList(f.name(),', 1), ('Observable.error(e);\n', 1), ('right.get(i)', 1), ('Answer<Object>()', 1), ('Connection)', 1), ('setFutureRunRace()', 1), ('(!m.signature.contains("Single")', 1), ('fileLoggerModule;\n', 1), ('io.reactivex.observers.DefaultObserver;\n\n/**\n', 1), ('MaybeFromRunnable<T>(run));\n', 1), ('fishV2.getHungry(),', 1), ('NoSuchAlgorithmException,', 1), ('"User{"', 1), ('org.apache.wicket.Session;\nimport', 1), ('RxJavaPlugins#createSingleScheduler(ThreadFactory)}', 1), ('CompletableSubscribeOnTest', 1), ('UnicastProcessor.create();\n', 1), ('(m.backpressureDocLine', 1), ('total;\n', 1), ('b.intValue();\n', 1), ('Single.ambArray(Single.never()));\n', 1), ('PluginInfo.readFromProperties(env.pluginsFile().resolve(plugin.toAbsolutePath()));\n', 1), ('CompletableDetachTest', 1), ('this.expectedTargetResult', 1), ('MaybeObserver&lt;T&gt;,', 1), ('app.promiseUsage();\n', 1), ('read.getMetadata("es.painless_class"));\n', 1), ('OnErrorFailedSubscriber', 1), ('.fromArray(ms,', 1), ('<i>APPLICABILITY</i>', 1), ('"BooleanSubscription(cancelled="', 1), ('com.iluwatar.servicelocator;\n\nimport', 1), ('writeLock.unlock();\n', 1), ('.getGenericSuperclass()).getActualTypeArguments()[0];\n\n', 1), ('Queue.', 1), ('EqualObserver(EqualCoordinator<T>', 1), ('whitelistMethod.javaAugmentedClassName', 1), ('"new_username2");\n\n', 1), ('exists")', 1), ('loader;\n\n', 1), ('"312-342",', 1), ('EqualCoordinatorHelper', 1), ('rogueProto.set(Stats.ENERGY,', 1), ('ambWithSecondFires()', 1), ('book.getTitle());\n', 1), ('PlayerDetails("robin@google.com",', 1), ('SerializedProcessor(final', 1), ('enqueue(new', 1), ('"@SimpleObjectsFixture"},', 1), ('IllegalStateException(String.format(\n', 1), ('SingleOnErrorXTest', 1), ('main;\n\n', 1), ('!name.contains("Test")\n', 1), ('indicesNames', 1), ('(fromIterator.hasNext())', 1), ('fromCompletable(CompletableSource', 1), ('bind(String.class).annotatedWith(Names.named("applicationCss")).toInstance(\n', 1), ('is(n));\n', 1), ('System.getProperty("user.dir");\n', 1), ('OpenOption...', 1), ('executor.execute(br);\n', 1), ('addressLineTwo.hashCode()', 1), ('assertTrue(bq.isCancelled());\n\n', 1), ('Trampoline<Trampoline<T>>', 1), ('resource}', 1), ('FlowableTakeUntilPredicate(Flowable<T>', 1), ('OnCompleteSubscriber());\n', 1), ('ObjectHelper.requireNonNull(supplier,', 1), ('ActionListener.wrap(indices', 1), ('1200));\n', 1), ('(SubscriptionHelper.validate(this.subscription,', 1), ('g.observeOn(Schedulers.computation()).map(ParallelPerf.this);\n', 1), ('BackpressureErrorSubscriber<T>\n', 1), ('Currently', 1), ('testIdGeneration()', 1), ('spellbook1', 1), ('registry', 1), ('permission);\n', 1), ('connectableObservable2ConnectableObservable', 1), ('Observable<Notification<Integer>>', 1), ('samlObject;\n', 1), ('CacheStore.print();\n', 1), ('TestHelper.checkDisposed(PublishSubject.create().ignoreElements().subscribeOn(new', 1), ('ParallelRunOnTest', 1), ('CompletableObserver}s.', 1), ('rmo.onSuccess(1);\n\n', 1), ('pendingWrites.poll();\n', 1), ('LoggerFactory.getLogger(ServiceCache.class);\n\n', 1), ('BackpressureLatestSubscriber(Subscriber<?', 1), ('single)', 1), ('this.paramList', 1), ('MpscFillOnceSimpleQueue<Object>(n);\n', 1), ('m;', 1), ('JarFile(path.toString()))', 1), ('super(Hobbits::new);\n', 1), ('CakeInfo(missingTopping,', 1), ('journeys', 1), ('MaybeFromRunnable(Runnable', 1), ('"new_username2");\n', 1), ('.from(integerList)\n', 1), ('inDateFormat;', 1), ('re-emits', 1), ('-Xmx1g"));\n', 1), ('achieved', 1), ('Flyweight', 1), ('BufferBoundarySubscriber<?,', 1), ('Completable.fromSingle(null);\n', 1), ('MaybeIgnoreElementCompletable<T>', 1), ('LOGGER.error("API', 1), ('LdapMetaDataResolver', 1), ('Firstly', 1), ('"Hello!"),\n', 1), ('purpose\n', 1), ('asList();\n\n', 1), ('algo', 1), ('*/\n/*\n', 1), ('org.elasticsearch.repositories.s3;\n\nimport', 1), ('pairwise.\n', 1), ('addInner(InnerObserver<T,', 1), ('bytesOut', 1), ('ObservableAnySingle(ObservableSource<T>', 1), ('(HtmlPasswordInput)', 1), ('c++;\n', 1), ('"+2423532"));\n', 1), ('MAX_ID', 1), ('ES_PLUGIN_POLICY', 1), ('delayErrorIterableCancel()', 1), ('inUse=2");\n\n', 1), ('SingleSubscribeOn<T>', 1), ('MaybeFlatMapNotification(MaybeSource<T>', 1), ('InMemoryAppender(CakeViewImpl.class);\n', 1), ('this.visitor', 1), ('assertThat(1,', 1), ('o.flatMapIterable(new', 1), ('non-zero', 1), ('routing', 1), ('FlowableSingleMaybe(Flowable<T>', 1), ('StringType', 1), ('!inSingle)', 1), ('reading",', 1), ('#replaceResource(Disposable)\n', 1), ('javaVersion.get(1);\n', 1), ('Observer",', 1), ('(!seenJars.add(path))', 1), ('Blackhole.consumeCPU(work);\n', 1), ('retainAll(Collection<?>', 1), ('ObservableFlatMap<T,', 1), ('this.expectedStealMethod', 1), ('testCreateYaml()', 1), ('Schedulers.from(Executor)', 1), ('(serviceJndiName.equals(serviceName))', 1), ('missedSubscriptionNoPrior()', 1), ('rangeObservableFlatMapJust(Blackhole', 1), ('.first(2)\n', 1), ('LinkageError}</li>\n', 1), ('eventManager.cancel(eventId);\n', 1), ('SchedulerMultiWorkerSupportTest', 1), ('backpressureBounded()', 1), ('.assertErrorMessage("bla");\n', 1), ('WeaponStep,', 1), ('getInterestedOps();\n\n', 1), ('getAuthorsCount()', 1), ('mashup', 1), ('SingleHide<T>(this));\n', 1), ('IllegalArgumentException("Unknown', 1), ('FlowableConcatWithSingle<T>', 1), ('Release', 1), ('java.util.Arrays;\n\n/**\n', 1), ('<code>channel</code>.\n', 1), ('2:04', 1), ('SubscriptionHelper.cancel(subscription);\n\n', 1), ('zip4()', 1), ('Thread.holdsLock(activeNodesPerCluster);\n', 1), ('<bucket>");\n', 1), ('biConsumerThrows(e1))\n', 1), ('java.util.Queue#poll()\n', 1), ('onSuccess},\n', 1), ('e.nodeName();\n', 1), ('payload)', 1), ('Node>', 1), ('retrying,', 1), ('testDistinctUntilChangedOfSourceWithNulls()', 1), ('ArrayList<>(count);\n', 1), ('NodeImpl("level1_b",', 1), ('producerLookAhead;\n', 1), ('time);\n', 1), ('(ac', 1), ('testSpliterator()', 1), ('users:\n', 1), ('RefCountObserver<T>(s,', 1), ('xpack.jar', 1), ('warProto);\n', 1), ('o.subscribe(inner);\n', 1), ('task.onError(e);\n', 1), ('MergeCompletableObserver(s,', 1), ('#onNext(Object)})', 1), ('DoAfterTerminateObserver(SingleObserver<?', 1), ('SYNC;\n\n', 1), ('"546-634",', 1), ('ScalarDisposable<T>\n', 1), ('added\n', 1), ('indexWildcard)', 1), ('irrespective', 1), ('javax.security.auth.x500.X500Principal;\n\nimport', 1), ('seconds.\n', 1), ('invalidUpperJavaMajorVersion));\n', 1), ('ownerStruct.constructors.get(painlessMethodKey);\n\n', 1), ('administration.performLottery();\n\n', 1), ('ObservableWindowBoundary<T,', 1), ('WriterTest', 1), ('178}";\n', 1), ('subscribers[0].onNext(1);\n', 1), ('Update,', 1), ('Long.valueOf(1);\n', 1), ('rxThreadsAfter.add(t);\n', 1), ('overflow', 1), ('io.reactivex.subscribers.TestSubscriber;\nimport', 1), ('ObservableRetryBiPredicate(\n', 1), ('flushAcknowledgement.getId();\n', 1), ('DisposableSubscriberTest', 1), ('com.iluwatar.throttling.timer.ThrottleTimerImpl;\n\nimport', 1), ('add(AsyncDisposable<T>', 1), ('ClassPathXmlApplicationContext("applicationContext.xml");\n', 1), ('io.reactivex.internal.operators.flowable.FlowableReduceSeedSingle.ReduceSeedObserver;\n\n/**\n', 1), ('SimpleObjects();\n', 1), ('Completable.fromCallable(null);\n', 1), ('overrideConnectableObservable()', 1), ('effect\n', 1), ('mappers\n', 1), ('201;\n', 1), ('connection.close();\n', 1), ('style', 1), ('TestsSSLService(Settings', 1), ('RuntimeException("bad"));\n\n', 1), ('clear(deque);\n', 1), ('InnerQueuedSubscriberSupport<R>', 1), ('V>>\n', 1), ('subscriber1', 1), ('(out.getVersion().onOrAfter(Version.V_6_3_0))', 1), ('(weapon', 1), ('RxJavaPlugins.onCompletableError(ex));\n//\n//', 1), ('processor.\n', 1), ('straightforward', 1), ('Observable<List<Integer>>>()', 1), ('this.sit', 1), ('ps1.onComplete();\n', 1), ('SwingUtilities.getRootPane(processButton);\n', 1), ('Functions.justFunction(Single.never()),', 1), ('(callError)', 1), ('charProto.set(Stats.ARMOR,', 1), ('"foo"', 1), ('URL(urlString);\n', 1), ('onLift.apply(s);\n\n', 1), ('RecordWriter', 1), ('version.get(i)', 1), ('system:', 1), ('this(actual,', 1), ('LotteryNumbers.NUM_NUMBERS);\n', 1), ('(LineNumberReader', 1), ('layer.getName().equals(info.name)).findFirst();\n', 1), ('UndeliverableException(new', 1), ('DefaultJDKTrustConfig();\n\n', 1), ('deleteSchema(dataSource);\n', 1), ('java.util.UUID.class.getName(),\n', 1), ('restrictions', 1), ('ALBUM_PAGE_HTML_FILE', 1), ('SchedulerSupport', 1), ('SingleElementSubscriber<T>(s));\n', 1), ('writerLock;\n', 1), ('UserAccount>', 1), ('rangeAsync', 1), ('level3_a\n', 1), ('HibernateUtil.dropSession();\n', 1), ('quickRun();\n', 1), ('3).toSortedList(4)\n', 1), ('dates,', 1), ('org.elasticsearch.xpack.core.ml.job.results.Bucket;\nimport', 1), ('important,', 1), ('head!"\n', 1), ('StudentRepository}', 1), ('lambdaInfo\n', 1), ('policy/strategy).\n', 1), ('domain,\n', 1), ('requested.size();\n//', 1), ('executor.scheduleAtFixedRate(task,', 1), ('Maybes', 1), ('maybeObserver;\n', 1), ('re-run', 1), ('view.setOwner(fs.getUserPrincipalLookupService().lookupPrincipalByName(randomAlphaOfLength(10)));\n\n', 1), ('file2.delete();\n', 1), ('java.lang.reflect.Field', 1), ('list.subList(fromIndex,', 1), ('2757120512858778108L;\n', 1), ('"retry"', 1), ('MaybeToObservable<T>(this));\n', 1), ('Deque', 1), ('ExceptionType;\n', 1), ('.parseDefaulting(ChronoField.YEAR_OF_ERA,', 1), ('r));\n', 1), ('timeout,\n', 1), ('remove(AsyncSubscription<T>', 1), ('FromIterableDisposable<T>(s,', 1), ('assertNotSame(V2,', 1), ('com.iluwatar.event.sourcing.app.App.ACCOUNT_OF_DAENERYS;\nimport', 1), ('producer.set(p);\n//', 1), ('InputStreamReader(is,', 1), ('JTextArea[]', 1), ('next.subscribe(s);\n', 1), ('lambda,', 1), ('SingleEquals(SingleSource<?', 1), ('reading\n', 1), ('latches.next().getValue().latch.countDown();\n', 1), ('SubscriptionCancelThrows());\n\n//', 1), ('assertNotNull(item.toString());\n\n', 1), ('"\\"epic', 1), ('400;\n\n', 1), ('NUM_NUMBERS;', 1), ('SubscriptionHelper.validate(n);\n', 1), ('"Frodo",', 1), ('org.elasticsearch.xpack.security.transport.netty4;\n\nimport', 1), ('org.elasticsearch.xpack.deprecation;\n\nimport', 1), ('singletonList(dummy.toString())));\n', 1), ('Maybe.just(5)\n', 1), ('THIS', 1), ('spellbook1.addSpell(spell3);\n', 1), ('NormalizerFactory(NormalizerProcessFactory', 1), ('wizardDao.merge(wizard1);\n', 1), ('.append("#L").append(lineNum)\n', 1), ('<container>");\n', 1), ('ObservableInterval', 1), ('org.elasticsearch.index.fielddata.ScriptDocValues.Longs;\nimport', 1), ('FlowableReduceWithSingle<T,', 1), ('MovementSelector', 1), ('Document("seq",', 1), ('RestrictedTrustConfig(Settings', 1), ('example.', 1), ('sorted()', 1), ('ParallelReduceFull<T>(this,', 1), ('optionalException.get();\n', 1), ('ZipSingleObserver(ZipCoordinator<T,', 1), ('are:\n', 1), ('criteria.uniqueResult();\n', 1), ('findAllSpells();\n\n', 1), ('IndexDeprecationChecks::coercionCheck,\n', 1), ('parameters}', 1), ('"director");\n', 1), ('writer.invokeInterface(type,', 1), ('org.mockito.Mockito.doReturn;\nimport', 1), ('merge(o1,', 1), ('EventObserver...', 1), ('sacrifice', 1), ('(MpscLinkedQueue<Object>)queue;\n', 1), ('PlusExpression::new);\n', 1), ('2).elementAt(2).toObservable().blockingSingle(-99).intValue());\n', 1), ('Executors.newScheduledThreadPool(1);\n', 1), ('worker.now(TimeUnit.MILLISECONDS);\n', 1), ('(this.path.equals(path))', 1), ('ToSingleObserver<T>(s));\n', 1), ('FlowableToCompletableTest', 1), ('FlowableAllSingle(Flowable<T>', 1), ('CompletableUsing(Callable<R>', 1), ('setState(String', 1), ('(Collection<?', 1), ('source.parallelism(),', 1), ('ro.add(null);\n', 1), ('queries.getAuthorByUsername("eEvans");\n', 1), ('ParallelFlowable,', 1), ('this.privileges.equals(other.privileges);\n', 1), ('getFighterClass()', 1), ('handlers\n', 1), ('failed.set(true);\n', 1), ('(this.channelToPendingWrites)', 1), ('Publisher<TLeftEnd>', 1), ('GetIndexResponse', 1), ('MoneyDepositEvent', 1), ('source1.subscribe(first);\n', 1), ('for)', 1), ('flowableNoProducers()', 1), ('name.contains("$")\n', 1), ('SoldierVisitor(),\n', 1), ('CakeTopping(toppingInfo.name,', 1), ('org.apache.tika.parser.odf.OpenDocumentParser(),\n', 1), ('HEAD', 1), ('glance', 1), ('sendLogRequests(PrintWriter', 1), ('e2))', 1), ("Letter('n'),", 1), ('this.listeners.add(member);\n', 1), ('setZipCode(String', 1), ('ObservableWithLatestFromMany<T,', 1), ('errors,', 1), ('Flowable.fromArray(array).reduce(this);\n', 1), ('assertEquals(errors.toString(),', 1), ('checkIfYouWillBeHanged(List<Royalty>', 1), ('perms,', 1), ('remove(old);\n', 1), ('ps.forEachWhile(Functions.alwaysTrue());\n\n', 1), ('super.done();\n', 1), ('explicitlyForeground;\n', 1), ('testPut()', 1), ('assertFalse(results.next());\n', 1), ('redAndFlyingCreatures.stream().forEach(c', 1), ('DataBus.getInstance();\n', 1), ('LOGGER.info(rogueDouble.toString());\n', 1), ('observer}\n', 1), ('SingleObserver}s.\n', 1), ('trustStore.isKeyEntry(alias);\n', 1), ('mo.onSubscribe(d);\n\n', 1), ('(m.isBridge()', 1), ('service.shutdownNow();\n', 1), ('Resource()', 1), ('2.13</a>)', 1), ('System.out.println("Second', 1), ('ConcatWithMaybeEmptyTckTest', 1), ('0).subscribe(new', 1), ('wash()', 1), ('Single.zip(Arrays.asList(source,', 1), ('servers.add(server);\n', 1), ('Objects.equals(formats,', 1), ('classpath;', 1), ('mistake.In', 1), ('element.charAt(2)', 1), ('Selector.open();\n', 1), ('MergeSubscriber(Subscriber<?', 1), ('Definition.Struct', 1), ('getSpells()', 1), ('stores.add(store);\n', 1), ('"Desmond").withHairType(HairType.BALD)\n', 1), ('this.holder.getHeavy();\n', 1), ('hit,', 1), ('fallback)\n', 1), ('JvmOptionsParser.spaceDelimitJvmOptions(Arrays.asList("-Xms1g",', 1), ('features,', 1), ('testBuildWeakWarrior()', 1), ('LotteryTicketId(doc.getInteger("ticketId")),', 1), ('assertTrue(f.isDisposed());\n\n', 1), ('Event.values().length;', 1), ('FlowableTimeoutTimed(Flowable<T>', 1), ('attributeView.readAttributes().permissions();\n', 1), ('AtomicReference<T>();\n\n', 1), ('{1}");\n', 1), ('https://github.com/JCTools/JCTools/blob/master/jctools-core/src/main/java/org/jctools/util/Pow2.java\n', 1), ('testConcurrentCheckinCheckout()', 1), ('db.getCollection("user_accounts").insertOne(\n', 1), ('Objects.requireNonNull(body);\n', 1), ('UNICAST_HOSTS_FILE', 1), ('databasePath.getFileName().toString();\n', 1), ('supported",', 1), ('EMPTY_ATTACHMENTS', 1), ('nazguls.put(NazgulName.REN,', 1), ('beforeScenarioIntegrationScope()', 1), ('payloads', 1), ('in.getFileStoreAttributeView(type);\n', 1), ('ObservableScalarXMap', 1), ('machineStateGlobal', 1), ('RxJavaPlugins.onAssembly(ObjectHelper.requireNonNull(composer,', 1), ('future.cancel(runner', 1), ('-5370107872170712765L;\n\n', 1), ('"ComputationSchedulerTest";\n', 1), ('ram', 1), ('http://www.apache.org/licenses/LICENSE-2.0",\n', 1), ('acked.\n', 1), ('(publishers.length', 1), ('assertTrue(rco.errors.contains(error));\n', 1), ('details\n', 1), ('Spliterators.spliterator(iterator(),', 1), ('((ScalarCallable<Integer>)m).call().intValue());\n', 1), ('UnsubscribeOnSingleObserver(SingleObserver<?', 1), ('AG,', 1), ('tempPath', 1), ('cfg.authUser()', 1), ('FluentIterableTest', 1), ('CakeViewImpl(bakingService);\n\n', 1), ('done.', 1), ('lines;\n', 1), ('item));\n', 1), ('drainAndCancel()', 1), ('updated.\n', 1), ('virtualDB.get(userId);\n', 1), ('"983-322",', 1), ('assertFalse(list.retainAll(Arrays.asList(1,', 1), ('sa.actual);\n', 1), ('{request[0],', 1), ('((evictedGroup', 1), ('FirstTckTest', 1), ('"price";\n\n', 1), ('ObjectHelper.requireNonNull(sourceSupplier.apply(resource),', 1), ('jobs);\n\n', 1), ('ease.', 1), ('scheduler.scheduleDirect(parent,', 1), ('getSession()', 1), ('7),', 1), ('defensive\n', 1), ('Index,', 1), ('subscribeTo(Publisher<Integer>', 1), ('com.iluwatar.servicelayer.magic.MagicService;\nimport', 1), ('<code>true</code>', 1), ('latch;\n', 1), ('mostRecentSubscriber.getIterable();\n', 1), ('compute.', 1), ('onCompleteCancelRace()', 1), ('ps.singleOrError().doOnDispose(new', 1), ('ownership', 1), ('sifting.', 1), ('domainapp.fixture.modules.simple.SimpleObjectsTearDown;\nimport', 1), ('System.err.println(b);\n', 1), ('3167244060586201109L;\n', 1), ('pp.purgePeriod;\n\n', 1), ('typeName;\n', 1), ('org.elasticsearch.action.admin.indices.get.GetIndexRequest.Feature;\nimport', 1), ('AutoCloseable}.', 1), ('Observable}.\n', 1), ('assertSame(secondOliphaunt,', 1), ('stringProps.length', 1), ('(CakeLayerInfo', 1), ('SecureString}', 1), ('Callable<Observable<Object>>()', 1), ('PurgeProperties();\n', 1), ('empty.', 1), ('foundLayers.add(found.get());\n', 1), ('extraneous', 1), ('WithLatestInnerObserver[n];\n', 1), ('freeUser', 1), ('mostly', 1), ('(message', 1), ('HomePageViewModel', 1), ('observer.assertNoErrors();\n', 1), ('SimpleMessageQueue(int', 1), ('MemoryMXBean', 1), ('((Future<?>)o).cancel(async);\n', 1), ('inUse.remove(instance);\n', 1), ('serialDisposable.replace(Disposables.empty());\n', 1), ('this.requestDescription', 1), ('ObservableTimerTest', 1), ('undo', 1), ('doc:', 1), ('deferredUpstreamProducer()', 1), ('AmazonDynamoDBClientBuilder\n', 1), ('FutureTask<Void>(run,', 1), ('saveAside(UserAccount', 1), ('world.fetch();\n', 1), ('supportsFileAttributeView(String', 1), ('beans.get(FISHING_BEAN));\n', 1), ('SergeantVisitorTest()', 1), ('org.elasticsearch.action.admin.indices.alias.get.GetAliasesResponse;\nimport', 1), ('FlowableDoOnEach(Flowable<T>', 1), ('"Lambo");\n', 1), ('getAllSubmittedTickets()', 1), ('generateId();\n\n', 1), ('TestHelper.checkUtilityClass(FlowableEventStream.class);\n', 1), ('e4.getMessage());\n\n', 1), ('Toggle', 1), ('inherits', 1), ('Spell("Darkness");\n', 1), ('.append(".lt(")\n', 1), ('Arrays.asList(Strings.delimitedListToStringArray(extendedString,', 1), ('.append(prefix).append("Native', 1), ('(comparator.compare(s1,', 1), ('assertThat(searchResponse.getHits().getTotalHits(),', 1), ('TestHelper.checkDisposed(Observable.just(1).all(Functions.alwaysTrue()));\n', 1), ('Message[]{\n', 1), ('AsyncSubject.\n', 1), ('(Customer', 1), ('io.reactivex.internal.operators.observable.ObservableRange;\nimport', 1), ('re-acquisition', 1), ('Delay(sd,', 1), ('RxJavaPlugins.setErrorHandler(errorHandler);\n\n', 1), ('#748)</a>\n', 1), ('checkDoubleOnSubscribeMaybe(Function<Maybe<T>,', 1), ('service;\n\n', 1), ('countAction', 1), ('Throwing', 1), ('testOnFire(other,', 1), ('ParallelReduceFullInnerSubscriber<T>(this,', 1), ('Extending', 1), ('Validator(T', 1), ('normalJustConditional()', 1), ('java.util.concurrent.CountDownLatch;\n\npublic', 1), ('useReadThroughAndWriteBehindStrategy()', 1), ('block.', 1), ('<b>Dirty', 1), ('<br>Factory', 1), ('Observable<?>', 1), ('this.initialCollection', 1), ('LOGGER.info("Number', 1), ('errorBackpressured()', 1), ('strategy.', 1), ('ReaderTest', 1), ('times(1)).run();\n', 1), ('accessor.\n', 1), ('instance2', 1), ('input.observable;\n', 1), ('maybe.blockingGet();\n', 1), ('PlayerDetails("bobbie@google.com",', 1), ('author.getName());\n', 1), ('Stats', 1), ('supplied)\n', 1), ('cpu);\n\n', 1), ('.concatWith(Observable.<Integer>never())\n', 1), ('SafeSubscriberTestException("onError', 1), ('events.get(index);\n', 1), ('java.sql.Driver;\nimport', 1), ('testProduce()', 1), ('newPermissionCollection()', 1), ('reentrantNoOverflow()', 1), ('bs1));\n', 1), ('(numbers', 1), ('spells");\n', 1), ('option.', 1), ('"*"))', 1), ('"false"));\n', 1), ('Alias(exp.location(),', 1), ('valueSelector,\n', 1), ('testDoDraw()', 1), ('TestHelper.checkDisposed(PublishSubject.create().elementAt(0));\n\n', 1), ('SubscribeOnMaybeObserver<T>\n', 1), ('"Publisher",', 1), ('ObservableSource<Downstream>', 1), ('this.mapFactory', 1), ('!name.contains("Perf")', 1), ('emptyThrowsNoSuch()', 1), ('MpscFillOnceSimpleQueue(int', 1), ('spell15', 1), ('deque;\n\n', 1), ('SimpleDateFormat(inDateFormat);', 1), ('TestHelper.checkDisposed(Flowable.intervalRange(1,', 1), ('!this.test.test(e))', 1), ('jar;', 1), ('commanderResponse;\n\n', 1), ('timer.start();\n', 1), ('threadSafeIvoryTower2', 1), ('filterWrongParallelism()', 1), ('RainbowFishV2}', 1), ('assertTrue(onePointSix.compareTo(onePointSix)', 1), ('testGetColor(Creature', 1), ('set*()', 1), ('NoSuchAlgorithmException\n', 1), ('s.doOnDispose(Functions.EMPTY_ACTION);\n', 1), ('assertNotNull(initialToppings);\n', 1), ('isServiceRunning()', 1), ('yet");\n', 1), ('zone)\n', 1), ('java.util.function.IntBinaryOperator;\nimport', 1), ('dr;\n\n', 1), ('com.iluwatar.servicelayer.spellbook.Spellbook;\n\n/**\n', 1), ('spell16', 1), ('Sequence', 1), ('"023-638",', 1), ('search.\n', 1), ('checkDoubleOnSubscribeMaybeToSingle(Function<Maybe<T>,', 1), ('verifyNoMoreInteractions(children);\n', 1), ('-4649703670690200604L;\n\n', 1), ('height="447"', 1), ('assertSame(another,', 1), ('dest.fulfill(func.apply(src.get()));\n', 1), ('certChainPath', 1), ('coding', 1), ('LOGGER.info("enumIvoryTower2={}",', 1), ('JpaTransactionManager();\n', 1), ('Single",', 1), ('MinusExpressionTest', 1), ('(previous.equals(jarpath))', 1), ('SchedulerPoolFactory', 1), ('anyLocalAddress', 1), ('longs.get(0));\n', 1), ('wrap((MaybeSource<T>)sources[0]);\n', 1), ('7759721921468635667L;\n\n', 1), ('Single.merge(source1,', 1), ('Set<MockUncasedHostProvider>>', 1), ('blockingSubscribeObserver()', 1), ('io.reactivex.Single},', 1), ('"843-073",', 1), ('Publisher<TRightEnd>', 1), ('allow,', 1), ('HeroStat(int', 1), ('onDisposed(value);\n', 1), ('Single.just(1).ambWith(error).test().assertValue(1);\n', 1), ('Scanner(System.in);\n', 1), ('amd', 1), ('CompletablePeek', 1), ('commanderResponse;\n', 1), ('10).isEmpty().toFlowable()\n', 1), ('(extendedString', 1), ('sb.append("\\n--CACHE', 1), ('scheduler.scheduleDirect(runnable,', 1), ('TestHelper.assertBadRequestReported(Flowable.intervalRange(1,', 1), ('eventManager.start(aEventId);\n', 1), ('AsyncProcessor<T>();\n', 1), ('privileges="', 1), ('action.accept(src.get());\n', 1), ('jars.</li>\n', 1), ('SafeObserver<T>', 1), ('MaybeSource<U>>', 1), ('assertEquals("Poor', 1), ('files.putAll(source.files);\n', 1), ('sources.length);\n', 1), ('FlowableMaterialize<T>', 1), ('5.0', 1), ('queryData();\n', 1), ('mo.dispose();\n\n', 1), ('instance2);\n', 1), ('subscriberSingleNot(final', 1), ('active.get())', 1), ('Controller:', 1), ('file.delete();\n', 1), ('consumerThrows()', 1), ('WeakScalarSubscription<T>', 1), ('extendedPlugins);\n', 1), ('ConcatIterableEagerTckTest', 1), ('wheelProperties.put(HasPrice.PROPERTY,', 1), ('Found', 1), ('(!predicate.test(nextElement))', 1), ('CompletableSource#subscribe(CompletableObserver)}', 1), ('injector.getInstance(WireTransfers.class);\n', 1), ('CompletableDoFinallyTest', 1), ('PosixFileAttributeView.class).readAttributes();\n', 1), ('statA.equals(statC));\n', 1), ('Flowable.fromIterable(iterate(elements)).cache()\n', 1), ('org.elasticsearch.index.settings;\n\nimport', 1), ('Now', 1), ('compilers', 1), ('SubscribeTask(MaybeObserver<?', 1), ("iterable's", 1), ('t.setProducer(new', 1), ('onErrorResumeNext(\n', 1), ('testNoExecution()', 1), ('reportMoreProduced(long', 1), ('getInnerQueue(inner);\n', 1), ('notify();\n', 1), ('verify(spellbookDao).findByName(eq(bookname));\n', 1), ('SingleFromPublisher<T>(publisher));\n', 1), ('dispatcher.registerStore(store);\n', 1), ('SingleDoOnSubscribe<T>', 1), ('represents.', 1), ('[%s].",', 1), ('output.write(eventString', 1), ('seconds);\n', 1), ('resourceName),\n', 1), ('lie', 1), ('layers.toString());\n', 1), ('Statement,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.just.png"', 1), ('RxJavaPlugins.setOnMaybeSubscribe(new', 1), ('ActionListener.wrap(getIndexResponse', 1), ('BlockingObservableToFutureTest', 1), ('caPaths.hashCode()', 1), ('readyOps()', 1), ('(PluginInfo)', 1), ('this.customerId;\n', 1), ('SafeSubscriber<String>(OBSERVER_ONERROR_NOTIMPLEMENTED()).onError(new', 1), ('Trap', 1), ('performOperationsUsing(dbDao);\n', 1), ('testWriteV1ReadV1()', 1), ('unbounded1()', 1), ('FlowableSwitchMapMaybeEmptyPerf', 1), ('testTrollActions()', 1), ('qs.requestFusion(ANY);\n\n', 1), ('maybeCreate()', 1), ('<code>CakeLayerDao</code>.', 1), ('CompletableDoOnTest', 1), ('NullPointerException("Publisher', 1), ('CREATE,', 1), ('parameters.', 1), ('two\n', 1), ('Links', 1), ('#parallelism()\n', 1), ('ObservableSwitchMapCompletablePerf', 1), ('Object>>>', 1), ('testPlaySound()', 1), ('singletonList("null")));\n', 1), ('writer.write("Hello");\n', 1), ('dao.getById(existingCustomer.getId()).get();\n', 1), ('assertEquals("EmptyRunnable",', 1), ('Arrays.asList(5,', 1), ('(thread', 1), ('axe"},\n', 1), ('SpellStrategy(),\n', 1), ('NoAnonymousInnerClassesTest.class.getResource("/");\n', 1), ('maxConcurrencyOneDelayError()', 1), ('memberSupplier.get();\n', 1), ('8.x', 1), ('seconds)?:', 1), ('expectedName', 1), ('get();\n\n\n', 1), ('se', 1), ('Integer.parseInt(properties.getProperty(PURGE_PERIOD_SECONDS_KEY));\n', 1), ('biConsumerIsDisposedOnError()', 1), ('PATTERN', 1), ('handleException(Exception', 1), ('trustNodeNames', 1), ('MAX_RUNNING_EVENTS;\n', 1), ('assertNull(RxJavaPlugins.onSingleLift(null));\n//\n//', 1), ('CompletableNever', 1), ('crashDispose,', 1), ('FlatMapCompletableMainSubscriber<T>(observer,', 1), ('checkFlowableScheduler()', 1), ('Subscriptions', 1), ('testUnsubscribeOnlyOnce()', 1), ('equalTo(numChecksFailed));\n', 1), ('FlowableScalarXMap', 1), ('updated!', 1), ('result2', 1), ('fetchingAnAlreadyFulfilledPromiseReturnsTheFulfilledValueImmediately()', 1), ('mockedConnection', 1), ('availableLayers.size());\n', 1), ('list;', 1), ('singleStart()', 1), ('part.getPrice().get());\n', 1), ('imagined', 1), ('equals(),', 1), ('RestrictedTrustConfig(settings,', 1), ('s.equals("-")', 1), ('dateList;\n', 1), ('-4255299542215038287L;\n\n', 1), ('zipCode;\n\n', 1), ('Observer\n//', 1), ('receiver)', 1), ('parameterTypes.size();', 1), ('Files.newOutputStream(path))', 1), ('PlayerDetails("warren@google.com",', 1), ('Invalidate', 1), ('(oldTypeIterator.hasNext())', 1), ('io.reactivex.schedulers.SchedulerRunnableIntrospection;\n\n/**\n', 1), ('1000000;\n', 1), ('singletonList("java.lang.Object")));\n', 1), ('available.add(create());\n', 1), ('timed.unit());\n', 1), ('collected.size();\n', 1), ('transient', 1), ('DISPOSED.dispose();\n', 1), ('.replace("', 1), ('(album-list.html)\n', 1), ('CompletableFuture.\n', 1), ('Manages', 1), ('children.size();\n', 1), ('scenarios', 1), ('(createVirtualDB()).</p>\n', 1), ('second.done;\n', 1), ('groupBy', 1), ('seeing', 1), ('"4"})\n', 1), ('AbstractComponent', 1), ('line.split("\\\\s+");\n\n', 1), ('java.util.Objects.\n', 1), ('SkipLastTimedObserver<T>(t,', 1), ('callback.\n', 1), ('m.schedulerDocLine', 1), ('repositoryDir.normalize();\n', 1), ('java.security.BasicPermission;\nimport', 1), ('getState()', 1), ('callback;\n\n', 1), ('ATOMIC_MOVE);\n', 1), ('multipleErrorRace()', 1), ('IncrementingIterable', 1), ('retrievingAllCustomersFailsWithExceptionAsFeedbackToClient()', 1), ('coordination', 1), ('UsingTckTest', 1), ('(ShowFunctions)', 1), ('Observable.<Integer>error(error).subscribe(tc);\n\n', 1), ('f.doFinally(SingleDoFinallyTest.this);\n', 1), ('remain\n', 1), ('findAttribute(Collection<Attribute>', 1), ('q2.poll();\n', 1), ('bind(String.class).annotatedWith(Names.named("aboutMessage")).toInstance("Simple', 1), ('Collection<IndexPrivileges>', 1), ('this.fieldString', 1), ('logStreamName', 1), ('LoggerFactory.getLogger(Utility.class);\n\n', 1), ('"334-763",', 1), ('org.elasticsearch.common.blobstore.support.AbstractBlobContainer;\nimport', 1), ('administartion.performLottery();\n', 1), ('Functions.toFunction(biFunction);\n', 1), ('toIndex)', 1), ('(ex.getCause()', 1), ('(isDirty(file.lastModified()))', 1), ('OperatorMergePerf', 1), ('showcase', 1), ('KEY', 1), ('"37e7a1fe-3544-473d-b764-18128f02d72d"));\n', 1), ('file1.delete();\n', 1), ('TEST_PART_MODEL);\n', 1), ('Completable.complete().doFinally(null);\n', 1), ('exponential', 1), ('De-multiplexing.\n', 1), ('SingleDoOnDispose<T>(this,', 1), ('d3));\n\n', 1), ('aste.getMessage().contains("createSingle"));\n//\n//', 1), ('javaAugmentedClass;\n\n', 1), ('SimpleObjectGlue', 1), ('CatapultView(),', 1), ('ParallelFilterConditionalSubscriber<T>((ConditionalSubscriber<?', 1), ('roleDescriptors', 1), ('ElfBeast("cooking"),', 1), ('Edition",', 1), ('hostName),', 1), ('this.toException', 1), ('w2.schedule(countAction);\n\n', 1), ('b.substring(backpressureSpec', 1), ('this.qd', 1), ('far,', 1), ('this.request', 1), ('super(Pattern.compile("cls",', 1), ('.flatMap(\n', 1), ('properties()', 1), ('with:', 1), ('prod', 1), ('Trampoline.more(()', 1), ('MAX_EVENT_TIME)', 1), ('!veryEnd)', 1), ('ConsumerTest', 1), ('CollectTckTest', 1), ('CREATED_STATUS_CODE', 1), ('WRITE))', 1), ('ObservableSwitchMapMaybePerf', 1), ('ResumeSingleObserver(AtomicReference<Disposable>', 1), ('"true")));\n', 1), ('LOGGER.info("result:', 1), ('out.writeString(index.index);\n', 1), ('DisposableCompletableObserverTest', 1), ('dnsSan', 1), ('"java.util.*";</pre>\n', 1), ('[0,%d)",\n', 1), ('assertNotNull(m.toString(),', 1), ('defaultShouldReportNoCustomOnError()', 1), ('PathMatcher', 1), ('check("Observable");\n', 1), ('.privileges(rolePermissionSettings.get(role))\n', 1), ('disposeSelfPeriodicDirect()', 1), ('onErrorReturn(Functions.justFunction(item));\n', 1), ('spellDao.persist(spell13);\n', 1), ('this(name);\n', 1), ('stringPredicate)', 1), ('"RxSingleScheduler";\n\n', 1), ('r.receiveCompliments();\n', 1), ('"FlowableSingleMaybe",\n', 1), ('out.getVersion().before(Version.V_6_3_0))', 1), ('org.hamcrest.Matchers.is;\n\n/**\n', 1), ('#more(Trampoline)}', 1), ('MeleeStrategy(),\n', 1), ('testSwitchWhenNotEmpty()', 1), ('ObjectHelper.requireNonNull(comparer,', 1), ('member.toString());\n', 1), ('subscribers.add(bc);\n', 1), ('mongoClient.getDatabase("test");\n', 1), ('getSize();\n\n', 1), ('e.dataType().isNumeric()?', 1), ('customers.add(customer3);\n', 1), ('(memoryLimitInMb', 1), ('benchmarks', 1), ('assertNotSame(clone,', 1), ('Captain}', 1), ('v1;\n', 1), ('TakeLastSubscriber(Subscriber<?', 1), ('J.', 1), ('ConcurrentLinkedQueue<GroupedUnicast<K,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timeout.2.png"', 1), ('MethodKey(whitelistMethod.javaMethodName,', 1), ('Observer<Open>,', 1), ('mws.createWorkers(max', 1), ('tryStart(boolean', 1), ('FlowableMap<T,', 1), ('enumIvoryTower2);\n\n', 1), ('lambdaInfo.setAwsRequestId(context.getAwsRequestId());\n', 1), ('writeLock)', 1), ('CertUtils.trustManager(trustStorePath,', 1), ('unzipped', 1), ('org.elasticsearch.xpack.core.security.authz.RoleDescriptor;\nimport', 1), ('this.specialDay', 1), ('RunnableDisposable', 1), ('multilineToString(emptyList(),', 1), ('collector.accept(startingData);\n', 1), ('(topping.getCake()', 1), ('m.javadocLine', 1), ('ForEachWhileObserver<T>\nextends', 1), ('(!name.equals(that.name))', 1), ('ToXContent.MapParams(Collections.singletonMap(License.LICENSE_SPEC_VIEW_MODE,', 1), ('LocalDateTime.from(parsed);\n', 1), ('connect()}', 1), ('Consumer("Consumer_"', 1), ('"collector', 1), ('HashMap<>(32768);\n', 1), ('300));\n', 1), ('ESSmokeClientTestCase', 1), ('String.class);\n\n', 1), ('Maybe.zip(pp.singleElement(),', 1), ('1000),', 1), ('#set(AtomicReference,', 1), ('SchedulerTestHelper', 1), ('RepeatUntilObserver<T>(s,', 1), ('ToFlowableIterator<T>(sources.iterator());\n', 1), ('RxJavaPlugins.initComputationScheduler(nullResultCallable);\n', 1), ('SINGLE_THREAD_FACTORY', 1), ('.concatMapIterable(new', 1), ('ResourceObserverTest', 1), ('prevProducerNode', 1), ('testLastCount()', 1), ('Collections.singletonMap(URLRepository.TYPE,', 1), ('FlowableReduceSeedSingle<T,', 1), ('java.net.URLEncoder;\nimport', 1), ('assertNotNull(bottomShelf);\n', 1), ('(ex.isPresent())', 1), ('body",', 1), ('TRAMPOLINE;\n\n', 1), ('allWizards', 1), ('TreasureChestItemIterator(this,', 1), ('.runOn(ImmediateThinScheduler.INSTANCE,', 1), ('ArrayList<>(numOtherFiles);\n', 1), ('reference)', 1), ('-6951100001833242599L;\n\n', 1), ('actual.onNext(Notification.createOnNext(t));\n', 1), ('sourceCount,', 1), ('(!r.getMood())', 1), ('HashSet<>(expectedIndices);\n', 1), ('IllegalStateException("This', 1), ('}).subscribe();\n\n', 1), ('getDimensions(name);\n', 1), ('Framework', 1), ('java.util.concurrent.ThreadPoolExecutor;\nimport', 1), ('DelayMaybeObserver<T>(actual);\n', 1), ('tree-like', 1), ('EsField', 1), ('toFuture()', 1), ('Collections.unmodifiableList(this.topShelf);\n', 1), ('expectedTargetResult;\n\n', 1), ('BigDecimal.ZERO;\n', 1), ('SingleObserveOnTest', 1), ('singleObserver', 1), ('ObservableConcatWithSingle(Observable<T>', 1), ('expectedDates[d][i]', 1), ('message);\n\n', 1), ('example()\n', 1), ('"John",', 1), ('AtomicLong(Long.MIN_VALUE);\n\n', 1), ('testCompare()', 1), ('System.out.println("Our', 1), ('(accountTo', 1), ('this.countries', 1), ('contains(value,', 1), ('DefaultJDKTrustConfig()', 1), ('Flowable.fromPublisher(sources).concatMapEager((Function)MaybeToPublisher.instance());\n', 1), ('org.elasticsearch.client.transport.TransportClient;\nimport', 1), ('FlatMapPublisherSubscriber(Subscriber<?', 1), ('expectedConfuseMethod;\n', 1), ('errors.size());\n', 1), ('HibernateUtil.getSessionFactory();\n', 1), ('AppManager.initCacheCapacity(3);\n', 1), ('"state")\n', 1), ('MaybeJust(T', 1), ('assertTrue(initialToppings.isEmpty());\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.error.png"', 1), ('.onBackpressureLatest().subscribe(ts);\n\n', 1), ('seenInvalidLines', 1), ('com.google.common.jimfs.Configuration;\nimport', 1), ('ObservableSource<List<Integer>>>()', 1), ('RxJavaPlugins.setScheduleHandler(new', 1), ('pendingPacket.getReceiver());\n', 1), ('listener.onResponse(merge(resolutions,', 1), ('resolutions,', 1), ('String[]{"1.7",', 1), ('delayOnSuccess()', 1), ('org.jmock.auto.Mock;\nimport', 1), ('ObservableSource",', 1), ('dynamoDbMapper;\n', 1), ('BackpressureHelper.multiplyCap(1L', 1), ('Collections.singletonMap(ROLE_A,', 1), ('sources.hasNext();\n', 1), ('org.elasticsearch.common.inject.name;\n\nimport', 1), ('dirty!', 1), ('ERROR,\n', 1), ('BASE_WHITELIST_FILES));\n\n', 1), ('OnErrorNotImplementedException(@NonNull', 1), ('"+9752435"));\n', 1), ('equalsPredicate()', 1), ('LoggerFactory.getLogger(NioServerSocketChannel.class);\n\n', 1), ('charProto.set(Stats.STRENGTH,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/doOnSuccess.m.png"', 1), ('&lt;filter&gt;\n', 1), ('bufferSize()));\n', 1), ('BOUNDARY,\n', 1), ('verifyZeroInteractions(observers);\n', 1), ('1)));\n', 1), ('consumed.', 1), ('server.serve(request);\n', 1), ('countLines(String', 1), ('ObservableBufferUntilSubscriberTest', 1), ('Validator#of(Object)}\n', 1), ('ac.onComplete(null,', 1), ('doubleType', 1), ('panel.setLayout(new', 1), ('javaMethod', 1), ('IllegalArgumentException(sb.toString());\n', 1), ('onAction(Action', 1), ('provided)', 1), ('SampleTimedNoLast(Subscriber<?', 1), ('Azure\n', 1), ('RequestHandler<Map<String,', 1), ('f0', 1), ('mergeDelayError4()', 1), ('Flowable.concat(Flowable.just(\n', 1), ('PublisherBufferExactSubscriber(Subscriber<?', 1), ('ObjectHelper.equals(value,', 1), ('RainbowFish("version1",', 1), ('SameThreadDispatcher());\n', 1), ('SingleEmitter<T>,', 1), ('innerNext(InnerQueuedSubscriber<Integer>', 1), ('"id=1234', 1), ('(instead', 1), ('DoFinallySubscriber(Subscriber<?', 1), ('asmConstructor', 1), ('keyPassword.hashCode()', 1), ('TIKA_INSTANCE.parseToString(new', 1), ('BaseFilterSubscriber(Predicate<?', 1), ('reducing', 1), ('events.add(line);\n', 1), ('2).blockingFirst(3).intValue());\n', 1), ('(latchedObserver.latch.getCount()', 1), ('wizardDao.persist(wizard3);\n', 1), ('Reader.\n', 1), ('this(true,', 1), ('exp.stream()\n', 1), ('hierarchy', 1), ('(set)', 1), ('resourceDisposer)', 1), ('Filter}s', 1), ('pv)', 1), ('addTextInput(String', 1), ('BlockingObservableToIteratorTest', 1), ('ObservableWindowBoundarySelector(\n', 1), ('links', 1), ('ConcatMapMaybeSubscriber<?,', 1), ('UserGroup\n', 1), ('idToCustomer.values().stream();\n', 1), ('wrongPre,', 1), ('String(stream.toByteArray()).contains(MESSAGE));\n', 1), ('testPredicateThrowsExceptionAndValueInCauseMessage()', 1), ('System.out.println(ts.errors());\n\n', 1), ('setupSSL(cfg);\n', 1), ('whitelistStructs);\n', 1), ('java.security.SecureRandom;\nimport', 1), ('javaFieldName,', 1), ('parent.cancel(key);\n', 1), ('structsMap.keySet())', 1), ('testedCreature.toString();\n', 1), ('assertNotNull(Dispatcher.getInstance());\n', 1), ('invalid\n', 1), ('value.get());\n\n', 1), ('exec)', 1), ('singleCompletable()', 1), ('r1);\n\n', 1), ('PublishSubscription[0];\n', 1), ('"-":\n', 1), ('layers=%s', 1), ('java.util.concurrent.ThreadFactory;\n\n/**\n', 1), ('value.set(10);\n', 1), ('org.apache.logging.log4j.util.Supplier;\nimport', 1), ('pp.single(0),', 1), ('testDisplay(Command', 1), ('ChangeKeyOpsCommand(key,', 1), ('})\n@State(Scope.Thread)\npublic', 1), ('Java8Holder.class.getDeclaredField("heavy");\n', 1), ('com.iluwatar.delegation.simple.printers.CanonPrinter;\nimport', 1), ('worker\n', 1), ('SingleInternalHelper.ToObservable.values().length);\n', 1), ('testing,', 1), ('ParameterMetaData)', 1), ('names.size())', 1), ('assertEquals("Second",', 1), ('VolatileSizeArrayList<T>', 1), ('Redo', 1), ("we're", 1), ('Objects.requireNonNull(job);\n', 1), ('memberClass', 1), ('here");\n//', 1), ('(luck', 1), ('SingleSubjects\n', 1), ('assertEmptyEnum(Class<E>', 1), ('TimerObserver(Observer<?', 1), ('this.javaName', 1), ('fs.getName(),', 1), ('BufferOpenObserver<Open>\n', 1), ('Schedulers#trampoline()', 1), ('javaAugmentedClassName;\n', 1), ('uniqueIdCount);\n', 1), ('com.iluwatar.hexagonal.banking.InMemoryBank;\nimport', 1), ('8:02', 1), ('ServerSocketChannel}', 1), ('CrashingIterator', 1), ('TimeUnit.SECONDS)', 1), ('BlockingObservableNext(ObservableSource<T>', 1), ('classes}.', 1), ('page.getElementById("cancelButton");\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.ignoreElement.png"', 1), ('org.reactivestreams.Subscriber;\n\npublic', 1), ('assertNotNull(clone);\n', 1), ('randomBoolean();\n', 1), ('TYPE_NAME_PATTERN', 1), ('ParallelReduceTest', 1), ('Integer.valueOf(s);\n', 1), ('com.iluwatar.servicelayer.magic.MagicServiceImpl;\nimport', 1), ('org.springframework.context.annotation.AnnotationConfigApplicationContext;\nimport', 1), ('ToSingle(s));\n', 1), ('doOnDisposeError()', 1), ('rowSize)', 1), ('ByteBuffer.wrap(signatureBytes);\n', 1), ('functionalMethod;\n', 1), ('BackpressureStrategy.BUFFER).retryWhen(attempts', 1), ('wireTransfers.setFunds("123-12312",', 1), ('(in.getVersion().onOrAfter(Version.V_6_3_0))', 1), ('longs.getValues().size());\n', 1), ('(potentially', 1), ('MaybeMapTest', 1), ('FutureSingleObserver()', 1), ('futureMaybe.doOnDispose(()', 1), ('e.getMetadata("es.to_string"));\n', 1), ('random.nextInt(LotteryConstants.PLAYER_MAX_SALDO));\n', 1), ('safeObserver', 1), ('IncrementingIterator', 1), ('getFileStoreAttributeView(Class<V>', 1), ('TestHelper.checkDisposed(PublishProcessor.create().singleElement().takeUntil(Flowable.never()));\n', 1), ('(dimensions', 1), ('newValue;\n', 1), ('aws', 1), ('MaybeMergeTest', 1), ('also\n', 1), ('assertTrue(event[0].toString(),', 1), ('errorDisposeRace()', 1), ("'.');\n\n", 1), ('(isOperator(s))', 1), ('!line.startsWith("*"))', 1), ('Queen();\n\n', 1), ('subject\n', 1), ('user.getLastName(),', 1), ('reactor\n', 1), ('end.userId);\n', 1), ('assertEquals(-99,', 1), ('onCompleteNull()', 1), ('jvmOptionConsumer.accept(line);\n', 1), ('com.iluwatar.trampoline;\n\n\nimport', 1), ('AbstractDynamoDbHandler<T', 1), ('(s.contains("java.util.concurrent.ThreadPoolExecutor"))', 1), ('checkDoubleOnSubscribeCompletableToObservable(Function<Completable,', 1), ('injectable.\n', 1), ('IntStream.range(6,', 1), ('RowingBoat', 1), ('priority)', 1), ('isRealTime()', 1), ('CLUSTER_SETTINGS_CHECKS', 1), ('testDamaged(tested,', 1), ('revision;\n\n', 1), ('completed(AsynchronousSocketChannel', 1), ('SpellbookDaoImpl>', 1), ('Potion>', 1), ('LOGGER.info("Readers', 1), ('ObservablePublishSelector<T,', 1), ('IntervalRangeSubscriber(Subscriber<?', 1), ('LotteryTestingModule());\n', 1), ('(should', 1), ('org.elasticsearch.xpack.sql.session.SqlSession;\nimport', 1), ('"io.reactivex:io";\n', 1), ('painlessNameStructEntry.getValue();\n\n', 1), ('those.\n', 1), ('BucketNormalizable(bucket,', 1), ('org.mockito.internal.verification.VerificationModeFactory.times;\n\n/**\n', 1), ('fieldString()', 1), ('1L.\n', 1), ('SerializedSubscriber<T>(s),', 1), ('activeCount', 1), ('(compareAndSet(acquired,', 1), ('no-op', 1), ('pattern;', 1), ('this.lazySet(0,', 1), ('java.nio.file.StandardOpenOption.TRUNCATE_EXISTING;\nimport', 1), ('con.setAllowUserInteraction(false);\n', 1), ('onErrorComplete(final', 1), ('column', 1), ('Toogle', 1), ('hanged\n', 1), ('this.readyOps', 1), ('MapNotificationObserver(\n', 1), ('generatorThrows()', 1), ('assertFalse(nonExistingFile.exists());\n\n', 1), ('sa.cancelled', 1), ('TaskGenerator}', 1), ('ScheduleRegistry(Set<Schedule.Parser>', 1), ('Proxy.Type.SOCKS;\n', 1), ('ex.map(Exception::getMessage).orElse(""));\n', 1), ('verify(observer).onError(throwable);\n', 1), ('String[]{"id",', 1), ('function.apply(candidate);\n', 1), ('TestHelper.checkDisposed(SingleSubject.create().timeout(1,', 1), ('arise.', 1), ('instead",\n', 1), ('Supplier', 1), ('testSetTopping()', 1), ('messages.add(data.getMessage());\n', 1), ('this.channel', 1), ('person.lastName', 1), ('list("src/test/java/io/reactivex/",', 1), ('trustConfig));\n', 1), ('Completable.timer(2,', 1), ('assertEquals(this.expectedConfuseMethod,', 1), ('(description', 1), ('ChainInput.Result', 1), ('automating\n', 1), ('CompletablePeek(CompletableSource', 1), ('ObservableStripBoundary<T>(upstream);\n', 1), ('currentIndex', 1), ('Long.\n', 1), ('DisposableSubscriber<V>', 1), ('wherein', 1), ('Queue<Integer>', 1), ('enqueues', 1), ('swap', 1), ('t.getSize().equals(s);\n', 1), ('this.readLock', 1), ('entry.replace(sep,', 1), ('ObservableRetryBiPredicate<T>', 1), ('add(Watch', 1), ('settings.getAsList(RESTRICTIONS_KEY_SUBJECT_NAME);\n', 1), ('together.\n', 1), ('propsMap', 1), ('layer)', 1), ('structsMap.get(ClassToName(clazz));\n', 1), ('json.append(",");\n', 1), ('t1.hashCode());\n\n', 1), ('this.batchSize', 1), ('active.isDone();\n\n', 1), ('permission).getUnresolvedName();\n', 1), ('scalarEmission++;\n', 1), ('java.nio.file.PathMatcher;\nimport', 1), ('ScanObserver(Observer<?', 1), ('awaitTimeout()', 1), ('verifyNoMoreInteractions(store);\n\n', 1), ('*/\n@Target({ElementType.TYPE,', 1), ('MaybeDoFinally<T>(this,', 1), ('"foo".getBytes(StandardCharsets.UTF_8));\n', 1), ('(!d.fusionMode)', 1), ('less.\n', 1), ('Function<E,', 1), ('FutureTask<Long>(new', 1), ('MaybeFromCallable<T>', 1), ('defaultTimezone;\n', 1), ('UNKNOWN(SQLException::new),\n', 1), ('InternalConsumer(Blackhole', 1), ('sequences.\n', 1), ('com.iluwatar.observer.utils.InMemoryAppender;\nimport', 1), ('completionValueSupplier;\n\n', 1), ('PluginSecurity', 1), ('2).scan(0,', 1), ('LimitSubscriber<T>\n', 1), ('System.getSecurityManager().checkPrintJobAccess();\n', 1), ('detection', 1), ('"FlowableFromObservable",\n', 1), ('SameThreadDispatcher', 1), ('"java.lang.txt",\n', 1), ('watcherService,\n', 1), ('"album-page.html";\n', 1), ('1072);\n', 1), ('Character(Type.ROGUE,', 1), ('methodLine;\n\n', 1), ('lowestFrequencyChar;\n', 1), ('themselves\n', 1), ('restart', 1), ('.aliases(indexWildcard)\n', 1), ('URIParameter(emptyPolicyFile.toUri()));\n', 1), ('assumeTrue("requires', 1), ('Predicate<U>', 1), ('GiantView', 1), ('select,', 1), ('error3()', 1), ('CompletableSource[count', 1), ('stoppingData.setDataBus(DataBus.getInstance());\n', 1), ('"FlowableFlatMapSingle",\n', 1), ('UnicastSubject.create();\n', 1), ('testStateRecovery()', 1), ('downsides', 1), ('newThread()', 1), ('ConnectableObservable}\n', 1), ('CallsCount', 1), ('TestSubscriber[n', 1), ('(fighterClass', 1), ('addConstructor(String', 1), ('spellbooks\n', 1), ('view.open();\n', 1), ('CakeLayer("layer",', 1), ('MergeWithSingleTckTest', 1), ('.assertResult(false);\n', 1), ('whitelistStructs', 1), ('-2945777694260521066L;\n\n', 1), ('inputs.', 1), ('emitter.timePasses(day);\n', 1), ('computation()', 1), ('dispose2CurrentThread()', 1), ('DoOnEachObserver(\n', 1), ('Arrays.asList(values);\n', 1), ('java.lang.invoke.MethodHandle;\nimport', 1), ('detected', 1), ('subscribers[0].onNext(2);\n', 1), ('-3852313036005250360L;\n\n', 1), ('ApiCallSection', 1), ('to:-\n', 1), ('getHeaders();\n\n', 1), ('SOCKS_PROXY));\n\n', 1), ('32);\n', 1), ('workDone.add(message);\n', 1), ('.map(el', 1), ('iterator(ItemType', 1), ('paramType', 1), ('List<Callable<Boolean>>', 1), ('d.getMinorVersion());\n', 1), ('spellbookDao.merge(spellbook4);\n', 1), ('"onComplete"', 1), ('AppManager.initCachingPolicy(CachingPolicy.AROUND);\n\n', 1), ('#start()}', 1), ('writer.close();\n', 1), ('m.schedulerDocumentation', 1), ('ObservableMergeWithMaybeTest', 1), ('TestHelper.checkDisposed(Single.fromPublisher(Flowable.never()));\n', 1), ('mock(SpellDao.class);\n', 1), ('R>)a,', 1), ('createGuiceModules()', 1), ('result[i].getDateList().size());\n', 1), ('ObservableTimeout(\n', 1), ('isConstantType(Class<?>', 1), ('Inventory(int', 1), ('expectedLayers.add(newLayer);\n', 1), ('selector.selectedKeys();\n\n', 1), ('e.onSuccess(null);\n', 1), ('Orcs}', 1), ('org.elasticsearch.xpack.core.XPackSettings;\nimport', 1), ('this.m', 1), ('loop(int', 1), ('writes\n', 1), ('SingleEquals<T>(first,', 1), ('SingleHolder.DEFAULT;\n', 1), ('"plugin-security.policy";\n\n', 1), ('tryOutSchedulers()', 1), ('HttpGet("http://localhost:50006/price");\n', 1), ('numberFormatExceptionsLine', 1), ('changes\n', 1), ('crappy', 1), ('this.isVisible();\n', 1), ('onErrorComplete()', 1), ('super(e', 1), ('technology', 1), ('marker', 1), ('while.");\n', 1), ('UnitVisitor\n', 1), ('noSince20InMaybe()', 1), ('mockCompletableObserver()', 1), ('&lt;/filter&gt;\n', 1), ('background.\n', 1), ('dao.getById(CUSTOMER.getId()).get();\n', 1), ('repository\n', 1), ('accounts.put(account.getAccountNo(),', 1), ('errorEager()', 1), ('assertSame(bs1,', 1), ('(MultiMatchQueryPredicate)', 1), ('when(factory.call()).thenThrow(new', 1), ('1000).onTerminateDetach().subscribe(ts);\n\n', 1), ('bucket.addBucketInfluencer(createTimeBucketInfluencer(bucket.getTimestamp(),', 1), ('AmbCoordinator(Observer<?', 1), ('SingleFlatMapMaybe(SingleSource<?', 1), ('pidPattern.matcher(line);\n', 1), ('failComputationFlowableBlockingSubscribe()', 1), ('completableObserver)', 1), ('.mergeWith(Maybe.just(elements))\n', 1), ('parserError();\n', 1), ('whitelistConstructor.painlessParameterTypeNames.get(parameterCount);\n\n', 1), ('blockingGet(T', 1), ('locally', 1), ('selector.select();\n\n', 1), ('HTTP\n', 1), ('Scout}', 1), ('"io.reactivex.internal.operators.");\n//', 1), ('ReplaySelectorTckTest', 1), ('NazgulEnum.MURAZOR);\n', 1), ('SingleTimeout<T>(this,', 1), ('MessageQueue()', 1), ('WORKER', 1), ('transportService,', 1), ('res.getExceptionList())', 1), ('ColorSelector(Color.DARK)).collect(Collectors.toList());\n', 1), ('exception",', 1), ('matter?\n', 1), ('Stream.iterate(trampoline,', 1), ('+1")});\n', 1), ('aEventId', 1), ('Amb(AtomicBoolean', 1), ('against\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/delay.oo.png"', 1), ('"tom@foo.bar");\n', 1), ('endDay()', 1), ('validate(Predicate<T>', 1), ('DirtyFlagTest', 1), ('loadDatabaseReaders(geoIpConfigDirectory,', 1), ('isReadOnly()', 1), ('s.onSubscribe(s2);\n', 1), ('SQLFeatureNotSupportedException', 1), ('PriceClientImpl', 1), ('sqlQuery.setParameter("title",', 1), ('entityManager.setDataSource(dataSource());\n', 1), ('LoggerFactory.getLogger(Java8Holder.class);\n\n', 1), ('Item}', 1), ('Internal', 1), ('AppManager.initCachingPolicy(CachingPolicy.BEHIND);\n\n', 1), ('head[0]', 1), ('reuseScheduledExecutor()', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/delay.png"', 1), ('completionValueSupplier.call();\n', 1), ('io.reactivex.Maybe;\n\n/**\n', 1), ('free\n', 1), ('addHeaders(Map<String,', 1), ('errorIsDisposed()', 1), ('i.interpret());\n', 1), ('ComputationSchedulerInternalTest', 1), ('LoggerFactory.getLogger(B2BService.class);\n\n', 1), ('BiObjectPredicate', 1), ('OperatorWindowBoundaryOpenSubscriber(WindowBoundaryMainSubscriber<T,', 1), ('Book))', 1), ('.standard()\n', 1), ('ObservableTakeWhile(ObservableSource<T>', 1), ('null-check', 1), ('log.info("start', 1), ('rights\nto', 1), ('javaHome);\n', 1), ('CacheStore()', 1), ('oliphaunt3);\n\n', 1), ('Student(3,', 1), ('matchingToppings', 1), ('Wadler\n', 1), ('toList(Iterator<E>', 1), ('IllegalStateException("Only', 1), ('free,', 1), ('defaultIfEmpty}', 1), ("needn't", 1), ('cons,', 1), ('assertSame(TimeUnit.SECONDS,', 1), ('15;\n', 1), ('RxJavaPlugins.setOnParallelAssembly(parallelFlowable2parallelFlowable);\n', 1), ('Thread.currentThread().getName();\n\n', 1), ('acquireForReaders();\n', 1), ('MessageQueue}', 1), ('lpValue()', 1), ('paramNumber;', 1), ('color),\n', 1), ('VALUES', 1), ('-8360547806504310570L;\n\n', 1), ('assertFalse(((Disposable)s).isDisposed());\n\n', 1), ("'login'\n", 1), ('ObservableAnySingle<T>', 1), ('other.subscribe(fallback);\n', 1), ('ExceptionHelper.TERMINATED;\n', 1), ('this.error;\n', 1), ('Nazgul(NazgulName.HOARMURATH));\n', 1), ('ObservableEventStream', 1), ('default.\n', 1), ('aim', 1), ('expression.toString());\n', 1), ('Closes', 1), ('3).subscribe(observer);\n\n', 1), ('stress', 1), ('audioStream', 1), ('WashingMachine}\n', 1), ('requests.get(0));\n', 1), ('ObservableAmb<T>', 1), ('key.\n', 1), ('connectableFlowable)', 1), ('field.getAndSet(CANCELLED);\n', 1), ('testGetAuthorBooks()', 1), ('getNextId()', 1), ('spellbook5.addSpell(spell13);\n', 1), ('createIoScheduler()', 1), ('addToList(final', 1), ('Objects.requireNonNull(requestDescription);\n', 1), ('java.security.UnresolvedPermission;\nimport', 1), ('ver;\n\n', 1), ('gotten', 1), ('action.\n', 1), ('FlowableGenerateTest', 1), ('dependentPromiseIsFulfilledWithAnExceptionIfTheFunctionThrowsException()', 1), ('2404266111789071508L;\n\n', 1), ('listOfCacheData', 1), ('previousSpell.undo();\n', 1), ('skipped\n', 1), ('pp*}</li>\n', 1), ('sha256.update(keyBytes);\n', 1), ('dao.getById(existingCustomer.getId()).get());\n', 1), ('testApp()', 1), ('awsRequestId.hashCode()', 1), ('Thre\n', 1), ('inferred\n', 1), ('disposeSelfPeriodic()', 1), ('MaybeDelaySubscriptionTest', 1), ('account.setMoney(money);\n', 1), ('checkBadSourceFlowable(Function<Flowable<T>,', 1), ('active.queue();\n\n', 1), ('acquireResource();\n', 1), ('resolved:\n', 1), ('assertTrue(q.offer(7));\n\n', 1), ('numberOfNodes,\n', 1), ('complete(value);\n', 1), ('wizardDao.persist(wizard2);\n', 1), ('match.', 1), ('TestException("Two"));\n\n', 1), ('PlayerDetails("bruce@google.com",', 1), ('StudentRepositoryTest', 1), ('"Baz",\n', 1), ('AtomicReference<CompletableDisposable[]>(EMPTY);\n', 1), ('ThrottleLatestSubscriber<T>\n', 1), ('you’ll\n', 1), ('observableInner()', 1), ('completionValueSupplier;\n', 1), ('Underneath', 1), ('Callable.\n', 1), ('occurred,', 1), ('this.abilities.add(ability);\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.map.png"', 1), ('EsIndex(indexOrAlias,', 1), ('.assertResult(0);\n\n', 1), ('issue...");\n', 1), ('javax.swing.JTextField;\nimport', 1), ('notifications.ticketWon(tickets.get(id).getPlayerDetails(),', 1), ('this.queue;\n\n', 1), ('del', 1), ('CustomMaybeObserver&lt;T&gt;(upstream);\n', 1), ('io.reactivex.plugins.RxJavaPlugins;\n\n\n/**\n', 1), ('FlowableFlattenIterable(Flowable<T>', 1), ('this.singleSupplier', 1), ('Nazgul(NazgulName.UVATHA));\n', 1), ('output.accept("classloader', 1), ('pp.singleElement().unsubscribeOn(Schedulers.computation())\n', 1), ('ArrayList<Date>();\n\n', 1), ('binding.\n', 1), ('clear();\n}\n', 1), ('longs.get(2));\n', 1), ('ObservableTakeLast(ObservableSource<T>', 1), ('seconds;\n', 1), ('(eventPool.containsKey(randomNum))', 1), ('"request()");\n', 1), ('databases', 1), ('buildFieldCacheKey(String', 1), ('(!sourceEmpty)', 1), ('Integer.MAX_VALUE;\n\n', 1), ('"Subscriber",\n', 1), ('GiantViewTest', 1), ('RxJavaPlugins.initComputationScheduler(new', 1), ('BufferExactSizeTckTest', 1), ('List<ContentAction>', 1), ('observables;\n\n', 1), ('pair.getValue()).stop();\n', 1), ('LotteryNumbers();\n', 1), ('inputs', 1), ('createLotteryTicket("foo@bar.com",', 1), ('injector).readOnlyAllSingletons();\n', 1), ('mock(Runnable.class);\n', 1), ('background.', 1), ('ds.onError(new', 1), ('BiConsumerSingleObserver<T>\nextends', 1), ('admin', 1), ('Objects.requireNonNull(status);\n', 1), ('(gate)', 1), ('panel.setBackground(Color.LIGHT_GRAY);\n\n', 1), ('cancel();\n}\n', 1), ('randomAlphaOfLengthBetween(10,', 1), ('eager', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timeout.1.png"', 1), ('ObservableFromUnsafeSource<T>', 1), ('poll();\n\n', 1), ('DisposableHelper.dispose(main);\n', 1), ('getResponseOrThrowException()', 1), ('org.elasticsearch.smoketest;\n\nimport', 1), ('org.hibernate.Transaction;\nimport', 1), ('information:");\n', 1), ('super("+",', 1), ('createAndCacheHeavy()', 1), ('this.getStudentId();\n', 1), ('UserException(ExitCodes.DATA_ERROR,', 1), ('testDistinctUntilChangedOfSourceWithExceptionsFromKeySelector()', 1), ('(lastFetched', 1), ('aggressiveConcurrencyLevel;\n\n', 1), ('(MVC)', 1), ('-68,', 1), ('success()', 1), ('Observer<T>()', 1), ('subj.onSuccess(1);\n', 1), ('Nazgul(NazgulName.JI_INDUR));\n', 1), ('rco.onComplete();\n\n', 1), ('io.reactivex.functions.Action;\n\npublic', 1), ('layerInfo)', 1), ('SingleAmb<T>', 1), ('PlayerDetails("wayne@google.com",', 1), ('indexName', 1), ('disposeDuringDelay()', 1), ('GiantView();\n\n', 1), ('REPLACE_EXISTING,', 1), ('io.reactivex.internal.util;\n\npublic', 1), ('feed(Royalty', 1), ('deferred.subscribe(firstObserver);\n\n', 1), ('Message.POISON_PILL,\n', 1), ('source.parallelism();\n\n', 1), ('capable', 1), ('Iterable<Flowable<T>>', 1), ('parts[0];\n', 1), ('ParallelFromArray<T>(publishers));\n', 1), ('Single.timer(2,', 1), ('consulted.\n', 1), ('FlowableConcatArray(Publisher<?', 1), ('wrap(simpleObjects).listAll();\n', 1), ('float.class', 1), ('Observable#as}', 1), ('tests!\\r\\n")\n', 1), ('evacuated', 1), ('DbCustomerDao(mockedDatasource());\n', 1), ('LruCache(int', 1), ('threads.<br>\n', 1), ('Files.createDirectories(propertiesFile.getParent());\n', 1), ('ZipMaybeObserver<T>(this,', 1), ('evictedGroups);\n', 1), ('"plugin-descriptor.properties";\n', 1), ('structsMap.get(structstr);\n\n', 1), ('o.flatMap(\n', 1), ('failComputationFlowableBlockingNext()', 1), ('white-listed.', 1), ('ImmediateThinScheduler', 1), ('fusedPollThrowsDelayError()', 1), ('noSubscribeOnErrorCrashes()', 1), ('Dates(new', 1), ('FlowableConcatMapCompletablePerf', 1), ('System.out.print(clazz.getName());\n', 1), ('UnsubscribeSubscriber<T>', 1), ('createFlowable()', 1), ('discoNodes', 1), ('this.whitelistConstructors', 1), ('"onAfterTerminated', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeatWhen.f.png"', 1), ('assertThat(future.get(),', 1), ('StudentRepository(null,', 1), ('WASHING.', 1), ('never()).request(anyLong());\n', 1), ('albumYearSelectOption', 1), ('doubly', 1), ('actual.onSuccess(c);\n', 1), ('javadocStart);\n\n', 1), ('"deprecation"', 1), ('testPredicateThrowsExceptionAndValueInCauseMessageObservable()', 1), ('WithLatestFromObserver<?,', 1), ('minutes.\n', 1), ('once()', 1), ('StandardCharsets.UTF_8);\n', 1), ('org.elasticsearch.cluster.metadata.IndexTemplateMetaData;\nimport', 1), ('list.add(index,', 1), ('MultiplyExpressionTest', 1), ('TestMatchers', 1), ('file.getAbsolutePath();\n', 1), ('captain.setRowingBoat((FishingBoatAdapter)', 1), ('SampleTimedEmitLast(Observer<?', 1), ('Functions.justFunction(Completable.never()),', 1), ('single.toFlowable().subscribe(subscriber);\n', 1), ('Logger.getLogger(App.class);\n', 1), ('evenItems.size());\n', 1), ('in.getAttribute(attribute);\n', 1), ('InnerQueuedObserverSupport<R>', 1), ('testDisplay(View', 1), ('disposeAfterRun()', 1), ('MaybeDoFinally(MaybeSource<T>', 1), ('DEFAULT_ACCOUNTS_COLLECTION);\n', 1), ('Flowable.never().blockingLatest().iterator().remove();\n', 1), ('recovery.\n', 1), ('DelayMaybeObserver<T>\n', 1), ('g)\n', 1), ('getObjects()', 1), ('information.toString();\n', 1), ('(int)elements).doOnNext(Functions.emptyConsumer())\n', 1), ('licenseSpec)', 1), ('initializes', 1), ('(seconds', 1), ('executor.submit(taskRunnable3);\n', 1), ('builds.', 1), ('periodicDirectTaskRace()', 1), ('Collections.singletonList(1);\n\n', 1), ('NumberType', 1), ('BCrypt.gensalt());\n\n', 1), ('NioDatagramChannel(port,', 1), ('Maybe<Upstream>', 1), ('rogue);\n', 1), ('moRef.get().onComplete();\n\n', 1), ('FutureSingleObserver<T>', 1), ('ArrayList<T>(initialCapacity);\n', 1), ('assertEquals(uniqueExpectedIndices.size(),', 1), ('hasBody()', 1), ('System.out.println("GC");\n', 1), ('ArrayList<>(chain.length);\n', 1), ('com.google.inject.name.Names;\nimport', 1), ('assertEquals(1072,', 1), ('FlowableGroupBy<T,', 1), ('CompletableErrorSupplier(Callable<?', 1), ('clear(Deque<T>', 1), ('actual.onError(list.get(0));\n', 1), ('first.get();\n', 1), ('Like', 1), ('java.nio.channels.spi.AbstractSelectionKey;\n\npublic', 1), ('RefCountObserver(Observer<?', 1), ('CharacterStepBuilder', 1), ('io.reactivex.internal.functions.Functions.*;\nimport', 1), ('(hasAnnotation)', 1), ('AbstractObservableWithUpstream<Notification<T>,', 1), ('bus.publish(MessageData.of("Foo', 1), ('ObservableFuseableTest', 1), ('spellbookDao.findByName(name);\n', 1), ('"IoSchedulerTest";\n', 1), ('ArrayDeque<Throwable>();\n', 1), ('assertFalse(service.isEnhanced());\n', 1), ('drainUnbounded()', 1), ('HashMap<>());\n\n', 1), ('definitions', 1), ('org.elasticsearch.script.ScriptContext},', 1), ('Callable<Publisher<Long>>()', 1), ('list.add(exp.toAttribute());\n', 1), ('TEST_CAR_PRICE', 1), ('assertTrue(threadpool.awaitTermination(1,', 1), ('DwarvenGoldmineFacade#endDay()}.\n', 1), ('LOGGER.info("Looting', 1), ('matchingForwardResolvedAddress.isPresent());\n', 1), ('expectedDates[d]', 1), ('(m.getName().startsWith("getOn"))', 1), ('validate(@NonNull', 1), ('java.sql.DatabaseMetaData;\nimport', 1), ('address?");\n', 1), ('timeMs;\n\n', 1), ('BadObservable().test();\n', 1), ('CoffeeMakingTask(6));\n', 1), ('.flatMap(Functions.justFunction(Observable.just(1)),\n', 1), ('Nazgul>', 1), ('assertEquals("First",', 1), ('painlessSuperStructs.add(painlessSuperStruct.name);\n', 1), ('(total', 1), ('OtherSubscriber<T>(observer,', 1), ('<li>Initiation', 1), ('clazz\n', 1), ('TestHelper.checkUtilityClass(Schedulers.class);\n', 1), ('mapFailWithErrorConditional()', 1), ('f.flatMapSingle(Functions.justFunction(Single.just(2)));\n', 1), ('remove(String', 1), ('EventEmitter()', 1), ('AudioTest', 1), ('fromSingleError()', 1), ('ExecutionContext', 1), ('Example)\n', 1), ('timer(final', 1), ('ServiceCache', 1), ('subscriber.onNext(value);\n', 1), ('Queue<Object>>', 1), ('KeyPairGenerator.getInstance("RSA").generateKeyPair();\n\n', 1), ('checkSchedulerBadMethod(Flowable.class.getSimpleName());\n', 1), ('com.iluwatar.flux.view.View;\n\n/**\n', 1), ('bound.getHostString()', 1), ('DisposableHelper.replace(arbiter,', 1), ('UserAccount("001",', 1), ('URI(uriPath.getScheme(),', 1), ('(!emptyPolicy.implies(PluginSecurity.class.getProtectionDomain(),', 1), ('err2', 1), ('assertTrue(appender.logContains("draw"));\n', 1), ('Unit>', 1), ('InMemoryAppender(Reader.class);\n', 1), ('"resultSelector', 1), ('byteType', 1), ('ts.awaitTerminalEvent();\n', 1), ('accountNoTo', 1), ('RxJavaPlugins.onComputationScheduler(COMPUTATION);\n', 1), ('InputStreamReader(new', 1), ('idf', 1), ('FsBlobStore', 1), ('obvious.\n', 1), ('overrideInitNewThreadSchedulerCrashes()', 1), ('attrs);\n', 1), ('Map<Class<?', 1), ('story', 1), ('Completable.concat(Flowable.range(1,', 1), ('doorProperties.put(HasPrice.PROPERTY,', 1), ('ObservableFlatMapMaybePerf', 1), ('setOnceTwice()', 1), ('com.iluwatar.reactor.framework.NioServerSocketChannel;\nimport', 1), ('assertTrue("Deferred', 1), ('ViewTest', 1), ('Disposable",', 1), ('HTML,', 1), ('TestSubscriber<Integer>(0L)', 1), ('simplify', 1), ('Supplier>', 1), ('toSingle(Flowable<T>', 1), ('unmodifiableMap(params);\n', 1), ('SimpleFileWriter(String', 1), ('assertTrue(saved.isPresent());\n', 1), ('pp2.onComplete();\n', 1), ('leading', 1), ('FlowableThrottleWithTimeoutTests', 1), ('Fall', 1), ('(fighter', 1), ('spell10', 1), ("executor's", 1), ('false;', 1), ('s.equals("*");\n', 1), ('characterFrequency()', 1), ('STOP', 1), ('"accounts";\n\n', 1), ('However,\n', 1), ('boundaryObserver.compareAndSet(sender,', 1), ('ObservableError(Callable<?', 1), ('this.unicastHostsFilePath', 1), ('ballThread.suspendMe();\n\n', 1), ('accountOfDaenerysAfterShotDown.getMoney());\n', 1), ('(eventClassName.equals("AccountCreateEvent"))', 1), ('LOGGER.info("Key:', 1), ('spell1', 1), ('MaybeFromActionTest', 1), ('Reader\n', 1), ('owner.clazz', 1), ('Maybe.just(1).isEmpty();\n', 1), ('InMemoryAppender(Inventory.class);\n', 1), ('deferredRequest(AtomicReference<Subscription>', 1), ('ObservableReduceTest', 1), ('structstr', 1), ('Objects.requireNonNull(keyPath,', 1), ('observableBlockingSubscribe1()', 1), ('CallsCount.incrementCount(tenantName);\n', 1), ('RainbowFishV2("version2",', 1), ('s.schedule(Functions.EMPTY_RUNNABLE,', 1), ('fileLoggerModule.printErrorString("Error");\n\n', 1), ('RxJavaPlugins.setInitSingleSchedulerHandler(initReplaceWithImmediate);\n', 1), ('d1));\n\n', 1), ('unit.toMillis(delayTime);\n\n', 1), ('onErrorCall,', 1), ('directly")\n', 1), ('database.getCollection(countersCollectionName);\n', 1), ('System.setErr(new', 1), ('org.elasticsearch.xpack.core.ml.calendars.ScheduledEvent;\n\nimport', 1), ('SingleUsingTest', 1), ('PathUtils.get(elasticsearchProperties);\n', 1), ('ImmediateThinScheduler.INSTANCE.scheduleDirect(new', 1), ('s.requestMore(1);\n', 1), ('expectedExceptions.expectCause(causalChainContains(SQLIntegrityConstraintViolationException.class));\n\n', 1), ('toFlowable().retry(times,', 1), ('scanFor(StringBuilder', 1), ('execTime);\n', 1), ('list.addAll(right);\n', 1), ('target);\n', 1), ('LOGGER.info(videoLength);\n', 1), ('dir(final', 1), ('Consumer<T>()', 1), ('Spliterator.OfPrimitive.class', 1), ('read()', 1), ('simpleObjects.add(fs.getSimpleObject());\n', 1), ('bq', 1), ('assemblyTrackingObservable()', 1), ('validations', 1), ('expectedPathList', 1), ('assertTrue(numbers.getNumbers().contains(4));\n', 1), ('s.equals("+")', 1), ('(lastServedId', 1), ('scenarios\n', 1), ('fulfill', 1), ('assertTrue(optionalException.isPresent());\n\n', 1), ('serviceCache;\n\n', 1), ('lazySet(0);\n', 1), ('StartingData(startTime);\n', 1), ('characterToFrequency.get(c)', 1), ('child.");\n', 1), ('apply(MaybeSource<Object>', 1), ('merge/concat', 1), ('events.add("Done");\n', 1), ('SingleUnsubscribeOn<T>(this,', 1), ('producedCancel(AtomicLong', 1), ('@AwaitsFix(bugUrl', 1), ('character.setFighterClass(fighterClass);\n', 1), ('Files.newDirectoryStream(env.pluginsFile()))', 1), ('minimalist', 1), ('battleship', 1), ('assertEquals(""', 1), ('FlowableToList(Flowable<T>', 1), ('39.99,', 1), ('NOT_SUPPORTED(SQLFeatureNotSupportedException::new);\n\n', 1), ('java.lang.reflect.Modifier.isStatic(modifiers);\n', 1), ('java8Holder', 1), ('this.observer1', 1), ('aggressiveConcurrencyLevel', 1), ('assertEquals("Don', 1), ('"Dan",', 1), ('gold,', 1), ('QueueSubscription.BOUNDARY);\n', 1), ('failing\n', 1), ('screen', 1), ('attempts.zipWith(Publisher.range(1,', 1), ('assertTrue(ts.errors().get(0).getCause().getMessage().contains("abc"));\n', 1), ('SingleDoAfterSuccess<T>', 1), ('BufferedInputStream(stream),\n', 1), ('merging', 1), ('org.apache.isis.applib.Identifier;\nimport', 1), ('assertFalse(t1.equals(new', 1), ('LinkedList', 1), ('CustomAuthenticationFailureHandler();\n', 1), ('AssertionError("The', 1), ('Flowable.fromFuture(ft);\n', 1), ('Termination()', 1), ('dtos)', 1), ('CertUtils.trustManager(trustConfigs.stream()\n', 1), ('capabilities.\n', 1), ('OnErrorNextSubscriber(Subscriber<?', 1), ('convertFromDto(final', 1), ('resulted', 1), ('List<DeprecationIssue>', 1), ('LOGGER.info(demandHolderIdiom2.toString());\n', 1), ('mockContainer;\n', 1), ('Customer(CUSTOMER.getId(),', 1), ('InnerQueuedSubscriber(InnerQueuedSubscriberSupport<T>', 1), ('(fields.length', 1), ('inventory.getItems();\n', 1), ('predicates.\n', 1), ('muteShouldRunTheCheckedRunnableAndNotThrowAnyExceptionIfCheckedRunnableDoesNotThrowAnyException()', 1), ('polled.run.run();\n', 1), ('listener.', 1), ('.put(magic)\n', 1), ('MinusExpression(left,', 1), ('io.reactivex.internal.util;\n\n/**\n', 1), ('BackpressureHelperTest', 1), ('String(data,', 1), ('fail("Rx', 1), ('this.javaMethodName', 1), ('headIndex;', 1), ('retries;\n', 1), ('onError(Subscriber<?>', 1), ('SwitchMapSingleMainObserver<?,', 1), ('EmptySubscription.error(error,', 1), ('LOGGER.info(mag.toString());\n\n', 1), ('CompletableEmitter,', 1), ('isTransportClient()', 1), ('false");\n', 1), ('networkService', 1), ('ObjectHelper.requireNonNull(singleFunction.apply(resource),', 1), ('"15.12.2015");\n', 1), ('CompletableMergeDelayErrorArray', 1), ('"-Xms1g\\n%d:-Xmx1g\\n%d:-XX:+UseG1GC\\n%d:-Xlog:gc",\n', 1), ('m.delaySubscription(Flowable.just(1));\n', 1), ('fromSubscriptionNull()', 1), ('IOUtils.rm(emptyPolicyFile);\n\n', 1), ('allowedCallsPerSecond)', 1), ('Validator<>(Objects.requireNonNull(t));\n', 1), ('Bounded', 1), ('statusCode)', 1), ('handleWithdrawal(moneyTransferEvent.getMoney(),', 1), ('4).lift(new', 1), ('Double.class)', 1), ('failOnEmpty));\n', 1), ('verify(royalty).getDrink();\n', 1), ('queue.offer(command);\n', 1), ('convertDatesToString(result);\n', 1), ('RxJavaPlugins.initComputationScheduler(unsafeDefault);\n', 1), ('@}BindingAnnotation\n', 1), ('parseClassPath(System.getProperty("java.class.path"));\n', 1), ('-5592042965931999169L;\n\n', 1), ('Spell("Confusion");\n', 1), ('this.event', 1), ('-82,', 1), ('location.', 1), ('Maven', 1), ('QueryDefault<>(SimpleObject.class,', 1), ('StringBuilder(\n', 1), ('testSeedFactory()', 1), ('isCancelled.\n', 1), ('assertTrue(expectedThreadName.equals(t.getName()));\n', 1), ('ExecutorSchedulerTest', 1), ('ComputationScheduler.NONE.createWorkers(max', 1), ('completable)', 1), ('sense', 1), ('IgnoreObservable(CompletableObserver', 1), ('(this.cancel.equals(e.getSource()))', 1), ('int"));\n', 1), ('bufferedReader.readLine();\n', 1), ('Typically', 1), ('CreateTckTest', 1), ('reverse', 1), ('predicateThrowsObservable()', 1), ('JsonParser', 1), ('handles,', 1), ('doOnEach.subscribe(subscribedObserver);\n\n', 1), ('testCollectorFailureDoesNotResultInTwoErrorEmissionsObservable()', 1), ('Observable.range(Integer.MAX_VALUE,', 1), ('Observers\n', 1), ('expectedConfuseMethod;\n\n', 1), ('update);\n', 1), ('HolderThreadSafe}.', 1), ('"delayIndicator', 1), ('MaybeFromSingle<T>(this));\n', 1), ('author,', 1), ('FlowableSwitchMapSingleTest', 1), ('Executors.newFixedThreadPool(8);\n', 1), ('doWrite(pendingWrite,', 1), ('Observer<Notification<T>>,', 1), ('assertSame(oos,', 1), ('nullValueSync()', 1), ('DISPOSED;\n\n', 1), ('errors()', 1), ('lastTwoOfFirstFourStringMapped);\n\n', 1), ('assertEquals(result,', 1), ('.assertResult("123");\n', 1), ('T2', 1), ('this.blkQueue', 1), ('commandService', 1), ('inheriting', 1), ('this.dao', 1), ('12:06', 1), ('!failed.get();', 1), ('X-Pack', 1), ('deflater))', 1), ('a.email', 1), ('qs.requestFusion(QueueSubscription.ANY);\n', 1), ('fromSingle(SingleSource<T>', 1), ('Arrays.asList(wheelProperties,', 1), ('WeatherObserver\n', 1), ('delayError);\n\n', 1), ('Stats.values())', 1), ('checkMaybeScheduler()', 1), ('org.elasticsearch.common.blobstore.BlobMetaData;\nimport', 1), ('arbitrates', 1), ('loginTimeout', 1), ('(AliasMetaData', 1), ('this.completionValueSupplier', 1), ('Thread.sleep(millis);\n', 1), ('ObservableRefCount<T>(this));\n', 1), ('f;\n\n', 1), ('noneagerMapperThrowsDisposerThrows()', 1), ('#create(SingleOnSubscribe)}', 1), ('t.getColor().equals(c);\n', 1), ('tryEmitScalar(U', 1), ('executor.schedule(task,', 1), ('ExecutableInput<ChainInput,ChainInput.Result>', 1), ('scheduleActual(final', 1), ('org.elasticsearch.xpack.sql.capabilities;\n\nimport', 1), ('preparation', 1), ('cake.setId(1234L);\n', 1), ('ObservableSampleTimed<T>', 1), ('"637-738",', 1), ('FlowableMergeWithMaybe(Flowable<T>', 1), ('FlowableRepeat(Flowable<T>', 1), ('form.\n', 1), ('this.initialRequest', 1), ('ConnectableFlowable()', 1), ('FlowableTimeout(\n', 1), ('_.,()]*Single");\n', 1), ('sig', 1), ('headIndex++;\n', 1), ('byte.class', 1), ('changeOps(SelectionKey', 1), ('.assertResult("12345");\n', 1), ('Increment', 1), ('arithmetic', 1), ('org.opensaml.saml.common.SAMLObject;\nimport', 1), ('FileInputStream(filename);\n', 1), ('fromRunnableNull()', 1), ('accept(HashMap<String,', 1), ('\\\\d+-\\\\d+', 1), ('MAGE,', 1), ('#1702.', 1), ('testFollowingFirstObservable()', 1), ('old.userAccount', 1), ('toString(String', 1), ('classPath);\n', 1), ('cdl.await();\n//\n//', 1), ('TypeToClass(getTypeInternal(whitelistField.painlessFieldTypeName));\n', 1), ('Single.create(null);\n', 1), ('classpath.\n', 1), ('handleEvent((MessageData)', 1), ('D>(resourceSupplier,', 1), ('prints/confirms', 1), ('org.junit.jupiter.api.Assertions.assertNotSame;\n\n/**\n', 1), ('PublishDisposable(Observer<?', 1), ('UnrecoverableKeyException', 1), ('redAndFlyingCreatures', 1), ('ApiCallSection(String', 1), ('size));\n', 1), ('AsyncResult\n', 1), ('1).hide();\n', 1), ('checkDisposedMaybeToSingle(Function<Maybe<T>,', 1), ('describes', 1), ('requestCancelProduceRace()', 1), ('latter', 1), ('onNextOnErrorFailure()', 1), ('tickets.put(id,', 1), ('MockIndicesRequest(null,', 1), ('(!DisposableHelper.isDisposed(d))', 1), ('segment.', 1), ('From', 1), ('io.reactivex.internal.operators.mixed.FlowableConcatMapSingle.ConcatMapSingleSubscriber;\nimport', 1), ('createCompletable()', 1), ('}\n\n\n\n', 1), ('Observable.<Long>empty()\n', 1), ('accept(DataType', 1), ('Wizard("Blasius', 1), ('(NoSuchFieldException', 1), ('allPotions', 1), ('results.getInt(1));\n', 1), ('valueSelector', 1), ('exits.\n', 1), ('assertTrue(list.add(1));\n', 1), ('segment', 1), ('next.shutdownNow();\n', 1), ('20);\n\n', 1), ('OverallBucketsCollector', 1), ('lost,', 1), ('.buffer(2)\n', 1), ('service.saveNewLayer(layer3);\n\n', 1), ('int,', 1), ('sits', 1), ('Runtime.getRuntime().availableProcessors(),', 1), ('MaybeFlatMapPublisher(MaybeSource<T>', 1), ('iterate(long', 1), ('thread");\n\n', 1), ('getDetails(Integer', 1), ('pours', 1), ('IllegalStateException("the', 1), ('https://github.com/ReactiveX/RxJava/issues/3885\n', 1), ('Integer.parseInt(map.get("lengthMeters")),\n', 1), ('Flowable.merge(Arrays.asList(\n', 1), ('ObservableSubscribeOn(ObservableSource<T>', 1), ('Functions.NaturalComparator.class.getMethod("values");\n', 1), ('listener.onResponse(results);\n', 1), ('LordVarys}', 1), ('partProperties', 1), ('this.extendedPlugins', 1), ('directory>");\n', 1), ('NazgulEnum.REN);\n', 1), ('boundaryConfinement()', 1), ('a.name', 1), ('getProductInventories()', 1), ('logger);\n', 1), ('ProtectionDomain(new', 1), ('emissionQueueTrigger()', 1), ('assertFalse(doc.isCancelled());\n\n', 1), ('javaImplClass', 1), ('removeObserver(WeatherObserver', 1), ('Single.fromPublisher(Flowable.range(1,', 1), ('RxJavaPlugins.setInitNewThreadSchedulerHandler(initReplaceWithImmediate);\n', 1), ('login', 1), ('OBSERVER_ONNEXT_FAIL(onError).onNext("one");\n', 1), ('this.expectedConfuseMethod', 1), ('20000;\n', 1), ('containment', 1), ('SingleFlatMapCompletableTest', 1), ('href="http://reactivex.io/documentation/operators/replay.html">ReactiveX', 1), ('httpPortPattern', 1), ('Evans",', 1), ('((FuseToMaybe<T>)this).fuseToMaybe();\n', 1), ('times(1)).onSuccess(Arrays.asList(5,', 1), ('Document("userName",', 1), ('testGetHeaders()', 1), ('FlowableSwitchMapCompletableTest', 1), ('assertTrue(throwable', 1), ('(disposeAll())', 1), ('assertNull(RxJavaPlugins.onAssembly((Maybe)null));\n\n', 1), ('city.hashCode()', 1), ('getAddress()', 1), ('UnknownCommand(),', 1), ('Version.CURRENT', 1), ('currentWeather;\n', 1), ('((clazz.getModifiers()', 1), ('getCacheDataInListForm()', 1), ('FlowableAutoConnect<T>', 1), ('!functionVersion.equals(that.functionVersion)', 1), ('esVersion,', 1), ('System.out.println("no', 1), ('cancelCrashed()', 1), ('PlayerDetails("tyron@google.com",', 1), ('"Carlson");\n', 1), ('BufferExactBoundarySubscriber(Subscriber<?', 1), ('acquired;\n', 1), ('this.index.add(new', 1), ('findPattern("QueueDisposable\\\\.(NONE|SYNC|ASYNC|ANY|BOUNDARY)");\n', 1), ('when(spellDao.findByName(eq(spellName))).thenReturn(spell);\n\n', 1), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;\nimport', 1), ('describeTo(Description', 1), ('attributes)', 1), ('Map<WeaponType,', 1), ('grepping', 1), ('retrievable.', 1), ('12)));\n\n', 1), ('context.get(IUnitOfWork.MODIFY);\n', 1), ('channel).\n', 1), ('<code>CakeDao</code>,', 1), ('RxJava");\n', 1), ('java.nio.file.StandardOpenOption.WRITE;\n\npublic', 1), ('Flowable.just(horrors);\n', 1), ('short)', 1), ('Switch', 1), ('functionName.hashCode()', 1), ('"length"};\n\n', 1), ('"FlowableLastSingle",\n', 1), ('2:58', 1), ('Completable.complete().subscribe(rco);\n\n', 1), ('.subscribe()\n', 1), ('ObjectInputStream(fileIn))', 1), ('Sentence(List<Word>', 1), ('ticketsCollection.find(new', 1), ('Optional.<Exception>empty()));\n', 1), ('this.setLayout(null);\n', 1), ('lpConsumerNode()', 1), ('writingTime);\n', 1), ('"Cannot', 1), ('DwarvenMineWorker.Action.GO_HOME,', 1), ('DbManager.connect();\n', 1), ('AttributeMap<>();\n', 1), ('Disposable"))', 1), ('ObservableCreate<T>', 1), ('Class<?>[whitelistMethod.painlessParameterTypeNames.size()', 1), ('containsValue', 1), ('HttpURL', 1), ('Sometimes', 1), ('exceptionHandler)', 1), ('syncFusedUnboundedIn()', 1), ('(invalidLines.isEmpty())', 1), ('Functions.justFunction(Single.never()));\n', 1), ('groupConfigPath;\n', 1), ('DisposableCompletableObserver}', 1), ('Optional.of("Greetings', 1), ('merger.apply(Arrays.asList(3,', 1), ('this.cancel.addActionListener(this);\n\n', 1), ('assertSame(Dispatcher.getInstance(),', 1), ('Tenant})', 1), ('(this.money.compareTo(money)', 1), ('InnerObserver(Observer<?', 1), ('checkObservableBackpressure()', 1), ('javaInteraceLookups.push(painlessStruct.clazz);\n\n', 1), ('onErrorCall;\n\n', 1), ('maybeSubscribe0()', 1), ('Flowable.<Integer>empty().switchIfEmpty(Flowable.range(1,', 1), ('"1422943772.875342698,', 1), ('DematerializeObserver<T>(t));\n', 1), ('Foo', 1), ('SingleJust<T>(item));\n', 1), ('logins', 1), ('spaceDelimitJvmOptions(jvmOptions);\n', 1), ('found.set(true);\n', 1), ('objects:', 1), ('StackOverflowError.class)\n', 1), ('customComparator()', 1), ('Files.newBufferedWriter(tempFile,', 1), ('onePointSevenPointTwoPointOne', 1), ('deserializedFishV2.getLengthMeters(),', 1), ('to1.assertNoErrors();\n\n', 1), ('javaInteraceLookups.pop();\n\n', 1), ('executeService.submit(writer2);\n\n', 1), ('interval', 1), ('complexity,', 1), ('task.executeWith(callback);\n', 1), ('(attributes', 1), ('message.";\n', 1), ('CompletableConcatSubscriber\n', 1), ('System.out.print(".java:");\n', 1), ('expectedExecutionTime)', 1), ('pane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);\n', 1), ('put(Message', 1), ('date);\n', 1), ('stage', 1), ('requestType;\n\n', 1), ('rightExpression.interpret());\n', 1), ('org.joda.time.DateTime}</li>\n', 1), ('JavaVersionChecker', 1), ('current.lazySet(null);\n', 1), ('COMPUTATION;\n\n', 1), ('org.elasticsearch.xpack.core.security.authz.RoleDescriptor;\n\nimport', 1), ('Object.', 1), ('tags', 1), ('performOperationsUsing(final', 1), ('"keyPath=["', 1), ('nazguls.put(NazgulName.UVATHA,', 1), ('valueOf(integer)', 1), ('assertEquals(TEST_PART_TYPE,', 1), ('StripBoundary<T>(upstream);\n', 1), ('Observable.just(4)\n', 1), ('flowableForEachWhile()', 1), ('testRegistration()', 1), ('.flatMapCompletable(Functions.justFunction(Completable.fromAction(this).subscribeOn(Schedulers.computation())),', 1), ('Math.toIntExact(timeout.seconds()),', 1), ('observeOn\n', 1), ('mergeDelayErrorIterable()', 1), ('WhitelistLoader()', 1), ('ticketId', 1), ('Arrays.asList(arrayInner);\n\n', 1), ('Observable.\n', 1), ('finalization.\n', 1), ('list.add(t2);\n', 1), ('scalarSource()', 1), ('space', 1), ('tenantCallsCount.entrySet())', 1), ('appeared:', 1), ('TrampolineApp', 1), ('List<EventEmitter>', 1), ('MlFilterWriterTests', 1), ('e.getDeclaredMethod("valueOf",', 1), ('exchange.getRequestHeaders();\n\n', 1), ('vers[0];\n', 1), ('source.onNext(9);\n', 1), ('Flowable.<Integer>never()\n', 1), ('ParallelPeek(ParallelFlowable<T>', 1), ('dispatchAction(Action', 1), ('sslContext(Settings', 1), ('Nazgul(NazgulName', 1), ('(context.containsKey(IUnitOfWork.INSERT))', 1), ('testLongRunningTaskWithoutCallback()', 1), ('INDEX_NAME));\n', 1), ('java.sql.SQLTimeoutException;\nimport', 1), ('jobs();\n\n', 1), ('downstream.onNext(v);\n\n', 1), ('field.name);\n', 1), ('parent.setDisposable(scheduler.scheduleDirect(new', 1), ('MaybeObserver}s.\n', 1), ('.indices(indexWildcard)\n', 1), ('toSingle()', 1), ('human\n', 1), ('assertNull(Completable.complete().blockingGet());\n', 1), ('queryService.getBook("title1");\n', 1), ('com.iluwatar.hexagonal.administration;\n\nimport', 1), ('container.newTransientInstance(SimpleObject.class);\n', 1), ('out.write("Hello".getBytes()));\n', 1), ('unit));\n\n', 1), ('pid);\n', 1), ('NullPointerException()));\n', 1), ('IndexType.ALIAS));\n', 1), ('java.lang.Integer}</li>\n', 1), ('influencer.setInfluencerFieldName(BucketInfluencer.BUCKET_TIME);\n', 1), ('asyncResult5.await();\n\n', 1), ('artistInputTextField.setText(artist);\n', 1), ('delaySubscriptionCompletable()', 1), ('List<GameObject>', 1), ('w.schedule(action,', 1), ('Completable.concat(Arrays.asList(Completable.complete(),', 1), ('SimpleFluentIterable', 1), ('checkDoubleOnSubscribeFlowableToObservable(Function<Flowable<T>,', 1), ('assertFalse(list.containsAll(Arrays.asList(2,', 1), ('getAvailableLayers()', 1), ('ObjectHelper.compare(count,', 1), ('delayError,\n', 1), ('not(hasKey("es.java_class")));\n', 1), ('assertNotEquals(String.valueOf(Version.CURRENT.major),', 1), ('Maybe.concat(Flowable.just(Maybe.just(1)))\n', 1), ('<li>Count', 1), ('"SAMLRequest";\n', 1), ('MaybeSubscribeOn<T>', 1), ('rather\n', 1), ('compares', 1), ('"lotteryTestDB";\n', 1), ('(declaredField.get(video)', 1), ('Opaen"));\n', 1), ('VALID', 1), ('getDao()', 1), ('errorNoRetry();\n', 1), ('height="752"', 1), ('checkInternalOperatorNaming(String', 1), ('ObservableDelaySubscriptionOther<T,', 1), ('TestsSSLService', 1), ('halberd")});\n', 1), ('transportClient;\n', 1), ('MpscLinkedQueue<T>', 1), ('.flatMap(Functions.justFunction((Maybe<Integer>)null),\n', 1), ('.delaySubscription(Single.error(new', 1), ('AzureStorageFixture', 1), ('iteratorNotification.isOnNext())', 1), ('tickets.get(id).getPlayerDetails().getBankAccount());\n', 1), ('Nazgul.getInstance(NazgulName.UVATHA));\n', 1), ('whitelistConstructor);\n', 1), ('UserGroup}', 1), ('getFunds(sourceBackAccount);\n', 1), ('fromRunnable()', 1), ('worry', 1), ('(SocketChannel)', 1), ('com.iluwatar.prototype;\n\nimport', 1), ('org.springframework.context.support.ClassPathXmlApplicationContext;\nimport', 1), ('Exceptions.propagate(e);\n', 1), ('io.reactivex.internal.disposables.DisposableContainer;\nimport', 1), ('mine."));\n\n', 1), ('compositeList(to.errors().get(0));\n', 1), ('FlowableConcatMap<T,', 1), ('Observable<Timed<Object>>', 1), ('critical,', 1), ('.map(ParallelPerf.this);\n', 1), ('SerializedSubscriber<T>(s);\n', 1), ('maybeSubscribe1()', 1), ('(getAndSet(Long.MIN_VALUE)', 1), ('proxy;\n\n', 1), ('.append(prefix).append("-', 1), ('headers.put("es.java_class",', 1), ('so\n', 1), ('nextInt', 1), ('.thenApply(Utility::countLines);\n', 1), ('JdbcConnection', 1), ('enterPassword(String', 1), ('function8Fail()', 1), ('RxJavaPlugins.setOnFlowableSubscribe(flowable2subscriber);\n', 1), ('defaultSettings.getAsList("discovery.zen.ping.unicast.hosts").stream()\n', 1), ('SingleInternalHelperTest', 1), ('turnedOffService.getWelcomeMessage(new', 1), ('stopped;\n', 1), ('serviceJndiName', 1), ('"second', 1), ('").append(javaVersion).append("\\n")\n', 1), ('a.subscribe(new', 1), ('CompletableConcat', 1), ('PARENT_INDEX', 1), ('CollectObserver(SingleObserver<?', 1), ('AsyncTask', 1), ('mock(Observer.class);\n', 1), ('Objects.equals(fieldString,', 1), ('pp0.onError(new', 1), ('testHpPrinter()', 1), ('Event.values()[i];\n', 1), ('customers.add(customer);\n', 1), ('ScheduledThreadPoolExecutor', 1), ('sound:', 1), ('NOT_SUPPORTED;\n', 1), ('o.dispose();\n\n', 1), ('org.objectweb.asm.Type.getType(def.class).getDescriptor();\n', 1), ('++index', 1), ('PSubField(Location', 1), ('publishError(observer,', 1), ('Disposable-based', 1), ('filterFailHandlerThrows()', 1), ('(!isCancelled())', 1), ('E>(this,', 1), ('OPTION_NAMES', 1), ('dir.length', 1), ('6545242830671168775L;\n\n', 1), ('checkSingleSchedulerDoc()', 1), ('SequentialDisposable\nextends', 1), ('"age', 1), ('onCompleteCrashes()', 1), ('state.onNext(t);\n', 1), ('fieldName,', 1), ('List<NodeStats>,', 1), ('WRONG_ORDER', 1), ('delegates;\n\n', 1), ('XContentParser.Token.FIELD_NAME)', 1), ('jtFields', 1), ('UnicastProcessor<Completable>', 1), ('testVersioning()', 1), ('testInvalidLines()', 1), ('bind(String.class).annotatedWith(Names.named("applicationName")).toInstance("Simple', 1), ('request(3);\n', 1), ('assertSame(firstOliphaunt,', 1), ('17,', 1), ('(int)elements).replay().autoConnect()\n', 1), ('child2);\n\n', 1), ('TestException("onNext("', 1), ('sit.hasNext();\n', 1), ('RxJavaPlugins.onAssembly((Single<T>)source);\n', 1), ('Class<?>[method.arguments.size()', 1), ('context.size()', 1), ('verifyThread(Schedulers.io(),', 1), ('test(@NonNull', 1), ('Flowable.combineLatest(Arrays.asList(\n', 1), ('list2.add(w);\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/PublishSubject.png"', 1), ('tryScalarXMapSubscribe(Publisher<T>', 1), ('failComputationFlowableBlockingLatest()', 1), ('org.elasticsearch.transport.client.PreBuiltTransportClient;\n\nimport', 1), ('again.', 1), ('CompletableDelayTest', 1), ('write-around', 1), ('(int)elements).onErrorResumeNext(Flowable.<Integer>never())\n', 1), ('layout', 1), ('StringReader("XX:+UseG1GC");\n', 1), ('field.get();\n\n', 1), ('CompletableAwaitTest', 1), ('assertEquals(values[d].length', 1), ('eagerly.', 1), ('16));\n', 1), ('height="278"', 1), ('value(String', 1), ('tackle', 1), ('testBakeCakes()', 1), ('re-creating', 1), ('targetVersion,\n', 1), ('JdbcDataSource()', 1), ('0");\n', 1), ('greater', 1), ('Observable.create(null);\n', 1), ('probability,', 1), ('contains()', 1), ('performing', 1), ('Flowable.fromPublisher(sources).concatMapEager(SingleInternalHelper.<T>toFlowable());\n', 1), ('true),', 1), ('CountSubscriber(SingleObserver<?', 1), ('one.', 1), ('crunching\n', 1), ('MaybeDetach<T>(this));\n', 1), ('createTransportClient()', 1), ('e.getKey()', 1), ('communications', 1), ('IS\\"', 1), ('io.reactivex.internal.operators.completable.*;\nimport', 1), ('DoAfterTerminateObserver<T>(s,', 1), ('luck;\n\n', 1), ('Integer[1000000', 1), ('subscriber.onNext(2);\n', 1), ('this.unboxFrom', 1), ('ObservableAny<T>(source,', 1), ('D>\n', 1), ('context.get(operation);\n', 1), ('(limit', 1), ('blobStore.bufferSizeInBytes());\n', 1), ('QueueSubscription<U>', 1), ('Exception("barf!");\n', 1), ('subscribers[w', 1), ('TestHelper.checkDisposed(PublishSubject.create().takeUntil(Functions.alwaysFalse()));\n', 1), ('completableDocRefersToCompletableTypes()', 1), ('threadpool', 1), ('com.iluwatar.fluentinterface.fluentiterable.simple;\n\nimport', 1), ('totalElementsCount;\n', 1), ('this(THREAD_FACTORY);\n', 1), ('readable', 1), ('2).limit(elements)\n', 1), ('org.elasticsearch.xpack.core.ml.job.config.MlFilter;\n\nimport', 1), ('onCompleteCall,\n', 1), ('DwarvenCartOperator());\n', 1), ('(lm', 1), ('(eggChoice.equalsIgnoreCase("A"))', 1), ('completeAsync()', 1), ('<code>CakeTopping</code>,\n', 1), ('soldierResponse)', 1), ('BufferBoundaryObserver(BufferExactBoundaryObserver<T,', 1), ('pathSeparator', 1), ('PerfBoundedSubscriber(bh,', 1), ('ballItem.draw();\n', 1), ('IndexDeprecationChecks::indexStoreTypeCheck,\n', 1), ('docs)', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/longCount.png"', 1), ('BasicFuseableSubscriber(Subscriber<?', 1), ('trustConfigs.equals(that.trustConfigs);\n', 1), ('CertUtils.readPrivateKey(reader,', 1), ('assertEquals(Arrays.asList("A.1",', 1), ('fn.replace("//",', 1), ('Maybe.timer(2,', 1), ('negatives', 1), ('security,', 1), ('testScanFunctionThrowsAndUpstreamCompletesDoesNotResultInTwoTerminalEvents()', 1), ('shouldNotWriteToDbIfNothingToCommit()', 1), ('org.apache.isis.applib.annotation.MemberOrder;\nimport', 1), ('TestHelper.checkDisposed(Single.just(1).observeOn(Schedulers.single()));\n', 1), ('spellDao.persist(spell5);\n', 1), ('ConcurrentLinkedQueue<Runnable>', 1), ('state.hashCode()', 1), ('SingleDelayWithCompletable(SingleSource<T>', 1), ('data/objects', 1), ('concepts', 1), ('factoryWithoutDefaultObserver)', 1), ('List<O>', 1), ('assertEquals(Collections.emptyList(),', 1), ('(sourceList.isEmpty())', 1), ('observers.add(bc);\n', 1), ('-5314538511045349925L;\n\n', 1), ('set.delete(inner);\n\n', 1), ('TrampolineScheduler.instance();\n\n', 1), ('LastObserver<T>(observer,', 1), ('OBJECT_CLASS_PRESENCE_FILTER,\n', 1), ('PlayerDetails("ian@google.com",', 1), ('UNICAST_HOST_PREFIX', 1), ('SingleFlatMap(SingleSource<?', 1), ('service.saveNewLayer(layer1);\n\n', 1), ('repositoryDir)', 1), ('CompletableObservable', 1), ('Field}s)', 1), ('lastColon);\n', 1), ('List<PartyMember>', 1), ('Objects.requireNonNull(contentType);\n', 1), ('fileSeparator', 1), ('functions.stream()\n', 1), ('readers",', 1), ('painlessConstructor);\n', 1), ('topping\n', 1), ('notifications.ticketSubmitted(ticket.getPlayerDetails());\n', 1), ('java.util.concurrent.atomic.AtomicBoolean;\n\nclass', 1), ('getter,', 1), ('attributeNames()', 1), ('pendingAudio', 1), ('SubscriptionArbiterTest', 1), ('<strong>terminal', 1), ('subscribeHookCrashes()', 1), ('GameObject\n', 1), ('redoStack', 1), ('V>,', 1), ('Sleep', 1), ('-98,', 1), ('specification):\n', 1), ('initial)', 1), ('"+3635635"));\n', 1), ('WindowExactSizeTckTest', 1), ('views', 1), ('"timeout_exception":\n', 1), ('instanceField', 1), ('ReduceObserver<T>(observer,', 1), ('error);\n\n', 1), ('ro.onComplete();\n\n', 1), ('(rest.compareAndSet(current,', 1), ('prefix-count}.\n', 1), ('dispatcher.menuItemSelected(MenuItem.HOME);\n', 1), ('printLogo(CliTerminal', 1), ('cfg.authPass();\n', 1), ('FlowableConcatMap(Flowable<T>', 1), ('SingleTimer(long', 1), ("jvm's", 1), ('ObjectHelper.requireNonNull(resumeSingleInCaseOfError,', 1), ('"335-886",', 1), ('setHead(Node', 1), ('sequentialDelayError()', 1), ('completableComplete()', 1), ('Functions.emptyConsumer()\n', 1), ('database.getCollection(accountsCollectionName);\n', 1), ('rxThreads)', 1), ('org.mockito.Mockito.when;\n\n\npublic', 1), ('(!compareAndSet(1,', 1), ('testElementAtOrDefaultWithIndexOutOfBoundsFlowable()', 1), ('testWaitingSomeTimeForPromiseToBeFulfilled()', 1), ('getRequestDescription();\n', 1), ('com.iluwatar.featuretoggle.user.User;\n\nimport', 1), ('database");\n', 1), ('con.setUseCaches(false);\n\n', 1), ('Observable})\n', 1), ('failComputationObservableBlockingSubscribe()', 1), ('org.hamcrest.Matchers.hasEntry;\nimport', 1), ('24,', 1), ('assertNull(Completable.complete().blockingGet(1,', 1), ('definitive', 1), ('blob', 1), ('BOILING', 1), ('settingNames;\n', 1), ('tmpDir)', 1), ('pid:', 1), ('available=%d', 1), ('DelaySubscriptionTckTest()', 1), ('ParallelFilterConditionalSubscriber(ConditionalSubscriber<?', 1), ('Objects.requireNonNull(processFactory);\n', 1), ('completable2completable', 1), ('otherOnFire', 1), ('crashOnIterator;\n\n', 1), ('State(int', 1), ('whitelistMethod.painlessReturnTypeName', 1), ('accounts.get(accountNo);\n', 1), ('getBottomShelf()', 1), ('penalty', 1), ('MaybeSubscribeOn<T>(this,', 1), ('Character(Type.WARRIOR,', 1), ('uriPath.getHost(),', 1), ('ShareTckTest', 1), ('spellbook4.addSpell(spell12);\n', 1), ('FlowableMergeWithMaybeTest', 1), ('worker.schedulePeriodically(new', 1), ('TestMaybe<Integer>();\n', 1), ('"AuthorDTO', 1), ('<code>Integer.MAX_VALUE', 1), ('Executor-based', 1), ('failure.type()', 1), ('RxJavaPlugins.setOnMaybeSubscribe(maybe2observer);\n', 1), ('AmbInnerObserver<T>', 1), ('error(Callable<?', 1), ('applied.\n', 1), ('SingleFlatMapFlowableTckTest', 1), ("we'll", 1), ('Document());\n', 1), ('AsyncSubscription(Subscriber<?', 1), ('sourcesIterable,\n', 1), ('DelayErrorInnerObserver<R>(actual,', 1), ('AmbMaybeObserver<T>\n', 1), ('SlidingDoor();', 1), ('mergeDelayError2ErrorFirst()', 1), ('Obtain', 1), ('(!c)', 1), ('typeMustBe(Expression', 1), ('testElementAtWithIndexOutOfBoundsFlowable()', 1), ('StudentRepository}\n', 1), ('country);\n', 1), ('dtm;\n', 1), ('java.security.SecurityPermission;\nimport', 1), ('DateTimeFormatterTimestampConverter(DateTimeFormatter', 1), ('R>((ConditionalSubscriber<?', 1), ('s.onSuccess(ObjectHelper.equals(values[0],', 1), ('TimeoutMainObserver<T>(s,', 1), ('classpaths', 1), ('IndexDeprecationChecks::delimitedPayloadFilterCheck));\n\n}\n', 1), ('userId=\'"', 1), ('fromCallable(@NonNull', 1), ('ExpressionTest<PlusExpression>', 1), ('wizardsWithSpellbook)', 1), ('Method("<init>",', 1), ('Single.just(1).delay(1,', 1), ('io.reactivex.*;\n\n/**\n', 1), ('spell.setSpellbook(this);\n', 1), ('copyToList(Iterable<E>', 1), ('toMaybe()', 1), ('ArcherView(),', 1), ('asyncResult4', 1), ('implementations.\n', 1), ('innerError(InnerQueuedObserver<R>', 1), ('untilCompletableMainComplete()', 1), ('java.io.File;\n\nimport', 1), ('other.intelligence)', 1), ('sourceCount;\n', 1), ('futile,', 1), ('TIMEOUT(SQLTimeoutException::new),\n', 1), ('CPUs)\n', 1), ('org.springframework.stereotype.Service;\nimport', 1), ('checkFiles()', 1), ('Single.just(15)\n', 1), ('connectableObservable;\n', 1), ('wizardDao.persist(wizard1);\n', 1), ('"/").concat(".class");\n', 1), ('AndThenPublisherSubscriber(Subscriber<?', 1), ('.bind(new', 1), ('java.util.HashSet.class.getName(),\n', 1), ('dtoUser', 1), ('replacement', 1), ('1).iterator();\n', 1), ('consoleLoggerModule', 1), ('impl.implies(permission);\n', 1), ('3240706908776709697L;\n\n', 1), ('included.\n', 1), ('upperBound', 1), ('m.value;\n', 1), ('demand.', 1), ('m.javadoc', 1), ('org.elasticsearch.xpack.watcher.notification.email.attachment;\n\nimport', 1), ('"B.1",', 1), ('PerfAsyncConsumer(bh);\n', 1), ('PartyMember>', 1), ('Flowable.fromArray(ints);\n\n', 1), ('Objects.requireNonNull(groupConfigPath);\n', 1), ('MergeWithCompletableTckTest', 1), ('.indices(INDEX)\n', 1), ('WizardDaoImpl(),', 1), ('java.nio.channels.SelectionKey;\n\nimport', 1), ('Publisher<Downstream>', 1), ('users,', 1), ('https://github.com/elastic/x-pack-elasticsearch/issues/3810")\n', 1), ('checkDisposed(Observable<?>', 1), ('DTO:"', 1), ('getApi()', 1), ('com.iluwatar.abstractdocument.domain.Part;\nimport', 1), ('readable.\n', 1), ('BackpressureHelper.addCap(Long.MAX_VALUE', 1), ('(path', 1), ('loop(times', 1), ('ObservableThrottleFirstTimed<T>', 1), ('Functions.justFunction(Maybe.never()),', 1), ('-99);\n\n', 1), ('mutual', 1), ('c.onError(new', 1), ('FlowableDistinct<T,', 1), ('BackpressureLatestSubscriber<T>(s));\n', 1), ('CachingPolicy\n', 1), ('newEvent', 1), ('emptyConsumerToString()', 1), ('basicDataSource;\n', 1), ('subscriber.onSubscribe(s2);\n\n', 1), ('FlowableRefCount<T>(this));\n', 1), ('ObservableMergeWithSingle(Observable<T>', 1), ('assertEquals(original.getNumbers(),', 1), ('strBody,', 1), ('Jamie', 1), ('LoggerFactory.getLogger(ProductInventoryClientImpl.class);\n\n', 1), ('observer.onSubscribe(sd);\n', 1), ('LIMIT', 1), ('DisposableHelper.dispose(ref);\n\n', 1), ('HasPrice,', 1), ('that.trustStorePassword', 1), ('f.map(new', 1), ('getter;\n\n', 1), ('certificateChain', 1), ('baseIndex);\n\n', 1), ('testSetup()', 1), ('JvmOptionsParser', 1), ('java.util.HashMap}</li>\n', 1), ('AtomicReference<Producer>', 1), ('filterFailWithError()', 1), ('SingleMap<T,', 1), ('org.springframework.orm.jpa.JpaTransactionManager;\nimport', 1), ('Mammoth#toString()}', 1), ('Class.forName(whitelistStruct.javaClassName,', 1), ('io.reactivex.internal.schedulers.NonBlockingThread;\nimport', 1), ('signedContentLen', 1), ('TrampolineApp.loop(10,', 1), ('notification.\n', 1), ('overrideInitNewThreadScheduler()', 1), ('secondObservable);\n\n', 1), ('sa.drainLoop();\n', 1), ('CombineLatestArrayDelayErrorTckTest', 1), ('assertTrue(sub.isUnsubscribed());\n', 1), ('stopped;\n\n', 1), ('charFrequency)', 1), ('cakeBakingService.bakeNewCake(cake2);\n', 1), ('com.google.common.io.Resources;\nimport', 1), ('CommandServiceImpl();\n\n', 1), ('SingleElementSubscriber(MaybeObserver<?', 1), ('AbstractStreamableTestCase<Response>', 1), ('accountNoFrom', 1), ('file.getAbsolutePath());\n', 1), ('WithLatestFromSubscriber(Subscriber<?', 1), ('service.dummyCustomerApi(tenant);\n//', 1), ('TestingDeferredScalarSubscriber(Subscriber<?', 1), ('verify(s).cancel();\n', 1), ('Interactive', 1), ('.fromCopyOf(integerList)\n', 1), ('onAfterTerminatedCrash()', 1), ('//This', 1), ('consumers/functions', 1), ('toBeRemoved', 1), ('servant.giveWine(royalty);\n', 1), ('whilePredicateThrows()', 1), ('Delay(CompositeDisposable', 1), ('consumerNode;\n\n', 1), ('shouldNotEmitUntilAfterSubscription()', 1), ('ProjectileStrategy(),\n', 1), ('milliseconds\n', 1), ('status\n', 1), ('List<PrivateKey>', 1), ('IO})\n', 1), ('user.lastName)', 1), ('System.out.println(line);\n', 1), ('3).takeUntil(predicate).subscribe(o);\n\n', 1), ('java.nio.file.StandardOpenOption;\n\n/**\n', 1), ('assumeTrue("could', 1), ('reduceIntsFlowable()', 1), ('Tika(PARSER_INSTANCE.getDetector(),', 1), ('1</code>.\n', 1), ('manifest.getMainAttributes().getValue("X-Compile-Target-JDK");\n', 1), ('TakeUntilMainObserver(SingleObserver<?', 1), ('File("fish2.out");\n', 1), ('message.getClass()', 1), ('super(cause);\n', 1), ('Files.list(unzipDir).iterator();\n', 1), ('FlowableBuffer(Flowable<T>', 1), ('q.add(NotificationLite.disposable(s));\n', 1), ('AbstractModule()', 1), ('LotteryTicketCheckResult(LotteryTicketCheckResult.CheckResult.WIN_PRIZE,', 1), ('c.onNext(1);\n\n', 1), ('instead,', 1), ('sa.missedRequested.set(Long.MAX_VALUE);\n\n', 1), ('equalTo(invalidLines));\n', 1), ('sourceCode.indexOf("}",', 1), ('FlowableThrottleFirstTimed(Flowable<T>', 1), ('CountDownLatch(max', 1), ('issued.', 1), ('LinkedHashSet<>(Arrays.asList(HTTP_PROXY,', 1), ('setGrade(final', 1), ('mostRecentObserver', 1), ('CompositeException(list));\n', 1), ('alias\n', 1), ('strip', 1), ('transportClientMode;\n\n', 1), ('getClass().getClassLoader();\n', 1), ('.assertSubscribed().assertComplete()\n', 1), ('ownerStruct.staticMembers.get(whitelistField.javaFieldName);\n\n', 1), ('numberOfSongsNumberField', 1), ('IllegalArgumentException("value");\n', 1), ('Executors.newSingleThreadExecutor();\n\n', 1), ('f.setCancellable(new', 1), ('graph', 1), ('guests.add(k);\n', 1), ('actual.onNext(p);\n', 1), ('"A",', 1), ('Completable.fromSingle(Single.just(1))\n', 1), ('addValue(value);\n\n', 1), ('dir(args[0]);\n', 1), ('veryEnd)', 1), ('inUse.size());\n', 1), ('cfg', 1), ('this.func', 1), ('assertFalse(s.isCancelled());\n', 1), ('ObservableCountSingle<T>', 1), ('checkFlowableSchedulerDoc()', 1), ('onDrop));\n', 1), ('subject1.onSuccess(1);\n', 1), ('initCounters();\n', 1), ('Functions.REQUEST_MAX);\n\n', 1), ('hell...");\n', 1), ('now(TimeUnit.MILLISECONDS)', 1), ('InputStreamReader(url.openStream());\n', 1), ('StudentRepository(new', 1), ('observableNoSubscriber()', 1), ('FlowableIntervalRange', 1), ('127.0.0.1"),', 1), ('AbstractDocument(Map<String,', 1), ('testPainlessExplainErrorSerialization()', 1), ('userAccount2.setUserName("Jane', 1), ('SimpleFluentIterable<>(iterable);\n', 1), ('sun.boot.class.path,', 1), ('impl.getMethod(method.method.getName(),', 1), ('GroupByTckTest', 1), ('TestHelper.checkDisposed(pp.singleElement().delay(100,', 1), ('this.findPersonApiHandler', 1), ('actualDetails);\n', 1), ('nextObserver', 1), ('FlowableConcatMapSingleTest', 1), ('getStatus.\n', 1), ('t2.start();\n\n', 1), ('Segregation.', 1), ('System.out.println(")");\n\n', 1), ('testOpenClose()', 1), ('equal",', 1), ('(album-page.html)\n', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().singleElement().doAfterSuccess(afterSuccess));\n', 1), ('LoggerFactory.getLogger(MuteTest.class);\n\n', 1), ('java.time.temporal.TemporalAccessor;\n\n/**\n', 1), ('callbacks,', 1), ('flowableSingle()', 1), ('LOGGER.info("next={}",', 1), ('uriQuery', 1), ('ways:\n', 1), ('FindCustomer', 1), ('ImmediateThinScheduler.INSTANCE.createWorker().schedulePeriodically(Functions.EMPTY_RUNNABLE,', 1), ('Throws', 1), ('overloads', 1), ('AllTckTest', 1), ('MaybeUsing(Callable<?', 1), ('"@"', 1), ('AmbTckTest', 1), ('onErrorOnErrorCrashConditional()', 1), ('K>(bufferSize,', 1), ('TestResourceObserver<T>', 1), ('MongoTicketRepository(String', 1), ('generateBucket(Date', 1), ('commitInsert()', 1), ('SingleObserver&lt;T&gt;,', 1), ('ticketsCollection.insertOne(doc);\n', 1), ('augmentedOffset', 1), ('assemblyTrackingSingle()', 1), ('RxJavaPlugins.onAssembly(cos));\n\n', 1), ('org.apache.isis.applib.annotation.BookmarkPolicy;\nimport', 1), ('defined.");\n', 1), ('TestException()).subscribe(Functions.emptyConsumer(),', 1), ('DisposableHelper.values().length);\n', 1), ('spells\n', 1), ('(Thread.currentThread().isInterrupted())', 1), ('Logger.getLogger(StatusMember.class.getName());\n\n', 1), ('successIsDisposed()', 1), ('Collections.unmodifiableList(Objects.requireNonNull(whitelistMethods));\n', 1), ('assertFalse(cakeInfo.cakeLayerInfos.isEmpty());\n', 1), ('subscribers.lazySet(EMPTY);\n', 1), ('RxJavaPlugins.lockdown();\n', 1), ('sa.missedProduced.set(2);\n\n', 1), ('1.8,', 1), ('timer)', 1), ('NameStep,', 1), ('SpscArrayQueue<Integer>(8);\n', 1), ('(isEnhanced())', 1), ('assertNotNull(DisposableHelper.valueOf("DISPOSED"));\n', 1), ('FlowableCountSingle<T>', 1), ('emitter.toString();\n', 1), ('causalChainContains(final', 1), ('Random(1);\n', 1), ('FlowableTimerTest', 1), ('userAccount.getAdditionalInfo())),\n', 1), ('MaybeDoOnEventTest', 1), ('assertEquals("level1_a",', 1), ('silently', 1), ('!functionName.equals(that.functionName)', 1), ('FlowableAll<T>(source,', 1), ('"1.8";\n', 1), ('initially', 1), ('"FlowableElementAtSingle",\n', 1), ('doOnTerminateComplete()', 1), ('processors', 1), ('solutions', 1), ('&lt;filter-class&gt;org.apache.wicket.protocol.http.WicketFilter&lt;/filter-class&gt;\n', 1), ('FlowableMapNotification(\n', 1), ('14).replace(".java",', 1), ('PARAMETER})\n@Retention(RUNTIME)\n@Documented\npublic', 1), ('when(spellbookDao.findByName(eq(bookname))).thenReturn(spellbook);\n\n', 1), ('"1.7.0_80",', 1), ('TestSelectionKey', 1), ('exec.submit(periodicWrapper);\n', 1), ('Maybe.ambArray(new', 1), ('onSubscribe,', 1), ('Queen', 1), ('subscribe(parallel,', 1), ('handler",', 1), ('ArrayList<Integer>(Flowable.bufferSize()', 1), ('dateValue;', 1), ('Mammoth().toString();\n', 1), ('"custom";\n\n', 1), ('FlowableSwitchMapCompletablePerf', 1), ('com.google.gson.JsonParser;\nimport', 1), ('whitelistStructs)', 1), ('this.sequenceId', 1), ('doOnDisposeSuccess()', 1), ('ConcatMapSingleSubscriber(Subscriber<?', 1), ('served\n', 1), ('UnsupportedOperationExcetpion.\n', 1), ('7917814472626990048L;\n\n', 1), ('CollectSubscriber(SingleObserver<?', 1), ('.setSource("foo",', 1), ('THREAD_COUNT;', 1), ('"}', 1), ('SleepingRunnable(action,', 1), ('descriptor.\n', 1), ('CompletableCreateTest', 1), ('(menuItem)', 1), ('VALUE', 1), ('Setup', 1), ('completableSupplier;\n\n', 1), ('readLines(getClass(),', 1), ('transformedList);\n\n\n', 1), ('createExecutor(threadFactory);\n', 1), ('by:', 1), ('SubscribeOnObserver', 1), ('fusedFilterBecomesEmpty()', 1), ('Jimfs.newFileSystem(jimFsConfiguration))', 1), ('testListen()', 1), ('lowering', 1), ('"Connection', 1), ('assertBadRequestReported(Publisher<?>', 1), ('"addressLineTwo")\n', 1), ('maybeSourceAsSs()', 1), ('promiseIsFulfilledWithTheResultantValueOfExecutingTheTask()', 1), ('computations.', 1), ('commandService.authorNameUpdated("username2",', 1), ('10000000,', 1), ('v2);\n\n', 1), ('errorAcceptThrows()', 1), ('listener.onResponse(composite.stream().flatMap(Set::stream).collect(Collectors.toSet())),', 1), ('MaybeLift<T,', 1), ('Blue', 1), ('SHUTDOWN;\n', 1), ('controlled', 1), ('CakeToppingInfo\n', 1), ('testAggregateAsIntSumResultSelectorThrowsObservable()', 1), ('testGiveCompliments()', 1), ('subscriber.assertResult("Hello', 1), ('channel.setReactor(this);\n', 1), ('promptly.\n', 1), ('-10', 1), ('format,', 1), ('assertFalse(q.offer(9,', 1), ('mockedVisitor', 1), ('resultSet));\n', 1), ('org.elasticsearch.xpack.sql.cli.Cli;\nimport', 1), ('verify(observer).onNext("test_value");\n', 1), ('UnrecoverableKeyException,\n', 1), ('this.processFactory', 1), ('"test");\n', 1), ('email.equals(other.getEmail())', 1), ('1.000', 1), ('target;\n', 1), ('propsMap.remove("extended.plugins");\n', 1), ('"%d:-XX:+UseG1GC\\n8-%d:-XX:+AggressiveOpts",\n', 1), ('SingleDelay<T>', 1), ('"Dragon",', 1), ('clone.getClass());\n', 1), ('blockingFirstTimeout2()', 1), ('ensureOpen()', 1), ('Operator>', 1), ('priority);\n', 1), ('Single.just(4),\n', 1), ('delegate);\n', 1), ('(eventPool.size()', 1), ('predict', 1), ('ObjectHelper.equals(unit,', 1), ('last();\n\n', 1), ('that.keyPath', 1), ('eventManager.statusOfAllEvents();\n', 1), ('MaybeUnsafeCreate<T>(onSubscribe));\n', 1), ('SearchScope.BASE,', 1), ('newEventId', 1), ('submitMsg(Message', 1), ('opens', 1), ('tool/framework', 1), ('sequentialDelayError(int', 1), ('replaceChildren(List<LogicalPlan>', 1), ('assertEquals(book.getId(),', 1), ('alias).\n', 1), ('mainCompletesWhileInnerActive()', 1), ('StandardCharsets.UTF_8))', 1), ('th', 1), ('sourceCode.indexOf("@SuppressWarnings({",', 1), ('TestHelper.checkDisposed(Maybe.create(new', 1), ('fruit.remove(0);\n', 1), ('grade;\n\n\n', 1), ('getTopping()', 1), ('StoreTrustConfig(String', 1), ('bind(String.class).annotatedWith(Names.named("welcomeMessage")).toInstance(\n', 1), ('SchedulerPoolFactory.PURGE_PERIOD_SECONDS', 1), ("'h'))));\n", 1), ('customerThree', 1), ('World()', 1), ('completable;\n\n', 1), ('download', 1), ('operator);\n', 1), ('"login.html";\n', 1), ('whitelistField', 1), ('NSA', 1), ('listOfCacheData;\n', 1), ('"+98752345"));\n', 1), ('keyPassword.getChars());\n', 1), ('getActiveNodesForCurrentCluster().remove(this);\n', 1), ('size(),', 1), ('NullPointerException("Test', 1), ('(storageResponse.body.length', 1), ('parent.innerComplete(index);\n', 1), ('newWebRequest(HttpServletRequest', 1), ('wizardsWithSpell)', 1), ('xs.toList().toObservable();\n', 1), ('(executor.compareAndSet(current,', 1), ('CompletableMergeIterable', 1), ('DisposeOnCancel(d));\n', 1), ('InputStream}', 1), ('writerLock', 1), ('CompletableMergeSubscriber(CompletableObserver', 1), ('structures', 1), ('toFlowableEnum()', 1), ('(write', 1), ('PriorityBlockingQueue<TimedRunnable>();\n\n', 1), ('trustStoreAlgorithm=["', 1), ('RuntimeException("Insufficient', 1), ('ObservableInterval(long', 1), ('Observable<Timed<Object>>>()', 1), ('zip9()', 1), ('whitelistMethod.painlessParameterTypeNames.get(parameterCount);\n\n', 1), ('watchId', 1), ('subscription;\n\n', 1), ('filestore', 1), ('19))));\n', 1), ('whileErrorThrows()', 1), ('mockObserver()', 1), ('curr.tryAcquireSlot();\n', 1), ('Method)\n', 1), ('FloatType;\n', 1), ('io.reactivex.internal.operators.mixed.ObservableConcatMapSingle.ConcatMapSingleMainObserver;\nimport', 1), ('listAll', 1), ('(!exp.nullable())', 1), ('path.toAbsolutePath())\n', 1), ('Collections.sort(typeNames);\n', 1), ('DatagramChannel.\n', 1), ('CacheDisposable<T>', 1), ('MaybeDefer<T>(maybeSupplier));\n', 1), ('executor.getAndSet(SHUTDOWN);\n', 1), ('Constructors', 1), ('assertNotNull(cakeInfo.cakeToppingInfo);\n', 1), ('user.isActive(),\n', 1), ('tempFile);\n', 1), ('href="https://github.com/reactive-streams/reactive-streams-jvm#reactive-streams">Reactive-Streams', 1), ('MaybeCallbackObserver<T>(onSuccess,', 1), ('cfg.networkTimeout());\n\n', 1), ('-6076952298809384986L;\n\n', 1), ('spellbookDao.persist(spellbook1);\n', 1), ('node.\n', 1), ('java.sql.SQLRecoverableException;\nimport', 1), ('concatArray(MaybeSource<?', 1), ('covers.\n', 1), ('FUSED_READY;\n', 1), ('parent.onCompleteCall.run();\n', 1), ('testNoExecutionFromThread()', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/doOnComplete.m.png"', 1), ('"FlowableReduceWithSingle",\n', 1), ('innerExceptions.get(2);\n', 1), ('doOnComplete(@NonNull', 1), ('@Inject}\n', 1), ('Object>>)', 1), ('installation?', 1), ('api/client', 1), ('org.elasticsearch.xpack.core.ssl.CertUtils;\nimport', 1), ('SingleFlatMapObservable(SingleSource<T>', 1), ('ProtocolViolationException("More', 1), ('addAll(Collection<?', 1), ('MergeWithMaybeEmptyTckTest', 1), ('DateFormatCallable(String', 1), ('aFile.delete();\n', 1), ('"numbers="', 1), ('FS', 1), ('Blackhole.\n', 1), ('ObservableEmpty();\n\n', 1), ('queue.offer(v);\n', 1), ('readAllLines(f);\n\n', 1), ('single2single', 1), ('FNAME', 1), ('databaseFileName', 1), ('register(Student', 1), ('Object.class,', 1), ('javaFieldName;\n\n', 1), ('Executor\n', 1), ('.switchMapMaybe(Functions.justFunction(Maybe.never()));\n', 1), ('method.getValue();\n\n', 1), ('actionCaptor.getAllValues();\n', 1), ('Currently,', 1), ('assertNotNull(level3);\n', 1), ('failComputationObservableBlockingNext()', 1), ('BufferOpenSubscriber<Open>\n', 1), ('ridiculous', 1), ('e.serialize().onError(null);\n', 1), ('joda-time\n', 1), ('prop.load(inputStream);\n', 1), ('functionalMethod;\n\n', 1), ('testFirstEmptyCollection()', 1), ('doPrivilegedIOException(final', 1), ('testConfuseTarget()', 1), ('"1.7.0.80"};\n', 1), ('allBooks', 1), ('entities.stream().map(this::convertFromEntity).collect(Collectors.toList());\n', 1), ('disposerThrows()', 1), ('whitelistConstructor.origin;\n', 1), ('supports\n', 1), ('service).', 1), ('r.subscribe(observer);\n', 1), ('").append(hasNativeController).append("\\n")\n', 1), ('javaMethodHandleGetter,', 1), ('ObjectHelper.requireNonNull(onCompleteSupplier,', 1), ('Im', 1), ('Wizard("Xuban', 1), ('out.writeException(e);\n', 1), ('"source");\n', 1), ('clazz.indexOf("/io/reactivex/");\n', 1), ('numChecksPassed;\n', 1), ('toEpochSeconds(String', 1), ('purgeEnabled)', 1), ('wireTransfers.setFunds(PLAYERS.get(i).getBankAccount(),\n', 1), ('p.setup();\n\n', 1), ('affecting', 1), ('\'@\'")\n', 1), ('onSubscribe()}.\n', 1), ('request(1);\n', 1), ('observer.update(null,', 1), ('studentToBeDeleted.getName()', 1), ('allCustomers.forEach(customer', 1), ("'#'", 1), ('"Danson");\n', 1), ('Character();\n', 1), ('bar', 1), ('Files.walkFileTree(root,', 1), ('ObservableTimeoutTimed.FallbackObserver<T>(actual,', 1), ('createNewThreadScheduler()', 1), ('fighterClass', 1), ('verify(store,', 1), ('int.class', 1), ('connection.prepareStatement("INSERT', 1), ('remove(end);\n', 1), ('key.channel()).receive(buffer);\n\n', 1), ('client.prepareIndex(index,', 1), ('making', 1), ('mergeArrayInnerErrorRace()', 1), ('1024;\n\n', 1), ('assertTrue(nonExistingFile.exists());\n', 1), ('LimitSubscriber<T>(s,', 1), ('cd.assertError(NullPointerException.class);\n', 1), ('containers.\n', 1), ('StreamSupport.stream(new', 1), ('Enumeration<JarEntry>', 1), ('Files.createTempFile(baseDir,', 1), ('QUANTILES_STATE);\n\n', 1), ('connection.createStatement();\n', 1), ('org.hamcrest.Matchers;\n\npublic', 1), ('https://github.com/JCTools/JCTools/blob/master/LICENSE\n', 1), ('failComputationObservableBlockingLast()', 1), ('DefaultTableModel', 1), ('ConsumeAction', 1), ('Result[4];\n', 1), ('Flowable.sequenceEqual(\n', 1), ('SamlUtils.toString(XMLObjectSupport.marshall(message));\n', 1), ('address.addressLineTwo', 1), ('props::getProperty));\n', 1), ('subscribers.poll())', 1), ('UncheckedIOException(inner);\n', 1), ('source2.subscribe(second);\n', 1), ('list,\n', 1), ('WindowOperation(UnicastSubject<T>', 1), ('CACHE_SIZE', 1), ('DEFAULT_COUNTERS_COLLECTION);\n', 1), ('"comparer', 1), ('types.get(indexOf);\n', 1), ('OBJECT_MAPPER.writeValueAsString(body);\n', 1), ('agreements,\n', 1), ('testOnStartCalledOnceViaUnsafeSubscribe()', 1), ('sourceCode.indexOf("{@code', 1), ('flowSingle(Blackhole', 1), ('MaybeCount<T>(this));\n', 1), ('innerNext(WindowBoundaryInnerObserver<T,', 1), ('testSimpleExample()', 1), ('step,', 1), ('cakes,', 1), ('weekday', 1), ('Application\n', 1), ('io.reactivex.schedulers.Schedulers;\n\n@BenchmarkMode(Mode.Throughput)\n@OutputTimeUnit(TimeUnit.SECONDS)\n@State(Scope.Thread)\npublic', 1), ('hostname:', 1), ('out.writeString(javaVersion);\n', 1), ('io.reactivex.Scheduler#createWorker()}', 1), ('times(1)).onNext(4);\n', 1), ('.fighterClass("aztec")\n', 1), ('ConcurrentLinkedQueue<T>', 1), ('impl.add(permission);\n', 1), ('Collect', 1), ('(javadocStart', 1), ('OnSuccess(T', 1), ('this.onAfterNext', 1), ('"name1",', 1), ('Observable.empty().takeUntil(new', 1), ('ObjectHelper.requireNonNull(resumeFunctionInCaseOfError,', 1), ('org.elasticsearch.discovery.file;\n\nimport', 1), ("'{'", 1), ('arguments[i', 1), ('stringPredicate.test(type.cast(item));\n', 1), ('"Octopus",', 1), ('Servant("Jenkins");\n', 1), ('SerialDisposable.\n', 1), ('ObservablePublishSelector(final', 1), ('groupConfigPath.toString(),', 1), ('readSecret(String', 1), ('Hibernate', 1), ('createComputationScheduler()', 1), ('IllegalStateException)', 1), ('Base64.getEncoder().encode(CryptUtils.writeEncryptedPublicKey(publicKey))', 1), ('testNestedTrampolineWithUnsubscribe()', 1), ('dao.add(new', 1), ('method".getBytes(StandardCharsets.UTF_8));\n', 1), ('Given', 1), ('InnerQueuedObserver<T>\nextends', 1), ('height="236"', 1), ('UnsubscribeOnMaybeObserver<T>(observer,', 1), ('s),', 1), ('"null,', 1), ('node...\n\n', 1), ('OptionSet', 1), ('MockSecureSettings', 1), ('supplier::get);\n', 1), ('org.apache.isis.core.unittestsupport.jmocking.JUnitRuleMockery2;\nimport', 1), ('acquireForReaders()', 1), ('(SlidingDoor', 1), ('LoggerFactory.getLogger(NioReactor.class);\n\n', 1), ('to.assertValue(0L);\n\n', 1), ('javaInterfaceLookup', 1), ('q.peek().intValue());\n', 1), ('testFind()', 1), ('org.mockito.stubbing.Answer;\n\npublic', 1), ('TestSubscriber<Disposable>(observer);\n\n', 1), ('repeatWhen(Function<?', 1), ('tf.toString());\n\n', 1), ('UnsubscribeSubscriber(Subscriber<?', 1), ('Completable.create(null);\n', 1), ('behaviorProcessorAsBs()', 1), ('(!m.signature.contains("Observable")\n', 1), ('*/\n@Retention(RetentionPolicy.CLASS)\n@Documented\n@Target({ElementType.METHOD,', 1), ('response.getMappings();\n\n', 1), ('expectThrows(RuntimeException.class,', 1), ('sourceList.peek();\n', 1), ('object;\n', 1), ('in.isReadOnly();\n', 1), ('!awsRequestId.equals(that.awsRequestId)', 1), ('CallsCount.reset();\n', 1), ('.append(name)\n', 1), ('TestSubscriber}', 1), ('NetworkService(Collections.emptyList());\n', 1), ('getPublicKeyFingerprint(byte[]', 1), ('singletonInstanceMethod)', 1), ('parent.task.replace(scheduler.scheduleDirect(new', 1), ('this.explicit', 1), ('}.reduce(new', 1), ('handling\n', 1), ('actualFieldsDetails);\n', 1), ('Tests\n', 1), ('BufferBoundaryTckTest', 1), ('trampoline(this);\n', 1), ('testActualWrite()', 1), ('<em>Note:</em>', 1), ('charProto.set(Stats.ATTACK_POWER,', 1), ('ReferenceDisposable<Runnable>', 1), ('Messages', 1), ('CakeLayerInfo(next.getId(),', 1), ('GeneralNames', 1), ('Collections.newSetFromMap(ConcurrentCollections.<V,', 1), ('com.google.common.base.Throwables;\nimport', 1), ('ExceptionHelper.wrapOrThrow(errors[1]);\n', 1), ('IsEmptyMaybeObserver<T>\n', 1), ('2).map(new', 1), ('reentrantNoOverflowHidden()', 1), ('AmbSingleObserver(SingleObserver<?', 1), ('geoIpConfigDirectory,', 1), ('multi-producer', 1), ('}).onTerminateDetach().subscribe(ts);\n\n', 1), ('(\\0', 1), ('modules.iterator();\n', 1), ('defaultParam("number",', 1), ('createMessage("you",', 1), ('t5', 1), ('structs.\n', 1), ('(!undoStack.isEmpty())', 1), ('expectedStealMethod', 1), ('other.type);\n', 1), ('ObservableScanTest', 1), ('assertNull(RxJavaPlugins.onAssembly((Single)null));\n\n', 1), ('TestMultiValueAggregation(String', 1), ('SingleFlatMap<SingleSource<?', 1), ('Wizard(String', 1), ('"observableSource', 1), ('mergeDelayError3()', 1), ('NOPMD\n\n', 1), ('FlowableAny<T>', 1), ('exec.executeAll();\n', 1), ('final\\r\\n");\n', 1), ('filename,', 1), ('org.h2.jdbcx.JdbcDataSource;\n\n/**\n', 1), ('typeList.add(parameter.getType());\n', 1), ('getAttachments()', 1), ('ObservableOnErrorNext<T>', 1), ('ObservableTimeoutTimed(Observable<T>', 1), ('#getValue()}.\n', 1), ('Schedulers.IoHolder());\n\n', 1), ('lazy-loaded', 1), ('calms', 1), ('setFirst(Future<?>', 1), ('OS,', 1), ('Functions.toFunction(function6);\n', 1), ('Spell("Enchant', 1), ('GeneratorSubscription(Subscriber<?', 1), ('setCity(String', 1), ('doc.put("email",', 1), ('RuntimeException(new', 1), ('FlowableElementAtSingle<T>', 1), ('jsonProcessingException)', 1), ('LotteryTicketId(),\n', 1), ('IOException("Socket', 1), ('.toObservable().subscribe(new', 1), ('notifyObservers(Event', 1), ('getAuthenticationFailureHandler()', 1), ('amd.alias();\n', 1), ('observableSource)', 1), ('older\n', 1), ('errorHandler1', 1), ('!addressLineOne.equals(address.addressLineOne)', 1), ('-4361286194466301354L;\n\n', 1), ('after(sc);\n', 1), ('SingleInternalHelper', 1), ('@}ScopeAnnotation\n', 1), ('LocalDate.now(defaultTimezone).getYear())\n', 1), ('vers', 1), ('isolated', 1), ('Formatted', 1), ('unicastHosts);\n', 1), ('MergeInnerObserver', 1), ('lambdaInfo.setFunctionName(context.getFunctionName());\n', 1), ('java.util.Arrays}</li>\n', 1), ('stopLatch.await();\n', 1), ('m.setAccessible(true);\n\n', 1), ('"null";\n', 1), ('deadlock");\n', 1), ('RxJavaPlugins.initIoScheduler(new', 1), ('[me]', 1), ('comparerCrash()', 1), ('evictedGroup.onComplete();\n', 1), ('service.checkTicketForPrize(id,', 1), ('fair.\n', 1), ('org.springframework.beans.factory.annotation.Autowired;\nimport', 1), ('(AbstractNioChannel)', 1), ('isEnhanced;\n\n', 1), ('assertEquals("123-123",', 1), ('(!gate', 1), ('IvoryTower}.', 1), ('WithLatestFromObserver(Observer<?', 1), ('BaseDaoTest<Spellbook,', 1), ('Observable<Notification<T>>', 1), ('MaybeDoAfterSuccess<T>(this,', 1), ('MaybeNever();\n\n', 1), ('DoOnSubscribeSingleObserver<T>(s,', 1), ('So\n', 1), ('System.out.println(to.errors());\n\n', 1), ('WithLatestInnerSubscriber(this,', 1), ('service.shutdown();\n', 1), ('(line.equals("}"))', 1), ('XContentParser.Token.END_OBJECT)', 1), ('first\n\n', 1), ('createNullValue()', 1), ('""))\n', 1), ('Flowable#as}', 1), ('U>>(maxConcurrency);\n', 1), ('i).flatMap(i', 1), ('releasing\n', 1), ('Function8', 1), ('concatDelayError(Publisher<?', 1), ('scan(Flowable.class);\n', 1), ('Single.&lt;Event&gt;create(emitter', 1), ('testConversionsStartingFromDomain()', 1), ('downloads', 1), ('data);\n}\n', 1), ('".json",', 1), ('stopService()', 1), ('subscribe(ObservableSource<?', 1), ('io.reactivex.internal.operators.observable.ObservableTimeoutTimed.TimeoutSupport;\nimport', 1), ('expressionProvider();\n\n', 1), ('VERSION_IS_AT_LEAST_JAVA_9', 1), ('onNext(Observer<?', 1), ('LambdaSubscriber<T>(onNext,', 1), ('whatever', 1), ('GroupedUnicast.createWith(key,', 1), ('withProducer', 1), ('subscribeOn(Scheduler', 1), ('(!numbers.contains(num))', 1), ('Single.mergeDelayError(Arrays.asList(\n', 1), ('elasticsearchProperties)', 1), ('assertTrue(appender.logContains("level1_b"));\n', 1), ('Type>', 1), ('doOnSubscribeErrorCrash()', 1), ('Functions.identity();\n', 1), ('handle)', 1), ('sources[i].subscribe(a[i]);\n', 1), ('spellDao.persist(spell7);\n', 1), ('"ObservableFromPublisher"\n', 1), ('user.getFirstName().toLowerCase()', 1), ('"FlowableFlatMapCompletableCompletable",\n', 1), ('java.nio.channels.SocketChannel;\nimport', 1), ('offer(v1);\n', 1), ('times(1)).onError(e);\n', 1), ('"onComplete()");\n', 1), ('addThrowable(Throwable', 1), ('tus', 1), ('DematerializeSubscriber<T>(s));\n', 1), ('SpellStep,\n', 1), ('Bloch)', 1), ('this.sourceList', 1), ('DwarvenMineWorker.Action.GO_TO_MINE);\n', 1), ('"key', 1), ('specified").clone();\n', 1), ('GameObject})', 1), ('MaybeErrorTest', 1), ('BlockingObserver<T>', 1), ('Additional', 1), ('separator,', 1), ('assumed.', 1), ('assertEquals(TEST_CAR_MODEL,', 1), ('HasUpstreamCompletableSource', 1), ('org.elasticsearch.common.CheckedSupplier;\n\nimport', 1), ('SafeObserver<Integer>(to));\n\n', 1), ('registerDeleted(Student', 1), ('something\n', 1), ('performOperationsUsing(inMemoryDao);\n', 1), ('soProducerIndex(index', 1), ('unordered.\n', 1), ('Tasks', 1), ('growth', 1), ('MockUncasedHostProvider', 1), ('retrieveIndices', 1), ('Another', 1), ('this.localNodeSupplier', 1), ('getType("long");\n', 1), ('BooleanRunnable(Runnable', 1), ('ActionListener<SchemaRowSet>', 1), ('ObservableTakeLast<T>', 1), ('FlowableJoin<TLeft,', 1), ('max)\n', 1), ('ln++;\n', 1), ('values[i]', 1), ('RuntimeException("an', 1), ('WizardDaoImpl();\n', 1), ('SubscribeOnMaybeObserver<T>(observer);\n', 1), ('(replenishMain', 1), ('setTopping(CakeTopping', 1), ('stuff\n', 1), ('com.iluwatar.featuretoggle.user.UserGroup;\nimport', 1), ('matchesSafely(Throwable', 1), ('super(length);\n', 1), ('inheritance.\n', 1), ('RxJavaPlugins#setInitSingleSchedulerHandler(io.reactivex.functions.Function)}', 1), ('setter;\n\n', 1), ('(line.contains(consumerClassName))', 1), ('Maybe.amb(Arrays.asList(pp0.singleElement(),', 1), ('spellbooks;\n\n', 1), ('observableNoUnsubscrib()', 1), ('isCompleted()', 1), ('(java.lang.reflect.Modifier.isInterface(owner.clazz.getModifiers()))', 1), ('rp1', 1), ('Queuing.pdf', 1), ('addRuntimeClass(final', 1), ('now.");\n', 1), ('log("Task', 1), ('this.revision', 1), ('jtAreas[0].getText(),', 1), ('.assertSubscribed().assertNotComplete()\n', 1), ('value.get();\n', 1), ('convertFromEntity(final', 1), ('character.setWizardClass(wizardClass);\n', 1), ('fighterClass);\n\n', 1), ('Spell("Fireball");\n', 1), ('Supplier<DiscoveryNode>', 1), ('obj.setName(name);\n', 1), ('block.\n', 1), ('subscribeThrows()', 1), ('requestParameters.getParameterValue("pass");\n', 1), ('key.attachment()).read(key);\n\n', 1), ('fishV2', 1), ('FileWriterAction}\n', 1), ('RxJavaPlugins.unlock();\n', 1), ('failComputationFlowableBlockingSingle()', 1), ('HttpURLConnection', 1), ('source.onNext(3);\n', 1), ('this.delegate.equals(that.delegate);\n', 1), ('(((a', 1), ('DynamoDBMapper(amazonDynamoDb);\n', 1), ('MaybeDelayTest', 1), ('Subscriber.onError', 1), ('commands.bookAddedToAuthor("Patterns', 1), ('fail(String.format("Tasks', 1), ("Letter('a'),", 1), ('cachedService.getId());\n', 1), ('assertThat(all).hasSize(1);\n', 1), ('com.iluwatar.event.sourcing.event.DomainEvent;\nimport', 1), ('application.</p>\n', 1), ('TestHelper.checkDisposed(Observable.interval(1,', 1), ('dust!"\n', 1), ('reducerCrash2()', 1), ('67.81.244.10\n', 1), ('collectionSupplier\n', 1), ('doOnDispose(Action', 1), ('rebatchAndTake()', 1), ('Inventory(1000);\n', 1), ('available",\n', 1), ('struct);\n\n', 1), ('(properties.containsKey(PURGE_ENABLED_KEY))', 1), ('desc.lastIndexOf("', 1), ('"\\\\".equals(fileSeparator))', 1), ('assertFalse(unsubscribed.get());\n', 1), ('saveButton.click();\n', 1), ('Layers', 1), ('LOGGER.info("At', 1), ('FlowableOnBackpressureLatest(Flowable<T>', 1), ('LazyFluentIterable.', 1), ('filePath', 1), ('matcher', 1), ('UndeliverableException)', 1), ('MaybeCallbackObserver(Consumer<?', 1), ('DisposableHelper.replace(parent.task,', 1), ('R>)CANCELLED);\n', 1), ('secureStrings.putAll(secureSettings.secureStrings);\n', 1), ('Maybes.\n', 1), ('AppendToQueueTask(timedRunnable));\n', 1), ('(InnerSubscriber<T,', 1), ('weight={}",', 1), ('getProperties()', 1), ('Wizard("Anaxis', 1), ('completableSupplier', 1), ('operator,\n', 1), ('ConcatMapInner<R>(this);\n', 1), ('ZipMaybeObserver[n];\n', 1), ('fn;\n\n', 1), ('Iterator<SelectionKey>', 1), ('panel.add(jtFields[2]);\n', 1), ('maintains\n', 1), ('thing', 1), ('close(BufferCloseSubscriber<T,', 1), ('retrieve/add/delete/update', 1), ('"("))', 1), ('source1;\n\n', 1), ('VideoResource(FieldJsonMapper', 1), ('onErrorSuccess()', 1), ('(DisposableHelper.validate(this.subscription,', 1), ('diving', 1), ('(DateTimeException', 1), ('ParallelPerf', 1), ('Files.write(tempPath,', 1), ('testNoFileErrorMessage()', 1), ('OutputStreamWriter(os,', 1), ('resultSet.getString("LNAME"));\n', 1), ('testUnsubscribeScan()', 1), ('statement.executeQuery();', 1), ('Collection<String>', 1), ('org.mockito.Mockito.*;\n\n/**\n', 1), ('flowableNoProducer()', 1), ('setMoney(BigDecimal', 1), ('href="http://reactivex.io/documentation/operators/amb.html">ReactiveX', 1), ('8));\n', 1), ('expectedString', 1), ('trustStore.getCertificate(alias);\n', 1), ('(interpret)', 1), ('version",', 1), ('username\n', 1), ('resubscribed\n', 1), ('in.getUsableSpace();\n', 1), ('firstLine);\n\n', 1), ('.startWith(Flowable.fromIterable(li))\n', 1), ('toppingBean.save(topping);\n', 1), ('movement)', 1), ('override\n', 1), ('accompanied', 1), ('instantiating', 1), ('maybeSourceAsCs()', 1), ('on;', 1), ('MaybeSwitchIfEmptySingle<T>', 1), ('multiton.', 1), ('assertNull(value[1]);\n', 1), ('@JsonProperty(access', 1), ('assertTrue(((Disposable)s).isDisposed());\n', 1), ('LOGGER.info(AppManager.printCacheContent());\n\n', 1), ('FromCallableTckTest', 1), ('MongoBank()', 1), ('StackOverflowError();\n', 1), ('this.singletonInstanceMethod', 1), ('SafeSubscriber<String>(OBSERVER_ONERROR_FAIL()).onError(new', 1), ('AppendToQueueTask', 1), ('trampoline(final', 1), ('HashMapType', 1), ('dateTimeFormatter;\n', 1), ('currentReaderCount;\n\n', 1), ('timeMs);\n', 1), ('java.util.Collections.emptyMap;\n\npublic', 1), ('Publisher<E>', 1), ('blockingFirstDoubleOnSubscribe()', 1), ('io.reactivex.plugins.RxJavaPlugins}\n', 1), ('is(perms));\n', 1), ('MaybeZipArray(MaybeSource<?', 1), ('Optional.of(createCustomer(resultSet));\n', 1), ('validate(Function<T,', 1), ('CompletableConcatArray', 1), ('"JDK', 1), ('validationNull()', 1), ('painlessInterfaceStruct', 1), ('RxJavaPlugins.setErrorHandler(null);\n\n', 1), ('Version.CURRENT.toString();\n', 1), ('sourceThrows()', 1), ('secondOliphaunt);\n', 1), ('clash', 1), ('getWizards()', 1), ('})))\n', 1), ('symbols', 1), ('java.util.stream.IntStream;\n\nimport', 1), ('testJava8Compat()', 1), ('fishy,', 1), ('"Single",', 1), ('failComputationObservableBlockingIterable()', 1), ('this.spells', 1), ('updated,\n', 1), ('pp.subscribe(ds);\n\n', 1), ('NormalizerFactory', 1), ('(mountPoint.equals(getMountPointLinux(in)))', 1), ('testOnFire(tested,', 1), ('CachingPolicy.THROUGH', 1), ('this.subject', 1), ('(nextNotification.isOnError())', 1), ('readBlob(String', 1), ('fromArraySingle()', 1), ('mock(Runnable.class);\n\n', 1), ('FlowableStripBoundary<T>(upstream);\n', 1), ('(child', 1), ('calculateLineCount();\n\n', 1), ('!m.signature.contains("Disposable")\n', 1), ('io.reactivex.observables.ConnectableObservable}', 1), ('ScanSeedSubscriber(Subscriber<?', 1), ('most-recently-used', 1), ('RxJavaPlugins.initSingleScheduler(null);\n', 1), ('FlowableConcatWithSingle(Flowable<T>', 1), ('SimplePlainQueue<E>', 1), ('javaHandle', 1), ('ProxyConfig', 1), ('org.elasticsearch.common.blobstore.fs;\n\nimport', 1), ('ConcatMapDelayed(Subscriber<?', 1), ('studentId,', 1), ('SimpleObjectCreate', 1), ('PublishSubject()', 1), ('JsonParser();\n', 1), ('type();\n\n', 1), ('GridLayout(6,', 1), ('8080567949447303262L;\n\n', 1), ('server.handle(method,', 1), ('Single.just(1).subscribe(ts);\n//\n//', 1), ('(Function)ToFlowable.INSTANCE;\n', 1), ('iterates', 1), ('FlowableDebounce<T,', 1), ('MaybeFlatten(MaybeSource<T>', 1), ('org.apache.commons.dbcp.BasicDataSource;\nimport', 1), ('fields;\n', 1), ('testAggregateAsIntSumSourceThrowsObservable()', 1), ('LOGGER.info("Line', 1), ('resolved",', 1), ('javaAugmentedClass,', 1), ('height="260"', 1), ('mapFactory.apply(evictionAction);\n', 1), ('[title="', 1), ('whitelistConstructor.painlessParameterTypeNames.size());\n', 1), ('authentication', 1), ('"eEvans@email.com");\n', 1), ('promise.fulfill(NumberCrunchingTask.CRUNCHED_NUMBER);\n', 1), ('io.reactivex.Scheduler.Worker', 1), ('assertNotNull(cakeInfo.id);\n', 1), ('ALIAS("ALIAS"),\n', 1), ('nazguls.put(NazgulName.ADUNAPHEL,', 1), ('cpu;\n\n', 1), ('(byte)', 1), ('ObservableTimeInterval(ObservableSource<T>', 1), ('"<<STANDARD>>";\n', 1), ('assertThat(findAll.size(),', 1), ('unboxTo(Class<?>', 1), ('documentation</a>.\n', 1), ('Tamaex"));\n', 1), ('candidate,', 1), ('OnComplete());\n', 1), ('emitter.setDisposable(s);\n', 1), ('.filter(negatives())\n', 1), ('Replace', 1), ('RxJavaPlugins.onError()}\n', 1), ('newInstance(Object[]', 1), ('User(String', 1), ('names.indexOf(name);\n', 1), ('OBSERVER_SUCCESS(onError);\n', 1), ('subscribe(groupBy,', 1), ('}).take(100);\n', 1), ('RxJavaPlugins.setInitComputationSchedulerHandler(initReplaceWithImmediate);\n', 1), ('delegates)', 1), ('disguised', 1), ('FlowableSerialized(Flowable<T>', 1), ('com.iluwatar.databus.data.StoppingData;\n\nimport', 1), ('assertThat(lines.get(1),', 1), ('shutdown', 1), ('result.trim());\n', 1), ('influencer.setAnomalyScore(anomalyScore);\n', 1), ('dr.timed.replace(delayed);\n\n', 1), ('invalid.', 1), ('Lazy', 1), ('(eventTime', 1), ('bank.setFunds(account,', 1), ('getUnboxedype(Class<?>', 1), ('batchSize);\n', 1), ('",\n', 1), ('way\n', 1), ('threads.</p>\n', 1), ('.open()\n', 1), ('messages)', 1), ('ok', 1), ('more\n', 1), ('ThreadDeath());\n', 1), ('@ManyToMany(mappedBy', 1), ('this.objectMapper', 1), ('Observable<T>>\n', 1), ('name.startsWith("set")', 1), ('"illegal', 1), ('DwarvenGoldmineFacade#startNewDay()},', 1), ('rolePermissionSettings;\n', 1), ('ms.subscribe(new', 1), ('DisposableLambdaObserverTest', 1), ('RxCustomThread(Runnable', 1), ('hit,\n', 1), ('contact', 1), ('getParts()', 1), ('ro.onError(new', 1), ('(keyPath', 1), ('set)', 1), ('reuse', 1), ('Input.Result', 1), ('outgoing', 1), ('(add(d))', 1), ('StringBuilder(name);\n', 1), ('byteBuffer.get(magic);\n', 1), ('subscribers.getAndSet(CANCELLED))', 1), ('UserAccount("006",', 1), ('(create,', 1), ('ParallelFlowable<Downstream>', 1), ('Commander());\n', 1), ('.startTime(ZonedDateTime.ofInstant(Instant.ofEpochMilli(1519603200000L),', 1), ('doOnSuccess(final', 1), ('blkQueue.add(msg);\n', 1), ('flowableCompletable()', 1), ('spellbook4.addSpell(spell10);\n', 1), ('producerLookAhead)', 1), ('whileCompleteThrows()', 1), ('getTypeInternal(String', 1), ('MAX_NUMBER', 1), ('processor.subscribe(subscriber2);\n', 1), ('((CompositeException)to.errors().get(0)).getExceptions().size());\n', 1), ('subscriber))', 1), ('eventLoop();\n', 1), ('addMethod(ClassLoader', 1), ('!firstName.equals(person.firstName)', 1), ('"Much', 1), ('concat(MaybeSource<?', 1), ('listener.onResponse(result);\n', 1), ('rangeSync(Blackhole', 1), ('ObservableFlatMap(ObservableSource<T>', 1), ('BufferBoundarySubscriber(Subscriber<?', 1), ('DaoBaseImpl<E>>', 1), ('field.getAndSet(d);\n', 1), ('dto)', 1), ('parent.subscribe(first,', 1), ('"city")\n', 1), ('row()', 1), ('GZIPInputStream(stream);\n', 1), ('layer.setId(3456L);\n\n', 1), ('offset)', 1), ('listAll()', 1), ('String>();\n\n', 1), ('LotteryNumbers.create(winningNumbers));\n', 1), ('money="', 1), ('-2223459372976438024L;\n\n', 1), ('although', 1), ('scalarXMap(final', 1), ('subscribe(ObservableSource<?>[]', 1), ('db\n', 1), ('polled', 1), ('identity.', 1), ('start(Collection<Watch>', 1), ('IOUtils.fsync(file,', 1), ('throwable.getMessage());\n', 1), ('onNext)', 1), ('SingleJust<T>', 1), ('toSafe()', 1), ('TEST_CAR_MODEL', 1), ('CancellableDisposableTest', 1), ('simpleLongPrefetch()', 1), ('both;\n', 1), ('openComplete(BufferOpenSubscriber<Open>', 1), ('ObservableQueueDrain<T,', 1), ('asNormalizables', 1), ('Thread.interrupted();', 1), ('Valid', 1), ('this.inventorySize', 1), ('"Maximum', 1), ('PlayMessage[]\n', 1), ('info,', 1), ('version.hashCode();\n', 1), ('this.input.getText();\n', 1), ('ofType(final', 1), ('System.out.println(m.getName());\n', 1), ('this.visitor.visitSoldier(new', 1), ('inner.request(1);\n\n', 1), ('CommandService\n', 1), ('ps.switchMapCompletable(new', 1), ('SameThreadDispatcher\n', 1), ('this.priority', 1), ('verify(spellDao).findByName(eq(spellName));\n', 1), ('actual.tryOnNext(v);\n', 1), ('prepareParameters(final', 1), ('Retry', 1), ('privileges));\n', 1), ('(open-closed', 1), ('rxThreadsBefore.add(t);\n', 1), ('(signing.shouldSign(this.samlObject))', 1), ('(not)', 1), ('Observer");\n', 1), ('numbers.clear();\n', 1), ('compile-time', 1), ('this.whitelistMethods', 1), ('IntBinaryOperator', 1), ('ConcatWithCompletableTckTest', 1), ('Logging\n', 1), ('(compareAndSet(NO_REQUEST,', 1), ('pp.switchMapSingle(new', 1), ('firstObserver', 1), ("<p>Don't", 1), ('createSchema(dataSource);\n', 1), ('DefaultEntry', 1), ('formal\n', 1), ('SorterFunction<T>', 1), ('sourceSupplier;\n', 1), ('7565982551505011832L;\n\n', 1), ('flag,', 1), ('unzipDir', 1), ('assertNotNull(iterator);\n\n', 1), ('Function<O,', 1), ('Maybe.create((MaybeEmitter&lt;?', 1), ('7)));\n', 1), ('relayState)', 1), ('receives.\n', 1), ('clusterName;\n\n\n', 1), ('results.getString(1));\n', 1), ('reset();\n', 1), ('assertFalse(Observable.range(Integer.MIN_VALUE,', 1), ('exposed.\n', 1), ('spellbookDao.merge(spellbook5);\n', 1), ('System.setOut(new', 1), ('}\n\n\n\n}\n', 1), ('testLongs()', 1), ('assertEquals(size,', 1), ('concurrently.', 1), ('q.isEmpty()', 1), ('ObservableRepeat<T>', 1), ('testCollectorFailureDoesNotResultInErrorAndCompletedEmissionsFlowable()', 1), ('biConsumerIsDisposedOnSuccess()', 1), ('SubscriptionCancelThrows', 1), ('not-renamed', 1), ('onSubscribeCall;\n\n', 1), ('jdx);\n\n', 1), ('sonar', 1), ('m.javadoc.indexOf("{@code', 1), ('twin', 1), ('assertEquals(startTime,', 1), ('below)\n', 1), ('domainapp.fixture.scenarios.RecreateSimpleObjects;\nimport', 1), ('trusts', 1), ('LazyFluentIterables.', 1), ('org.elasticsearch.xpack.core.watcher.input.Input;\nimport', 1), ('distinctThreads()', 1), ('sourceCode.substring(n', 1), ('round,', 1), ('SingleTask());\n\n', 1), ('function7', 1), ('3880992722410194083L;\n\n', 1), ('r.get())', 1), ('pubKeyFingerprint.length', 1), (".append('.');\n", 1), ('io.reactivex.internal.operators.flowable.FlowableGroupJoin.*;\nimport', 1), ('staticMethods;\n', 1), ('MaybeDoAfterSuccessTest.this.values.add(t);\n', 1), ('mapFailWithStopConditional()', 1), ('LinkedQueueNode<T>();\n', 1), ('boy.");\n\n', 1), ('task.onError(e.getCause());\n', 1), ('withPublisherError2()', 1), ('method/field', 1), ('(login.html)\n', 1), ('DoOnSubscribeSingleObserver<T>', 1), ('IBootstrapSettings', 1), ('mockMaybeObserver()', 1), ('mainDoubleOnError()', 1), ('service.findAllSpells();\n', 1), ('cakeLayerInfos.stream().mapToInt(c', 1), ('handleDeposit(moneyTransferEvent.getMoney(),', 1), ('interestedOps\n', 1), ('queueSubscriptionInsteadOfQueueFuseable()', 1), ('DelayObserver(Observer<?', 1), ('policy.getPermissions(PluginSecurity.class.getProtectionDomain());\n', 1), ('painlessStruct.clazz.getName()', 1), ('writeV2(RainbowFishV2', 1), ('((SocketChannel)', 1), ('Math.max(0L,', 1), ('getPendingAudio()', 1), ('programming,\n', 1), ('ObjectHelper', 1), ('level2.getLeft();\n', 1), ('.forEach(e', 1), ('secondOliphaunt', 1), ('actual.subscribe(observer);\n', 1), ('"8-%d:-XX:+AggressiveOpts",', 1), ('newBlockingQueue()', 1), ('Robin', 1), ('.doOnCancel(unsubscribeAction)\n', 1), ('vector', 1), ('drinks\n', 1), ('RetryBiSubscriber(Subscriber<?', 1), ('8:37', 1), ('user.\n', 1), ('LicenseVerifier', 1), ('clazz);\n', 1), ('12', 1), ('demandHolderIdiom2', 1), ('@org.apache.isis.applib.annotation.HomePage\n', 1), ('Stephen\n', 1), ('FindCustomer(String', 1), ('RuntimeException.class);\n\n', 1), ('trustedNames)', 1), ('verifyZeroInteractions(studentDatabase);\n', 1), ('let', 1), ('testForInvalidName()', 1), ('assertEquals("username1",', 1), ('all.newPermissionCollection();\n', 1), ('BlockingSubscriber(Queue<Object>', 1), ('StreamInput::readBoolean);\n', 1), ('LogstashFeatureSet.class);\n', 1), ('WithLatestInnerObserver(WithLatestFromObserver<?,', 1), ('assertTrue(emitter.toString().contains(SingleCreate.Emitter.class.getSimpleName()));\n', 1), ('fields,', 1), ('wrap(all.get(0));\n', 1), ('response.getDestination();\n', 1), ('(Future<Boolean>', 1), ('left;\n', 1), ('scheduler.scheduleDirect(this,', 1), ('Quixote");\n', 1), ('Actions.empty();\n//\n//', 1), ('reside.', 1), ('servant.feed(q);\n', 1), ('Version(ver,', 1), ('super.hashCode());\n', 1), ('OBSERVER_ONCOMPLETED_FAIL(final', 1), ('behaviorSubjectAsBp()', 1), ('assertEquals(numOtherFiles', 1), ('properties.setProperty("enhancedWelcome",', 1), ('ObservableAutoConnect(ConnectableObservable<?', 1), ('col.isEmpty();\n', 1), ('scheduler}.\n', 1), ('org.bouncycastle.asn1.x509.GeneralName;\nimport', 1), ('firstSet', 1), ('testEpsonPrinter()', 1), ('level1_b\n', 1), ('rp2', 1), ('packaged\n', 1), ('asynchronous.\n', 1), ('Flowable.just(1).throttleFirst(100,', 1), ('queue.add(timedRunnable);\n\n', 1), ('completeAfterMainDelayError()', 1), ('logStreamName)', 1), ('disposedOnCallThrows()', 1), ('command:', 1), ('RealmConfig', 1), ('one\\n");\n', 1), ('topping.setCake(cake);\n', 1), ('improve', 1), ('table', 1), ('not(hasKey("es.painless_class")));\n\n', 1), ('o.reduce(0,', 1), ('description.appendText("exception', 1), ('verify(dynamoDbMapper,', 1), ('Single.just(3))\n', 1), ('Blank', 1), ('BackpressureHelper()', 1), ('mocks\n', 1), ('thenAccept(Consumer<?', 1), ('lazySet(offset,', 1), ('subscribers.offer(inner);\n\n', 1), ('rows', 1), ('newline,', 1), ('Collections.unmodifiableList(extendedPlugins);\n', 1), ('arity.\n', 1), ('.delaySubscription(Flowable.empty())\n', 1), ('assertEquals("onCompleteFail",', 1), ('lastColon', 1), ('desired\n', 1), ('FlowableSampleTimed(Flowable<T>', 1), ('TransformAction(Promise<T>', 1), ('arity,', 1), ('addBody(Map<String,', 1), ('assertTrue(ticket1.isPresent());\n', 1), ('String>)', 1), ('SingleDoAfterTerminate(SingleSource<T>', 1), ('JsonFileJournal()', 1), ('Single.just(1).map(new', 1), ('ParallelPeekSubscriber<T>', 1), ('(disposing)', 1), ('fs.getPath("foo");\n', 1), ('Path[0])));\n', 1), ('io.reactivex.internal.fuseable.HasUpstreamMaybeSource;\n\nimport', 1), ('Schedule.Parser', 1), ('assertEquals("name1",', 1), ('instanceField.setAccessible(true);\n', 1), ('qs.requestFusion(QueueSubscription.ANY', 1), ('AssertionError("duplicate', 1), ('withCompletableDispose()', 1), ('SpscLinkedArrayQueue<T>(16);\n', 1), ('length()', 1), ('CustomMatcher<T>(description)', 1), ('50)\n', 1), ('otherOnFire);\n', 1), ('numOfCurrentlyRunningSyncEvent()', 1), ('response.headers.forEach((k,', 1), ('machineStateGlobal;\n\n', 1), ('JavaVersion.parse("1.7.1");\n', 1), ('Enumerate', 1), ('Comments', 1), ('individually,', 1), ('subject.onNext("three");\n', 1), ('.last()\n', 1), ('assertThat(javaVersion170.toString(),', 1), ('(crashOnSubscribe)', 1), ('VisitorTest<CommanderVisitor>', 1), ('function);\n\n', 1), ('biFunctionFail()', 1), ('FromFutureTckTest', 1), ('commitDelete()', 1), ('downloadPromise', 1), ('clazz.isAnonymousClass())', 1), ('filterInvalidSourceConditional()', 1), ('example)\n', 1), ('KingJoffrey();\n', 1), ('com.google.gson.Gson;\nimport', 1), ('tenant\n', 1), ('ObservableFromIterable<T>', 1), ('ConcatMapInner<R>', 1), ('RuntimePermission("getenv.TIKA_CONFIG"));\n\n', 1), ('Explicitly', 1), ('StoppingData(when);\n', 1), ('it.remove();\n\n', 1), ('(aFile.exists())', 1), ('Flowable.<String>error(error).ignoreElements();\n', 1), ('find()', 1), ('this.source2', 1), ('constructor:', 1), ('SingleOperator.apply():\n', 1), ('comparer);\n', 1), ('com.iluwatar.flux.store;\n\nimport', 1), ('javaClass))', 1), ('(release)', 1), ('privateKey', 1), ('processes\n', 1), ('other.subscribe(otherSubscriber);\n', 1), ('level1B);\n', 1), ('nazguls.put(NazgulName.AKHORAHIL,', 1), ('POOLS', 1), ('(awsRequestId', 1), ('ObjectHelper.equals(o1,', 1), ('secretInput', 1), ('bowl,', 1), ('variable.\n', 1), ('groupBy;\n\n', 1), ('ObservableTimer', 1), ('urlEncode(algo);\n', 1), ('Publisher-like', 1), ('selector;\n\n', 1), ('placing', 1), ('upstream.request(replenishMain);\n', 1), ('fromRemoteFailureType(String', 1), ('addParam(String', 1), ('onNext(GroupedObservable<Integer,', 1), ('perfect', 1), ('parameterIndex', 1), ('getNode()', 1), ('sleep()', 1), ('Boolean.toString(rainbowFish.getHungry()));\n', 1), ('arguments;\n', 1), ('bytes', 1), ('7;', 1), ('ticketsCollection', 1), ('LOGGER.info("Submitted', 1), ('"counters";\n\n', 1), ('ObservableRepeatUntil(Observable<T>', 1), ('structure:\n', 1), ('dq)', 1), ('java.lang.Short}</li>\n', 1), ('ObservableScanSeed(ObservableSource<T>', 1), ('pre-processing', 1), ('m.getParameterTypes());\n', 1), ('LazyFluentIterable.\n', 1), ('BlockingObserver(Queue<Object>', 1), ('ObservableIgnoreElementsCompletable<T>', 1), ('verifications,', 1), ('Spell("Ice', 1), ('InnerObserver<T>(1,', 1), ('getAddressLineOne()', 1), ('CompletableMergeArray(CompletableSource[]', 1), ('LotteryNumbers.createRandom());\n', 1), ('NoSuchFileException', 1), ('cap', 1), ('java.sql.Wrapper;\n\ninterface', 1), ('AtomicReference<CacheDisposable<T>[]>(EMPTY);\n', 1), ('tempFile)', 1), ('java.lang.Runtime.exec(Runtime.java:620)\n', 1), ('(Field', 1), ('criteria.list();\n', 1), ('java.util.function.BiConsumer;\n\nimport', 1), ('Friday")\n', 1), ('accountNo)', 1), ('n.substring(1);\n', 1), ('complete(sp.first);\n', 1), ('observableSubscribe1()', 1), ('boxTo(Class<?>', 1), ('onNextAfterComplete()', 1), ('sign")\n', 1), ('DbCustomerDao(DataSource', 1), ('SerializedEmitter<T>\n', 1), ('writeOperation);\n', 1), ('Assert.assertFalse(unsubscribed.get());\n', 1), ('testNumbersCantBeModified()', 1), ('isEnabled()', 1), ('terminates.', 1), ('DateTimeZone.UTC);\n', 1), ('TimeIntervalSubscriber(Subscriber<?', 1), ('ownerStruct.staticMethods.put(painlessMethodKey,', 1), ('"src/main/java/io/reactivex/"', 1), ('String.valueOf(new', 1), ('failComputationFlowableBlockingIterable()', 1), ('Single.just(1).subscribe(tc);\n\n', 1), ('"css/application.css");\n', 1), ('Non-interactive', 1), ('children(PROPERTY,', 1), ('inputObject;\n\n', 1), ('65535)),', 1), ('PublishProcessor.create().ignoreElements().blockingAwait(1,', 1), ('assertEquals(V1.getAge(),', 1), ('spec', 1), ('(in.getVersion().onOrAfter(Version.V_6_0_0_beta2)', 1), ('simple2()', 1), ('<code>AsyncCallback</code>', 1), ('range.subscribe(lo);\n\n', 1), ('{}({})', 1), ('onSubscribe(new', 1), ('SHUTDOWN.shutdown();\n\n', 1), ('(compareAndSet(COMPLETE_MASK,', 1), ('multipleInvalidLines', 1), ('stack.push(resultExpression);\n', 1), ('SingleDoAfterSuccess(SingleSource<T>', 1), ('PluginInfo(name,', 1), ('this.dao.persist(this.factory.apply(entityName));\n', 1), ('delayErrorIterableCancelAfterHasNext()', 1), ('mergeTwoAsyncStreamsOfN(final', 1), ('TestHelper.checkDisposed(pp.switchMapCompletable(Functions.justFunction(cs)));\n', 1), ('3"));\n\n', 1), ('particular,', 1), ('javaInteraceLookups.push(javaSuperClass);\n', 1), ('blobName,', 1), ('LOGGER.info("{}:', 1), ('ParallelSortedJoin<T>(railSorted,', 1), ('key.channel().close();\n', 1), ('columnSize()', 1), ('expectedTarget;\n', 1), ('LoggerFactory.getLogger(TreasureChest.class);\n\n', 1), ('#onErrorResumeNext}', 1), ('https.setSSLSocketFactory(factory);\n', 1), ('}).subscribe(latchedObserver);\n', 1), ('sender\n', 1), ('ParallelReduceFullMainSubscriber(Subscriber<?', 1), ('LOGGER.info("deserializedFishV2', 1), ('ApiGatewayResponse(Integer', 1), ('JavaVersion.parse("9");\n', 1), ('wildcards,', 1), ('parts.length', 1), ('testSpaceDelimitedJvmOptions()', 1), ('io.reactivex.disposables.CompositeDisposable;\n\npublic', 1), ('leftExpression', 1), ('checkTicketForPrize(LotteryTicketRepository', 1), ('ae', 1), ('key);\n}\n', 1), ('assertNotNull(getInternalHeavyValue());\n', 1), ('OBSERVER_ONNEXT_ONERROR_FAIL().onNext("one");\n', 1), ('CachingPolicy.BEHIND");\n', 1), ('SimpleObject();\n\n', 1), ('result.payload().data());\n', 1), ('FrontControllerTest', 1), ('replyPacket.setReceiver(incomingPacket.getSender());\n\n', 1), ('construction:', 1), ('java.lang.reflect.ParameterizedType;\nimport', 1), ('assertSame(validated,', 1), ('-22,', 1), ('request-response', 1), ('invalidRangeLine', 1), ('Natives.isSystemCallFilterInstalled());\n', 1), ('REQUESTED', 1), ('org.mockito.Mockito.when;\nimport', 1), ('initializeData(CakeBakingService', 1), ('application\n', 1), ('ObservableFlatMapCompletableCompletable<T>', 1), ('cancelDelayed()', 1), ('albumRating)', 1), ('ec,', 1), ('"foobar.com");\n', 1), ('"valueSupplier', 1), ('times(4)).onAction(actionCaptor.capture());\n', 1), ('UweSays:', 1), ('ObservableAny<T>', 1), ('"663-765",', 1), ('stringAddress', 1), ('scalability,', 1), ('receiver.', 1), ('SwitchMapSingleObserver<Object>(null);\n\n', 1), ('FallbackSubscriber<T>', 1), ('queryParam)', 1), ('RebatchRequestsTckTest', 1), ('List<Whitelist.Struct>', 1), ('comparator);\n', 1), ('list.toArray(new', 1), ('function5', 1), ('requireNonNull(long', 1), ('Long[(int)elements];\n', 1), ('evenItems.get(1));\n', 1), ('GeneratorDisposable(Observer<?', 1), ('pluginNull()', 1), ('AtomicReference<String>', 1), ('errorSupplier', 1), ('org.apache.tika.mime.MediaType;\nimport', 1), ('DataFetcher()', 1), ('onCompleteteNoSubscribeCrash()', 1), ('newService)', 1), ('right:', 1), ('target.isOnFire(),', 1), ('CountDownLatch(4);\n\n', 1), ('OBSERVER_ONNEXT_ONERROR_FAIL()', 1), ('LOGGER.debug("ConsoleLoggerModule::prepare();");\n\n', 1), ('allToppings.stream().filter(t', 1), ('here");\n', 1), ('jtAreas;\n', 1), ('!version.equals(that.version)', 1), ('MaybeTakeUntilPublisher(MaybeSource<T>', 1), ('DoAfterObserver(SingleObserver<?', 1), ('CompletableSource-like', 1), ('AutoCloseable}', 1), ('Compare', 1), ('accounts.get(destinationBankAccount)', 1), ('mock(GiantModel.class);\n', 1), ('"Montgomery"));\n', 1), ('(line.contains("@since")', 1), ('timer.replace(worker.schedule(this,', 1), ('painlessFieldClass', 1), ('v.add(t);\n', 1), ('(strategy)', 1), ('produce()', 1), ('assertNotNull(items);\n', 1), ('close.', 1), ('BaseDaoTest<Spell,', 1), ('Write.\n', 1), ('comparator));\n', 1), ('CI\n', 1), ('RxJavaPlugins.initNewThreadScheduler(nullResultCallable);\n', 1), ('KeyPair', 1), ('TEST_PART_PRICE', 1), ('presenter;\n', 1), ('javax.net.ssl.SSLEngine;\nimport', 1), ('Version.readVersion(in);\n', 1), ('(QueueSubscription<CompletableSource>)', 1), ('ActionListener.wrap((SearchResultEntry', 1), ('((HasUpstreamPublisher<Integer>)o.map(Functions.<Integer>identity())).source());\n', 1), ('explicitly,', 1), ('Single<ArrayList<Integer>>', 1), ('getRolesProviders(Settings', 1), ('BackpressureHelper.addCap(Long.MAX_VALUE,', 1), ('transaction,\n', 1), ('testToIterator()', 1), ('Worker(final', 1), ('fail("this', 1), ('getParentLogger()', 1), ('URISyntaxException', 1), ('log.info(customer));\n', 1), ('producerNode;\n', 1), ('Proxy.Type', 1), ('FlowableOnBackpressureLatest<T>', 1), ('ScriptTestCase', 1), ('unsubscribingWithoutUnderlyingDoesNothing()', 1), ('AttributeMap<>(emptyMap());\n', 1), ('then).\n', 1), ('noParentIsDisposed()', 1), ('ClassCastException("Child', 1), ('ProductInformationClientImpl', 1), ('iterable.\n', 1), ('javaSuperClass.getSuperclass();\n', 1), ('TakeUntil(ArrayCompositeDisposable', 1), ('Guice', 1), ('RxJavaPlugins.getOnObservableCreate();\n//', 1), ('System.out.println(path);\n\n', 1), ('improved?\n', 1), ('MlFilterWriter(filters,', 1), ('"lock', 1), ('executor.lazySet(createExecutor(threadFactory));\n', 1), ('(Document', 1), ('listener.onResponse(toMap(name', 1), ('outerWrapper', 1), ('fusedAsyncConditional()', 1), ('night\n', 1), ('routes', 1), ('nonBlocking;\n', 1), ('CacheStore\n', 1), ('t2);\n\n', 1), ('Functions.justFunction(Completable.complete()))\n', 1), ('"Mapper");\n\n', 1), ('TrustAllConfig()', 1), ('lambdaInfo.setFunctionVersion(context.getFunctionVersion());\n', 1), ('Map<String,Path>', 1), ('health.getClusterName();\n', 1), ('"elasticsearch".\n', 1), ('200', 1), ('System.out.print(lines.size()', 1), ('SubscriptionLambdaSubscriber<T>(s,', 1), ('cons.', 1), ('handler.onEvent(event);\n', 1), ('InputStreamReader(socket.getInputStream(),', 1), ('this.fromDto', 1), ('blocking/synchronous', 1), ('cache...', 1), ('setLoader(FileLoader', 1), ('InnerQueuedObserver(InnerQueuedObserverSupport<T>', 1), ('erasure', 1), ('MongoBank(String', 1), ('unreliable', 1), ('register(Consumer<Iterable<TriggerEvent>>', 1), ('EndConsumerHelper.composeMessage(rmo.getClass().getName()));\n', 1), ('2).skipLast((int)elements)\n', 1), ('urls.length)', 1), ('seenJars', 1), ('"memberOf",\n', 1), ('MultiplyingNormalizerProcess(Settings.EMPTY,', 1), ('ourselves', 1), ('note:', 1), ('times(1)).insert(student1);\n', 1), ('"425-907",', 1), ('Object[]{"Catapult",', 1), ('collectIntoObservable()', 1), ('DistinctObserver(Observer<?', 1), ('thread.<br>\n', 1), ('ConnectableFlowable<Long>', 1), ('PublishProcessor<T>();\n', 1), ('(Word', 1), ('action);\n\n', 1), ('Weather()', 1), ('rust"));\n', 1), ('painlessReturnTypeName', 1), ('exclusion.\n', 1), ('.onErrorResumeNext(Single.just(1)));\n', 1), ('<li>§2.3:', 1), ('ArrayList<UnicastSubject<T>>();\n', 1), ('releaseIndex.incrementAndGet()', 1), ('testIsDirty()', 1), ('IllegalStateException("Queue', 1), ('indices.\n', 1), ('domainapp.webapp;\n\nimport', 1), ('Injector})', 1), ('SourceObserver(Observer<?', 1), ('separate\n', 1), ('java.nio.file.StandardOpenOption;\nimport', 1), ('RxJavaPlugins.onError(n.getError());\n', 1), ('SlidingDoor}', 1), ('jsp', 1), ('SingleToFlowable<U>(composer.apply(pp.singleElement())).subscribe(ts);\n', 1), ('.mergeWith(Single.just(elements))\n', 1), ('FlowableConcatMapMaybePerf', 1), ('invalidLowerJavaMajorVersion', 1), ('csub.add(w3);\n', 1), ('ArrayCompositeDisposable(2);\n\n', 1), ('"Bobson");\n', 1), ('f.elementAt(0).toFlowable();\n', 1), ('stringProps[i', 1), ('MinusExpressionTest()', 1), ('"singleSource', 1), ('this.customerId', 1), ('flowMaybe', 1), ('domainapp.fixture.modules.simple.SimpleObjectCreate;\nimport', 1), ('currentCount', 1), ('representing\n', 1), ('"{trustedNames="', 1), ('"Subscriber",', 1), ('DisposableHelper.dispose(this);\n\n', 1), ('writeOperation)', 1), ('enumClass.getMethod("values");\n', 1), ('.flatMap(Functions.justFunction(Completable.fromAction(this).subscribeOn(Schedulers.computation()).toFlowable()),', 1), ('TimeUnit.SECONDS).intValue());\n', 1), ('SingleZipTest', 1), ('mid', 1), ('(Letter', 1), ('Deflater', 1), ('frontend', 1), ('SafeSubscriber<String>(OBSERVER_ONNEXT_FAIL(onError));\n', 1), ('Objects.equals(email,', 1), ('(painless', 1), ('sequence.', 1), ('Validation', 1), ('Maybe.just(100)\n', 1), ('noPermissions)\n', 1), ('buffer.reset();\n', 1), ('equalTo("-Xms1g"));\n', 1), ('Flowable-specific', 1), ('field;\n\n', 1), ('ConnectableFlowable<?', 1), ('PrintStream(stream));\n\n', 1), ('spellbook4.addSpell(spell11);\n', 1), ('unit="', 1), ('pace', 1), ('maxConcurrencyOneDelayMainErrors()', 1), ('Unit[]', 1), ('price\n', 1), ('IndexResolution.invalid(ex.getMessage());\n', 1), ('certPath;\n\n', 1), ('schedules', 1), ("Letter('y'),", 1), ('queryLotteryAccountFunds(bank,', 1), ('fromAction(final', 1), ('DisposableHelper.dispose(fallback);\n', 1), ('Collections.unmodifiableMap(\n', 1), ('findPattern("TestObserver<.*>\\\\s+ts");\n', 1), ('children.next();\n', 1), ('doOnError()', 1), ('getIntelligence()', 1), ('TestHelper.checkDisposed(Flowable.never().onBackpressureLatest());\n', 1), ('com.iluwatar.front.controller.utils;\n\nimport', 1), ('Maybe.just(1).doAfterSuccess(null);\n', 1), ('Result();\n\n', 1), ('ConnectableObservable,', 1), ('q.get());\n', 1), ('put(Item', 1), ('"444-766",', 1), ('SwitchMapMaybeSubscriber(Subscriber<?', 1), ('assertEquals(color,', 1), ('unit.accept(visitor);\n', 1), ('super.visitFile(file,', 1), ('TakeUntilOtherSubscriber(this);\n', 1), ('Objects.requireNonNull(other);\n', 1), ('this.setter', 1), ('(DwarvenMineWorker', 1), ('utilizeResource(Resource', 1), ('isSynchronous);\n', 1), ('receiver;\n\n', 1), ('result.getInteger("seq");\n', 1), ('competing', 1), ('de.agilecoders.wicket.themes.markup.html.bootswatch.BootswatchThemeProvider;\n\n\n/**\n', 1), ('type.");\n', 1), ('com.iluwatar.databus.members.MessageCollectorMember;\nimport', 1), ('BOUNDARY:\n', 1), ('BorderLayout.CENTER);\n', 1), ('rco.add(null);\n', 1), ('Single[32];\n', 1), ('chain.length;', 1), ('whitelistStruct.onlyFQNJavaClassName', 1), ('alone', 1), ('customer.setLastName("Danielson");\n', 1), ('serial.onError(t);\n', 1), ('Flowable&lt;Integer>', 1), ('AlchemistShop()', 1), ('Main', 1), ('pill\n', 1), ('iterableToFlowable(final', 1), ('thisOnFire', 1), ('RxJavaPlugins.initComputationScheduler(null);\n', 1), ('familiar\n', 1), ('onErrorFailureWithUnsubscribeFailure()', 1), ('this.crashOnSubscribe', 1), ('OutputStreamWriter(buffer,', 1), ('20;\n', 1), ('.map(NamedExpression.class::cast)\n', 1), ('timeout()', 1), ('getType("Matcher");\n', 1), ('Objects.equals(type,', 1), ('onCancel));\n', 1), ('verifyNonBlocking();\n', 1), ('this.customers', 1), ('albumLinks', 1), ('rp2);\n', 1), ("algorithm's", 1), ('character.setAbilities(abilities);\n', 1), ('java.lang.AutoCloseable},', 1), ('policy)', 1), ('_.,()]*SingleSource");\n', 1), ('public\n', 1), ('FromIterableDisposable(Observer<?', 1), ('Stack<StarMemento>', 1), ('char.class', 1), ('(purgeEnabled', 1), ('layer3', 1), ('com.iluwatar.memento;\n\nimport', 1), ('</pre>', 1), ('ConcatMapSingleObserver(ConcatMapSingleSubscriber<?,', 1), ('(this.commanderResponse.isPresent())', 1), ('assertEquals("maxConcurrency', 1), ('<tt>{@code', 1), ('isCancelled.get();\n', 1), ('assertTrue(bs1.isCancelled());\n', 1), ('18:22', 1), ('Method}.\n', 1), ('callback-based', 1), ('DelayObserver<T>(s,', 1), ('activeNodesPerCluster', 1), ('ByteBuffer.wrap(bytes);\n', 1), ('Completable.concat(\n', 1), ('"%d:-XX:+UseG1GC",', 1), ('}).take(1);\n', 1), ('purgeEnabled,', 1), ('retryPredicate()', 1), ('rejected', 1), ('TestHelper.checkDisposed(PublishSubject.create().scan(new', 1), ('"1")', 1), ('CompletableAndThenPublisherTckTest', 1), ('onSuccess(S', 1), ('LOGGER.error("Executor', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.toCompletable.png"', 1), ('(LetterComposite', 1), ('AmbInnerSubscriber(AmbCoordinator<T>', 1), ('lenient\n', 1), ('io.reactivex.internal.operators.observable.ObservableInterval.IntervalObserver;\nimport', 1), ('ObservableFlatMapCompletable<T>(source,', 1), ('testAppUsingSameThreadDispatcher()', 1), ('toSortedListComparatorCapacity()', 1), ('InnerSubscriber<T>', 1), ('verify(party).act(member,', 1), ('data/content', 1), ('list.hashCode();\n', 1), ('SubscriptionHelper.cancel(actual);\n', 1), ('#connect(Consumer)}', 1), ('sslContext()', 1), ('.concatMapCompletable(Functions.justFunction(Completable.complete()),', 1), ('transactionManager;\n', 1), ('TestHelper.checkDisposed(Flowable.never().onTerminateDetach());\n', 1), ('Single.amb(Arrays.asList(sources))\n', 1), ('sb.append(names.get(i));\n', 1), ('Console\n', 1), ('KeywordEsField("name")),\n', 1), ('onCompleteteNoSubscribeOnErrorCrash()', 1), ('ReducePerf', 1), ('"username1");\n\n', 1), ('fishV1.getWeightTons());\n', 1), ('line.substring(5,', 1), ('FlowableDebounceTimed(Flowable<T>', 1), ('assertThat(simpleObject.getName()).isEqualTo(fs.getSimpleObjects().get(0).getName());\n', 1), ('ListPluginsCommand', 1), ('verifyNonBlocking()', 1), ('queries.getAuthorBooksCount("jBloch");\n', 1), ('studentRepository.registerDeleted(student2);\n\n', 1), ('doc.getString("userName"),', 1), ('blockingGetTimeout()', 1), ('(!batch)', 1), ('testSetLayers()', 1), ('afterwards.\n', 1), ('(list.isEmpty())', 1), ('org.objectweb.asm.commons.Method.getMethod(javaConstructor);\n', 1), ('Flowable.fromArray(sources).flatMap((Function)MaybeToPublisher.instance(),', 1), ('(dir', 1), ('assertEquals(cake.toString(),', 1), ('Handler<?', 1), ('testStealTheItem()', 1), ('RxJavaPlugins#setInitComputationSchedulerHandler(io.reactivex.functions.Function)}', 1), ('Cancellation());\n', 1), ('w2.schedule(new', 1), ('OnErrorNotImplementedException(String', 1), ('Maybe.zipArray(new', 1), ('newEvent);\n\n', 1), ('goldMine.endDay();\n\n', 1), ('get(pos);\n', 1), ('HeavyFactory();\n', 1), ('RepositoryPlugin', 1), ('multi-threads.', 1), ('parse(File', 1), ('"C");\n', 1), ('builder.field("classname",', 1), ('"RunnableDisposable(disposed="', 1), ('soldierResponse', 1), ('String.format("%s%d",', 1), ('SequenceEqualTckTest', 1), ('dynamic,\n', 1), ('app.useCacheAsideStategy();\n', 1), ('AbstractFlowableWithUpstream<Notification<T>,', 1), ('3))\n', 1), ('rco.onError(new', 1), ('white-listed.\n', 1), ('members.\n', 1), ('DelaySubscriber<T>', 1), ('BiFunction()', 1), ('getMessages()', 1), ('studentToBeUpdated)', 1), ('DriverManager.getDriver(url));\n', 1), ('publishCompleted(innerObserver,', 1), ('source2;\n', 1), ('java.lang.Byte.class.getName(),\n', 1), ('java.nio.file.FileSystemException;\nimport', 1), ('java.sql.SQLInvalidAuthorizationSpecException;\nimport', 1), ('dequeued\n', 1), ('sha256', 1), ('certificates.', 1), ('testErrorIncludesLastValueAsCause()', 1), ('TEST_TICKETS_COLLECTION,\n', 1), ('Iterable(Object', 1), ('com.iluwatar.property.Character.Type;\nimport', 1), ('runInteractiveMode()', 1), ('mergeDelayError(SingleSource<SingleSource<T>>)}', 1), ('Collection<Type>', 1), ('close();\n\n', 1), ('IteratorType', 1), ('ObservableBufferBoundarySupplier<T,', 1), ('trampoline.result();\n', 1), ('RuntimeException("bla"))\n', 1), ('this.cancel', 1), ('assertEquals(INITIAL_COUNT', 1), ('TakeLastTimedObserver<T>(t,', 1), ('varying', 1), ('MostRecentSubscriber<T>(initialValue);\n\n', 1), ('Integer.parseInt(response);\n', 1), ('"logstash-index-template";\n', 1), ('(QueueSubscription<?>)d;\n\n', 1), ('(inner.queue().offer(value))', 1), ('randomIntBetween(49152,', 1), ('assertFalse(fs.isCancelled());\n\n', 1), ('java.util.ArrayList.class.getName(),\n', 1), ('page.getElementById("numberOfSongs");\n', 1), ('Maybe.&lt;Event&gt;create(emitter', 1), ('b.append(line).append("\\n");\n', 1), ('city)', 1), ('place.\n', 1), ('bucket', 1), ('requested.get()', 1), ('spellbook3.addSpell(spell7);\n', 1), ('names.add(name(ex));\n', 1), ('(0', 1), ('triggers\n', 1), ('moment,', 1), ('ReduceTckTest', 1), ('AtomicReference<PublishSubscription<T>[]>', 1), ('SingleFlatMapPublisherObserver<T,', 1), ('Flowable.just(1).throttleWithTimeout(100,', 1), ('fromActionNull()', 1), ('Java.\n', 1), ('blowing', 1), ('sourceObs.concatMap(new', 1), ('at:', 1), ('actual.hasObservers();\n', 1), ('GeneralNames(dnsSan);\n', 1), ('CompletableConcatSubscriber(s,', 1), ('subscribed.set(true);\n', 1), ('List<LetterComposite>', 1), ('spscArrayQueueNull()', 1), ('org.elasticsearch.xpack.sql.type.KeywordEsField;\n\nimport', 1), ('sanity', 1), ('.append(baseClassName.toLowerCase()).append(".").append(g.getName().replace(".java",', 1), ('settingUnderlyingWhenUnsubscribedCausesImmediateUnsubscription()', 1), ('parallel(Blackhole', 1), ('System.setProperty("mongo-port",', 1), ('currConsumerNode.lvNext();\n', 1), ('disk-full', 1), ('org.elasticsearch.xpack.sql.client.shared.ConnectionConfiguration;\nimport', 1), ('DragonSlayer(\n', 1), ('java.security.cert.CertificateException;\n\n/**\n', 1), ('scan(Single.class);\n', 1), ('unduly', 1), ('java.io.Closeable}', 1), ('RxJavaPlugins.getOnCompletableCreate());\n\n', 1), ('(RowingBoat)', 1), ('s.schedulePeriodically(Functions.EMPTY_RUNNABLE,', 1), ('Callable()', 1), ('read));\n', 1), ('MaybeJustTest', 1), ('pools.\n', 1), ('actor,', 1), ('spellDao.findAll();\n', 1), ('behind\n', 1), ('DisposableHelper.isDisposed(main.get());\n', 1), ('SinglePostCompleteSubscriber(Subscriber<?', 1), ('determine,\n', 1), ('MaybeUnsubscribeOnTest', 1), ('sb.append(":");\n', 1), ('here?"),\n', 1), ('ConsumerSingleObserver<T>', 1), ('variable/field.\n', 1), ('java.util.Stack;\nimport', 1), ('saved\n//', 1), ('testData.add(Arguments.of(\n', 1), ('TestHelper.checkDisposed(Observable.timer(1,', 1), ('onChannelWritable(key);\n', 1), ('jobId,', 1), ('rule', 1), ('Single.just(1).delay(10,', 1), ('Private', 1), ('times(1)).delete(student1);\n', 1), ('underlying.dispose();\n', 1), ('ThreadSafeDoubleCheckLocking();\n', 1), ('modifiedStudents)', 1), ('complex,', 1), ('SkipLastSubscriber<T>', 1), ('ps.concatMapMaybe(\n', 1), ('meanwhile.', 1), ('CertificateTrustRestrictions(Collection<String>', 1), ('moneyDepositEvent', 1), ('FlowableConcatMapMaybeEmptyPerf', 1), ('(classname', 1), ('javaClassesToPainlessStructs.put(painlessStruct.clazz,', 1), ('System.getProperty("file.separator");\n', 1), ('classPath.split(pathSeparator);\n', 1), ('RequestEarly()', 1), ('accountTo.handleTransferToEvent(this);\n', 1), ('found()', 1), ('toString();\n\n', 1), ('unit()', 1), ('app.useReadThroughAndWriteAroundStrategy();\n', 1), ('readLock)', 1), ('TEST_DB', 1), ('RxJavaPlugins.createSingleScheduler(factory);\n\n', 1), ('this.observers.remove(observer);\n', 1), ('noInterrupt()', 1), ('org.junit.jupiter.api.Assertions.assertFalse;\n\n/**\n', 1), ('LruCache\n', 1), ('IsEmptyTckTest', 1), ('ObservableReduceWithSingle<T,', 1), ('DelayWithMainObserver(AtomicReference<Disposable>', 1), ('WriteLock();\n\n', 1), ('LOGGER.info("Saving', 1), ('Single.just(2),\n', 1), ('"XX:+UseG1GC");\n', 1), ('777);\n', 1), ('subject.subscribe(new', 1), ('mutable', 1), ('java.security.KeyStore}\n', 1), ('appropriate\n', 1), ('administartion', 1), ('filterInvalidSource()', 1), ('CACHE_SIZE.get(parameters.env.settings());\n', 1), ('wizardDao,', 1), ('cancelButton', 1), ('Spell("Rock', 1), ('org.opensaml.saml.saml2.core.StatusResponseType;\nimport', 1), ('s.nextLine();\n\n', 1), ('SSD', 1), ('mapEnum(Class<E>', 1), ('ambWith(MaybeSource<?', 1), ('OnErrorNotImplementedException(new', 1), ('address;\n\n', 1), ('ImmediateThinSchedulerTest', 1), ('io.reactivex.internal.operators.observable;\n\n\nimport', 1), ('trySet()', 1), ('filesToMonitor.size());\n', 1), ('ScheduleRegistry', 1), ('maybe2maybe', 1), ('Integer.parseInt(map.get("weightTons")));\n', 1), ('weapon);\n\n', 1), ('SimpleApplication', 1), ('RainbowFishSerializer.writeV2(fishV2,', 1), ('CompletableCreate(CompletableOnSubscribe', 1), ('exception");\n//', 1), ('LongRunningEventException\n', 1), ('ArrayList<ScheduledThreadPoolExecutor>(POOLS.keySet()))', 1), ('(classDefPassed)', 1), ('(idx3', 1), ('authorCount);\n', 1), (')));\n\n', 1), ('SchedulerLifecycleTest', 1), ('JLabel("RUNNING...");\n', 1), ('el).findAny();\n', 1), ('29.40,', 1), ('t.subscribe(inner);\n', 1), ('FileSelectorPresenter(FileSelectorView', 1), ('less"', 1), ('risk', 1), ('rmo.onError(new', 1), ('ParallelFlowable<Upstream>', 1), ('Optional.of("Hello', 1), ('Parallel', 1), ('cache.remove(userId);\n', 1), ('(ThreadDeath', 1), ('backpressureNoRequest()', 1), ('FlowableWindowTests', 1), ('sb.append("]");\n', 1), ('assertEquals(threads1.toString(),', 1), ('fs.request(10);\n\n', 1), ('Observer<Object>,\nSingleObserver<Object>,', 1), ('scheduleDirectTimed()', 1), ('Objects.requireNonNull(trustStorePassword,', 1), ('.append(prefix).append("Version:', 1), ('below\n', 1), ("u.toString().replace('\\\\',", 1), ('supported,\n', 1), ('FACTOR', 1), ('Retry(\n', 1), ('IOTask', 1), ('itemType)', 1), ('Auto-generated', 1), ('java.util.Random;\n\nimport', 1), ('§2.12', 1), ('Access()', 1), ('20)\n', 1), ('LOGGER.info(dcl1.toString());\n', 1), ('FlowableFromFuture<T>', 1), ('FileAlreadyExistsException("blob', 1), ('between.iterator().next().contains("RxSingleScheduler"));\n\n', 1), ('checkCompletableSchedulerDoc()', 1), ('Constructor<Dispatcher>', 1), ('B>(w.w,', 1), ('(m.getDeclaringClass()', 1), ('manager\n', 1), ('SingleObserver};', 1), ('prepares', 1), ('Publisher>', 1), ('blockingSubscribeConsumer()', 1), ('testCollectToStringFlowable()', 1), ('lowestFrequencyChar(Map<Character,', 1), ('existed', 1), ('unavailable");\n', 1), ('queue.offer(g);\n', 1), ('this.onErrorCall', 1), ('clearButton;\n', 1), ('disposerThrowsNonEager()', 1), ('domainapp.integtests.bootstrap.SimpleAppSystemInitializer;\n\n/**\n', 1), ('assertTrue(innerVisitor.found());\n\n', 1), ('CountDownLatch(2);\n', 1), ('readLock.unlock();\n', 1), ('RestrictedTrustManager}.\n', 1), ('whitelistMethod.origin;\n', 1), ('(by', 1), ('ObservableDoFinally<T>', 1), ('completable,', 1), ('MenuAction(menuItem));\n', 1), ('waits.', 1), ('panel.add(processButton);\n\n', 1), ("',',\n", 1), ('!b.isEmpty())', 1), ('GoogleCloudStorageTestServer(storageUrl);\n', 1), ('Handler\n', 1), ('playing', 1), ('location\n', 1), ('super.transportClientSettings();\n', 1), ('8)', 1), ('SafeSubscriber<String>(o).onComplete();\n', 1), ('SingleSource[0])\n', 1), ('value");\n\n', 1), ('(crashDispose)', 1), ('assertEquals(2', 1), ('Consumer<TestSubscriber<T>>()', 1), ('ps.distinctUntilChanged(new', 1), ('simpleEmpty()', 1), ('ChangeKeyOpsCommand', 1), ('companion', 1), ('structs.', 1), ('ArrayList<>());\n\n', 1), ('apply(SingleObserver&lt;?', 1), ('timeMs)', 1), ('SafeObserver', 1), ('flowableCreate()', 1), ('TestSubscriber<Integer>())', 1), ('OperatorsAreFinal', 1), ('System.out;\n\n', 1), ('assertFalse(dao.getById(CUSTOMER.getId()).isPresent());\n', 1), ('897683679971470653L;\n\n', 1), ('Arrays.copyOf(buf,', 1), ('ON_NEXT', 1), ('Single.just(1).delaySubscription(Completable.complete().delay(100,', 1), ('equalTo("foo"));\n', 1), ('getOutput()', 1), ('Completable.mergeArray(Completable.complete(),', 1), ('Nazgul(NazgulName.KHAMUL));\n', 1), ("file's", 1), ('com.iluwatar.event.sourcing.domain;\n\nimport', 1), ('Flowable.fromIterable(sources).flatMap((Function)MaybeToPublisher.instance(),', 1), ('4096);\n', 1), ('remove(@NonNull', 1), ('albumRating', 1), ('formatter,', 1), ('formats)', 1), ('objectToExplain;\n\n', 1), ('shouldGetAllCustomers()', 1), ('fromIterator)', 1), ('readLock()', 1), ('onCancel', 1), ('io.reactivex.internal.fuseable.ScalarCallable;\nimport', 1), ('CombiningTrustConfig(List<TrustConfig>', 1), ('14))));\n', 1), ('ConcatMapSingleObserver(ConcatMapSingleMainObserver<?,', 1), ('0));\n', 1), ('extractor', 1), ('assertNull(seenJvmOptions.put(expectedJvmOption,', 1), ('Observable.fromFuture(Observable.never()\n', 1), ('QueueDisposable<U>', 1), ('ResourceCompletableObserverTest', 1), ('subscriber}\n', 1), ('ExceptionHelper.addThrowable(this,', 1), ('FlattenCrossMapPerf', 1), ('(sameType', 1), ('generateBucket(new', 1), ('Frequency:', 1), ('javaVersion,\n', 1), ('FlowableDefer(Callable<?', 1), ('serviceCache.put(newService.getName(),', 1), ('java.util.concurrent.LinkedTransferQueue;\n\n\npublic', 1), ('onePointSevenPointTwo', 1), ('"Maybe");\n\n', 1), ('emitter.isDisposed();\n', 1), ('terminal.println(Terminal.Verbosity.SILENT,', 1), ('Character(Type.MAGE,', 1), ('Arrays.asList(child1,', 1), ('List<Whitelist>', 1), ('details1,', 1), ('sb.append(types.get(i).esType);\n', 1), ('potions.get(type);\n', 1), ('awsRequestId)', 1), ('pp0.singleElement(),', 1), ('src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.doOnError.2.png"', 1), ('list.addAll(numbers);\n', 1), ('subscribeOn(final', 1), ('"classpath:applicationContext.xml"', 1), ('specificFieldsDetails', 1), ('testLastEmptyCollection()', 1), ('TreeSet<>(Comparator.comparing(IndexInfo::name));\n', 1), ('rangeAsync.subscribe(lo);\n\n', 1), ('created)\n', 1), ('simpleTypesMap.put(importedPainlessTypeName,', 1), ('swaps', 1), ('testNullCodeSource()', 1), ('https://bugs.openjdk.java.net/browse/JDK-8072746\n', 1), ('config', 1), ('LOGGER.info(joiner.toString());\n', 1), ('accept(TestObserver<T>', 1), ('ThreadAsyncExecutor#endProcess(AsyncResult)}\n', 1), ('(ScheduledThreadPoolExecutor)', 1), ('pendingWrites.add(data);\n', 1), ('objects.stream().forEach(o2', 1), ('d.complete(v);\n', 1), ('org.apache.tika.parser.microsoft.OldExcelParser(),\n', 1), ('Backpressure:}', 1), ('TestEnvironment.newEnvironment(settings);\n\n', 1), ('testSimpleClient()', 1), ('Authors', 1), ('LocalDateTime.from(parsed).atZone(defaultZoneId).toInstant();\n', 1), ('channel",', 1), ('dispatchReadEvent(key,', 1), ('panel.setLayout(null);\n', 1), ('OBSERVER_SUCCESS();\n', 1), ('Single.ambArray(ps.singleOrError(),', 1), ('readFirstLine(final', 1), ('privileges;\n\n', 1), ('short.class)', 1), ('StripBoundaryObserver<T>(s));\n', 1), ('CompletablePeekTest', 1), ('inDateValue)', 1), ('List<WeatherObserver>', 1), ('firstFiveNegatives);\n\n\n', 1), ('createTimeBucketInfluencer(Date', 1), ('rmo.value);\n', 1), ('cruel', 1), ('m;\n\n', 1), ('File(u.toURI());\n\n', 1), ('lambdas', 1), ('List<URL>', 1), ('sources[31]', 1), ('*/\n@Documented\n@Target(METHOD)\n@Retention(RUNTIME)\npublic', 1), ('.append(prefix).append("Description:', 1), ('}).toFlowable().subscribe(new', 1), ("(destination.indexOf('?')", 1), ('verify(observer).onSuccess(false);\n', 1), ('topping;\n\n', 1), ('PublishSelectorTckTest', 1), ('inputs)', 1), ('fusedConditional()', 1), ('testIssue1935NoUnsubscribeDownstreamObservable()', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleElement().doFinally(this));\n', 1), ('name.substring(0,', 1), ('doubleType;\n', 1), ('SingleSubscribeTest', 1), ('completableSource)', 1), ('ScanTckTest', 1), ('counters', 1), ('customers:-");\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/empty.png"', 1), ('assertEquals(Integer.valueOf(9),', 1), ('IntervalRangeObserver(Observer<?', 1), ('BaseTypeParser', 1), ('data.getMessage()));\n', 1), ('File("Journal.json");\n', 1), ('normalizedRepositoryDir.resolve(path).normalize();\n\n', 1), ('.take(500)\n', 1), ('dao.add(CUSTOMER);\n\n', 1), ('stream;\n', 1), ('message.",', 1), ('io.reactivex.internal.functions.*;\n\npublic', 1), ('painlessMethod.rtn.equals(painlessReturnClass)', 1), ('eh?");\n', 1), ('"310-992",', 1), ('Files.getFileAttributeView(tempPath,', 1), ('PERFECT_ORDER', 1), ('fruit.add(f);\n', 1), ('GuardedQueueTest', 1), ('"Order"},', 1), ('toArray(E[]', 1), ('pattern.matcher(alias).matches()))', 1), ('fromObservable}', 1), ('ps.concatMapSingle(\n', 1), ('rxThreads', 1), ('@AssistedInject}', 1), ('tika:', 1), ('publisher}', 1), ('Settings.builder().put("cluster.name",', 1), ('cleared.");\n', 1), ('addMethod(whitelist.javaClassLoader,', 1), ('ThrottleTimerImpl', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleOrError().doFinally(this));\n', 1), ('prettyPrint(\n', 1), ('Though,', 1), ('menuItemSelected(MenuItem', 1), ('Exceptions.throwIfFatal(e);', 1), ('java.time.format.DateTimeFormatter;\nimport', 1), ('basicWithErrorSerialized()', 1), ('(LotteryNumbers)', 1), ('CreatureTest', 1), ('info.setBounds(30,', 1), ('fieldCache', 1), ('"1000"})\n', 1), ('assertEquals("level1_b",', 1), ('cakeLayerInfos', 1), ('(Callable<U>)ArrayListSupplier.asCallable());\n', 1), ('materialized.subscribe(lio);\n', 1), ('wizard2', 1), ('"4', 1), ('Single<ArrayList<Integer>>>()', 1), ('org.elasticsearch.xpack.sql.util;\n\nimport', 1), ('value.call();\n', 1), ('terms.\n', 1), ('eventManager.cancel(sEventId);\n', 1), ('expectedToString', 1), ('RxJavaPlugins.onAssembly(fos));\n\n', 1), ('simple,', 1), ('PosixPermissionsResetter(Path', 1), ('Response(final', 1), ('ground!"\n', 1), ('(requesting', 1), ('eventPool;\n\n', 1), ('characterToFrequency;\n', 1), ('Stream.empty();\n', 1), ('testPluginExceptionWhileOnErrorThrowsNotImplAndUnsubscribeThrows()', 1), ('(per', 1), ('RxJavaPlugins.initSingleScheduler(new', 1), ('AsyncDisposable<T>(s,', 1), ('POOLS.put(e,', 1), ('type.getInternalName()', 1), ('times(1)).onNext("four");\n', 1), ('assertEquals(expectedOliphaunt.toString(),', 1), ('DefaultEntry(String', 1), ('involve', 1), ('(int)elements).rebatchRequests(2)\n', 1), ('.body(lambdaInfo(context))\n', 1), ('Jpa\n', 1), ('other.onError(new', 1), ('15));\n', 1), ('DefType;\n', 1), ('ob', 1), ('AndThenObservableObserver(Observer<?', 1), ('VERSION', 1), ('cancelUpfront()', 1), ('logic\n', 1), ('s.start();\n', 1), ('2.0;\n\n', 1), ('EndConsumerHelper()', 1), ('Single<Upstream>', 1), ('CakeBakingServiceImpl()', 1), ('BiConsumer<Void,', 1), ('constructor.toString();\n', 1), ('author.getEmail());\n', 1), ('ScheduledEventsWriter(events,', 1), ('SergeantVisitor(),\n', 1), ('widgets.\n', 1), ('"Combining', 1), ('JreHttpUrlConnection(url,', 1), ('PlayerDetails(doc.getString("email"),', 1), ('Pattern.compile("^[_a-zA-Z][._a-zA-Z0-9]*$");\n\n', 1), ('weapon.', 1), ('(int)elements).onErrorReturnItem(0)\n', 1), ('states\n', 1), ('money;\n\n', 1), ('to.assertValue(2);\n', 1), ('randomNum;\n', 1), ('criteria.add(Restrictions.idEq(id));\n', 1), ('error)).test().assertComplete();\n', 1), ('privateKeyPath,', 1), ('spawns', 1), ('Other', 1), ('cakeBakingService.bakeNewCake(cake1);\n', 1), ('ts.assertValueAt(i,', 1), ('details2', 1), ('LambdaInfo\n', 1), ('compareAndSet(START,', 1), ('assertNotNull(this.factory.apply(0).toString());\n', 1), ('fname', 1), ('java.security.PublicKey;\nimport', 1), ('.switchMapMaybe(Functions.justFunction(Maybe.just(1)))\n', 1), ('Flowable.empty().onTerminateDetach().subscribe(ts);\n\n', 1), ('source.subscribe(parent.subscribers);\n', 1), ('ArrayDeque<U>();\n', 1), ('Files.readAllLines(PathUtils.get("/proc/self/mountinfo"));\n', 1), ('org.joda.time.DateTimeZone}</li>\n', 1), ('path.resolve(ES_PLUGIN_PROPERTIES);\n\n', 1), ('to2.assertResult(1);\n', 1), ('(Future<S>', 1), ('AnimalSniffer', 1), ("']')", 1), ('just(T', 1), ('Cancels', 1), ('RainbowFishV2}\n', 1), ('CompositeException(errors);\n', 1), ('ArrayDeque<>(Arrays.asList(errors));\n', 1), ('initialRequest)', 1), ('null).\n', 1), ('(s.contains("jar:"))', 1), ('times(1)).onNext("");\n', 1), ('io.reactivex.internal.observers.BlockingMultiObserver;\nimport', 1), ('SLEEP_AFTER_CANCEL', 1), ('org.elasticsearch.repositories.gcs.GoogleCloudStorageTestServer.Response;\n\nimport', 1), ('materialized', 1), ('channel.getInterestedOps());\n', 1), ('java.time.ZoneId;\nimport', 1), ('stringAddress);\n\n', 1), ('ResultSetProxy', 1), ('Identifier', 1), ('algorithmically.\n', 1), ('tested.collision(other);\n\n', 1), ('FutureObserver()', 1), ('ObservableToFlowabeTestSync', 1), ('passwords', 1), ('ScalarSubscriptionTest', 1), ('op;\n\n', 1), ('it.dispose();\n\n', 1), ('src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.doFinally.png"', 1), ('cycles\n', 1), ('other.subscribe(parent.boundaryObserver);\n\n', 1), ('checkDisposed(Maybe<?>', 1), ('messages\n', 1), ('accept,', 1), ('simpleTypesMap.containsKey(importedPainlessTypeName)', 1), ('first.get()', 1), ("op's", 1), ('JTextArea();\n', 1), ('observerSingleNot(final', 1), ('create(WeaponType', 1), ('s.onSubscribe(coordinator);\n\n', 1), ('javax.sql.DataSource;\nimport', 1), ('line.trim().split("\\\\s+");\n', 1), ('org.hamcrest.Description;\nimport', 1), ('starts,', 1), ('assertTrue(((Disposable)w).isDisposed());\n', 1), ('videos;\n', 1), ('ElementAtObserver(SingleObserver<?', 1), ('constants:', 1), ('PlayerDetails("andy@google.com",', 1), ('name.charAt(index++)', 1), ('completableSource', 1), ('2).create()\n', 1), ('org.elasticsearch.bootstrap.JavaVersion;\nimport', 1), ('time............");\n', 1), ('Number",\n', 1), ('ArrayList<>(2);\n', 1), ('whitelisted', 1), ('<<STANDARD>>', 1), ('testAllDays()', 1), ('[%d]",\n', 1), ('SubscriptionDisposable(Subscription', 1), ('NotificationLite.acceptFull(o,', 1), ('SafeSubscriber<String>', 1), ('emptyConditionalBackpressured()', 1), ('nike', 1), ('"door");\n', 1), ('futureResult4.get();\n', 1), ('completeAfterNextViaRequest()', 1), ('ObservableZipIterable(\n', 1), ('testTrampolineWithFactorialFunction()', 1), ('ObjectHelper.requireNonNull(initialSupplier,', 1), ('createLotteryTicket()', 1), ('lazySet(initial);\n', 1), ('msg.addHeader(Message.Headers.SENDER,', 1), ('h2', 1), ('CUSTOM', 1), ('GeoIpProcessor.Factory(databaseReaders));\n', 1), ('initialization,', 1), ('(explicitlyForeground)', 1), ('AtomicReference<AsyncDisposable<T>[]>(EMPTY);\n', 1), ('protocol:<br>\n', 1), ('TestHelper.assertBadRequestReported(Flowable.range(1,', 1), ('property),', 1), ('rejectingExecutor()', 1), ('EventEmitter>', 1), ('m.backpressureDocLine', 1), ('termination",', 1), ('normalErrorConditional()', 1), ('propsMap.remove("java.version");\n', 1), ('WeatherObserverTest<Orcs>', 1), ('observer.onError(error.terminate());\n', 1), ('handleTransferToEvent(MoneyTransferEvent', 1), ('MaybeObserver},', 1), ('(").append(g.getName()).append(":14)\\r\\n\\r\\n");\n', 1), ('"model";\n\n', 1), ('pp.single(-99).unsubscribeOn(Schedulers.computation())\n', 1), ('inbound', 1), ('redoLastSpell()', 1), ('this.javaAugmentedClassName', 1), ('spellDao.persist(spell2);\n', 1), ('JSON\n', 1), ('cancelIgnored()', 1), ('testEndProcess()', 1), ('(LineUnavailableException', 1), ('TakeUntilOtherSubscriber\n', 1), ('"WIZARD")\npublic', 1), ('FlowableConcatMapMaybeTest', 1), ('acceptable', 1), ('BackpressureHelper.addCancel(this,', 1), ('languages.\n', 1), ('toFunction3()', 1), ('IntervalObserver(s);\n', 1), ('ArrayList<Throwable>(sources.length', 1), ('Iterable<String>', 1), ('list1)', 1), ('transportService,\n', 1), ('normalCancelAfterRequest1()', 1), ('IndexUpgradeInfoActionResponseTests', 1), ('IllegalStateException("Overslept?"', 1), ('c.observeOn(Schedulers.single());\n', 1), ('DeprecationChecksTests', 1), ('otherCompletes()', 1), ('parent.bufferSize;\n', 1), ('intention', 1), ('flowing', 1), ('FluentIterable<Integer>', 1), ('64,', 1), ('unlikely', 1), ('publisher.subscribe(new', 1), ('(allowed', 1), ('o.unit);\n', 1), ('HashSet<>(Arrays.asList(constructor.getExceptionTypes()));\n', 1), ('AppManager.initCachingPolicy(CachingPolicy.ASIDE);\n', 1), ('everywhere.', 1), ('optional;\n', 1), ('fieldsLength;', 1), ('discoNodes);\n\n', 1), ("aren't", 1), ('mapNoError()', 1), ('toInstant(timestamp).getEpochSecond();\n', 1), ('testFeatureTurnedOff()', 1), ('FlowableRetryBiPredicate<T>', 1), ('this.emitter', 1), ('s.request(p);\n', 1), ('toFunction2()', 1), ('FilterTest', 1), ('org.objectweb.asm.Type.getType(Object.class).getDescriptor();\n', 1), ('org.elasticsearch.common.blobstore.BlobPath;\nimport', 1), ('*/\n@Documented\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.PARAMETER,', 1), ('videoDetails', 1), ('.withRegion(Regions.US_EAST_1)\n', 1), ('DeprecationChecks()', 1), ('retries.\n', 1), ('assertNotNull(SingleInternalHelper.ToObservable.valueOf("INSTANCE"));\n', 1), ('InfiniteRange', 1), ('((numbers', 1), ('javaVersion170', 1), ('rangeFlatMapJust.subscribe(new', 1), ('readPrivateKey(Path', 1), ('(ZipSingleObserver<?>', 1), ('scheduler.schedulePeriodicallyDirect(this,', 1), ('SET', 1), ('listener::onFailure\n', 1), ('FlowableNever()', 1), ('this.method.confuseTarget(this.expectedTarget);\n', 1), ('String[attributeNames.size()]);\n', 1), ('%s:,', 1), ('rogueProto);\n', 1), ('fail("expecting', 1), ('a1', 1), ('getRestHeaders()', 1), ('con.setRequestProperty("Authorization",', 1), ('com.carrotsearch.hppc.cursors.ObjectCursor;\nimport', 1), ('InputStreamReader(inputStream,', 1), ('SingleAmb<T>(sources,', 1), ('c.onComplete();\n\n', 1), ('r3.run();\n\n', 1), ('Functions.ERROR_CONSUMER.accept(new', 1), ('assertFalse(ex.isTerminated());\n\n', 1), ('ObservableDematerialize<T>', 1), ('zipWith(MaybeSource<?', 1), ('org.apache.tika.Tika;\nimport', 1), ('SequentialDisposable(Disposable', 1), ('painlessStruct);\n', 1), ('page.getElementById("albumArtist");\n', 1), ('java.nio.file.LinkOption;\nimport', 1), ('is("9"));\n', 1), ('Invocation', 1), ('redundant', 1), ('methods2', 1), ('CreateEmitter<T>(observer);\n', 1), ('name=topping', 1), ('browser.', 1), ('((requestedMode', 1), ('all\ncopies', 1), ('#onComplete}.\n', 1), ('StreamInput', 1), ('this.ignoreReferralErrors', 1), ('io.reactivex.observables.GroupedObservable;\nimport', 1), ('sergeantResponse;\n', 1), ('DisposableHelper.isDisposed(resource.get());\n', 1), ('MockIndicesRequest(null,\n', 1), ('commonly', 1), ('"java.util.regex.txt",\n', 1), ('Integer.parseInt(deviceNumbers[0]);\n', 1), ('BlockingFirstSubscriber<Integer>());\n', 1), ('Optional<Number>', 1), ('proceed\n', 1), ('FlowableJust<T>', 1), ('setRest(executor.submit(this));\n', 1), ('STRENGTH:\n', 1), ('assertTrue(fallback.hasObservers());\n\n', 1), ('index++;\n', 1), ('unit=SECONDS,', 1), ('AnySubscriber(SingleObserver<?', 1), ('studentId);\n\n', 1), ('u)', 1), ('AppConfig', 1), ('io.reactivex.internal.fuseable.QueueSubscription;\nimport', 1), ('shouldSaveNewStudentWithoutWritingToDb()', 1), ('found").append("\\r\\n")\n', 1), ('number)', 1), ('userAccount.getUserName()).append(\n', 1), ('s.length());\n', 1), ('getIndexTemplateMetaDataUpgrader()', 1), ('offer(final', 1), ('isisDefaults', 1), ('completableObserver;\n', 1), ('ae;\n', 1), ('setFunds(destinationBankAccount,', 1), ('becomes\n', 1), ('parallelism();\n\n', 1), ('rewrite', 1), ('POJO', 1), ('print\n', 1), ('missing)\n', 1), ('testGet()', 1), ('"java.time.txt",\n', 1), ('request(1)', 1), ('getJavaChannel().socket().bind(\n', 1), ('disposePeriodicDirect()', 1), ('errorAll(Observer<?>', 1), ('SingleOperator&lt;String&gt;', 1), ('wrong', 1), ('task.setFirst(f1);\n', 1), ('domainapp.dom.modules.simple.SimpleObjects;\n\n/**\n', 1), ('biConsumerThrows(final', 1), ('"-XX:+UseG1GC",', 1), ('element.substring(1);\n', 1), ('onSuccessCrashes()', 1), ('execute(SqlSession', 1), ('spell);\n\n', 1), ('"SPELLBOOK_ID")\n', 1), ('ObservableAllTest', 1), ('ZipWithTckTest', 1), ('LotteryTicketId();\n', 1), ('mention', 1), ('validator', 1), ('brackets[count]', 1), ('undoStack', 1), ('Large', 1), ('mood', 1), ('(right.isEmpty())', 1), ('AlbumListPage(WebClient', 1), ('Function<GroupedFlowable<Integer,', 1), ('(!paidGroup.contains(user))', 1), ('gathered\n', 1), ('TEST_PART_MODEL', 1), ('isEnhanced', 1), ('detail.\n', 1), ('javaField;\n\n', 1), ('Within', 1), ('doc,\n', 1), ('Subscriber-based', 1), ('drain();\n\n', 1), ('kingsHand', 1), ('ObjectHelper.requireNonNull(sourceSupplier,', 1), ('commit()', 1), ('testRangeWithZero()', 1), ('18:39', 1), ('apply(HashMap<String,', 1), ('(owner.clazz.isInterface()', 1), ('ConnectionProxy', 1), ('(loadDatabaseOnHeap)', 1), ('awaitInterrupted()', 1), ('throwable);\n\n', 1), ('}).toFlowable().blockingLast().toString();\n\n', 1), ('iff', 1), ('idToCustomer.remove(customer.getId())', 1), ('!executor.awaitTermination(SHUTDOWN_TIME,', 1), ('fallbackDispose()', 1), ('DNS', 1), ('ClosableTest', 1), ('(retrieveAliases)', 1), ('System.getProperties();\n\n', 1), ('errorCount++;\n', 1), ('poolSize', 1), ('observer1)', 1), ('.assertResult(10,', 1), ('incrementCount(String', 1), ('sequential(int', 1), ('q.add(err);\n', 1), ('(objectToExplain', 1), ('exclusive\n', 1), ('DematerializeSubscriber<T>', 1), ('getConnection(String', 1), ('parent.dispose();\n', 1), ('"isBase64Encoded"\n', 1), ('never()).insert(student1);\n', 1), ('doc.put("bank",', 1), ('OnErrorNotImplementedException);\n', 1), ('randomIntBetween(9,', 1), ('(paidGroup.contains(user))', 1), ('getActiveNodesForCurrentCluster();\n', 1), ('Aggregator', 1), ('iterable.spliterator();\n', 1), ('2))', 1), ('.cast(Number.class);\n', 1), ('SoldierVisitorTest()', 1), ('(!member.equals(actor))', 1), ('@Autowired\n', 1), ('reply.getLength()));\n', 1), ('.switchIfEmpty(Observable.fromIterable(Arrays.asList(42)));\n\n', 1), ('validation,\n', 1), ('taskRunnable2', 1), ('Delay(set,', 1), ('AlchemistShopTest', 1), ('SingleDoAfterTerminate<T>(this,', 1), ('.concatMapCompletable(completableError()));\n', 1), ('this.whitelistStructs', 1), ('Trampoline<Integer>', 1), ('this.veryEnd', 1), ('trustConfigs;\n\n', 1), ('Predicate<String>', 1), ('ByteArrayOutputStream}.\n', 1), ('ssl', 1), ('ObservableSource<TRightEnd>', 1), ('work,', 1), ('cancelAfterFirstDelayError()', 1), ('foundLayers)', 1), ('LOGGER.info("Recover', 1), ('urlStr', 1), ('"index=\'"', 1), ('Journal.json', 1), ('Logstash', 1), ('FlowableSkipLastTimed(Flowable<T>', 1), ('2).filter(new', 1), ('SingleSource-like', 1), ('clientName;\n\n', 1), ('storageTestServer', 1), ('setSubscriptionMissed()', 1), ('MaybeFlatten(source,', 1), ('properties.containsKey(PURGE_PERIOD_SECONDS_KEY))', 1), ('makeServiceCalls(Tenant', 1), ('hiding', 1), ('s.scheduleDirect(r));\n\n', 1), ('classname);\n', 1), ('loader,', 1), ('toppingInfo);\n\n', 1), ('FluentIterable\n', 1), ('timeoutOther()', 1), ('javadoc2.indexOf(wrongPre', 1), ('readingTime);\n', 1), ('ArrayList<Integer>', 1), ('FileInputStream(aFile),', 1), ('errorRace()', 1), ('inputObject.getClass())', 1), ('("boolean".equals(whitelistStruct.javaClassName))', 1), ('verify(child).accept(eq(visitor));\n', 1), ('"owner",', 1), ('user);\n\n', 1), ('string-mapped', 1), ('TimeOutObserver(cd,', 1), ('JarInputStream(Files.newInputStream(path)))', 1), ('-2434867452883857743L;\n\n', 1), ('readTrustGroup(resolveGroupConfigPath(environment));\n', 1), ('cleaning"},\n', 1), ('Uses:\n', 1), ('consumerNull()', 1), ('B2BService(timer);\n', 1), ('obsMaybe.subscribe(new', 1), ('assertSame(f,', 1), ('Consumer<GroupedUnicast<K,V>>', 1), ('List<Object>>', 1), ('testWriteV2ReadV1()', 1), ('AbstractSelectionKey', 1), ('redoes', 1), ('(hasNext);\n\n', 1), ('submitted.");\n', 1), ('collectMessageFromMessageData()', 1), ('AzureStorageTestServer}', 1), ('email.contains("@"),', 1), ('"+358042354"));\n', 1), ('("byte".equals(whitelistStruct.javaClassName))', 1), ('createGetIndexRequest(String', 1), ('blew', 1), ('check("Maybe");\n', 1), ('this.abilities', 1), ('<dd>Any', 1), ('setSubscription(Subscription', 1), ('account)', 1), ('java.util.concurrent.ThreadFactory;\nimport', 1), ('exactSequence()', 1), ('TimestampConverter}', 1), ('CustomScheduler();\n\n', 1), ('urlEncode(request);\n', 1), ('getCount(String', 1), ('FlowableSingle(Flowable<T>', 1), ('shadows")});\n', 1), ('setValue(T', 1), ('testConsume()', 1), ('customComparatorThrows()', 1), ('FlowableBufferBoundary<T,', 1), ('failComputationObservableToFuture()', 1), ('verifyNoMoreInteractions(queue);\n', 1), ('org.openjdk.jmh.annotations.Setup;\nimport', 1), ('"Shyam",', 1), ("application's\n", 1), ('Single.just(1).delaySubscription(Single.timer(100,', 1), ('Downloads', 1), ('nextCancelRaceBackpressuredConditional()', 1), ('Math.max(version.size(),', 1), ('QUANTILES_STATE', 1), ('.<Void>toMaybe()\n', 1), ('Placeholder', 1), ('8828587559905699186L;\n', 1), ('out;', 1), ('earlier.\n', 1), ('Subscriber");\n', 1), ('scheduler.advanceTimeBy(99,', 1), ('subscriber.set(t);\n', 1), ('completeMatch', 1), ('createTempFile("existing",', 1), ('(countersCollection.count()', 1), ('s.shutdown();\n', 1), ('ObjectHelper.requireNonNull(reducer.apply(accumulator,', 1), ('domainapp.fixture.modules.simple.SimpleObjectsTearDown;\n\n\n/**\n', 1), ('Subscriber>', 1), ('assertEquals(movement,', 1), ('*/\n@FunctionalInterface\npublic', 1), ('Supplier[]{Hunter::new},\n', 1), ('(useMongoDb)', 1), ('spin-wait', 1), ('SingleDeferTest', 1), ('"singleSupplier', 1), ('testRestrictPrivileges()', 1), ('JVM\n', 1), ('Modifier.STATIC)', 1), ('check("Single");\n', 1), ('testNeverObservable()', 1), ('scheduler.triggerActions();\n', 1), ('freeGroup', 1), ('io.reactivex.internal.schedulers.SingleScheduler;\nimport', 1), ('"SingleSchedulerTest";\n', 1), ('PropertiesFeatureToggleVersion', 1), ('(paramType.isAssignableFrom(Callable.class))', 1), ('readFromProperties(final', 1), ('500)', 1), ('time-consuming', 1), ('ObservableIntervalTest', 1), ('posted\n', 1), ('spell.', 1), ('to.assertValueAt(i,', 1), ('io.reactivex.internal.schedulers.SchedulerMultiWorkerSupport.WorkerCallback;\nimport', 1), ('done\n', 1), ('violated,\n', 1), ('changeAlbumTitle(String', 1), ('Business', 1), ('creates.', 1), ('assertEquals(expectedDamage,', 1), ('tempPathView', 1), ('conditionalPath()', 1), ('roles.put(ROLE_B,', 1), ('that.count);\n', 1), ('WithLatestInnerObserver\n', 1), ('ArithmeticSumTask\n', 1), ('jar,', 1), ('getRealms(ResourceWatcherService', 1), ('Character()', 1), ('BiConsumer<T1,', 1), ('a.onNext(o);\n', 1), ('Map<Stats,', 1), ('Collections.unmodifiableList(jobs);\n', 1), ('f.cancel(allowInterrupt);\n', 1), ('queryService.getAuthorByUsername("username1");\n', 1), ('java.util.Timer;\nimport', 1), ('SpscLinkedArrayQueue<T>(bufferSize);\n', 1), ('TypeToClass(Type', 1), ('InnerObserver<T>(0,', 1), ('EnumSet.copyOf(permissions);\n', 1), ('producedMore()', 1), ('javax.sound.sampled.UnsupportedAudioFileException;\nimport', 1), ('readerLock;\n', 1), ('MaybeTimer(long', 1), ('FlowableThrottleLastTests', 1), ('getSimpleObjects()', 1), ('synchronous,', 1), ('org.junit.AfterClass;\nimport', 1), ('REQUESTED))', 1), ('assertTrue(appender.logContains(this.expectedStealMethod));\n', 1), ('next.shutdown();\n', 1), ('o.subscribeOn(Schedulers.io()).blockingForEach(new', 1), ('UNIX', 1), ('mapper.resolveRoles(user,', 1), ('bs2));\n', 1), ('MaterializeSubscriber(Subscriber<?', 1), ('(painlessSuperStructs.contains(painlessInterfaceStructName)', 1), ('limitAndTake()', 1), ('requestDescription;\n\n', 1), ('pool.checkIn(expectedOliphaunt);\n', 1), ('getJavaVersion()', 1), ('this.panel', 1), ('(freeGroup.contains(user))', 1), ('(newGroup)', 1), ('InvalidParameterException("Number', 1), ('timedTestScheduler()', 1), ('immediately,', 1), ('isolates', 1), ('batchSize();\n\n', 1), ('explicitly', 1), ('verifyZeroInteractions(ballItem);\n\n', 1), ('bot.add(del,', 1), ('\\n(2)', 1), ('tryScalarXMapSubscribe(ObservableSource<T>', 1), ('getType("Float");\n', 1), ('org.elasticsearch.xpack.core.security.authc.RealmConfig;\nimport', 1), ('normalEager()', 1), ('io.reactivex.annotations.SchedulerSupport#NEW_THREAD', 1), ('Idores\'");\n', 1), ('subList(int', 1), ('"rx2.newthread-priority";\n\n', 1), ('<p>Similar', 1), ('e.onComplete();\n\n', 1), ('stdout', 1), ('MaybeZipArrayTest', 1), ('expectedExecutionTime;\n\n', 1), ('cooking"},\n', 1), ('customerResource.delete(customer.getId());\n\n', 1), ('flush()', 1), ('studentRepository.registerDeleted(gopi);\n', 1), ('Replay</a>\n', 1), ('Integer[7]));\n\n', 1), ('first-in,', 1), ('CompletableDisposable(CompletableObserver', 1), ('db.getCollection("user_accounts").find(new', 1), ('SqlExceptionType(Function<String,', 1), ('groupCount.getAndIncrement();\n\n', 1), ('bodies.size()', 1), ('Logger.getLogger(SavePersonApiHandler.class);\n', 1), ('System.out.println(pv);\n', 1), ('this.transportClientMode', 1), ('io.reactivex.internal.observers.SubscriberCompletableObserver;\n\npublic', 1), ('multiples', 1), ('ZipCoordinator(Subscriber<?', 1), ('getPendingAudio()[i].getVolume()));\n\n', 1), ('toMaybe', 1), ('toInstant(String', 1), ('SecurityExtension', 1), ('SafeObserver(@NonNull', 1), ('Thread.currentThread(),', 1), ('administration;\n', 1), ('(BrokenBarrierException', 1), ('this.commanderResponse', 1), ('stops,', 1), ('mergeNAsyncStreamsOfN(final', 1), ('ObjectHelper.verifyPositive(parallelism,', 1), ('ResponseHandler(dir(args[1])));\n', 1), ('synchronized/up-to-date.', 1), ('rsa.initSign(decryptedPrivateKey);\n', 1), ("Letter('r'),", 1), ('weather.timePasses();\n\n', 1), ('<p>Due', 1), ('newService', 1), ('Struct}.\n', 1), ('fusionMode;\n', 1), ('in.getVersion().before(Version.V_6_3_0))', 1), ('URIParameter(file.toUri()));\n', 1), ('@director:");\n', 1), ('Arrays.toString(((URLClassLoader)loader).getURLs()));\n', 1), ('ioException);\n', 1), ('that.functionName', 1), ('queries.getAuthorBooks("jBloch");\n\n', 1), ('System.setOut(realStdOut);\n', 1), ('FlushAcknowledgementHolder>', 1), ('cos', 1), ('studentsToBeInserted)', 1), ('.validate(User::getSex,', 1), ('Container', 1), ('InternalConsumer(bh,', 1), ('XPackBuild.class.getProtectionDomain().getCodeSource().getLocation();\n', 1), ('struct.type;\n\n', 1), ('this.sergeantResponse', 1), ('alter', 1), ('Logger.getLogger(ConsoleLoggerModule.class);\n\n', 1), ('discovered,', 1), ('name.equals(other.getName());\n\n', 1), ('startThread()', 1), ('uri', 1), ('Collections.unmodifiableMap(struct.methods);\n\n', 1), ('CompletableMergeSubscriber', 1), ('INVENTORY_SIZE', 1), ('IndexInfo(String', 1), ('reader.getLineNumber();\n', 1), ('EGGS?', 1), ('codebase', 1), ('<p>Constructors', 1), ('Observable.just((String)null);\n', 1), ('depth.set(Thread.currentThread().getStackTrace().length);\n', 1), ('NotificationLite.error(t);\n', 1), ('(Long)a[1];\n', 1), ('this.privileges', 1), ('addSingleFilePath(Permissions', 1), ('<p>Promises', 1), ('future.get(),', 1), ('IncrementingPublisher(size));\n', 1), ('TrustConfig}\n', 1), ('anything:', 1), ('ObservableConcatWithSingle<T>', 1), ('Response.\n', 1), ('Version.class.getClassLoader().getResources(target);\n', 1), ('(this.ok.equals(e.getSource()))', 1), ('list.get(index).getCause()', 1), ('Observable.just("one");\n', 1), ('LoggerFactory.getLogger(Weather.class);\n\n', 1), ('(painlessStruct.clazz.isInterface()', 1), ('InetAddress.getByName(url.getHost());\n', 1), ('"Bernard",', 1), ('worker.action(actions);\n', 1), ('SingleDoAfterTerminate<T>', 1), ('contentType;\n', 1), ('sEventId);\n', 1), ('UnsubscribeOnSingleObserver<T>', 1), ('enumerate()', 1), ('(IndexType', 1), ('remove(this);\n', 1), ('(alike', 1), ('BaseTypeParser()', 1), ('allCakes', 1), ('newName.append(Character.toLowerCase(name.charAt(2)));\n', 1), ('CustomRealm.PW_HEADER);\n', 1), ('BusinessOperation', 1), ('lazySet(FUSED_READY);\n', 1), ('SubscriptionHelper.setOnce(this.s,', 1), ('isCompleteMatch()', 1), ('mapFailWithRetryLimited()', 1), ('view.setPresenter(this);\n', 1), ('ObserveOnMaybeObserver<T>(observer,', 1), ('workDone);\n', 1), ('(TYPE_NAME_PATTERN.matcher(whitelistMethod.javaMethodName).matches()', 1), ('painlessReturnClass,\n', 1), ('MaybeMergeWithTest', 1), ('implement\n', 1), ('singleSourceAsMs()', 1), ('MaybeUnsubscribeOn<T>(this,', 1), ('assertTrue(d1.isDisposed());\n\n', 1), ('result.getExceptionList().add(e.getClass()', 1), ('ThreadAsyncExecutorTest', 1), ('testDefaultNewThreadSchedulerIsInitializedLazily()', 1), ('nameBuilder.toString();\n', 1), ('bi-predicate', 1), ('commitDelete();\n', 1), ('testFromString(NumberExpression', 1), ('SAML', 1), ('unsubscription.",', 1), ('list.remove(0);\n', 1), ('e.getEnumConstants().length);\n\n', 1), ('Single.just(1d)\n', 1), ('CompletableFromUnsafeSource(CompletableSource', 1), ('jBlochBooksCount', 1), ('schedulerKind;\n\n', 1), ('p.subscribe(nextInner);\n', 1), ('Observable#subscribe}', 1), ('this.writingTime', 1), ('sense:', 1), ('fromDto', 1), ('exceptions");\n\n', 1), ('"stop', 1), ('exact', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/error.png"', 1), ('events.size())', 1), ('Integer.MAX_VALUE),', 1), ('commandService.authorUsernameUpdated("username2",', 1), ('InitializingOnDemandHolderIdiom}.', 1), ('testFeatureTurnedOn()', 1), ('jAugmentedClass;\n', 1), ('doOnDisposeCalled()', 1), ('(EventObserver', 1), ('(DisposableHelper.setOnce(upstream,', 1), ('assertNull(RxJavaPlugins.onSubscribe(Single.just(1),', 1), ('indexMappings.value);\n', 1), ('LeafExpression(Location', 1), ('Maybe.just(1).mergeWith(Maybe.just(2))\n', 1), ('org.elasticsearch.cli.Terminal.Verbosity;\nimport', 1), ('never()).onNext(4);\n', 1), ('mock(DefaultSubscriber.class);\n\n', 1), ('parent.onComplete.run();\n', 1), ('toObservableTake()', 1), ('(Whitelist.Method', 1), ('localNodeSupplier,', 1), ('single;\n\n', 1), ('IoHolder', 1), ('BaseTypeParser.parse(MaybeNo2Dot0Since.findSource("Flowable"),', 1), ('keyPassword));\n', 1), ('newPermissions)', 1), ('createConsumerThrowsOnError()', 1), ('RxJavaPlugins.onAssembly(merged);\n', 1), ('secureStrings.putAll(source.secureStrings);\n', 1), ('unboxFrom)', 1), ('BaseDaoTest<E', 1), ('onErrorAfterCrashConditional()', 1), ('(Type)object;\n\n', 1), ('Single.error(ex).subscribe(new', 1), ('wizards\n', 1), ('ActionListener<Set<RoleDescriptor>>', 1), ('"all",', 1), ('(<code>CakeInfo</code>,', 1), ('disposePropagates()', 1), ('worker2.schedule(new', 1), ('Set<Class<?>>', 1), ('whitelistMethods.add(new', 1), ('attributeView.setPermissions(permissions);\n', 1), ('DriverManagerRegistrationTests', 1), ('individually', 1), ('structName', 1), ('minimum.\n', 1), ('Group', 1), ('ScheduledRunnable(r0,', 1), ('CsvRecordWriter', 1), ('@title,', 1), ('verify(spellDao).findAll();\n', 1), ('fields);\n', 1), ('TestHelper.checkDisposed(Single.just(1).delaySubscription(Single.just(2)));\n', 1), ('this.resource.lazySet(resource);\n', 1), ('LdapMetaDataResolverSettings()', 1), ('ManagementFactory.getRuntimeMXBean().getName().split("@")[0];\n', 1), ('{}",\n', 1), ('keyPair.getPrivate(),', 1), ('HELPER.scheduleDirect(sr,', 1), ('requested.', 1), ('assertFalse(list.removeAll(Arrays.asList(10,', 1), ('spellbookDao.findAll();\n', 1), ('perms.add(OTHERS_EXECUTE);\n\n', 1), ('Annotation[][]', 1), ('If,', 1), ('ObservableBufferBoundary<T,', 1), ('(++size', 1), ('inetAddress.getHostName();\n', 1), ('RefCountSubscriber<T>(s,', 1), ('cs}', 1), ('StandardCharsets.UTF_8),\n', 1), ('t5)', 1), ('100L);\n\n', 1), ('overrideInitIoScheduler()', 1), ('oliphaunts', 1), ('testCollectionConversion()', 1), ('spellbook2.addSpell(spell5);\n', 1), ('connected\n', 1), ('observableNoFlowable()', 1), ('.map(Integer::longValue)\n', 1), ('testDistinctUntilChangedOfNormalSource()', 1), ('apply(Observable<T>', 1), ('expectedToString,\n', 1), ('apply(List<Object>', 1), ('TreasureChest}\n', 1), ('FlowableRetryPredicate(Flowable<T>', 1), ('"Second").repeat().single("");\n', 1), ('this.functionalMethod', 1), ('Objects.requireNonNull(index);\n', 1), ('XPackBuild(shortHash,', 1), ('bounded1()', 1), ('oliphaunt4);\n\n', 1), ('address.addressLineOne', 1), ('"completableSource', 1), ('setFirstName(String', 1), ('!m.signature.contains("Completable")\n', 1), ('o.subscribe(bs);\n\n', 1), ('methodhandle', 1), ('MaybeSubscribeOnTest', 1), ('reacting', 1), ('all.size());\n', 1), ('times.size(),', 1), ('w1.schedule(countAction);\n\n', 1), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;\nimport', 1), ('SingleSubject.\n', 1), ('<code>&lt;&lt;STANDARD&gt;&gt;</code>):\n', 1), ('java.nio.file.attribute.PosixFilePermission;\nimport', 1), ('("void".equals(whitelistStruct.javaClassName))', 1), ('onExceptionResumeNext(final', 1), ('publicKeyPath)', 1), ('world\n', 1), ('OnErrorNextSubscriber<T>(s,', 1), ('builder.endObject();\n', 1), ('input.observable.subscribeOn(Schedulers.computation());\n', 1), ('Collections.unmodifiableList(bodies);\n', 1), ('Consumer<TestObserver<T>>', 1), ('add(Module...', 1), ('nonBlocking;\n\n//', 1), ('connectableFlowable;\n', 1), ('LotteryTest', 1), ('message.</p>\n', 1), ('heap', 1), ('testRangeUnsubscribe()', 1), ('Iterator,', 1), ('title.equals(book.getTitle())', 1), ('ReadableDateTime[][]', 1), ('license.toXContent(contentBuilder,', 1), ('minimal', 1), ('slowPath(Subscriber<?', 1), ('s.get());\n', 1), ('com.iluwatar.abstractfactory;\n\nimport', 1), ('Traits', 1), ('<i>world.txt</i>\n', 1), ('rmo.add(null);\n', 1), ('getAllCustomers()', 1), ('servant.feed(k);\n', 1), ('flowableBlockingSubscribe1()', 1), ('renders', 1), ('268435460,,,,,\\0,\\u0000,,,,,"\n', 1), ('ObjectType', 1), ('fromArrayEmpty()', 1), ('@Ignore("subscribe()', 1), ('MediaType.application("vnd.ms-visio.template"),\n', 1), ('BASE_WHITELISTS', 1), ('MaybeConcatIterable(Iterable<?', 1), ('position', 1), ('arbiter.produced(1L);\n', 1), ('put(Integer', 1), ('serving', 1), ('ConsoleLoggerModule.singleton;\n', 1), ('getAllCakes();\n\n', 1), ('parseClassPath(String', 1), ('resultSet.getString(1);\n\n', 1), ('design.', 1), ('RxJavaPlugins.setOnConnectableFlowableAssembly(connectableFlowable2ConnectableFlowable);\n', 1), ('rangeAsyncPipeline;\n\n', 1), ('memoryMXBean', 1), ('pp2.singleElement()))\n', 1), ('hasToString(containsString("foo', 1), ('E#interpret()}\n', 1), ('org.elasticsearch.cloud.gce.util;\n\nimport', 1), ('"*":\n', 1), ('mn.onSubscribe(Disposables.empty());\n', 1), ('assertSame(m.toString(),', 1), ('Flowables).\n', 1), ('"needs', 1), ('EMPTY_LIST', 1), ('subscription.get().request(n);\n', 1), ('(Map.Entry<MethodKey,', 1), ('</a>\n', 1), ('walkingCreatures.stream().forEach(c', 1), ('long.class', 1), ('InetAddressHelper', 1), ('(out.getVersion().onOrAfter(Version.V_6_0_0_beta2)', 1), ('current.lazySet(null);\n\n', 1), ('clazzes', 1), ('CachingPolicy', 1), ('DoAfterTerminateObserver<T>', 1), ('holder.flushAcknowledgement;\n', 1), ('(!text.equalsIgnoreCase("y"))', 1), ('others[i].subscribe(observers[i]);\n', 1), ('"io.reactivex:trampoline";\n', 1), ('synchronized).\n', 1), ('(usually', 1), ('RuntimeException("error', 1), ('MaybeOnErrorReturn<T>(this,', 1), ('com.amazonaws.services.dynamodbv2.AmazonDynamoDB;\nimport', 1), ('attr.getName().equals(name))\n', 1), ('Observable.fromArray(array).reduce(0,', 1), ('Consumer)\n', 1), ('SAMLObject', 1), ('deletedStudents)', 1), ('loop.\n', 1), ('(qd', 1), ('batchSize', 1), ('FlowableRepeatUntil<T>', 1), ('Integer)', 1), ('jobId)', 1), ('SingleOperator<?', 1), ('testFileErrorMessage()', 1), ('element.replace("/",', 1), ('testCheckIfYouWillBeHanged()', 1), ('"version', 1), ('initalCapacity)', 1), ('mergeDelayErrorPublisher()', 1), ('java.lang.reflect.Array;\nimport', 1), ('sail', 1), ('#more(Trampoline)},\n', 1), ('source.groupBy(new', 1), ('initializeAndPopulateDatabase()', 1), ('this.interestedOps', 1), ('SerializedSubscriber<T>', 1), ('this.callback', 1), ('manually.\n', 1), ('testObserverAsTs()', 1), ('InventoryTest', 1), ('Completable.complete().delay(1,', 1), ('DBManager}', 1), ('p.getClass()', 1), ('fail("we', 1), ('RainbowFishSerializerTest', 1), ('(Integer)o[0]', 1), ('5).concatWith(Observable.<Integer>error(new', 1), ('ripples', 1), ('nonBlocking)', 1), ('#NONE', 1), ('getAudioStream(String', 1), ('subscribe(Flowable<Integer>', 1), ('resumeFunctionInCaseOfError', 1), ('r2.run();\n', 1), ('getAvailableToppingEntities();\n', 1), ('seedBadSource()', 1), ('fn.replace(".java",', 1), ('fusedFlatMapNullHidden()', 1), ('.filter(attr', 1), ('scheduler.now(unit)', 1), ('ClientException("Unrecognized', 1), ('outerWrapper.getWrappedRunnable();\n', 1), ('Acquire', 1), ('(VERSION_IS_AT_LEAST_JAVA_9)', 1), ('.doOnNext(Functions.emptyConsumer())\n', 1), ('super(GHobbits::new);\n', 1), ('dateTimeFormatter,', 1), ('tm.run();\n\n', 1), ('instance;\n\n', 1), ('this.caPaths', 1), ('!addressLineTwo.equals(address.addressLineTwo)', 1), ('dispatcher.menuItemSelected(MenuItem.COMPANY);\n\n', 1), ('openComplete(BufferOpenObserver<Open>', 1), ('this.title', 1), ('ObservableDebounceTimed<T>', 1), ("structsMap.get(name.replace('$',", 1), ('SerialDisposable(@Nullable', 1), ('14));\n', 1), ('RxJavaPlugins#createComputationScheduler(ThreadFactory)}', 1), ('AllPermission\n', 1), ('Maybe.just(1).takeUntil(Flowable.just(1).take(1))\n', 1), ('//NTLNTL\n\n', 1), ('panel.add(jtAreas[1]);\n', 1), ('dao\n', 1), ('newConcurrentMapLong()', 1), ('awaitingFlushed.remove(flushId);\n', 1), ('attr.getName(),\n', 1), ('restore', 1), ('(n,', 1), ('Flowable.fromPublisher(sources).concatMapDelayError((Function)MaybeToPublisher.instance());\n', 1), ('FlowableDoFinally<T>', 1), ('.append(fighterClass', 1), ('byName.getName());\n', 1), ('asFunction()', 1), ('BackpressureHelper.multiplyCap(skip', 1), ('jsonElement;\n', 1), ('view;\n\n', 1), ('PartyMemberTest', 1), ('easier', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleOrError().subscribeOn(new', 1), ('FlowableScanSeed<T,', 1), ('assertNull(Flowable.fromArray(1,', 1), ('Hero.Builder(Profession.THIEF,', 1), ('Objects.hash(super.hashCode(),', 1), ('studentToBeUpdated.getName()', 1), ('def.class.getSimpleName().equals(name),', 1), ('IllegalStateException("Already', 1), ('observer.blockingGet(defaultValue);\n', 1), ('fish.getWeightTons());\n\n', 1), ('(normalizedPath.startsWith(normalizedRepositoryDir))', 1), ('b.toString();\n', 1), ('Effective\n', 1), ('names()', 1), ('headers.put(Message.Headers.SENDER,', 1), ('failComputationFlowableToFuture()', 1), ('groupListener', 1), ('io.reactivex.SingleSource;\n\n/**\n', 1), ('<code>data</code>', 1), ('Event(newEventId,', 1), ('Objects.hash(attachments);\n', 1), ('.subscribe(Functions.EMPTY_ACTION);\n', 1), ('JTextField', 1), ('FileReader(file)))', 1), ('both.add(at.next());\n', 1), ('Deflater(Deflater.DEFLATED,', 1), ('FlowableEventStreamTest', 1), ('assertEquals(Arrays.asList(4L,', 1), ('LOGGER.info(AccountAggregate.getAccount(ACCOUNT_OF_JON).toString());\n', 1), ('VirtualMachineError}</li>\n', 1), ('values");\n', 1), ('failComputationFlowableBlockingFirst()', 1), ('List<NamedExpression>', 1), ('com.iluwatar.poison.pill.Message.Headers;\nimport', 1), ('SortedTckTest', 1), ('Function<MaybeSource<T>,', 1), ('<code>readObject</code>', 1), ('cnfe);\n', 1), ('DROP_LATEST\n}\n', 1), ('java.security.Permissions;\n\npublic', 1), ('on.</dd>\n', 1), ('times(1)).onNext(anyInt());\n', 1), ('ObservableElementAtSingle<T>', 1), ('"onError(io.reactivex.exceptions.TestException:', 1), ('ResponseOrException(SQLException', 1), ('org.elasticsearch.xpack.sql.expression.Attribute;\nimport', 1), ('ZipSingleObserver<T>(this,', 1), ('org.elasticsearch.xpack.sql.analysis.index;\n\nimport', 1), ('IOException("Error', 1), ('"java.text.txt",\n', 1), ('com.iluwatar.monostate;\n\nimport', 1), ('ConnectableFlowable}.\n', 1), ('JButton("Delete");\n', 1), ('InnerCompletableCache\n', 1), ('addRace()', 1), ('hash\n', 1), ('q.add(NotificationLite.subscription(s));\n', 1), ('dispatcher.stop();\n', 1), ('tickets.\n', 1), ('backpressure-safe', 1), ('count(b.title)"', 1), ('numbers.addAll(givenNumbers);\n', 1), ('io.reactivex.exceptions.UndeliverableException', 1), ('headers)', 1), ('builder.append(",");\n', 1), ('soElement(int', 1), ('mergeDelayError(sources,', 1), ('onErrorFailedException', 1), ('Collections.singletonList(job);\n', 1), ('com.iluwatar.value.object;\n\nimport', 1), ('io.reactivex.internal.operators.flowable.FlowableInterval.IntervalSubscriber;\nimport', 1), ('obs.onEvent(e);\n', 1), ('HeroStat(strength,', 1), ('implementations.', 1), ('java.util.jar.JarEntry;\nimport', 1), ('String.indexOf(String)', 1), ('LoggerFactory.getLogger(ReaderAndWriterTest.class);\n\n', 1), ('assertThat(7,', 1), ('(uname', 1), ('dust!"));\n', 1), ('delaySubscription(Observable.timer(time,', 1), ('ToFlowableIterator(Iterator<?', 1), ('indexOf', 1), ('csub.add(w1);\n', 1), ('producerIndex.get()', 1), ('SQLException;\n\n', 1), ('TREE_ROOT.getTreeSize());\n', 1), ('JavadocFindUnescapedAngleBrackets', 1), ('(Integer)o[1];\n', 1), ('that)', 1), ('-7730517613164279224L;\n\n', 1), ('it).\n', 1), ('disposeNoFurtherSignals()', 1), ('open).\n', 1), ('UnitOfWork', 1), ('Disposables.fromSubscription(s).dispose();\n\n', 1), ('Page".equals(page.getTitleText());\n', 1), ('maybes)', 1), ('tc.complete);\n\n', 1), ('THROWING_DISPOSABLE', 1), ('FlowableThrottleFirstTest', 1), ('resource.get();\n', 1), ('interestedOps;\n\n', 1), ('Schedulers#newThread()', 1), ('statusMember.getStarted());\n', 1), ('never-completing', 1), ('(ParallelReduceFullInnerSubscriber<T>', 1), ('shouldNotInsertToDbIfNoRegisteredStudentsToBeCommitted()', 1), ('assertTrue(mo.isDisposed());\n\n', 1), ('CompletableDelay(CompletableSource', 1), ('ObservableMergeTests', 1), ('this.factoryWithoutDefaultObserver', 1), ('SecurityFiles.setPosixAttributesOnTempFile(path,', 1), ('MaybeToSingle<T>', 1), ('java.util.concurrent.CopyOnWriteArrayList;\nimport', 1), ('this.dimensions', 1), ('Elements', 1), ('mainArray', 1), ('unbounded()', 1), ('timed;\n\n', 1), ('handler.</dd>\n', 1), ('failSingleSingleBlockingGet()', 1), ('<em>Retry</em>', 1), ('V2\n', 1), ('com.iluwatar.hexagonal.sampledata;\n\nimport', 1), ('precompute', 1), ('"\\n");\n', 1), ('(doc', 1), ('values[d][0]', 1), ('spValue(null);\n', 1), ('firstIgnoredCancelAndOnError()', 1), ('500000);\n', 1), ('FallbackObserver<T>(actual,', 1), ('longs.get(1));\n', 1), ('br.readLine();\n', 1), ('Flowable.fromArray(array(elements))\n', 1), ('setRest(Future<?>', 1), ('missing\n', 1), ('properties.put(stringProps[i],', 1), ('combining', 1), ('firehose;\n', 1), ('IgnoreObservable<T>', 1), ('inputs;\n\n', 1), ('w.subscribe(to1);\n\n', 1), ('10).lastElement().toFlowable()\n', 1), ('Heavy();\n\n', 1), ('InnerObserver(MergeObserver<T,', 1), ('MpscLinkedQueue<Integer>', 1), ('java.security.URIParameter;\nimport', 1), ('Resources.readLines(Resources.getResource(contextClass,', 1), ('spscLinkedArrayQueueNull()', 1), ('pattern:-', 1), ('System.getProperty("sun.boot.class.path"));\n', 1), ('cheat', 1), ('1:05', 1), ('AccountCreateEvent)', 1), ('StatusMember(2));\n', 1), ('ts1.assertNoValues();\n\n', 1), ('Iterable<Integer>()', 1), ('"trust.subject_name";\n', 1), ('BufferOpenSubscriber<Open>', 1), ('resolutions;\n', 1), ('assertFalse(SubscriptionHelper.setOnce(ref,', 1), ('StatusMember(int', 1), ('DelayObserver(SequentialDisposable', 1), ('AllPermission();\n', 1), ('dispatchReadEvent(SelectionKey', 1), ('defaultIfEmpty(T', 1), ('(crashOnError)', 1), ('org.elasticsearch.common.transport.TransportAddress;\nimport', 1), ('ambWith(SingleSource<?', 1), ('CustomerDto("3",', 1), ('FlowableElementAt<T>', 1), ('chest,', 1), ('"new', 1), ('this.delegates', 1), ('ObservableScan(ObservableSource<T>', 1), ('content[],', 1), ('NewThreadHolder.DEFAULT;\n', 1), ('Design",', 1), ('(!m.signature.contains("MaybeSource"))', 1), ('ZipIterableTckTest', 1), ('extended\n', 1), ('ObservableDematerialize(ObservableSource<Notification<T>>', 1), ('FlatMapCompletableMainObserver(CompletableObserver', 1), ('<P>', 1), ('remove(Object', 1), ("caller's", 1), ('verifyVisit(final', 1), ('java.util.concurrent.CyclicBarrier;\n\nimport', 1), ('cache.size()', 1), ('defaultZoneId', 1), ('repeat.\n', 1), ('TestHelper.checkUtilityClass(Functions.class);\n', 1), ('reduceWithCovariantObjectsFlowable()', 1), ('tf.newThread(Functions.EMPTY_RUNNABLE);\n\n', 1), ('sergeantResponse;\n\n', 1), ('<code>TrustConfig</code>', 1), ('assertEquals(list.toString(),', 1), ('LoggerFactory.getLogger(Account.class);\n\n', 1), ('Consumer<Character>\n', 1), ('allocation.\n', 1), ('FlowableTimeoutTimed.FallbackSubscriber<T>(actual,', 1), ('wrap(((SingleTransformer<T,', 1), ('g.getName()', 1), ('SkipLastTimedObserver(Observer<?', 1), ('delegateTrustManager', 1), ('t4)', 1), ('java.util.LinkedList;\n\n/**\n', 1), ('getString(Video', 1), ('parent.onDisposeCall.run();\n', 1), ('studentToBeInserted.getName()', 1), ('"io.reactivex"', 1), ('MaybeIgnoreElementCompletable<T>(this));\n', 1), ('9:21', 1), ('s.close();\n', 1), ('ObservableRepeat(Observable<T>', 1), ('SINGLE})\n', 1), ('CompletableLift', 1), ('runnable);\n\n}\n', 1), ('WORKER;\n', 1), ('singleCreate()', 1), ('longType', 1), ('AzureStorageFixture}', 1), ('MaybeSource,\n', 1), ('onNextNullDisposeCrashes()', 1), ('(needs', 1), ('Enough', 1), ('finding', 1), ('simpleobjects', 1), ('resolveWithSameMapping(String', 1), ('TestHelper.checkDisposed(Flowable.generate(new', 1), ('U>(resourceSupplier,', 1), ('price:', 1), ('tenantCallsCount', 1), ('sign(License', 1), ('Bootstrap.getSettings();\n', 1), ('LOG.info("received:', 1), ('PathUtils', 1), ('TestHelper.checkDisposed(Completable.merge(Flowable.just(Completable.complete())));\n', 1), ('Collections.unmodifiableMap(struct.setters);\n\n', 1), ('onePointSevenPointOnePointOne', 1), ('specified)\n', 1), ('shortType', 1), ('pp0.single(0),', 1), ('o1.equals(o2));\n', 1), ('apply(CompletableObserver', 1), ('SuppressLoggerChecks', 1), ('WeatherObserverTest(final', 1), ('SingleDoFinallyTest', 1), ('subscriber);\n\n', 1), ('process.\n', 1), ('FlowableBufferBoundary(Flowable<T>', 1), ('job.\n', 1), ('subscription.isDisposed();\n', 1), ('.take(elements)\n', 1), ('replace(AtomicReference<Disposable>', 1), ('FAILED)', 1), ('(parent.isCancelled()', 1), ('testDataSource()', 1), ('onCompleteCall;\n\n', 1), ('BOIL', 1), ('Thread.sleep(350);', 1), ('Single.fromFuture(Flowable.just(1).toFuture(),', 1), ('testOnStartCalledOnceViaLift()', 1), ('Java8Holder()', 1), ('TestException("Resume")))\n', 1), ('mapperCrashScalar()', 1), ('against.', 1), ('createObservable()', 1), ('assertNotSame(Single.never(),', 1), ('"+32423455",', 1), ('sha256.digest();\n', 1), ('TREE_ROOT;\n\n', 1), ('CompletableErrorSupplier', 1), ('unwrapWorkerPeriodicTask()', 1), ('DbManager', 1), ('FlowableOnErrorNext<T>', 1), ('CakeBakingException(String.format("Layer', 1), ("Letter('W'),", 1), ('Maybe.just(1).delaySubscription(f)\n', 1), ('FlowableSkipLast<T>', 1), ('Menu', 1), ('so.cancel();\n\n', 1), ('assertTrue(optionalTicket.isPresent());\n', 1), ('PublishProcessor}', 1), ('lastTwoPositives', 1), ('java.lang.ProcessImpl.start(ProcessImpl.java:134)\n', 1), ('SkipLastObserver(Observer<?', 1), ('CakeInfo\n', 1), ('mechanism.\n', 1), ('Predicate<Exception>', 1), ('cmd);\n', 1), ('await(int', 1), ('Finds', 1), ('org.hamcrest.Matchers.hasToString;\nimport', 1), ('CompletableConcatSubscriber(CompletableObserver', 1), ('checkDoubleOnSubscribeObservableToMaybe(Function<Observable<T>,', 1), ('service.submitTicket(LotteryTestUtils.createLotteryTicket("cvt@bbb.com",\n', 1), ('results.get(0).getInteger("funds");\n', 1), ('configurationName,', 1), ('modern', 1), ('checkFusedIsEmptyClear(Flowable<T>', 1), ('testClick()', 1), ('"+7834325"));\n', 1), ('BlockingObservableIterable(ObservableSource<?', 1), ('EndConsumerHelper', 1), ('statusRecordsTheStopTime()', 1), ('cakes.', 1), ('consumer()', 1), ('to.values().get(0);\n', 1), ('getSize();\n', 1), ('wireTransfers.transferFunds(LotteryConstants.TICKET_PRIZE,\n', 1), ('MaybeError(Throwable', 1), ('getAccountsCollection()', 1), ('Float.class;\n', 1), ('fieldJsonMapper,', 1), ('pp.load(properties);\n\n', 1), ('p.getModel().get(),', 1), ('out.writeString(version);\n', 1), ('BlockingObserver<Object>', 1), ('c);\n', 1), ('o.onSubscribe(Disposables.empty());\n\n', 1), ('source.onNext(2);\n\n', 1), ('warning', 1), ('1.\n', 1), ('adjusted', 1), ('"Basic', 1), ('source2.subscribe(observer2);\n', 1), ('builder.field("version",', 1), ('CacheStore.writeAround(userAccount);\n', 1), ("b.append(line).append('\\n');\n", 1), ('assertEquals(ticket1,', 1), ('version.stream().map(v', 1), ('"listen")));\n', 1), ('FlowableZip(Publisher<?', 1), ('DeferredScalarDisposable', 1), ('asException(String', 1), ('wrapAsNamed(Expression', 1), ('"prefetch");\n\n', 1), ('getImagePath()', 1), ('(entry.getKey().equals(entry.getValue().name)', 1), ('logo!");\n', 1), ('"Address{"\n', 1), ('"onCompleteSupplier', 1), ('matchAll.get().createTrustManager(environment);\n', 1), ('ok;\n\n', 1), ('methodTestCancelled()', 1), ('configure', 1), ('(polled', 1), ('BurstSubscription(Subscriber<?', 1), ('"roleA";\n', 1), ('.switchMapMaybe(Functions.justFunction(Maybe.never()))\n', 1), ('SingleEmitter}', 1), ('BlockingObservableLatest(ObservableSource<T>', 1), ('operation)\n', 1), ('(e.isShutdown())', 1), ('tasks.add(this.singletonInstanceMethod::get);\n', 1), ('NewThreadScheduler();\n', 1), ('checkDoubleOnSubscribeMaybeToCompletable(Function<Maybe<T>,', 1), ('PotatoPeelingTask(6));\n', 1), ('onError}.', 1), ('builder.startObject(Fields.ATTACHMENTS.getPreferredName());\n', 1), ('Bus', 1), ('DBMS.\n', 1), ('reduceWithSingle()', 1), ('(GZIP.equals(con.getContentEncoding()))', 1), ('io.reactivex.exceptions.OnErrorNotImplementedException;\nimport', 1), ('database.getCollection(ticketsCollectionName);\n', 1), ('}.mergeWith(Single.<Integer>just(1))\n', 1), ('testBuildWarrior()', 1), ('Schedulers.start();\n\n', 1), ('Encoding', 1), ('occur");\n', 1), ('Injects', 1), ('undoes', 1), ('Cake()', 1), ('@}{@link', 1), ('write1', 1), ('consumeStreams()', 1), ('findAllWizards();\n\n', 1), ('org.elasticsearch.repositories.url.URLRepository;\n\nimport', 1), ('menuActions', 1), ('Schedulers.trampoline();\n', 1), ('interestOps()', 1), ('State:............");\n', 1), ('simpleTypesMap.put(painlessTypeName,', 1), ('ConnectableObservable()', 1), ('findPattern("TestSubscriber<.*>\\\\s+to");\n', 1), ('(execTime', 1), ('lvElement(int', 1), ('resolveNames(String', 1), ('FlowableSkipUntil(Flowable<T>', 1), ('particularly,', 1), ('coordinator.subscribe(sources,', 1), ('"java.math.txt",\n', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().singleOrError().doAfterTerminate(afterTerminate));\n', 1), ('RxJavaPluginsTest', 1), ('commands\n', 1), ('serverRequest(Request', 1), ('doOnSubscribeNormal()', 1), ('administartion.getAllSubmittedTickets().forEach((k,', 1), ('locally\n', 1), ('DwarvenTunnelDigger());\n', 1), ('action.accept(column(i));\n', 1), ('input)\n', 1), ('players', 1), ('aggressiveConcurrencyLevel);\n', 1), ('Collections.unmodifiableList(declarations);\n', 1), ('assertNotNull(ara.get(16));\n\n', 1), ('d2));\n\n', 1), ('list.add(1,', 1), ('typeList', 1), ('testFactoryFailureResultsInErrorEmission()', 1), ('(retrieveIndices)', 1), ('TimerDisposable(observer);\n', 1), ('op,', 1), ('rendering.\n', 1), ('.features(Feature.MAPPINGS)\n', 1), ('this.city', 1), ('predicate(String', 1), ('EqualCoordinator<T>(observer,', 1), ('base.doOnNext(new', 1), ('observer.assertValue(0);\n', 1), ('zip2()', 1), ('-3413087924608627075L;\n\n', 1), ('-1776795561228106469L;\n\n', 1), ('cake.setTopping(expectedTopping);\n', 1), ('Message[]', 1), ('ObservableSkipLast<T>', 1), ('parseClassPath()', 1), ('(id.isPresent())', 1), ('JavaVersion.JAVA_8)', 1), ('isOperator(String', 1), ('expose', 1), ('testBakeCakesUsedLayer()', 1), ('eventManager.createAsync(60);\n', 1), ('InMemoryCustomerDao\n', 1), ('getHandler()', 1), ('io.reactivex.internal.operators.completable.CompletableToFlowable;\nimport', 1), ('schedule()}\n', 1), ('SpaceStationIss(12,', 1), ('assertNull(character.getSpell());\n', 1), ('generateSampleCustomers()', 1), ('queue.poll())', 1), ('RetryBiObserver(Observer<?', 1), ('flowable;\n', 1), ('\\"price\\""\n', 1), ('prepare();\n', 1), ('ArrayList<Throwable>(n', 1), ('ToFlowableIterable<T>', 1), ('doOnCancel(@NonNull', 1), ('consistent', 1), ('amazonDynamoDb', 1), ('service.awaitTermination(1000,', 1), ('flowableInner;\n\n', 1), ('Long.class;\n', 1), ('io().shutdown();\n', 1), ('rx2.purge-period-seconds}', 1), ('ParameterListKey(typeList);\n', 1), ('ConcurrentHashMap<Object,', 1), ('tolerant', 1), ('blockingForEachThrows()', 1), ('org.elasticsearch.xpack.core.security.authc.ldap;\n\nimport', 1), ('io.reactivex.subjects.PublishSubject;\n\n/**\n', 1), ('optional()', 1), ('submitTickets(LotteryService', 1), ('parallelFlowable;\n', 1), ('org.elasticsearch.xpack.core.security.authc.ldap.support;\n\nimport', 1), ('"bar"),\n', 1), ('defaultPort)', 1), ('declaration.write(writer,', 1), ('<strong>Supported', 1), ('verifyNoMoreInteractions(visitor);\n', 1), ('String.class,', 1), ('LOGGER.info(String.format("%s', 1), ('findPattern("MaybeSource<.*>\\\\s+ss");\n', 1), ('java.net.DatagramSocket;\nimport', 1), ('BiFunction<HashMap<String,', 1), ('null").apply(this));\n', 1), ('filterFailWithStopConditional()', 1), ('Windows', 1), ('org.junit.Assert.assertSame;\n\npublic', 1), ('CommanderVisitor(),\n', 1), ('still,', 1), ('assertEquals(BlockingObserver.TERMINATED,', 1), ('InnerSubscriber[n', 1), ('com.iluwatar.cqrs;\n\nimport', 1), ('in.getUnallocatedSpace();\n', 1), ('SubscriptionHelper.deferredSetOnce(actual,', 1), ('"test-part-model";\n', 1), ('TestException("onSubscribe()");\n', 1), ('createFluentIterable(integers).spliterator();\n', 1), ('THE\nAUTHORS', 1), ('FUSED_READY', 1), ('stops', 1), ('screen\n', 1), ('tail.', 1), ('ToListSubscriber(SingleObserver<?', 1), ('128', 1), ('7028635084060361255L;\n\n', 1), ('rx2.purge-enabled}', 1), ('plugins");\n', 1), ('childrenStream', 1), ('java.util.concurrent.ScheduledExecutorService;\nimport', 1), ('commandService.authorCreated("username1",', 1), ('welcomeMessagePaidUser', 1), ('").append(elasticsearchVersion).append("\\n")\n', 1), ('eventLoop()', 1), ('JarHell.parseClassPath());\n', 1), ('subscribers.\n', 1), ('io.reactivex.functions.BiFunction;\n\n/**\n', 1), ('assertTrue(appender.logContains("level2_a"));\n', 1), ('-707001650852963139L;\n\n', 1), ('observers.delete(os);\n', 1), ('NumberExpressionTest', 1), ('ExecutorScheduler(@NonNull', 1), ('honoring', 1), ('AppendToQueueTask(TimedRunnable', 1), ('fromCallable(final', 1), ('Ignores', 1), ('(purgeEnabled)', 1), ('DefType', 1), ('works:', 1), ('active.getAndSet((SwitchMapInnerObserver<T,', 1), ('sharing', 1), ('assertEquals(15,', 1), ('t4', 1), ('assertEquals(expectTargetOnFire,', 1), ('CompletableFromAction', 1), ('FuseToFlowable<Long>', 1), ('retrieveMsg()', 1), ('ObservableRepeatUntil<T>', 1), ('King', 1), ('io.reactivex.observers.DefaultObserver;\n\n\npublic', 1), ('First', 1), ('painlessNameStructEntry', 1), ('ObservableLift<R,', 1), ('keyPassword::getChars);\n', 1), ('executeService.awaitTermination(5,', 1), ('loadFromResourceFiles(Class<?>', 1), ('publishers)', 1), ('SingleSubject&lt;Integer&gt;', 1), ('actionGet(TimeValue', 1), ('StealingMethodTest<M', 1), ('addMember(PartyMember', 1), ('com.iluwatar.reactor.framework.Dispatcher;\nimport', 1), ('.test(true);\n\n', 1), ('completableSourceAsSs()', 1), ('ESFileStore', 1), ("transportUri.lastIndexOf(':');\n", 1), ('withObservableError()', 1), ('assertTrue(abilities.contains("wisdom"));\n\n', 1), ('POISON_PILL', 1), ('checkJavaVersion(jar.toString(),', 1), ('Observer}.\n', 1), ('IndexType.UNKNOWN;\n', 1), ('arrayInner', 1), ('integerList);\n\n', 1), ('ParallelFromPublisher<Integer>(Flowable.just(2),', 1), ('<code>CakeToppingDao</code>', 1), ('computing', 1), ('readText(String', 1), ('StatementProxy', 1), ('formats);\n', 1), ('country', 1), ('this.awsRequestId', 1), ('page.getElementById("saveButton");\n', 1), ('commands.bookAddedToAuthor("Effective', 1), ('ProvidedBy', 1), ('.assertResult(31);\n', 1), ('lot', 1), ('shadows"));\n', 1), ('com.iluwatar.event.sourcing.processor;\n\nimport', 1), ('Files.createTempFile(tmpDir,', 1), ('FsBlobContainer', 1), ('doubleRequest()', 1), ('Schedulers.start();', 1), ('System.out.println("Received', 1), ('addValue(T', 1), ('Star', 1), ('lineNumber(StringBuilder', 1), ('request(0);\n', 1), ('MpscLinkedQueue<Integer>();\n\n', 1), ('depth', 1), ('defaultPeriodicTask()', 1), ('buffers.iterator();\n', 1), ('chest\n', 1), ('enables\n', 1), ('this.privateKeyPath', 1), ('480);\n', 1), ('(combining', 1), ('additionally', 1), ('complete(T', 1), ('licenses\n', 1), ('CompletableFromSingleTest', 1), ('false){\n', 1), ('useless.\n', 1), ('beans.get(FISHING_BEAN);\n', 1), ('createTempFile();\n\n', 1), ('verify(first).dispose();\n', 1), ('DisposeObserver());\n', 1), ('System.err.println("port', 1), ('ClusterHealthResponse', 1), ('§3.9', 1), ('SwitchIfEmptyMaybeObserver(MaybeObserver<?', 1), ('innerWrapper.getWrappedRunnable());\n', 1), ('RxJavaPlugins.resetAssemblyTracking();\n//\n//\n//', 1), ('CacheStore.invalidate(userAccount.getUserId());\n', 1), ('bufferOpen.subscribe(open);\n', 1), ('spell17', 1), ('(handle', 1), ('23,', 1), ('org.elasticsearch.xpack.sql.jdbc.jdbc;\n\nimport', 1), ('context.put(operation,', 1), ('example;\n\nimport', 1), ('}).switchIfEmpty(Observable.<Long>never()).subscribe();\n', 1), ('Completable)', 1), ('principle).\n', 1), ('error(SingleInternalHelper.<T>emptyThrower());\n', 1), ('libraries.\n', 1), ('listIterator(int', 1), ('ObjectHelper.requireNonNull(completableSupplier.call(),', 1), ('newModules)', 1), ('(matcher.matches())', 1), ('UnsupportedOperationException("array', 1), ('assertTrue(o.hasCustomOnError());\n', 1), ('AsyncDisposable(Observer<?', 1), ('File(App.class.getClassLoader().getResource("sample-ui/login.html").getPath());\n\n', 1), ('FlowableConcatMapEager<T,', 1), ('NO_REQUEST', 1), ('utilities\n', 1), ('lazySet(CANCELLED);\n', 1), ('"143-947",', 1), ('bump', 1), ('ScanObserver<T>(t,', 1), ('!e.isCancelled();', 1), ('CURRENT;\n\n', 1), ('"lucene:major_device_number":', 1), ('onSuccessThrows2()', 1), ('javaAugmentedClass;\n', 1), ('getJavaChannel().socket().bind(new', 1), ('person;\n', 1), ('Function3', 1), ('SQLException("Negative', 1), ('resourceSupplierThrows()', 1), ('IndexNotFoundException', 1), ('JDK\n', 1), ('etc...)\n', 1), ('belongs', 1), ('they’re', 1), ('thus\n', 1), ('service.findAllWizards();\n', 1), ('E[]', 1), ('bothEmpty()', 1), ('pp;\n', 1), ('#DISPOSED}\n', 1), ('Schema(emptyList(),', 1), ('ObservableStripBoundary<T>', 1), ('com.iluwatar.servicelayer.hibernate.HibernateUtil;\n\n/**\n', 1), ('ConcatArrayEagerTckTest', 1), ('Out', 1), ('TreasureChest,', 1), ('Injector}', 1), ('rangeAsync;\n\n', 1), ('.withWeapon("Slingshot")\n', 1), ('generics', 1), ('withParentDisposed()', 1), ('PlayerDetails("lolita@google.com",', 1), ('ObservableAll<T>(source,', 1), ('subjectAlternateNames)', 1), ('executing...");\n', 1), ('testAct(Supplier<PartyMember>', 1), ('numbers.getNumbers().add(5);\n', 1), ('"Completable");\n\n', 1), ('.put("transport.host",', 1), ('java.net.SocketException;\n\n/**\n', 1), ('zone.', 1), ('ReplayProcessor.createWithTime(1,', 1), ('terminate."));\n', 1), ('gd.run();\n', 1), ("Object's", 1), ('other.luck)', 1), ('don’t', 1), ('ObservableSampleTimed(ObservableSource<T>', 1), ('"security_exception":\n', 1), ('6)));\n', 1), ('Blackhole.consumeCPU(compute);\n', 1), ('runnable2runnable', 1), ('shop', 1), ('RxJavaPlugins.setOnSingleAssembly(single2single);\n', 1), ('r.changeMood();\n', 1), ('fileLoggerModule.printErrorString(ERROR);\n\n', 1), ('Collections.unmodifiableList(this.bottomShelf);\n', 1), ('getType(structsMap.get(ClassToName(clazz)),', 1), ('twice...\n', 1), ('sc.request(-99);\n\n', 1), ('databaseReaders.put(databaseFileName,', 1), ('options);\n', 1), ('SwitchMapObserver(Observer<?', 1), ('setupBasicAuth(ConnectionConfiguration', 1), ('Publisher<T>>', 1), ('Integer.toString(v)).collect(Collectors.joining("."));\n', 1), ('mockedVisitor);\n\n}\n', 1), ('deleted.\n', 1), ('child1', 1), ('assertTrue(Files.lines(temporaryFile.toPath()).allMatch(testMessage::equals));\n', 1), ('SingleCreate<T>', 1), ('aFile;\n', 1), ('DAENERYS.\n', 1), ('MaybeTakeUntilMaybe(MaybeSource<T>', 1), ('responseCode)', 1), ('failure");\n\n', 1), ('").append(classname);\n', 1), ('customerDao.delete(customer);\n', 1), ('ElasticsearchSecurityException)', 1), ('dispose3()', 1), ('enumValues', 1), ('packet;\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/defaultIfEmpty.png"', 1), ('account");\n', 1), ('OrcMage("sword"),', 1), ('checkJarHell(System.out::println);\n', 1), ('wrap(simpleObjects).create("Faz");\n\n', 1), ('"Hi!"),\n', 1), ('java.util.concurrent.ExecutorService}\n', 1), ('contains(String', 1), ('"rx2.purge-enabled";\n\n', 1), ('Single()', 1), ('SpellDaoImpl>', 1), ('this.area', 1), ('1).append(")\\r\\n\\r\\n");\n\n', 1), ('"-Xmx1g")),', 1), ('TestHelper.checkUtilityClass(RxJavaPlugins.class);\n', 1), ('wishes', 1), ('core\n', 1), ('Collection<U>', 1), ('factory.apply(1).getId());\n', 1), ('ParallelFlatMap<T,', 1), ('FlattenIterableSubscriber(Subscriber<?', 1), ('isStopped', 1), ('(f,', 1), ('DisposableHelper.DISPOSED.dispose();\n', 1), ('enumClass)', 1), ('Register', 1), ('1-20', 1), ('retryUntil}', 1), ('checkDoubleOnSubscribeFlowableToMaybe(Function<Flowable<T>,', 1), ('ObservableConcatMapEager(ObservableSource<T>', 1), ('bus', 1), ('MaybeObserver<Integer>()', 1), ('pendingPacket', 1), ('this.get(stat);\n', 1), ('SkipUntilMainSubscriber<T>(child);\n', 1), ('directoryOf(String', 1), ('ConcurrentLinkedQueue<Runnable>();\n', 1), ('PerfAsyncConsumer(Blackhole', 1), ('com.iluwatar.reactor.framework.ThreadPoolDispatcher;\n\n/**\n', 1), ('BlockingObservableLatest<T>', 1), ('this.intelligence', 1), ('safeSubscriberAlreadySafe()', 1), ('getProductTitle()', 1), ('key.attachment(),', 1), ('flowableStart()', 1), ('ArcherCommand(),', 1), ('assertTrue(list3.equals(list));\n', 1), ('this.completableFunction', 1), ('spell4', 1), ('(i++)', 1), ('InMemoryBank();\n', 1), ('arity;\n\n', 1), ('@}Target({', 1), ('assertSame(expectedInstance,', 1), ('TypeLiteral}s', 1), ('CertUtils.readKeyStore(path,', 1), ('account.', 1), ('newService);\n', 1), ('org.apache.isis.core.specsupport.scenarios.ScenarioExecutionScope;\nimport', 1), ('requestParameters', 1), ('#compose(MaybeTransformer)\n', 1), ('oliphaunt.toString());\n\n', 1), ('ObservableFlatMapSingle<T,', 1), ('(optional.get().getNumbers().equals(winningNumbers))', 1), ('orderly', 1), ('PSubField', 1), ('post-visit\n', 1), ('TestObserver}', 1), ('won!");\n', 1), ('flowMaybe(Blackhole', 1), ('SuppressAnimalSniffer', 1), ('Providers.of(getServletContext().getResourceAsStream("/META-INF/MANIFEST.MF")));\n', 1), ('lastTwoOfFirstFourStringMapped', 1), ('ConsumeAction(Promise<T>', 1), ('writers\n', 1), ('codesource.\n', 1), ('<b>immutable</b>', 1), ('CakeLayerInfo\n', 1), ('\\n(4)', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/delay.s.png"', 1), ('memoryLimitInMb\n', 1), ('Publisher,\n', 1), ('biConsumerThrows()', 1), ('java.lang.SecurityException}', 1), ('testAggregateAsIntSumAccumulatorThrows()', 1), ('idToCustomer.replace(customer.getId(),', 1), ('(Disposable', 1), ('delayIndicator}', 1), ('assertTrue(abilities.contains("strength"));\n\n', 1), ('ZipCoordinator(SingleObserver<?', 1), ('dddBook);\n', 1), ('w.toSortedList().toObservable();\n\n', 1), ('ArrayList<>(e.size());\n', 1), ('p.d.dispose();\n', 1), ('33;', 1), ('"{\\"type\\":\\"time\\",\\"condition\\":{\\"operator\\":\\"lt\\",\\"value\\":\\"1519862400\\"}}]}]"', 1), ('FlowableCount<T>(source));\n', 1), ('ElementType.METHOD})\n@BindingAnnotation\npublic', 1), ('Audio.stopService();\n', 1), ('SecureRandom', 1), ('SubscriptionHelper.cancel(this);\n\n', 1), ('formats;\n', 1), ('rootPane.setDefaultButton(processButton);\n', 1), ('createBuffer();\n', 1), ('org.elasticsearch.common.io.stream.BytesStreamOutput;\nimport', 1), ('"application/octet-stream",', 1), ('gaining', 1), ('multipleOnNext()', 1), ('clazz.getDeclaredConstructor();\n\n', 1), ('mapper.refreshRealmOnChange(realm));\n', 1), ('writeV1(RainbowFish', 1), ('Book()', 1), ('fulfillmentAction;\n', 1), ('invalidLines.size(),\n', 1), ('urlEncode(base64Encode(sig));\n', 1), ('engine.\n', 1), ('cases:\n', 1), ('MaybeDelayWithCompletable<T>', 1), ('CachingPolicy.AROUND");\n', 1), ('"subscribers");\n', 1), ('BasicIntQueueDisposable<T>\nextends', 1), ('URLFixture}', 1), ('testAccept()', 1), ('structured', 1), ('functionVersion.hashCode()', 1), ('events...");\n', 1), ('map.entrySet())', 1), ('com.iluwatar.flux.action.ActionType;\nimport', 1), ('Mirrors', 1), ('FlowableTake(Flowable<T>', 1), ('threads2', 1), ('CLIENT_INFO(message', 1), ('bind.\n', 1), ('ThreadPoolExecutor\n', 1), ('time()', 1), ('MaybeMap<T,', 1), ('OliphauntPoolTest', 1), ('href="http://staff.ustc.edu.cn/~bhua/publications/IJPP_draft.pdf">BQueue</a>', 1), ('doOnRequest(@NonNull', 1), ('RIGHT_CLOSE)', 1), ('doOnEvent(final', 1), ('rangeObservableFlatMap;\n\n', 1), ('"truststore', 1), ('FlowableWindowBoundarySupplier(Flowable<T>', 1), ('publishCompleted(observer,', 1), ('(settingNames.contains(setting))', 1), ('joiner', 1), ('(4)', 1), ('Composite', 1), ('remaining)', 1), ('performed.\n', 1), ('Class.forName(whitelistMethod.javaAugmentedClassName,', 1), ('testAllDaysWithDefaultObserver(final', 1), ('nextInt()', 1), ('ObjectHelper.requireNonNull(stop,', 1), ('addAll(int', 1), ('withSingleErrors()', 1), ('testOnNextAfterOnCompleted()', 1), ('io.reactivex.internal.operators.single.SingleToFlowable;\nimport', 1), ('IntervalRangeObserver', 1), ('multi-type', 1), ('org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;\nimport', 1), ('(Address)', 1), ('wait();\n', 1), ('onScheduleNewThread()', 1), ('.thenApply(Utility::lowestFrequencyChar);\n', 1), ('BaseTypeParser.parse(MaybeNo2Dot0Since.findSource("Maybe"),', 1), ('modifications', 1), ("'throw',", 1), ('(clazz.getModifiers()', 1), ('this.hasNativeController', 1), ('SingleFlatMapIterableFlowable(SingleSource<T>', 1), ('attributeView;\n', 1), ('MaybeFromAction<T>(run));\n', 1), ('Base64.getEncoder().encodeToString(bytes);\n', 1), ('direct.lazySet(DisposableHelper.DISPOSED);\n', 1), ('TEST_CAR_MODEL);\n', 1), ('increase);\n', 1), ('Simplicity</li>\n', 1), ('met.\n', 1), ('(allowedCallsPerSecond', 1), ('Collections.singleton(bound.getHostString()', 1), ('s.request(prefetch', 1), ('De-multiplexer', 1), ('FlowableStripBoundary<T>', 1), ('"+32425255",', 1), ('unbounded1k()', 1), ('SubscriptionHelper.isCancelled(first.get());\n', 1), ('errorNotImplementedWithCause()', 1), ('Exceptions()', 1), ('ListPluginsCommand()', 1), ('pp1.ignoreElements()))\n', 1), ('assertEquals(driver,', 1), ('testStackOverflowWouldOccur()', 1), ('.thenApply(new', 1), ('onChannelAcceptable(key);\n', 1), ('storageServer.handle(method,', 1), ('SleepingRunnable', 1), ('initDb(boolean', 1), ('tag::simple_example\n', 1), ('taskCrash()', 1), ('testDistinctUntilChangedOfNoneWithKeySelector()', 1), ('false;\n\n\n', 1), ('Fixture', 1), ('writerLock\n', 1), ('list.add(h[k]);\n', 1), ('method.augmentation;\n', 1), ('resumeFunctionInCaseOfError)', 1), ('JTable(dtm);\n', 1), ('getType("int");\n', 1), ('actualFieldsDetails', 1), ('maybeSupplier;\n\n', 1), ('List<Store>', 1), ('MaybeSwitchIfEmptySingle(MaybeSource<T>', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/cache.png"', 1), ('java.util.concurrent.locks.Condition;\nimport', 1), ('AtomicReference<Thread>();\n', 1), ('GZIP', 1), ('").append(pattern).append("\\n");\n\n', 1), ('createRandom()', 1), ('consist', 1), ('OtherSingleObserver<T>', 1), ('ObservableRangeTest', 1), ('getZipCode()', 1), ('getObjectMapper()', 1), ('Modifier.isFinal(field.modifiers))', 1), ('PlayerDetails("luke@google.com",', 1), ('"Flowable")))', 1), ('mock(Action.class);\n\n', 1), ('\\0\n', 1), ("Constructor's", 1), ('Collections.unmodifiableList(version);\n', 1), ('SingleEquals<T>', 1), ('1].request(n);\n', 1), ('NoSuchElementCallable', 1), ('ObserveOnSingleObserver<T>(s,', 1), ('(StoreTrustConfig)', 1), ('RxJavaPlugins#setNewThreadSchedulerHandler(io.reactivex.functions.Function)}', 1), ('it.onComplete();\n', 1), ('this.inner;\n', 1), ('getPrivileges()', 1), ('supplier.getClass();\n\n', 1), ('Schedulers.computation();', 1), ('.groupBy(new', 1), ('ArrayBlockingQueue<Message>(1024);\n', 1), ('isEmpty', 1), ('unspecified', 1), ('buf,', 1), ('selector)', 1), ('methodCache', 1), ('getElasticsearchCodebase()', 1), ('Set<Setting<?>>', 1), ('welcomeMessageturnedOff', 1), ('concatWith(SingleSource<?', 1), ('exceptions.size()', 1), ('InputStreamReader(process.getInputStream(),', 1), ('assertError(Class<?', 1), ('storm");\n', 1), ('Executors.newFixedThreadPool(100);\n', 1), ('input.readLine())', 1), ('setHead(node);\n', 1), ('@");\n', 1), ('TestHelper.checkDisposed(Maybe.just(1).subscribeOn(Schedulers.single()));\n', 1), ('((inner', 1), ('q.producerBuffer;\n\n', 1), ("s.indexOf('<',", 1), ('<i>delegate</i>', 1), ('assertEquals(expectedOliphaunt.getId(),', 1), ('(Captain)', 1), ('int.class)', 1), ('CachingPolicy.THROUGH)', 1), ('tc.filesToMonitor(environment).stream()).collect(Collectors.toList());\n', 1), ('path.charAt(0)', 1), ('Junchang-', 1), ('destruction.\n', 1), ('aq', 1), ('45));\n\n', 1), ('b.append("\\r\\n").append(n);\n', 1), ('System.out.println(\n', 1), ('container.\n', 1), ('ScalarDisposable<R>(s,', 1), ('Flowable.just(1).switchMapDelayError(Functions.justFunction(\n', 1), ('Reactive-Streams\n', 1), ('Path>', 1), ('Math.max(8,', 1), ('org.elasticsearch.xpack.sql.expression.Expression.TypeResolution;\n\nimport', 1), ('assertEquals(-100,', 1), ('this.settings', 1), ('(!this.getStudents().contains(studentToBeInserted))', 1), ('observer.onSuccess(1);\n\n', 1), ('Schedulers.newThread().createWorker();\n', 1), ('accessibility\n', 1), ('LotteryNumbers(Set<Integer>', 1), ('testOnErrorExceptionIsThrown()', 1), ('currConsumerNode', 1), ('shouldGiveSpecifiedFieldsInformationOfVideo()', 1), ('888);\n\n', 1), ('WeaponFactory#create(WeaponType)}', 1), ('SingleMergeTest', 1), ('setupConnection(ConnectionConfiguration', 1), ('AppTest\n', 1), ('createWriteOperation(SocketChannelContext', 1), ('"true",\n', 1), ('cancelAndClear()', 1), ('Balance");\n', 1), ('kk);\n', 1), ('org.elasticsearch.plugin.repository.url;\n\nimport', 1), ('fs.cancel(false);\n\n', 1), ('ConnectionProxy(DebugLog', 1), ('Void\n', 1), ('when/if', 1), ('domainEvent.setRealTime(false);\n', 1), ('add(jt.getTableHeader(),', 1), ('onNext(Subscriber<?', 1), ('throttlePeriod);\n', 1), ('toFunction7()', 1), ('Single.wrap(Single.never()));\n\n', 1), ('(!tryOnNext(t))', 1), ('CompletionHandler<AsynchronousSocketChannel,Void>()', 1), ('dao.add(existingCustomer);\n\n', 1), ('nextElement', 1), ('javadocLine;\n\n', 1), ('javax.sound.sampled.AudioInputStream;\nimport', 1), ('remembers', 1), ('OBSERVER_SUCCESS()', 1), ('org.elasticsearch.xpack.core.security.authc.AuthenticationFailureHandler;\nimport', 1), ('ObservableAllSingle<T>', 1), ('Observable.just(1).throttleWithTimeout(100,', 1), ('Integer.parseInt(amount));\n', 1), ('FlatMapSingleSubscriber(Subscriber<?', 1), ('2.13,', 1), ('BlockingFlowableNext<T>', 1), ('org.elasticsearch.xpack.security.authc.ldap.support.LdapUtils.OBJECT_CLASS_PRESENCE_FILTER;\nimport', 1), ('PlayerDetails("foo@bar.com",', 1), ('Developer/Tester', 1), ('(methods.size()', 1), ('prop', 1), ('getAttribute(String', 1), ('found:', 1), ('(curr.releaseSlot())', 1), ('Converter}\n', 1), ('this.keyPath', 1), ('8:22', 1), ('r0', 1), ('Map<ScheduledThreadPoolExecutor,', 1), ('"further', 1), ('ByteArrayOutputStream();\n\n', 1), ('expectedItem.getType()', 1), ('LinkedBlockingQueue<Object>();\n\n', 1), ('LotteryTestUtils', 1), ('aid', 1), ('addSpellbook(Spellbook', 1), ('String}\n', 1), ('when(processFactory.createNormalizerProcess(eq(JOB_ID),', 1), ('replacingFirstUnderlyingCausesUnsubscription()', 1), ('Spliterator<E>', 1), ('(!(ex.getCause().getCause()', 1), ('String.format("id=%d', 1), ('withdrawMoney(BigDecimal', 1), ('list.equals(((VolatileSizeArrayList<?>)obj).list);\n', 1), ('certChainPath)', 1), ('TimeoutTckTest', 1), ('testFirstCountLessItems()', 1), ('setAwsRequestId(String', 1), ('trivial.', 1), ('backpressureDocumentation;\n\n', 1), ('assertEquals("foo@bar.com",', 1), ('PermissionCollection()', 1), ('audio:', 1), ('fast-access', 1), ('CompletableNever();\n\n', 1), ('Around', 1), ('ProtocolViolationException(String', 1), ('reasonable', 1), ('assertEquals(Action.values().length,', 1), ('plugged', 1), ("'next'", 1), ('serialDisposable.get());\n', 1), ('testOnErrorNotImplementedIsThrown()', 1), ('con.disconnect();\n', 1), ('fromCallableValue()', 1), ('#writerLock},', 1), ('THREAD_FACTORY', 1), ('SingleSubscribeOnTest', 1), ('assertInvalidLines(final', 1), ('ScalarSubscription<R>(s,', 1), ('spellbook6.addSpell(spell15);\n', 1), ('org.apache.tika.parser.pdf.PDFParser(),\n', 1), ('CakeLayerInfo("chocolate",', 1), ('throwIfThrowable()', 1), ('newDeque()', 1), ('jvmOptionConsumer.accept(matcher.group("option"));\n', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleOrError().delaySubscription(Flowable.just(1)));\n', 1), ('ConcurrentCollections()', 1), ('SimpleFluentIterable<>(copy);\n', 1), ('signedContent;\n', 1), ('MaybeToFlowable<U>(composer.apply(pp.singleElement())).subscribe(ts);\n', 1), ('took', 1), ('recipient', 1), ('LOGGER.debug("Resetting', 1), ('"class.path",', 1), ('StreamOutput::writeBoolean);\n', 1), ('!subSequence.equals("{@link', 1), ('flag.get();\n', 1), ('this.transportService', 1), ('controller.\n', 1), ('VideoResource(new', 1), ('UnsupportedOperationException("Poison");\n', 1), ('studentDatabase.delete(student);\n', 1), ('ESFileStore(final', 1), ('Maybe.concatArrayDelayError(Maybe.just(1),\n', 1), ('"Maybe",', 1), ('AsyncTask#onPostCall(Object)},', 1), ('Limits', 1), ('!logGroupName.equals(that.logGroupName)', 1), ('Elasticsearch,', 1), ('copying', 1), ('LeafPlan', 1), ('InMemoryTicketRepository', 1), ('786994795061867455L;\n\n', 1), ('ConcurrentCollections', 1), ('lazySet(n);\n', 1), ('bufferSize);\n\n', 1), ('source.subscribe(sw);\n', 1), ('10:49', 1), ("Subscriber}'s", 1), ('flushId,', 1), ('(urlStr.endsWith(".jar"))', 1), ('onErrorComplete(Functions.alwaysTrue());\n', 1), ('constants.\n', 1), ('area', 1), ('assertEquals(\n', 1), ('complete(T).', 1), ('CompletableTimeoutTest', 1), ('Class}', 1), ('filterFalseConditional()', 1), ('result.add(cakeInfo);\n', 1), ('satisfied.\n', 1), ('assertNotNull(topping.toString());\n', 1), ('notifier', 1), ('causalChain', 1), ('org.elasticsearch.xpack.core.security.support.Automatons;\n\nimport', 1), ('aa', 1), ('PARSER_INSTANCE);\n\n', 1), ('ObservableSource<TLeft>', 1), ('q1.poll();\n', 1), ('variable/field.', 1), ('super(name);\n', 1), ('safe\n', 1), ('iterable.first();\n', 1), ('oneArray()', 1), ('ObservableSubscribeOn<T>', 1), ("'.').replace('/',", 1), ('service(SimpleObjects.class).listAll();\n', 1), ('field.clazz;\n', 1), ('userConverter.convertFromDto(userConverter.convertFromEntity(u1));\n', 1), ('OBSERVER_ONERROR_NOTIMPLEMENTED();\n', 1), ('CustomMaybeObserver&lt;T&gt;', 1), ('Whenever', 1), ('ObservableTakeUntilPredicate(ObservableSource<T>', 1), ('unregister', 1), ('settingNames.addAll(source.settingNames);\n', 1), ('#getInstance}', 1), ('chosen.add(Integer.parseInt(parts[i]));\n', 1), ('protected,', 1), ('2:17', 1), ('spellbookDao.persist(spellbook2);\n', 1), ('ms.add(Completable.complete());\n\n', 1), ('filterPath)', 1), ('TestHelper.checkDisposed(new', 1), ('this.allowedCallsPerSecond', 1), ('trustStorePath,', 1), ('<code>@Assisted</code>,', 1), ('ObjectHelper.requireNonNull(errorSupplier,', 1), ('upstream()', 1), ('TimedRunnable(action,', 1), ('mute(CheckedRunnable', 1), ('Whitelist(ClassLoader', 1), ('height="450"', 1), ('resolved\n', 1), ('purgeEnable;\n\n', 1), ('creator', 1), ('cs);\n}\n', 1), ('role-mappers.\n', 1), ('Part(Map<String,', 1), ('\\"15.12.2015\\"");\n\n', 1), ('whitelistConstructor', 1), ("Observable}'s", 1), ('TakeWhileObserver(Observer<?', 1), ('retrievingACustomerByIdFailsWithExceptionAsFeedbackToClient()', 1), ('CommanderVisitorTest', 1), ('talking', 1), ('struct.clazz;\n\n', 1), ('because\n', 1), ('compl[0]++;\n', 1), ('shares', 1), ('other.arity)', 1), ('cache.put(userId,', 1), ('Architecture",', 1), ('studentToBeDeleted)', 1), ('Class<?>[whitelistConstructor.painlessParameterTypeNames.size()];\n\n', 1), ('accommodate', 1), ('AtomicReference.\n', 1), ('"0";\n', 1), ('observer.onSubscribe(EmptyDisposable.NEVER);\n', 1), ('"FlowableCountSingle",\n', 1), ('qualified', 1), ('org.opensaml.xmlsec.signature.support.SignatureConstants;\n\nimport', 1), ('index("library",', 1), ('SampleTimedSubscriber(Subscriber<?', 1), ('(once', 1), ('RuntimePermission}', 1), ('accountNo\n', 1), ('requestProduceRace()', 1), ('servant,', 1), ('Maybe.just(1).doFinally(null);\n', 1), ('onErrorWithSuper()', 1), ('java.nio.channels.FileChannel;\nimport', 1), ('traditional', 1), ('thisDamaged,', 1), ('method;\n\n', 1), ('".java";\n\n', 1), ('CommandTest', 1), ('initialCollection,', 1), ('Manager', 1), ('DisposableSubscriber<T>', 1), ('Single}.', 1), ('operands\n', 1), ('amount.', 1), ('disposeOther();\n', 1), ('noMoreAbilities()', 1), ('SerializedObserver<Observable<T>>(t),\n', 1), ('RuntimeException}.\n', 1), ('databasePath)', 1), ('armour");\n', 1), ('LoggerFactory.getLogger(ReactorTest.class);\n\n', 1), ('(esVersionString', 1), ('flowableInner', 1), ('onCompleteSupplier\n', 1), ('parent);\n\n', 1), ('printThisAfter();\n', 1), ('4603919676453758899L;\n\n', 1), ('joptsimple.OptionSet;\nimport', 1), ('jl.setText(sendRequest(order));\n', 1), ('10:25', 1), ('licenseSpecViewMode', 1), ('LOGGER.info("Executor', 1), ('updateThread.start();\n', 1), ("'name'", 1), ('Atomic', 1), ('del;\n\n', 1), ('IllegalAccessException', 1), ('FixtureScripts', 1), ('(QueueSubscription<T>)subscription;\n', 1), ('fulfill(task.call());\n', 1), ('crashOnComplete;\n', 1), ('responding', 1), ('JavaVersionChecker()', 1), ('super(settings,', 1), ('field.setter));\n', 1), ('javaVersionString,\n', 1), ('props)', 1), ('upsertDb(UserAccount', 1), ('BaseDaoTest(final', 1), ('java.util.TimerTask;\n\nimport', 1), ('Single.just(100)\n', 1), ('java.lang.Byte}</li>\n', 1), ('assertTrue(service.isEnhanced());\n', 1), ('ObservableRetryPredicate<T>', 1), ('ObjectHelper.requireNonNull(reducer.apply(sp.first,', 1), ('c.subscribe(this);\n', 1), ('out).\n', 1), ('actual.onNext(w);\n', 1), ('buffer\n\n', 1), ('Boolean\n', 1), ('\'null\'."\n', 1), ('List<View>', 1), ('loaded;\n\n', 1), ('cpu;\n', 1), ('mergeDelayError2()', 1), ('|\n', 1), ('version?)', 1), ('com.iluwatar.chain;\n\nimport', 1), ('java.util.concurrent.BlockingQueue;\n\nimport', 1), ('9032184911934499404L;\n\n', 1), ('builder.field("elasticsearch_version",', 1), ('CustomerResource})', 1), ('singleSupplier;\n\n', 1), ('pp.singleElement(),', 1), ('this.target', 1), ('indicator,', 1), ('testNoTimedTaskAfterScheduleRetention()', 1), ('AmbArrayTckTest', 1), ('executor.execute(this);\n', 1), ('servant.giveWine(k);\n', 1), ('fun\n', 1), ('MaybeTakeUntilPublisherTest', 1), ('f.cancel(false);\n', 1), ('otherObserver', 1), ('request.getDestination();\n', 1), ('FlowableFlatMapMaybeEmptyPerf', 1), ('user.isActive', 1), ('MaybeIgnoreElement<T>(source));\n', 1), ('this.exceptionHandler', 1), ('FlowableConcatMapEager(Flowable<T>', 1), ('(javaVersionString', 1), ('c0)\n', 1), ('FlowableDoOnLifecycleTest', 1), ('actual.hasSubscribers();\n', 1), ('returns</li>\n', 1), ('!m.signature.contains("SingleSource")\n', 1), ('this.contents.setBounds(30,', 1), ('sa.missedProduced.set(1);\n\n', 1), ('whitelistStruct.origin;\n', 1), ('SchedulerTestHelper()', 1), ('").append(type.name()).append(\'\\n\');\n', 1), ('operator.interpret();\n', 1), ('symbols.', 1), ('Maybe.<Integer>error(error).subscribe(rmo);\n\n', 1), ('executor.submit(srvRunnable);\n', 1), ('half-serialization:', 1), ('(FileSystem', 1), ('this.lazySet(onDispose);\n', 1), ('FlowableDelay(Flowable<T>', 1), ('Despite', 1), ('assertEquals(this.commanderResponse.get(),', 1), ('testPartyAction(Supplier<PartyMember>', 1), ('<p>When', 1), ('MaybeConcatArrayDelayError<T>', 1), ('account;\n', 1), ('inner.onSubscribe(new', 1), ('invalidLines)', 1), ('ParallelReduceFull<T>', 1), ('fromPublisherDispose()', 1), ('Thread.sleep(250);\n\n', 1), ('(line.startsWith("#"))', 1), ('exps,', 1), ('writeProperties(Path', 1), ('Accompanies', 1), ('SerializedSubject(final', 1), ('SECURITY;\n', 1), ('Logger.getLogger(DbCustomerDao.class);\n\n', 1), ('existent', 1), ('(g.getName().startsWith(baseClassName)', 1), ('500;\n', 1), ('flag.\n', 1), ('Flowable<HorrorMovie>', 1), ('MongoTicketRepositoryTest', 1), ('singleObserver)', 1), ('DefaultSubscriber<String>', 1), ('ObservableCollectSingle(ObservableSource<T>', 1), ('Attribute>', 1), ('testUnhandledErrorIsDeliveredToThreadHandler(Scheduler', 1), ('com.iluwatar.event.sourcing.app;\n\nimport', 1), ('retry;\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/onExceptionResumeNextViaMaybe.png"', 1), ('Thread.sleep(200);', 1), ('merge3()', 1), ('s.subscribe(parent);\n', 1), ('-Xmx1g', 1), ('endError()', 1), ('eggChoice', 1), ('whitelistMethod);\n', 1), ('perspective,', 1), ('cake.getLayers());\n\n', 1), ('Book("new_title2",', 1), ('tool")\n', 1), ('c.cancel();\n\n', 1), ('set.add(timer);\n\n', 1), ('assertTestException(List<Throwable>', 1), ('testCollectorFailureDoesNotResultInTwoErrorEmissionsFlowable()', 1), ('Guice.createInjector(modules);\n', 1), ('fishV2.getAngry(),', 1), ('flowableFlowable()', 1), ('queryService.getAuthorByUsername("new_username2");\n', 1), ('FlowableStripBoundary<T>(null);\n', 1), ('captures', 1), ('(int)elements).delay(1,', 1), ('"%s', 1), ('<i>2010', 1), ('corrected\n', 1), ('(WithLatestInnerObserver', 1), ('18);\n', 1), ('this.luck', 1), ('IgnoreElementsTckTest', 1), ('MapNotificationSubscriber(Subscriber<?', 1), ('.subscribeOn(Schedulers.newThread());\n', 1), ('getters,', 1), ('blobStore;\n', 1), ('lastServedId;\n\n', 1), ('home', 1), ('(remaining.decrementAndGet()', 1), ('"scheduledevent.0.description', 1), ('dr', 1), ('getClassname()', 1), ('(need', 1), ('subject.test()\n', 1), ('"FROM', 1), ('out.writeBoolean(completeMatch);\n', 1), ('SingleFlatMapCompletable(SingleSource<T>', 1), ('assertThat(filteredIssues.size(),', 1), ('org.elasticsearch.common.util.concurrent;\n\nimport', 1), ('"+67834134"));\n', 1), ('requestedMode)', 1), ('com.iluwatar.datamapper;\n\n\nimport', 1), ('.mergeWith(Maybe.<Long>empty());\n', 1), ('Constants', 1), ('ToSingleObserver<T>', 1), ('version.get(1)', 1), ('verify(sub).cancel();\n\n', 1), ('CakeToppingDao\n', 1), ('(InnerObserver<?,', 1), ('findPattern("SingleSource<.*>\\\\s+cs");\n', 1), ('OnSuccess(value),', 1), ('height="185"', 1), ('doOnDispose(final', 1), ('QueueSubscription<Object>', 1), ('DNS.\n', 1), ('NumberExpression(s);\n', 1), ('InvisibilityPotion();\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.flatMapPublisher.png"', 1), ('DEMO_MODE_USING_CREDENTIALS_AS_QUERYARGS', 1), ('Undo', 1), ('e);\n//', 1), ('ALBUM_PAGE_HTML_FILE;\n\n', 1), ('random.nextInt(PLAYERS.size());\n', 1), ('BlockingQueue<T>', 1), ('StringType;\n', 1), ('singleSubscribe1()', 1), ('non-periodic\n', 1), ('10:13', 1), ('Students', 1), ('DoFinallyConditionalSubscriber<T>', 1), ('fromCallableSingle.subscribe();\n\n', 1), ('level3B);\n', 1), ('ground!"));\n', 1), ('threadPoolExecutor.invokeAll(callables);\n', 1), ('DelayErrorInnerObserver(Observer<?', 1), ('runnableDisposed()', 1), ('ObservableConcatMapSinglePerf', 1), ('testRangeWithOverflow3()', 1), ('ac;\n\n', 1), ('Check.isTrue(names.size()', 1), ('javax.security.auth.DestroyFailedException;\n\nimport', 1), ('studentRepository.registerNew(ram);\n', 1), ('assertTrue(b.get());\n', 1), ('ON_NEXT)', 1), ('BindingAnnotation', 1), ('operation}', 1), ('testDoOnCompleted()', 1), ("'type'", 1), ('IllegalArgumentException());\n', 1), ('fromEntity)', 1), ('ArrayList<>(named.size());\n', 1), ('AmbCoordinator(Subscriber<?', 1), ('prod)', 1), ('FlowableMergeWithMaybe<T>', 1), ('PlainBlobMetaData(file.getFileName().toString(),', 1), ('1001,', 1), ('caching\n', 1), ('testNearMaxValueWithoutBackpressure()', 1), ('ConcatMapMaybeSubscriber(Subscriber<?', 1), ('consumedOne(boolean', 1), ('IllegalStateException);\n', 1), ('(ContentAction)', 1), ('keyPassword)', 1), ('assertEquals(42,', 1), ('Publisher<Movie>', 1), ('("GET".equalsIgnoreCase(exchange.getRequestMethod()))', 1), ('fields;\n\n', 1), ('assertNull(doc.get(1,', 1), ('(!lines.get(0).equals(header[0])', 1), ('MpscLinkedQueue()', 1), ('(channel)', 1), ('FlowableTakeLast<T>', 1), ('ObservableScan<T>', 1), ('SingletonTest(final', 1), ('sp.second),', 1), ('io.reactivex.internal.operators.flowable.FlowableTake.TakeSubscriber;\n\n/**\n', 1), ('useReadAndWriteThroughStrategy()', 1), ('experience.\n', 1), ('b.size();\n', 1), ('18:44', 1), ('Maybe.concat(Flowable.fromCallable(new', 1), ('Optional.ofNullable(idToCustomer.get(id));\n', 1), ('this.painlessReturnTypeName', 1), ('withParameters(String', 1), ('doOnSubscribeError()', 1), ('set.addAll(exp.references());\n', 1), ('#onComplete()},\n', 1), ('pound', 1), ('(schedule', 1), ('BlockingGetPerf', 1), ('Promise()', 1), ('enumIvoryTower1', 1), ('memoryLimitInMb', 1), ('Java8Holder();\n', 1), ('TakeUntilOtherSubscriber', 1), ('list.equals(obj);\n', 1), ('compare(int', 1), ('LazyFluentIterable\n', 1), ('testPerfectExecution()', 1), ('SpscArrayQueue<T>', 1), ('direct.dispose();\n', 1), ('<li>event', 1), ('putVar("list",', 1), ('inSingle;\n\n', 1), ('w.subscribe(ts1);\n\n', 1), ('BiConsumerSingleObserver<T>', 1), ('flowableNoUnsubscrib()', 1), ('java.util.logging.Logger;\n\nimport', 1), ('bytes()', 1), ('minFrequency)', 1), ('wisdom"));\n', 1), ('observer.onNext(item);\n', 1), ('10000L);\n\n', 1), ('io.reactivex.internal.subscriptions.*;\n\npublic', 1), ('s2.dispose();\n', 1), ('ParallelFilter<T>(this,', 1), ('AtomicReference<Action>\n', 1), ('addStruct(ClassLoader', 1), ('service.findAllWizards())', 1), ('ObjectHelper.requireNonNull(onSuccessMapper,', 1), ('compose(@NonNull', 1), ('deleteSchema()', 1), ('"#"', 1), ('backend', 1), ('JTextField[]', 1), ('wip++;\n', 1), ('delaySubscriptionTime()', 1), ('DelaySubscription', 1), ('Single.just(1).hide().flatMapPublisher(new', 1), ('nazguls.get(name);\n', 1), ('TestObserver<String>();\n', 1), ('biConsumerErrorThrows()', 1), ('notDisposedWhenReplaced()', 1), ('scenario(jenkins,', 1), ('RxJavaPlugins.class.getMethod("get"', 1), ('initialDisposable)', 1), ('ConnectivityIssue', 1), ('"842-404",', 1), ('(Enum<NaturalComparator>', 1), ('qs.requestFusion(QueueSubscription.ANY);\n\n', 1), ('assertEquals(m.toString(),', 1), ('Observable.wrap(source).materialize();\n\n', 1), ('io.reactivex.schedulers.*;\n\n/**\n', 1), ('map.put("angry",', 1), ('TakeUntilMainObserver<T>', 1), ('MaterializeSubscriber<T>(s));\n', 1), ('doOnSuccessErrors()', 1), ('stream()', 1), ('upperBoundGreaterThanLowerBound));\n', 1), ('(!polled.disposed)', 1), ('expectedIndices', 1), ('<li>Handle\n', 1), ('Dispatcher();\n\n', 1), ('SingleMiscTest', 1), ('delayErrorWithMaxConcurrencyError()', 1), ('ON_NEXT))', 1), ('Files.readAllBytes(publicKeyPath);\n', 1), ('keys.iterator();\n\n', 1), ('is.cancel();\n\n', 1), ('@}Override\n', 1), ('fuseToObservable();\n}\n', 1), ('Identification', 1), ('filesToMonitor', 1), ('CompletableAmb', 1), ('timeMs=%d",', 1), ('SingleObserver}s\n', 1), ('checkDoubleOnSubscribeCompletableToMaybe(Function<Completable,', 1), ('.append(prefix).append("Elasticsearch', 1), ('SingleNever();\n\n', 1), ('TimerSubscriber(s);\n', 1), ('type(String', 1), ('properties.load(is);\n', 1), ('ByteArrayInputStream(data.getBytes(StandardCharsets.UTF_8));\n\n', 1), ('client.admin().indices().prepareRefresh(index).get();\n', 1), ('nullThrowableSync()', 1), ('Whitelist.Struct(whitelistStructOrigin,', 1), ('bowl.', 1), ('(enabled)', 1), ('io.reactivex.Completable}-based', 1), ('org.apache.log4j.BasicConfigurator;\nimport', 1), ('LotteryUtils', 1), ('"XX:+AggressiveOpts");\n', 1), ('inetAddress', 1), ('"//TLTL")', 1), ('halberd"));\n', 1), ('(!clazz.isInstance(error))', 1), ('checkDoubleOnSubscribeSingleToFlowable(Function<Single<T>,', 1), ('r2)', 1), ('user-defined', 1), ('CompositeRoleMapper', 1), ('LaunchersTestCase', 1), ('Cli.class.getResourceAsStream("/logo.txt"))', 1), ('.assertSubscribed().assertValueCount(TestHelper.RACE_DEFAULT_LOOPS).assertComplete().assertNoErrors();\n', 1), ('authorsCount', 1), ('!methods2.contains(m.getName().replace("Observable",', 1), ('m.takeUntil(Flowable.never());\n', 1), ('AsyncSubject', 1), ('enumIvoryTower1);\n', 1), ('java.lang.Boolean.class.getName(),\n', 1), ('#DISPOSED}.\n', 1), ('assertTrue(emitter.toString().contains(CompletableCreate.Emitter.class.getSimpleName()));\n', 1), ('IncrementingPublisher(int', 1), ('testCollectToListFlowable()', 1), ('log(String', 1), ('.onErrorResumeNext(Single.just(""))\n', 1), ('fromActionErrorsDisposed()', 1), ('ObjectHelper.requireNonNull(sources.next(),', 1), ('SingleJob(Job', 1), ('(QueueDrainHelper.postCompleteRequest(n,', 1), ('lotteryService.submitTicket(ticket);\n', 1), ('step;\n', 1), ('.assertResult("12");\n', 1), ('mapInvalidSourceConditional()', 1), ('Transactional', 1), ('),', 1), ('event;\n', 1), ('org.objectweb.asm.Type.getType(javaClass));\n', 1), ('DwarvenMineWorker.Action.WAKE_UP,', 1), ('LOGGER.info("Logging', 1), ('nazguls.put(NazgulName.HOARMURATH,', 1), ('validated.\n', 1), ('org.elasticsearch.xpack.core.ml.job.results.BucketInfluencer;\n\nimport', 1), ('org.elasticsearch.cli.ExitCodes;\nimport', 1), ('StringUtils.EMPTY;\n', 1), ('timeout(2000)).onPostCall(eq(result));\n\n', 1), ('albumRatingInputTextField', 1), ('Audio.update();\n', 1), ('to.assertValues("a",', 1), ('Single.just(7),\n', 1), ('TestHelper.checkDisposed(PublishProcessor.create().elementAt(0).toFlowable());\n', 1), ('"+0498837412"));\n', 1), ('rand;\n', 1), ('(getPendingAudio()[i].getStream()', 1), ('dispatcher.onChannelReadEvent((AbstractNioChannel)', 1), ('"sourceSupplier', 1), ('that.logStreamName', 1), ('zip', 1), ('close(BufferCloseObserver<T,', 1), ('child.onNext(o);\n', 1), ('(indicating', 1), ('LotteryTestUtils.createLotteryTicket();\n', 1), ('MaybeObserver<R>,', 1), ('NumberExpression(i),\n', 1), ('errorObservable()', 1), ('org.junit.BeforeClass;\n\nimport', 1), ('uriPath.getPath(),', 1), ('add(jsp,', 1), ('onErrorOnComplete()', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().scan(0,', 1), ('VisitorTest(final', 1), ('issues:\n', 1), ('MaybeFromAction<T>', 1), ('org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcConfiguration;\nimport', 1), ('FlatMapCompletableMainSubscriber<T>', 1), ('(int)elements).map(Functions.<Integer>identity())\n', 1), ('CANCELLED.cancel();\n', 1), ('assertNPE(List<Throwable>', 1), ('ThreadLocal<DateFormat>', 1), ('getFunds(destinationBankAccount);\n', 1), ('entitiesLeft', 1), ('(DisposableHelper.setOnce(this.upstream,', 1), ('issue.', 1), ('Action1<Long>', 1), ('UDP,', 1), ('.assertFailure(IllegalStateException.class);\n\n', 1), ('elves\n', 1), ('existingStruct', 1), ('useReadThroughAndWriteAroundStrategy()', 1), ('ScheduledDirectTask(Runnable', 1), ('SDeclBlock(Location', 1), ('Efficient', 1), ('parent.remove(sr);\n', 1), ('numOtherFiles', 1), ('javaVersion);\n', 1), ('FlowableZip<T,', 1), ('TYPE,', 1), ('tika,', 1), ('builder.field("description",', 1), ('TikaImpl', 1), ('newBuilder()', 1), ('".1";\n', 1), ('ExceptionHelper.\n', 1), ('page;\n\n', 1), ('zip(Iterable<?', 1), ('whitelistStructs;\n\n', 1), ('callback(String', 1), ('"in', 1), ('this.trustedNames', 1), ('getAndSet(DISPOSED)', 1), ('(attrs.isRegularFile())', 1), ('stdOutBuffer', 1), ('listener.\n', 1), ('iterable);\n', 1), ('QueryService\n', 1), ('json.toString();\n', 1), ('maybeCompletable()', 1), ('Maybe",', 1), ('onOverflow.run();\n', 1), ('hasNext;\n', 1), ('StrictSubscriber(Subscriber<?', 1), ('DateEsField(String', 1), ('AssertionError("Different', 1), ('#fuseToObservable()}\n', 1), ('15;', 1), ('coupling', 1), ('create(@ParameterLayout(named', 1), ('soConsumerIndex(index', 1), ('TestHelper.checkDisposed(Single.error(new', 1), ('task-tracking', 1), ('org.elasticsearch.xpack.watcher.support;\n\nimport', 1), ('HibernatePersistenceProvider());\n', 1), ('268435460,', 1), ('to.assertValue("a");\n', 1), ('filterManager.filterRequest(order);\n', 1), ('source2', 1), ('student1', 1), ('HTTP.', 1), ('a[i].dispose();\n', 1), ('run/call', 1), ('delete.\n', 1), ('m)\n', 1), ('dao)', 1), ('filter)', 1), ('GoF', 1), ('Arrays.stream(tc.createTrustManager(environment).getAcceptedIssuers()))\n', 1), ('this.dr', 1), ('getNumber()', 1), ('checkDoubleOnSubscribeCompletableToFlowable(Function<Completable,', 1), ('King}', 1), ('save(CustomerDto', 1), ('(output)\n', 1), ('human', 1), ('1000d);\n\n', 1), ('firstOliphaunt', 1), ('lost', 1), ('reserved', 1), ('roles.put(ROLE_A,', 1), ('ParallelFlowable<U>', 1), ('(errorMode)', 1), ('anotherDay;\n', 1), ('KEY_NEWTHREAD_PRIORITY', 1), ('DisposableHelper.replace(timer,', 1), ('SwitchMapSingleObserver<R>(this);\n\n', 1), ('com.iluwatar.reactor.framework.NioDatagramChannel;\nimport', 1), ('executor.endProcess(asyncResult2);\n', 1), ('MatcherType', 1), ('ThreadSafeDoubleCheckLocking()', 1), ('checkVersionFormat(String', 1), ('libraryFunctionActingOnMovieObservables(Observable<Movie>', 1), ('path.getFileName().toString(),', 1), ('(long)i;\n', 1), ('CheckReturnValue', 1), ('extensively', 1), ('LOGGER.info("I\'m', 1), ('onSuccess}.', 1), ('error).test().assertValue(1);\n', 1), ('PriorityBlockingQueue<TimedRunnable>', 1), ('mapper.apply(t);\n\n', 1), ('FUSED)', 1), ('resultSelector));\n', 1), ('"Second").single("");\n', 1), ('roles);\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.flatMapObservable.png"', 1), ('BadObservable', 1), ('(exps.isEmpty())', 1), ('assertTrue(RxJavaPlugins.isLockdown());\n', 1), ('developer\n', 1), ('defaultItem', 1), ('component,', 1), ('subscriptions)', 1), ('byId.getId());\n', 1), ('java.util.concurrent.TimeoutException;\n\nimport', 1), ('Writer\n', 1), ("'first'", 1), ('ObservableOperator<Long,', 1), ('OTHER\nLIABILITY,', 1), ('crash\n', 1), ('Maybe&lt;Integer>', 1), ('inputStream,', 1), ('org.springframework.context.support.AbstractApplicationContext;\nimport', 1), ('ownerStruct.members.put(whitelistField.javaFieldName,', 1), ('getSettingNames()', 1), ('left.size())', 1), ('onObservableLift', 1), ('com.gargoylesoftware.htmlunit.html.HtmlTextInput;\nimport', 1), ('org.elasticsearch.common.util.set.Sets;\nimport', 1), ('channelToPendingWrites.get(key.channel());\n', 1), ('clazz.clazz.getMethods())', 1), ('ManagementFactory.getMemoryMXBean();\n', 1), ('entityManager.setPersistenceProvider(new', 1), ('getLastServedId()', 1), ("'items.size()=xx'", 1), ('trustStorePassword;\n', 1), ('exec.schedule(periodicWrapper,', 1), ('CatapultCommand(),', 1), ('normally.</li>\n', 1), ('LOG.info(String.format(\n', 1), ('this.painlessFieldTypeName', 1), ('(Fruit', 1), ('(certPath', 1), ('repositoryDir;\n\n', 1), ('scan(Completable.class);\n', 1), ('ObjectHelper.requireNonNull(onNextMapper.apply(t),', 1), ('presenter.fileNameChanged();\n', 1), ('java.util.Iterator;\n\n/**\n', 1), ('api\n', 1), ('Single.equals(Single.error(new', 1), ('getHostName(inetAddress);\n', 1), ('function6Fail()', 1), ('FallbackSubscriber<T>(actual,', 1), ('blocking,', 1), ('composedMessage.count());\n\n', 1), ('FlowableThrottleLatest<T>', 1), ('java.lang.Boolean}</li>\n', 1), ('LOGGER.info(AccountAggregate.getAccount(ACCOUNT_OF_JON).toString());\n\n', 1), ('Pattern.compile(pattern);\n\n', 1), ('java.util.List.class.getName(),\n', 1), ('getStopped()', 1), ('Exception;', 1), ('"<init>",', 1), ('INDEX("BASE', 1), ('Maybe()', 1), ('ConcatMapSupport<R>,', 1), ("'{'.\n", 1), ('3528003840217436037L;\n\n', 1), ('GOrcs());\n', 1), ('FileLoggerModule.singleton', 1), ('nextNotification;\n\n', 1), ('error:', 1), ('output.accept("java.class.path:', 1), ('TimeIntervalSubscriber<T>(s,', 1), ('value;', 1), ('n.toString();\n', 1), ('xchgProducerNode(node);//', 1), ('sun.misc.Launcher,\n', 1), ('DisposableLambdaObserver<T>', 1), ('DataExtractor', 1), ('"AdamUpdated",', 1), ('pendingAudio;\n', 1), ('message";\n\n', 1), ('RestrictedTrustManager(settings,', 1), ('verifyThread(Schedulers.computation(),', 1), ('mockSubscriber()', 1), ('NODE_SETTINGS_CHECKS', 1), ('artificialDelayOf(long', 1), ('fs.get().intValue());\n', 1), ('e.getMessage().contains("unable', 1), ('CompletableSubjectTest', 1), ('testIssue1935NoUnsubscribeDownstream()', 1), ('java.util.Set;\n\npublic', 1), ('enqueue.\n', 1), ('when(fieldJsonMapper.toJson(any(Video.class),', 1), ('mapFailWithRetryLimitedConditional()', 1), ('.materialize().subscribe(observer);\n', 1), ('.andThen(Maybe.error(new', 1), ('armed', 1), ('.flatMapSingle(Functions.justFunction(new', 1), ('onCompleteteCrash()', 1), ('RxJavaPlugins.initIoScheduler(null);\n', 1), ('MaybeObserver}.\n', 1), ('tenantCallsCount.get(tenantName).get();\n', 1), ('org.elasticsearch.xpack.core.XPackPlugin;\nimport', 1), ('UnicastSubject.create(bufferSize);\n\n', 1), ('objects:\n', 1), ('urlString,', 1), ('cache.invalidate(userId);\n', 1), ('SkipLastSubscriber<T>(s,', 1), ('where\n', 1), ('Flowable.interval(0,', 1), ('onCompleteAfterCrashConditional()', 1), ('to.assertValueSequence(list);\n', 1), ('customOnErrorShouldReportCustomOnError()', 1), ('Inserts', 1), ('unsafeWithObservable()', 1), ('message.split("', 1), ('<li>§3.9:', 1), ('Document("$inc",', 1), ('onAfterTerminatedCrash2()', 1), ('when(func.call()).thenReturn("test_value");\n\n', 1), ('exceptionHandler;\n', 1), ('RxJavaPlugins.setErrorHandler(errorConsumer);\n', 1), ('com.iluwatar.specification.property.Size;\nimport', 1), ('matches\n', 1), ('Supplier}', 1), ('java.sql.Wrapper;\nimport', 1), ('authorcount;\n', 1), ('48.89,', 1), ('presenter);\n\n', 1), ('spaceDelimitJvmOptions(final', 1), ('HashMap}', 1), ('UnsubscribeObserver(Observer<?', 1), ('SingleDelayWithPublisher(SingleSource<T>', 1), ('org.elasticsearch.xpack.core.ml.job.groups;\n\nimport', 1), ('videoLength', 1), ('testCancelledBeforeSubscribe()', 1), ('topShelf.add(factory.createPotion(PotionType.HEALING));\n\n', 1), ('accessElementCount()', 1), ('(ClassPermission)', 1), ('aliases\n', 1), ('headIndex;\n\n', 1), ('periodic)', 1), ('testCollectToListObservable()', 1), ('double.class', 1), ('g)', 1), ('//return', 1), ('Collections.unmodifiableList(files);\n', 1), ('student2', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/merge.png"', 1), ('10).concatWith(Observable.<Integer>error(new', 1), ('level1A,', 1), ('Data-Bus.\n', 1), ('customer3', 1), ('Systems.pdf<br>\n', 1), ('it.next().intValue());\n', 1), ('SpscArrayQueue<R>(prefetch);\n', 1), ('syntax.\n', 1), ('fromSubscription()', 1), ('swapped', 1), ('User("user",', 1), ('assertFalse(message.getHeaders().isEmpty());\n', 1), ('Observable.just((Object)(item', 1), ('Arrays.setAll(children,', 1), ('(indicesNames', 1), ('privileges)', 1), ('completeAfterNext()', 1), ('(loader.fileExists())', 1), ('assertNull(m.toString(),', 1), ('(!parent.add(sr))', 1), ('pay\n', 1), ('notations', 1), ('RxCustomThread', 1), ('never()).onNext(null);\n', 1), ('range.subscribe(new', 1), ('stateSupplierThrows()', 1), ('ParallelFilter(ParallelFlowable<T>', 1), ('written.\n', 1), ('JTextField[3];\n', 1), ('-8134157938864266736L;\n', 1), ('tail[capacityHint]', 1), ('vers[2];\n', 1), ('Collection<Module>', 1), ('non-blocking\n', 1), ('<V>\n', 1), ('book2', 1), ('String,', 1), ('allParameters', 1), ('.filter(Trampoline::complete)\n', 1), ('wizardDao.merge(wizard4);\n', 1), ('trustStoreAlgorithm.hashCode()', 1), ('assertEquals(INITIAL_COUNT,', 1), ('assertFalse(fs.isDone());\n\n', 1), ('List".equals(page.getTitleText());\n', 1), ('ctx.watch().id(),', 1), ('spscBiOfferCapacity()', 1), ('ap(long', 1), ('Functions.identity().toString());\n', 1), ('.concatWith(Observable.<Integer>error(new', 1), ('bothError()', 1), ('ein.read()', 1), ('guarantee.\n', 1), ('fail("Not', 1), ('-5502432239815349361L;\n\n', 1), ("'parts'", 1), ('hashCode();\n\n', 1), ('SingleObserver<S>,', 1), ('testCreateJson()', 1), ('typeNames.add(type.key);\n', 1), ('BufferBoundaryObserver(Observer<?', 1), ('File("testfile.txt");\n', 1), ('TimeIntervalObserver<T>(t,', 1), ('(as.isDisposed())', 1), ('RxJavaPlugins.setNewThreadSchedulerHandler(replaceWithImmediate);\n\n', 1), ('exceptions)\n', 1), ('idiom.\n', 1), ('queries.getAuthorsCount();\n', 1), ('lvElement(calcElementOffset(index', 1), ('trustGroupConfig);\n', 1), ('writer.append("there!");\n', 1), ('Maybe.just(1).subscribe(tc);\n\n', 1), ('*/\ninterface', 1), ('fromDto,', 1), ('workers.add(worker2);\n', 1), ('org.elasticsearch.common.hash.MessageDigests;\nimport', 1), ('seen.set(true);\n', 1), ('SubscriptionHelper.deferredSetOnce(parent,', 1), ('.zipWith(iterate(elements),', 1), ('startProcess(task,', 1), ('individual\n', 1), ('MaybeOperator', 1), ('permissionsAfterWrite', 1), ('calculated\n', 1), ('Iterator<Object>()', 1), ('Disposables.fromRunnable(new', 1), ('doubleFilter()', 1), ('property/env', 1), ('Car\n', 1), ('sb.append("This', 1), ('assertTrue(t.isDaemon());\n', 1), ('variable,', 1), ('String.class;\n', 1), ('Functions.EMPTY_RUNNABLE.toString());\n', 1), ('SwitchMapMaybeObserver(SwitchMapMaybeSubscriber<?,', 1), ('SimpleAppIntegTest', 1), ('Bloch",', 1), ('spellDao.persist(spell6);\n', 1), ('mock(Store.class);\n', 1), ('checkClass(Map<String,', 1), ('LOGGER.info("enumIvoryTower1={}",', 1), ('ParameterListKey))', 1), ('assertFalse(doc.isDone());\n\n', 1), ('org.elasticsearch.painless.spi.Whitelist;\nimport', 1), ('"+09845325"));\n', 1), ('write()', 1), ('sb.append("[");\n', 1), ('verify(exceptionHandler).accept(eq(exception));\n', 1), ('whitelist(s)', 1), ('checkBadSourceObservable(Function<Observable<T>,', 1), ('rangeAsync(Blackhole', 1), ('Publisher<Disposable>', 1), ('list;\n\n', 1), ('DelaySubscription(Subscription', 1), ('getRequestDescription()', 1), ('o.version.size());\n', 1), ('actionGet(String', 1), ('subscribers[0].onNext(3);\n', 1), ('Nazgul(NazgulName.MURAZOR));\n', 1), ('.concatMapMaybe(Functions.<Maybe<Integer>>identity(),', 1), ('manifest.getMainAttributes().getValue("X-Compile-Elasticsearch-Version");\n', 1), ('asNormalizables,', 1), ('a);\n', 1), ('sources[1]', 1), ('TrustManagerFactory.getDefaultAlgorithm());\n', 1), ('.take(3).subscribe(observer);\n\n', 1), ('Sets.newHashSet(OWNER_READ,', 1), ('operation.</p>\n', 1), ('be:', 1), ('channel()', 1), ('items.size();', 1), ('OnCompleteSubscriber', 1), ('ExpressionTest<NumberExpression>', 1), ('!line.contains("2.0."))', 1), ('run.set(2,', 1), ('char[]{DataDescription.LINE_ENDING})).build();\n\n', 1), ('Re-fetching', 1), ('DeflaterOutputStream', 1), ('filter,', 1), ('DisposableHelper.DISPOSED);\n', 1), ('integerList.addAll(Arrays.asList(1,', 1), ('TestException("Outer")).doOnEvent(new', 1), ('variable\n', 1), ('TakeLastObserver<T>(t,', 1), ('observerCompletable2()', 1), ('"FlowableConcatWithCompletable",\n', 1), ('getPublicKeyFingerprint(publicKeyBytes);\n', 1), ('"read,readlink,write,delete");\n', 1), ('TEST', 1), ('DocumentImplementation(props);\n', 1), ('com.gargoylesoftware.htmlunit.html.HtmlSelect;\nimport', 1), ('s.request(BackpressureHelper.multiplyCap(n,', 1), ('unsafeCreate()', 1), ('accountOfJonAfterShotDown', 1), ('wielding', 1), ('rollback).\n', 1), ('FlowableWindowBoundary<T,', 1), ('closeResource(resource);\n', 1), ('org.joda.time.DateTimeZone.class.getName(),\n', 1), ('(bes.createBuffer())', 1), ('crashDispose;\n', 1), ('org.elasticsearch.index.fielddata.ScriptDocValues.Dates;\nimport', 1), ('"scripts/application.js");\n', 1), ('These\n', 1), ('IngestGeoIpPlugin', 1), ('(certificate', 1), ('System.out.println("Domain', 1), ('drainMissedRequested()', 1), ('Cake\n', 1), ('error)).test().assertValue(1);\n', 1), ('assertNotNull(entitiesLeft);\n', 1), ('entity.getId());\n', 1), ('requests.get(1));\n', 1), ('Function7', 1), ('to.values().size());\n', 1), ('TimeUnit.MILLISECONDS);\n//\n//', 1), ('indices.indices()', 1), ('benefits', 1), ('Would', 1), ('retain/cache', 1), ('duplication.\n', 1), ('stay', 1), ('Schedulers.io();', 1), ('(VERSION_IS_AT_LEAST_JAVA_9', 1), ('clusterName;\n\n', 1), ('FlowableTakePublisher<T>', 1), ('situations', 1), ('"parts";\n\n', 1), ('typeName)', 1), ('".class".length());\n', 1), ('"ObservableDelaySubscriptionOther");\n', 1), ('user.firstName)', 1), ('(undo', 1), ('TakeUntilMainObserver<?>', 1), ('assertTrue(SubscriptionHelper.setOnce(ref,', 1), ('-6270983465606289181L;\n\n', 1), ('SAME', 1), ('Administration', 1), ('javaVersion9', 1), ('FlowableAutoConnectTest', 1), ('Completable.timer(1,', 1), ('lotteryService,', 1), ('javaVersion.get(0);\n', 1), ('values.add(-e);\n', 1), ('Thread.sleep(100);\n\n', 1), ('de.run();\n', 1), ('cleared.\n', 1), ('allCakes.size());\n', 1), ('INDEX_NAME', 1), ('ToSingleMaybeSubscriber(SingleObserver<?', 1), ('Expressions\n', 1), ('addField(painlessTypeName,', 1), ('multiplyCap(long', 1), ('sourceCode.indexOf("', 1), ('ThrottleLatestObserver(Observer<?', 1), ('DelaySubscriber(SubscriptionArbiter', 1), ('altering', 1), ('fileIn', 1), ('cfg.debug()', 1), ('NamedExpression)', 1), ('(key.isReadable())', 1), ('ObservableElementAtMaybe(ObservableSource<T>', 1), ('List<BiConsumer<Set<String>,', 1), ('RxJavaPlugins.initComputationScheduler(c));\n\n', 1), ('ActionListener<IndexResolution>', 1), ('jtFields[2].getText(),\n', 1), ('ConcatMapSupport<T>', 1), ('MaybeJust<T>(item));\n', 1), ('SingleSource<List<Integer>>', 1), ('ClqSimpleQueue<Object>();\n', 1), ('e.get()', 1), ('dispatches', 1), ('o.onComplete();\n', 1), ('delayCustomScheduler()', 1), ('equalTo(expectedString));\n', 1), ('CodeSource(null,', 1), ('getDescription()', 1), ('mask);\n', 1), ('collector,', 1), ('unwrap', 1), ('MessageData)', 1), ('event-loops,', 1), ('global\n', 1), ('Executors.newCachedThreadPool();\n\n', 1), ('PotionFactory();\n\n', 1), ('CakeLayer(layerInfo.name,', 1), ('ParallelReduceFullInnerSubscriber(ParallelReduceFullMainSubscriber<T>', 1), ('ArrayList<T>', 1), ('string)', 1), ('assertEquals(threads2.toString(),', 1), ('InMemoryAppender(SimpleTroll.class);\n', 1), ('repeated,', 1), ('Collections.addAll(modules,', 1), ('"exception', 1), ('ConcurrentHashMap<>(initalCapacity,', 1), ('values[0]', 1), ('org.junit.Assert.assertSame;\n\nimport', 1), ('IllegalArgumentException("static', 1), ('"Observer",\n', 1), ('java.util.Date}</li>\n', 1), ('(l', 1), ('(ByteBuffer)', 1), ('doAfter()', 1), ('unused', 1), ('observer.onNext(42L);\n', 1), ('in.type();\n', 1), ('RxJavaPlugins.setOnObservableReturn(new', 1), ('org.elasticsearch.action.admin.indices.get.GetIndexRequest;\nimport', 1), ('LimitTckTest', 1), ('HashMap<>(invalidLines.size());\n', 1), ('download(String', 1), ('countersCollectionName);\n', 1), ('wait.', 1), ('Flowable.merge(ob,', 1), ('docToTicket(doc);\n', 1), ('pp.onNext("one");\n\n', 1), ('getModel()', 1), ('lazySet(remaining);\n', 1), ('(--crashOnIterator', 1), ('ObjectHelper()', 1), ('f.type().name()))\n', 1), ('getClass().getSimpleName()', 1), ('org.bouncycastle.asn1.x509.GeneralNames;\nimport', 1), ('.withPathParamters(Collections\n', 1), ('String.format("CakeInfo', 1), ('isCompleted();\n\n', 1), ('StripBoundary<T>', 1), ('headers.get(header);\n', 1), ('mergeArray(MaybeSource<?', 1), ('first)', 1), ('causalChain)', 1), ('(plus', 1), ('result[i].getExceptionList().size());\n', 1), ('delays\n', 1), ('IgnoreMaybeObserver<T>', 1), ('testTimeMs()', 1), ('CakeLayerInfo(String', 1), ('description.\n', 1), ('SingleInternalHelper.ToFlowable.values().length);\n', 1), ('requestInBatches()', 1), ('"FlowableReduceMaybe",\n', 1), ('java.net.DatagramPacket;\nimport', 1), ('LOGGER.info("Starting', 1), ('pp.concatMapMaybe(\n', 1), ('ScheduledEvent.Builder().description("Blue', 1), ('(DM)', 1), ('inner.cancel();\n\n', 1), ('introducing', 1), ('loaded)\n', 1), ('working.', 1), ('getDisposableShouldReturnset()', 1), ('newQueue()', 1), ('IllegalArgumentException("Child', 1), ('BusinessException...', 1), ('RxJavaPlugins.onAssembly((Maybe<T>)MaybeEmpty.INSTANCE);\n', 1), ('ds.subscribeTo(Flowable.range(1,', 1), ('assertEquals(5', 1), ('MongoBank', 1), ('ToSingleObserver(SingleObserver<?', 1), ('Debug.explain(params.a)\\n"\n', 1), ('AsynchronousServerSocketChannel\n', 1), ('DoOnEachObserver<T>(t,', 1), ('testMultiplyCap()', 1), ('simpleObjects.listAll();\n', 1), ('SingleSource<T>>', 1), ('executed,', 1), ('org.apache.tika.parser.AutoDetectParser;\nimport', 1), ('onDrop.accept(t);\n', 1), ('task.onPostCall(get());\n', 1), ('javax.net.ssl.SSLContext;\nimport', 1), ('mm)', 1), ('com.iluwatar.observer.utils;\n\nimport', 1), ('io.reactivex.subjects.Subject;\nimport', 1), ('certificates(@Nullable', 1), ('Observable.just(1).flatMapSingle(new', 1), ('Single.just(1).delaySubscription(Observable.timer(100,', 1), ('VALJO', 1), ('numbers:', 1), ('Functions.toFunction(function8);\n', 1), ('LazyFluentIterable<>(iterable);\n', 1), ('LotteryNumbers.create(chosen);\n', 1), ('emissionRequestRace2()', 1), ('org.junit.jupiter.api.Assertions;\nimport', 1), ('xpack', 1), ('accountCreateEvent', 1), ('examples.', 1), ('this.realTime', 1), ('other)\n', 1), ('JarHell()', 1), ('io.reactivex.internal.operators.maybe.MaybeError;\nimport', 1), ('parser));\n', 1), ('RxJavaPlugins.createIoScheduler(factory);\n', 1), ('load/store.\n', 1), ('(singleton)', 1), ('deferredSetOnce(AtomicReference<Subscription>', 1), ('ObservableBuffer(ObservableSource<T>', 1), ('predicate.test(e)', 1), ('NodeInfo<ShowFunctions>', 1), ('char.class)', 1), ("'#')", 1), ('injectable', 1), ('clazz.clazz.isAnnotationPresent(FunctionalInterface.class);\n', 1), ('JLabel("Address"));\n', 1), ('workers.add(worker);\n', 1), ('waits.\n', 1), ('assertTrue(aa.get());\n', 1), ('assertEquals(expectedDates[d][i],', 1), ('crashReported()', 1), ('sessionFactory', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().singleElement().doOnEvent(new', 1), ('-3491074160481096299L;\n', 1), ('dcl1', 1), ('executorScheduler.shutdownNow();\n', 1), ('banking', 1), ('[elasticsearch.version]', 1), ('Collide', 1), ('java.nio.channels.DatagramChannel;\nimport', 1), ('Tenant("Nike",', 1), ('FlowableSwitchMapSinglePerf', 1), ('tested.', 1), ('Completable.merge(Flowable.just(Completable.complete()),', 1), ('TestingHelper', 1), ('pre-processes', 1), ('SingleUnsubscribeOn(SingleSource<T>', 1), ('CompletableEmpty', 1), ('Being', 1), ('org.elasticsearch.xpack.core.watcher.watch.Payload;\n\nimport', 1), ('assertEquals(ex,', 1), ('buffer.toString("UTF-8");\n', 1), ('Collections.singletonList(readPrivateKey(CertUtils.resolvePath(keyPath,', 1), ('location:', 1), ('(!updateThread.isAlive())', 1), ('5;', 1), ('this.names', 1), ('types);\n', 1), ('DESC', 1), ('blockingGetErrorTimeout()', 1), ('LotteryTicketId(ticketId));\n', 1), ('TestResourceMaybeObserver<T>', 1), ('threadpool.shutdown();\n', 1), ('spellbook6', 1), ('that.trustStorePath', 1), ('this.ok.setBounds(250,', 1), ('SingleDoOnError<T>(this,', 1), ('super.sslContext();\n', 1), ('IllegalStateException(ex);\n', 1), ('testNext(Filter', 1), ('isValid(String', 1), ('checkDoubleOnSubscribeSingleToMaybe(Function<Single<T>,', 1), ('this.price', 1), ('(int)elements).groupBy(new', 1), ('Pow2()', 1), ('exceeded', 1), ('ConsumerSingleObserver<T>(onSuccess,', 1), ('Observable#safeSubscribe(Observer)}', 1), ('io.reactivex.observers.ObserverFusion;\n\npublic', 1), ('(seen', 1), ('overwrite");\n', 1), ('cannot,\n', 1), ('6666));\n', 1), ('(EmailAttachmentParser.EmailAttachment', 1), ('BaseTck()', 1), ('s.get().cancel();\n', 1), ('PEMTrustConfig(List<String>', 1), ('String.indexOf(String,', 1), ('Observable.intervalRange(0,', 1), ('ReferenceDisposable<Subscription>', 1), ('Orcs());\n', 1), ('CollectionUtils.isEmpty(formats)', 1), ('properties.getProperty("transport.uri");\n', 1), ('RxJavaPlugins.setInitNewThreadSchedulerHandler(callable2scheduler);\n', 1), ('a[idx].subscribe(this);\n', 1), ('MaybeSwitchIfEmptySingle<T>(this,', 1), ('6)));\n\n', 1), ('createTestInstance()', 1), ('MissingBackpressureException(String', 1), ('java.util.concurrent.ConcurrentLinkedDeque;\nimport', 1), ('m.javadoc.indexOf("#toSingle",', 1), ('options());\n', 1), ('Clears', 1), ('byte[magicLen];\n', 1), ('printCacheContent()', 1), ('FlowableAll(Flowable<T>', 1), ('org.slf4j.LoggerFactory;\n\n\n/**\n', 1), ('cons);\n\n', 1), ('SingleElementSubscriber<T>', 1), ('SimpleMessageQueue(messages.length);\n', 1), ('"accountNo="', 1), ('No\n', 1), ('FiniteRange', 1), ('cs.test().assertFailure(IOException.class);\n\n', 1), ('void.class,', 1), ('testElementAtWithIndexOutOfBoundsObservable()', 1), ('ObserverTest(final', 1), ('threadSafeIvoryTower1);\n', 1), ('innerError(SwitchMapSingleObserver<R>', 1), ('panel.add(jtFields[0]);\n', 1), ('cake.getLayers())', 1), ('Objects).\n', 1), ('rangeObservable;\n\n', 1), ('value2\n', 1), ('ACCOUNT_OF_JON', 1), ('javaConstructor;\n\n', 1), ('indexInTail++;\n', 1), ('minimize\n', 1), ('Submits', 1), ('createDataSource()', 1), ('Observable.fromFuture(future);\n\n', 1), ('(Enum<HashSetCallable>', 1), ('executor.startProcess(lazyval(20,', 1), ("File(u.toURI()).toString().replace('\\\\',", 1), ('MagicServiceImpl(WizardDao', 1), ('testSuccessOperatesOnSuppliedScheduler()', 1), ('jar.', 1), ('memeber', 1), ('\\n(3)', 1), ('ThrottleLatestObserver<T>\n', 1), ('deleted");\n\n', 1), ('copy.putAll(props);\n', 1), ('getCertificateChain(@Nullable', 1), ('this.method.stealTheItem(this.expectedTarget);\n', 1), ('ballThread.setTwin(mock(BallItem.class));\n', 1), ('all.', 1), ('cs2.onComplete();\n\n', 1), ('Errors', 1), ('LOGGER.info(welcomeMessagePaidUser);\n', 1), ('InnerSubscriber(Subscriber<?', 1), ('Observable.never().blockingLatest().iterator().remove();\n', 1), ('nextCount;\n', 1), ('varieties.', 1), ('page.getElementById("username");\n', 1), ('numberOfIndices', 1), ('winningNumbers.getNumbers()));\n', 1), ('identificator\n', 1), ('.map(number', 1), ('Single.zipArray(Functions.justFunction(null),', 1), ('spells', 1), ('submitTicket(LotteryService', 1), ('processor.onNext("three");\n', 1), ('placed\n', 1), ('ticket?");\n', 1), ('Worker}s.\n', 1), ('org.elasticsearch.cli.EnvironmentAwareCommand;\nimport', 1), ('other.strength)', 1), ('list.add(i);\n', 1), ('runtime,', 1), ('clean.\n', 1), ('line.size());\n', 1), ('Author))', 1), ('org.elasticsearch.xpack.sql.session.SchemaRowSet;\nimport', 1), ('qs.requestFusion(QueueDisposable.ANY);\n', 1), ('SpscArrayQueue<E>', 1), ('mapper.apply(v);\n\n', 1), ('io.reactivex.annotations.SchedulerSupport#SINGLE', 1), ('preserved,', 1), ('ObservableMergeWithSingleTest', 1), ('multi-spaces\n', 1), ('this.getStudents().remove(studentToBeDeleted);\n\n', 1), ('dirs.offer(parent);\n', 1), ('NodeImpl("level2_b",', 1), ('Mute()', 1), ('switchIfEmpty(just(defaultItem));\n', 1), ('toFuture}', 1), ('Functions.justFunction(Maybe.error(new', 1), ('onNext*', 1), ('.singletonMap("id",', 1), ('schedule(Runnable', 1), ('serviceName)', 1), ('id.get());\n', 1), ('Thread.currentThread());\n\n', 1), ('FlowableConcatMapCompletable(Flowable<T>', 1), ('painless.method.equals(org.objectweb.asm.commons.Method.getMethod(oneMethod))', 1), ('super(Pattern.compile("logo",', 1), ('observer",', 1), ('KeyStoreException,', 1), ('VideoResource(fieldJsonMapper,', 1), ('this.serverPort', 1), ('ctx,', 1), ('Response(actions);\n', 1), ('mechanics', 1), ('byName.getId());\n', 1), ('SingleResumeNext(SingleSource<?', 1), ('fileLoggerModule.printString("Message");\n', 1), ('servant.feed(royalty);\n', 1), ('context.get(IUnitOfWork.DELETE);\n', 1), ('STANDARD_CLASSES)', 1), ('frontController', 1), ('(virtualDB.containsKey(userId))', 1), ('HibernateUtil.getSessionFactory();\n\n', 1), ('testNotAll()', 1), ('init();\n', 1), ('(QueueSubscription<Object>)', 1), ('child.onSubscribe(parent);\n\n', 1), ('overloaded', 1), ('TestException("onComplete()");\n', 1), ('available",', 1), ('Flowable.fromArray(array).flatMap(new', 1), ('currentReaderCount--;\n', 1), ('injections', 1), ('com.amazonaws.services.dynamodbv2.AmazonDynamoDBClientBuilder;\nimport', 1), ('DIFFERENT', 1), ('Set<SelectionKey>', 1), ('negativeRequest()', 1), ('spellbookDao.merge(spellbook7);\n\n', 1), ('put,\n', 1), ('FlowableReduce(Flowable<T>', 1), ('b.iterator();\n\n', 1), ('complete(Notification.<T>createOnComplete());\n', 1), ('java.text.SimpleDateFormat;\nimport', 1), ('Campbell\n\nPermission', 1), ('valueSupplier\n', 1), ('blockingSingleEmpty()', 1), ('Expression})', 1), ('line"));\n\n', 1), ('printAndCountDates(Result', 1), ('bs);\n', 1), ('Objects.equals(pattern,', 1), ('resolutions.add(buildGetIndexResult(concreteIndex,', 1), ('javaSuperInterface', 1), ('dispatch(E', 1), ('com.gargoylesoftware.htmlunit.html.HtmlOption;\nimport', 1), ('it.)', 1), ('upstream);\n}', 1), ('virtualDB', 1), ('none.");\n', 1), ('to.onSubscribe(Disposables.empty());\n', 1), ('request[4]});\n', 1), ('PublishProcessorPerf', 1), ('canonical', 1), ('lazyval(T', 1), ('(callOnOverflow)', 1), ('ObjectHelper.requireNonNull(zipper.apply(t,', 1), ('maybeCompletable2()', 1), ('ObservableDoOnEach(ObservableSource<T>', 1), ('DeferredScalarSubscription<U>', 1), ('\\"email\\""\n', 1), ('studentDatabase.modify(student);\n', 1), ('SingleResumeNext<T>(this,', 1), ('BlockingFlowableMostRecent(Flowable<T>', 1), ('longs.getValues().add(100L));\n', 1), ('till\n', 1), ('response,', 1), ('BackpressureHelper', 1), ('LOGGER.info("threadSafeIvoryTower1={}",', 1), ('StringArrayList', 1), ('fromRunnableThrows()', 1), ('set(ON_COMPLETE);\n', 1), ('NumberExpression(j),\n', 1), ('shouldCallOnNextAndOnCompleted()', 1), ('noErrors()', 1), ('assertTrue(fs.isCancelled());\n\n', 1), ('"java.time.format.txt",\n', 1), ('jl;\n', 1), ('ObservableNever();\n\n', 1), ('BQueue-', 1), ('semantics.', 1), ('locale', 1), ('Map<SelectableChannel,', 1), ('o.doOnEach(new', 1), ('to1.assertNoValues();\n', 1), ('"list"', 1), ('CustomerDao}', 1), ('errorList(TestObserver<?>', 1), ('CakeToppingInfo(next.getId(),', 1), ('sources.subscribe(new', 1), ('onOverflow,\n', 1), ('false),', 1), ('forces', 1), ('indices)', 1), ('keys.clear();\n', 1), ('(Modifier.isStatic(modifiers))', 1), ('OnBackpressureBufferStrategySubscriber<T>(s,', 1), ('log("Some', 1), ('rangeObservable.subscribe(new', 1), ('HashSet<String>();\n\n', 1), ('Producer("producer",', 1), ('decrementAndGet();\n', 1), ('CallbackCompletableObserver\nextends', 1), ('.withLatestFrom(Flowable.just(1),', 1), ('baseDir.resolve("ports"),', 1), ('innerNext();\n', 1), ('BurstSubscription(subscriber));\n\n', 1), ('time?!', 1), ('Objects.requireNonNull(painlessFieldTypeName);\n', 1), ('executor.startProcess(lazyval(50L,', 1), ('delaySubscription(delay,', 1), ('accountCreateEvent)', 1), ('domainapp.integtests.tests.SimpleAppIntegTest;\nimport', 1), ('PlayMessage(stream,', 1), ('aste.getMessage().contains("createObservable"));\n//\n//', 1), ('achievable', 1), ('scheduler.scheduleDirect(countDownRunnable,', 1), ('numberOfSongsNumberField.setText(Integer.toString(numberOfSongs));\n', 1), ('Single.defer(new', 1), ('3).sorted()\n', 1), ('ActionDisposable(Action', 1), ('pattern;\n\n', 1), ('CompletableMergeDelayErrorIterable(Iterable<?', 1), ('});\n\n//', 1), ('BlockingFlowableIterator<T>(bufferSize);\n', 1), ('NoSuchFileException("["', 1), ('logStreamName.hashCode()', 1), ('fruit', 1), ('this.channelToPendingWrites.put(key.channel(),', 1), ('afford', 1), ('Selector}', 1), ('HalfSerializer()', 1), ('Consumer("NSA",', 1), ('onDrop(n);\n', 1), ('PartyMemberBase#toString()}', 1), ('stage\n', 1), ('delayIndicator));\n', 1), ('ownerStruct.clazz.getField(whitelistField.javaFieldName);\n', 1), ('VisitorTest<V', 1), ('throwable;\n', 1), ('delegation:', 1), ('String[]{"",', 1), ('LoggerFactory.getLogger(CustomerClientApp.class);\n\n', 1), ('thisOnFire);\n', 1), ('single().shutdown();\n', 1), ('TakeUntil', 1), ('primitive:', 1), ('getType("Exception");\n', 1), ('observer2.value;\n\n', 1), ('Mockito.never()).onComplete();\n', 1), ('(compared', 1), ('assertTrue(atomicBoolean.get());\n', 1), ('Single.fromPublisher(new', 1), ('*/\n@Target(ElementType.METHOD)\n@Retention(RUNTIME)\n@Documented\npublic', 1), ('task.toString());\n', 1), ('javaConstructor.getModifiers(),', 1), ('equality\n', 1), ('RuntimeException)', 1), ('GetAliasesRequest', 1), ('StringBuilder("Anonymous', 1), ('CreateEmitter(Observer<?', 1), ('INITIAL_SCORE));\n\n', 1), ('assisted\n', 1), ('accum.put("instance",', 1), ('unt\n', 1), ('Spring.\n', 1), ('(i)', 1), ('MaybeNo2Dot0Since.class.getResource(MaybeNo2Dot0Since.class.getSimpleName()', 1), ('memoryLimitInMb.hashCode()', 1), ('GoogleCloudStorageFixture', 1), ('executor.get().scheduleAtFixedRate(task,', 1), ('taskRunnable3', 1), ('.switchIfEmpty(Observable.just(2)\n', 1), ('path:', 1), ('MaybeFlatMapCompletable<T>(this,', 1), ('SingleSource.");\n', 1), ('Struct.', 1), ('AtomicReference<Producer>();\n//\n//', 1), ('oldes;\n\nimport', 1), ('subscribers.delete(os);\n', 1), ('ts.onError(t);\n', 1), ('PlayerDetails("bjorn@google.com",', 1), ('SafeSubscriber<T>', 1), ('org.elasticsearch.xpack.sql.jdbc.jdbc.JdbcDriver;\n\nimport', 1), ('(QueueDisposable<Object>)', 1), ('SpellDaoImpl();\n', 1), ('in",\n', 1), ('undoStack.offerLast(command);\n', 1), ('(clazz.isLocalClass()', 1), ('CompletableObserverImplementation(s));\n', 1), ('inOrder.verify(ballThread).suspendMe();\n\n', 1), ('(exceptionHandler', 1), ('SwitchMapSingleObserver<R>\n', 1), ('replaceChildren(List<PhysicalPlan>', 1), ('testWaitingSomeTimeForPromiseToBeFulfilled();\n', 1), ('allSpells)', 1), ('1"))', 1), ('transactions', 1), ('unblock()', 1), ('AppManager.save(userAccount6);\n', 1), ('mapFactory;\n', 1), ('sendOnError(Throwable', 1), ('key.toString();\n', 1), ('work")\n', 1), ('ResourceMaybeObserverTest', 1), ('.map(MockUncasedHostProvider::getNode)\n', 1), ('holder);\n', 1), ('checkTicketForPrize(LotteryTicketId', 1), ('recursion', 1), ('privateKeys(@Nullable', 1), ('ObservableRefCount<?>', 1), ('testFindAllWizards()', 1), ('2288246011222124525L;\n\n', 1), ('MaybeDelay<T>', 1), ('statement.executeQuery(\n', 1), ('this.latch', 1), ('ObservableElementAtMaybe<T>', 1), ('ConnectableObservable}.\n', 1), ('NazgulEnum.AKHORAHIL);\n', 1), ('message",', 1), ('SingleInternalHelper.NoSuchElementCallable.values().length);\n', 1), ('image\n', 1), ('ReaderWriterLock();\n', 1), ('mapWrongParallelismConditional()', 1), ('ConcurrentHashMap<>();\n\n', 1), ('(ps.isCancelled())', 1), ('unsafeCreate(SingleSource<T>', 1), ('same,', 1), ('Multiton\n', 1), ('cd,', 1), ('do:', 1), ('assertFalse(DisposableHelper.set(d,', 1), ('eagle', 1), ('business\n', 1), ('SubscribeOnObserver\n', 1), ('handleException(exception);\n', 1), ('<p>A', 1), ('TcpLoggingClient', 1), ('val);\n', 1), ('composite.dispose();\n', 1), ('seenJvmOptions.get(jvmOption);\n', 1), ('scheduler2scheduler', 1), ('DateFormatCallableTestMultiThread', 1), ('MaybeConcatArray<T>', 1), ('(this.getStudents().contains(studentToBeDeleted))', 1), ('docs\n', 1), ('ClientException("Connection', 1), ('"mFowler@email.com");\n\n', 1), ('accountNo;\n\n', 1), ('this.mask;\n', 1), ('processPendingCommands();\n\n', 1), ('methods!\n', 1), ('"B.B.2"),', 1), ('command);\n\n', 1), ('(permissions', 1), ('Consumer<DataType>', 1), ('spConsumerNode(LinkedQueueNode<T>', 1), ('getTimeMs()', 1), ('o.version.size()', 1), ('s.onSubscribe(set);\n', 1), ('ObservableFlattenIterableTest', 1), ('initialValue()', 1), ('AmbInnerSubscriber<T>', 1), ('ResponseOrException(R', 1), ('"*";</pre>\n', 1), ('flavours', 1), ('org.reactivestreams.*;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 1), ('serializes', 1), ('(Specifications)', 1), ('other.onComplete();\n\n', 1), ('Flowable.fromArray(array);\n', 1), ('NumberExpression#NumberExpression(String)}', 1), ('ElementType.PARAMETER,', 1), ('java.nio.file.attribute.PosixFilePermission.OWNER_EXECUTE;\nimport', 1), ('switchIfEmpty(MaybeSource<?', 1), ('we\n', 1), ('LoggerFactory.getLogger(AlchemistShop.class);\n\n', 1), ('onSuccessMapper\n', 1), ('javax.inject.Inject;\nimport', 1), ('injector.injectMembers(this);\n', 1), ('Consumer<TestSubscriber<T>>', 1), ('EmptyDisposable.complete(actual);\n', 1), ('hasTimeZone', 1), ('illustrations', 1), ('MessageData(message);\n', 1), ('CustomerNotFoundException}', 1), ('getFileName();\n\n', 1), ('SingleObserver>', 1), ('q.offer(null,', 1), ('wider', 1), ('AbstractBlobContainer', 1), ('SubscriptionHelper.isCancelled(get());\n', 1), ('SelectionKey.OP_ACCEPT;\n', 1), ('MaybeObserveOn<T>', 1), ('TestHelper.checkUtilityClass(FlowableInternalHelper.class);\n', 1), ('zeros\n', 1), ('MongoDB)', 1), ('call(Integer', 1), ('MalformedURLException', 1), ('expectedTarget', 1), ('Promise<String>()\n', 1), ('assertNotNull(all);\n', 1), ('untilCompletableOtherError()', 1), ('address!"});\n', 1), ('readLock;\n\n', 1), ('t.getCause();\n', 1), ('strongly-sequential', 1), ('folder:<br>\n', 1), ('inputs,', 1), ('io.reactivex.ObservableSource;\n\n/**\n', 1), ('onErrorMapper\n', 1), ('LinkedArrayList', 1), ('io.reactivex.functions.*;\n\n/**\n', 1), ('whitelistConstructors;\n\n', 1), ('org.elasticsearch.painless.spi.Whitelist;\n\nimport', 1), ('java.security.ProtectionDomain;\n\n/**', 1), ('node.next', 1), ('Flowable.just(1).singleElement().toFlowable()\n', 1), ('introduced', 1), ('InMemoryAppender(PartyMemberBase.class);\n', 1), ('ObservableTakeWhile<T>', 1), ('storageServer;\n\n', 1), ('QueueDisposable<?>', 1), ('size);\n\n', 1), ('asyncFusedUnboundedIn()', 1), ('doubleOnSubscribe(Observer<?>', 1), ('latches.remove();\n', 1), ('inner.actual.onError(e);\n', 1), ('writeToDb(UserAccount', 1), ('NEW_THREAD;\n\n', 1), ('JavaVersion.parse(targetVersion);\n', 1), ('b0.add(t);\n', 1), ('LOGGER.error("{}', 1), ('RandomNumberGenerator(int', 1), ('resultExpression', 1), ('noOverrequest()', 1), ('FlowableWindowBoundarySupplier<T,', 1), ('bind(InputStream.class).annotatedWith(Names.named("metaInfManifest")).toProvider(\n', 1), ('onErrorFailureSafe()', 1), ('Completable.merge(pp1.map(new', 1), ('requestMethod\n', 1), ('Maybe<"))', 1), ('PlayerDetails("yngwie@google.com",', 1), ('normalizer.normalize(BUCKET_SPAN,', 1), ('b.indexOf("@BackpressureSupport(",', 1), ('newValue)', 1), ('ImmediateThinScheduler.INSTANCE.schedulePeriodicallyDirect(Functions.EMPTY_RUNNABLE,', 1), ('InvalidParameterException', 1), ('dates.setNextDocId(d);\n', 1), ('randomFrom(0,', 1), ('equivalent\n', 1), ('java.lang.UNIXProcess.forkAndExec(Native', 1), ('dummyCustomerApi(Tenant', 1), ('md.actual.onComplete();\n', 1), ('travis', 1), ('MergePublisherTckTest', 1), ('honours', 1), ('bookCount', 1), ('"Observable");\n\n', 1), ('transactionManager.setEntityManagerFactory(entityManagerFactory().getObject());\n', 1), ('","', 1), ('setHead(old);\n', 1), ('FlowableRefCount<?>', 1), ('CyclicBarrier', 1), ('TranslatableString.tr("Simple', 1), ('ProductInventoryClient', 1), ('com.iluwatar.specification.creature.Octopus;\nimport', 1), ('Version.CURRENT.toString(),', 1), ('TimeoutFallbackObserver<T>\n', 1), ('loop",', 1), ('fake', 1), ('anything\n', 1), ('super(Spell::new,', 1), ('luck', 1), ('line.charAt(0)', 1), ('((Callable<U>)p).call();\n', 1), ('MAX_PENDING;\n', 1), ('Car(Map<String,', 1), ('observers,', 1), ('enabling', 1), ('(RuntimeException)error;\n', 1), ('org.elasticsearch.xpack.sql.expression.regex.LikePattern;\nimport', 1), ('commit', 1), ('(OnErrorNotImplementedException', 1), ('address[0],', 1), ('fromRunnableInvokesLazy()', 1), ('output.\n', 1), ('node.', 1), ("ProtectionDomain's", 1), ('SQLFeatureNotSupportedException();\n', 1), ('ObservableSource}s', 1), ('this.qd;\n', 1), ('Fashion.', 1), ('JTextField();\n', 1), ('CountDownLatch(5);\n\n', 1), ('FlowableTakeLastTimed(Flowable<T>', 1), ('requested.add(n);\n//', 1), ('badMoodRoyalty', 1), ('cfg.connectTimeout());\n', 1), ('vers[1];\n', 1), ('org.elasticsearch.repositories.azure;\n\nimport', 1), ('}).doOnRequest(empty).subscribe(new', 1), ('doThrow(exception).when(mockedConnection).prepareStatement(Mockito.anyString());\n', 1), ('somewhat', 1), ('Flow</a>\n', 1), ('Selenium,', 1), ('Database)', 1), ('CompositeRoleMapper(UserRoleMapper...', 1), ('ver.split("[.-]");\n', 1), ('lazySet(FUSED_EMPTY);\n', 1), ('Collections.unmodifiableMap(headers);\n', 1), ('org.elasticsearch.index.IndexNotFoundException;\nimport', 1), ('testPreCallException()', 1), ('spell5', 1), ('ObservableStripBoundary(Observable<T>', 1), ('java.nio.file.attribute.PosixFilePermission.OWNER_WRITE;\nimport', 1), ('compliment)', 1), ('ObservableSingleSingle<T>(observableSource,', 1), ('lists,', 1), ('java.util.PropertyPermission;\nimport', 1), ('subscribers.poll();\n\n', 1), ('org.elasticsearch.xpack.core.ml.utils.time;\n\nimport', 1), ('composeMessage(String', 1), ('RxJavaPlugins.onIoScheduler(s));\n\n', 1), ('FlowableBufferBoundarySupplier(Flowable<T>', 1), ('onCallback\n', 1), ('nameBuilder.append("\\r\\n");\n//', 1), ('RoleDescriptor.IndicesPrivileges.builder()\n', 1), ('priority;\n\n', 1), ('ImmediateThinScheduler.INSTANCE.scheduleDirect(Functions.EMPTY_RUNNABLE,', 1), ('Whitelist.Constructor(origin,', 1), ('maintain\n', 1), ('SubscriptionHelper.isCancelled(s.get());\n', 1), ('layers);\n', 1), ('DbCustomerDao}.\n', 1), ('TypeToClass(getTypeInternal(whitelistMethod.painlessReturnTypeName));\n', 1), ('ConcurrentHashMap<Integer,', 1), ('-XX:+PrintGCDateStamps}\n', 1), ('in.supportsFileAttributeView(type);\n', 1), ('result.getDateList().add(this.df.get().parse(this.dateValue));', 1), ('NoCache.getInstance();\n', 1), ('tokens,', 1), ('(!characterToFrequency.containsKey(c))', 1), ('org.apache.tika.parser.html.HtmlParser(),\n', 1), ('CompletableDisposable(observer,', 1), ('lambdaInfo.setLogGroupName(context.getLogGroupName());\n', 1), ('boxTo;\n', 1), ('HashMap<>()));\n', 1), ('toMap(Function<String,', 1), ('<li>Lowest', 1), ('persist(insert,update,delete)\n', 1), ('Files.exists(path))', 1), ('failComputationFlowableBlockingForEach()', 1), ('s.onSubscribe(null);\n', 1), ('integers);\n\n', 1), ('3936130599040848923L;\n\n', 1), ('java.sql.PreparedStatement;\nimport', 1), ('com.iluwatar.databus.data.MessageData;\n\nimport', 1), ('Decodes', 1), ('previously.\n', 1), ('whitelistField);\n', 1), ('setCapacity(int', 1), ('NetworkUtils', 1), ('Stroustrup.\n', 1), ('doAfterNext(@NonNull', 1), ('OutputStreamWriter(new', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/mergeMap.r.png"', 1), ('.blockingSubscribe(ts);\n', 1), ('ObjectHelper.requireNonNull(subscriptionIndicator,', 1), ('asyncResult1', 1), ('times(1)).accept(Integer.valueOf(1));\n', 1), ('front-end.\n', 1), ('Steps\n', 1), ('newName.append(name.substring(3));\n', 1), ('String>(),', 1), ('firstName=\'"', 1), ('Error");\n', 1), ('q1', 1), ('layers=%s",', 1), ('lines.filter(line', 1), ('io.reactivex.exceptions.CompositeException;\n\n/**\n', 1), ('[Hi!]', 1), ('onErrorInner(e);\n', 1), ('<code>key</code>.', 1), ('never()).delete(student1);\n', 1), ('clear\n', 1), ('testWaitingForeverForPromiseToBeFulfilled();\n', 1), ('augmentedOffset];\n\n', 1), ('head.previous', 1), ('SENDER\n', 1), ('org.elasticsearch.discovery.zen.UnicastHostsProvider;\nimport', 1), ('ObservableToListSingle<T,', 1), ('GiantView}', 1), ('mixture', 1), ('simultaneously,', 1), ('(Map)', 1), ('assertSame(actual,', 1), ('processing.putIfAbsent(Thread.currentThread().getName(),', 1), ('ObservableDematerializeTest', 1), ('testScanFunctionThrowsAndUpstreamEmitsOnNextResultsInScanFunctionBeingCalledOnlyOnce()', 1), ('testMultipleCallsReturnTheSameObjectInSameThread()', 1), ('ConcatArraySubscriber(Publisher<?', 1), ('ServiceExecutor}', 1), ('assertFalse(last.isPresent());\n', 1), ('painlessSuperStruct', 1), ('(setOnce(field,', 1), ('would\n', 1), ('names(Collection<?', 1), ('testToString(Supplier<PartyMember>', 1), ('ActionDisposable', 1), ('VM.\n', 1), ('StringReader("-Xms1g\\n-Xmx1g");\n', 1), ('PlayerDetails("edwin@google.com",', 1), ('java.util.Map.Entry;\nimport', 1), ('exchange.getRequestHeaders();\n', 1), ('subscriber.onError(new', 1), ('SPI\n', 1), ('RecreateSimpleObjects());\n', 1), ('assertEquals(integers.size(),', 1), ('"type",', 1), ('Color.RED},\n', 1), ('numChecksPassed', 1), ('ObservableConcatMapCompletableTest', 1), ('desc', 1), ('@Ignore("Exceptions', 1), ('(QueueDisposable<U>)', 1), ('path;\n\n', 1), ('(int)elements).retry(1)\n', 1), ('Peeks', 1), ('RainbowFishSerializer.readV1("fish1.out");\n', 1), ('io.reactivex.internal.util.AppendOnlyLinkedArrayList.NonThrowingPredicate;\nimport', 1), ('io.reactivex.internal.schedulers.IoScheduler;\n\npublic', 1), ('250));\n', 1), ('TikaException,', 1), ('testSortedListWithCustomFunction()', 1), ('request[3],', 1), ('Whitelist.Constructor', 1), ('function9Fail()', 1), ('XContentParser.Token', 1), ('TestObserver<Object>());\n', 1), ('Map.Entry<Integer,', 1), ('ObservableStartWithTests', 1), ('listens', 1), ('String[expectedIndices.size()])));\n', 1), ('words\n', 1), ('addItem(Item', 1), ('from(ver);\n', 1), ('cs2;\n', 1), ('FlowableScan(Flowable<T>', 1), ('videoResource.getDetails(1);\n', 1), ('this.number', 1), ('down.', 1), ('@AfterClass\n', 1), ('ReadableDateTime[values.length][];\n', 1), ('"However,', 1), ('2500;\n\n', 1), ('ts.request(10);\n\n', 1), ('switchIfEmpty(SingleSource<?', 1), ('assertNull(aste);\n//\n//', 1), ('Oh', 1), ('verify(observer).onNext(1', 1), ('FileSystem\n', 1), ('this.contents', 1), ('albumLinks)', 1), ('PublishProcessor()', 1), ('!m.signature.contains("CompletableSource")\n', 1), ('toSingle(toFlowable().retryWhen(handler));\n', 1), ('-6178010334400373240L;\n\n', 1), ('reader2', 1), ('<i>all</i>', 1), ('constructor.newInstance());\n', 1), ('org.elasticsearch.common.inject.Inject;\nimport', 1), ('path.indexOf("/",', 1), ('toolkits.\n', 1), ('jobId);\n\n', 1), ('thereafter', 1), ('getType("boolean");\n', 1), ('AbstractDynamoDbHandler\n', 1), ('(what', 1), ('"1223-121212",', 1), ('Assert.assertTrue(exceptions.get(1)', 1), ('atomicBoolean.set(true);\n', 1), ('storageServer.getEndpoint()', 1), ('port)', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/delaySubscription.png"', 1), ("'mood'-cycle", 1), ('completeAfterCancel()', 1), ('groups.remove(mapKey);\n', 1), ('super(source,', 1), ('Prior', 1), ('(DatagramSocket', 1), ('BytesStreamOutput())', 1), ('characterFrequency()\n', 1), ('spellDao.persist(spell16);\n', 1), ('accum,', 1), ('//lenient', 1), ('reactive-streams-jvm', 1), ('fulfillmentAction.run();\n', 1), ('RxJavaPlugins.onSingleError(ex));\n//\n//', 1), ('testOnErrorExceptionIsThrownFromSingleSubscribe()', 1), ('cb)', 1), ('requested,\n', 1), ('definition.ClassToType(objectToExplain.getClass()).struct;\n', 1), ('complete.",', 1), ('getUserId()', 1), ('RxJavaPlugins.setInitNewThreadSchedulerHandler(initReplaceWithImmediate);\n\n', 1), ('event.getFormattedMessage().contains(message));\n', 1), ('consumeStreams();\n', 1), ('s.request(BackpressureHelper.multiplyCap(skip,', 1), ('ae.initCause(ex);\n', 1), ('Initiates', 1), ('org.elasticsearch.xpack.ml.job.persistence.overallbuckets;\n\nimport', 1), ('java.util.concurrent.CancellationException;\nimport', 1), ('Single.just(1).doOnSuccess(new', 1), ('beans.get(ROWING_BEAN);\n\n', 1), ('UserGroup.addUserToFreeGroup(freeUser);\n\n', 1), ('1000)', 1), ('userConverter.createFromEntities(users);\n', 1), ('version;\n\n', 1), ('this.listeners.remove(member);\n', 1), ('java-doc-admin-indices-refresh\n\n', 1), ('first!");\n', 1), ('s.onSubscribe(parent.arbiter);\n', 1), ('SorterFunction(Comparator<?', 1), ('schedulePeriodicallyDirect(Runnable', 1), ('RainbowFishSerializer.writeV2(V2,', 1), ('doGetConnection(getProperties());\n', 1), ('reduceWithObjectsObservable()', 1), ('RxJavaPlugins.onObservableError(ex));\n//\n//', 1), ('pathExists(Path', 1), ('assertEquals(9,', 1), ('.statusCode(SUCCESS_STATUS_CODE)\n', 1), ('(rnd.nextDouble()', 1), ('singleton,', 1), ('.withAbility("invisibility")\n', 1), ('org.elasticsearch.common.inject.Module;\nimport', 1), ('java.lang.invoke.MethodType;\nimport', 1), ('StatusMember}', 1), ('tf', 1), ('"ls":', 1), ('manually-specified', 1), ('WeatherType', 1), ('LOGGER.info("waiting");\n', 1), ('eg.', 1), ('assertNull(character.getWeapon());\n', 1), ('FlowableMergeWithSingleTest', 1), ('Double.class;\n', 1), ('setLogStreamName(String', 1), ('Thread.sleep(delay);\n', 1), ('ScopeAnnotation', 1), ('testAddItem()', 1), ('subscribers.length;', 1), ('mapper.find(student.getStudentId());\n\n', 1), ('level1.getTreeSize());\n', 1), ('normalizer', 1), ('FileSelectorJFrame', 1), ('Completable-like', 1), ('RxJavaPlugins.onCompletableLift(cop));\n\n', 1), ('once";\n', 1), ('(?,?,?)"))', 1), ('attachments;\n\n', 1), ('ObjectHelper.requireNonNull(a.next(),', 1), ('assertTrue(empty.isDisposed());\n', 1), ('"resolves', 1), ('duplicated', 1), ('ability)', 1), ('Account>', 1), ('BackpressureDropSubscriber<T>(s,', 1), ('randomIterator.nextInt();\n', 1), ('flag</i>.', 1), ('ConsoleAdministration', 1), ('getClass()\n', 1), ('DisposableMaybeObserver}', 1), ('ObservableTransformer<Upstream,', 1), ('CascadeType.REMOVE)\n', 1), ('ElementAtObserver(Observer<?', 1), ('s1.onSuccess(v);\n', 1), ('eggs?");\n', 1), ('objIn.readObject();\n', 1), ('Arrays.asList("a",', 1), ('dequeue', 1), ('Completable.mergeDelayError(Flowable.just(pp.ignoreElements())).test();\n\n', 1), ('MaybeNo2Dot0Since.findSource("Flowable");\n\n', 1), ('eventManager.cancel(aEventId);\n', 1), ('AtomicReference<CompletableDisposable[]>', 1), ('attributeView.setPermissions(newPermissions);\n', 1), ('testedPrototype,', 1), ('calcElementOffset(index,', 1), ('BorderLayout.NORTH);\n', 1), ('TakeLastTimedSubscriber<T>', 1), ('assertEquals("title1",', 1), ('acquireForReaders",', 1), ('WithLatestInnerObserver(this,', 1), ('access:\n', 1), ('StandardOpenOption.CREATE_NEW))', 1), ('scope\n', 1), ('bcrypt', 1), ('activeNodesPerCluster.computeIfAbsent(clusterName,\n', 1), ('LOGGER.info("Poor', 1), ('ORANGE:\n', 1), ('setFilterManager(FilterManager', 1), ('AssistedConstructor(Constructor<T>', 1), ('valueOf(int', 1), ('downside', 1), ('printAndCountDates(result[i]);\n', 1), ('flowSingle.subscribe(new', 1), ('that.logGroupName', 1), ('ObserveOnMaybeObserver<T>\n', 1), ('callsAfterUnsubscribe()', 1), ('ArrayList<>(100);\n\n', 1), ('io.reactivex.functions;\n', 1), ('userAccount6', 1), ('t9)', 1), ('process.', 1), ('painlessFieldClass;\n\n', 1), ('objectToExplain.getClass().getName();\n', 1), ('fs.onError(ex);\n', 1), ('interfaces,', 1), ('Optional.of(student);\n', 1), ('10:04', 1), ('terminal.readText("Continue', 1), ('boxFrom(Class<?>', 1), ('map.");\n', 1), ('improving', 1), ('DecoratingIterator(Iterator<E>', 1), ('throws\n', 1), ('(to', 1), ('dataFileName);\n', 1), ('onLift;\n', 1), ('artist)', 1), ('defaultTimezone);\n', 1), ('TreeTest', 1), ('expectedDates[d][i].getMillis();\n', 1), ('prioritize', 1), ('FutureSubscriber()', 1), ('BiFunction<List<T>,', 1), ('executed.', 1), ('SingleDelayWithSingle(SingleSource<T>', 1), ('<code>id</code>\n', 1), ('Function5', 1), ('io.reactivex.internal.operators.completable.CompletableTimeout.TimeOutObserver;\nimport', 1), ('LoggerFactory.getLogger(CacheStore.class);\n\n', 1), ('ClassPathXmlApplicationContext', 1), ('Spellbook(String', 1), ('//3', 1), ('org.elasticsearch.repositories.Repository;\nimport', 1), ('later.");\n', 1), ('troll.attack();\n', 1), ('this.iterator', 1), ('e.purge();\n', 1), ('storageResponse.headers.forEach((k,', 1), ('(printed)', 1), ('JdbcConfiguration', 1), ('cfg.baseUri().resolve(path);', 1), ('entity.toString());\n', 1), ('troll.getAttackPower());\n\n', 1), ('ArrayList<T>(n);\n\n', 1), ('Multi-Core', 1), ('Retrieves', 1), ('innerError(MergeInnerObserver', 1), ('<br>bind', 1), ('driverManagerTemplate(Consumer<JdbcDriver>', 1), ('seconds.', 1), ('writer;\n\n', 1), ('javadoc;\n\n', 1), ('problem,', 1), ('andThenMaybeCompleteValue()', 1), ('returnSuccess()', 1), ('whitelistFields.add(new', 1), ('serialDisposable.update(another);\n', 1), ('"unix").build();\n', 1), ('this.fieldJsonMapper', 1), ('LOGGER.info("getting");\n', 1), ('source.onNext(7);\n\n', 1), ('stopIndex;\n', 1), ('registry.listFunctions(pattern', 1), ('doPrivileged(CheckedSupplier<R,', 1), ('org.elasticsearch.xpack.core;\n\nimport', 1), ('StrengthPotion();\n', 1), ('SSLSocketFactory', 1), ("fn.lastIndexOf('.');\n\n", 1), ('fail\n', 1), ('stored.', 1), ('testOnErrorExceptionIsThrownFromSingleDoOnSuccess()', 1), ('parser.currentName();\n', 1), ('numeric', 1), ('mongoClient.dropDatabase(TEST_DB);\n', 1), ('subscribers[i].dispose();\n', 1), ('validator\n', 1), ('Observable.fromFuture(future,', 1), ('RxJavaPlugins.onAssembly(sos));\n\n', 1), ('DelayWithMainObserver<T>', 1), ('Callable<Scheduler>,', 1), ('missingTopping', 1), ('"id=\'"', 1), ('playSound(AudioInputStream', 1), ('readLines(final', 1), ('atomicBoolean', 1), ('(optional', 1), ('Object>();\n\n', 1), ('2).elementAt(2).toFlowable().blockingFirst(-100).intValue());\n', 1), ('ObservableReduceMaybe(ObservableSource<T>', 1), ('"834-935",', 1), ('completionValueSupplier,', 1), ('available.add(instance);\n', 1), ('CollisionTest<O', 1), ('org.elasticsearch.common.blobstore.BlobContainer}.\n', 1), ('timedRunnable', 1), ('DataAttachmentTests', 1), ('elasticsearch.\n', 1), ('de-multiplexer.\n', 1), ('Pool', 1), ('invocations', 1), ('((HasUpstreamObservableSource<Integer>)o.map(Functions.<Integer>identity())).source());\n', 1), ('Modifier.PUBLIC)', 1), ('day);\n}\n', 1), ('RainbowFishSerializer.readV1("fish2.out");\n', 1), ('Single.just(31);\n\n', 1), ('BiConsumer<List<Object>,', 1), ('selection,', 1), ('FlowableAll<T>', 1), ('.endTime(ZonedDateTime.ofInstant(Instant.ofEpochMilli(1515369600000L),', 1), ('deserializedFishV1.getWeightTons());\n', 1), ('CsvListReader(\n', 1), ('.assertNoErrors();\n\n', 1), ('(!resolution.isValid())', 1), ('aliases,\n', 1), ('compareTo((JavaVersion)', 1), ('memoryLimitInMb;\n\n', 1), ('serviceCache.get(serviceJndiName);\n', 1), ('noDisposeOnAllSuccess2()', 1), ('<code>write-behind</code>', 1), ('Emitter(SingleObserver<?', 1), ('charFrequency', 1), ('service.submitTicket(LotteryTestUtils.createLotteryTicket("ant@bac.com",\n', 1), ('ConnectableFlowable}\n', 1), ('AtomicReference<InnerCompletableCache[]>', 1), ('workDone.add(msg);\n', 1), ('TestException("onError("', 1), ('re-calculated,', 1), ('TextualAorAn', 1), ('assemblyHookCrashes()', 1), ('threadPoolExecutor.shutdownNow();\n', 1), ('remove(PublishDisposable<T>', 1), ('emulate', 1), ('manualPropagate()', 1), ('listeners.forEach(listener', 1), ('testRangeStartAt2Count3()', 1), ('wizards)', 1), ('newIterator', 1), ('[min,', 1), ('futures)', 1), ('downstream.onNext(current.item);\n\n', 1), ('java.lang.reflect.ReflectPermission;\nimport', 1), ('Debug.proxy(result,', 1), ('ObjectHelper.requireNonNull(second,', 1), ('(AsynchronousSocketChannel', 1), ('trustStore.aliases();\n', 1), ('AbstractDocumentTest', 1), ('session.delete(entity);\n', 1), ('!m.signature.contains("Observable"))', 1), ('org.elasticsearch.xpack.sql.expression.function.FunctionDefinition;\nimport', 1), ('LotteryTicketCheckResult(LotteryTicketCheckResult.CheckResult.TICKET_NOT_SUBMITTED);\n', 1), ('longType;\n', 1), ('NewThreadWorker', 1), ('Object.equals.\n', 1), ('"java.util.stream.txt",\n', 1), ('FlatMapTckTest', 1), ('"Mapper-run");\n', 1), ('(pos', 1), ('testNoBackpressureWithInitialValue()', 1), ('whitelistStruct.javaClassName.substring(index', 1), ('toInstantUnsafelyIgnoringAmbiguity(TemporalAccessor', 1), ('io.reactivex.flowable.FlowableCovarianceTest.*;\nimport', 1), ('IgnoreElementsSubscriber(CompletableObserver', 1), ('isBase64Encoded()', 1), ('RxJavaPlugins.setOnCompletableSubscribe(completableObserver2completableObserver);\n', 1), ('set(int', 1), ('properties.load(fin);\n', 1), ('whenAlreadyExists()', 1), ('findPersonApiHandler;\n\n', 1), ('merge(MockSecureSettings', 1), ('<p>Data', 1), ('handleTransferFromEvent(MoneyTransferEvent', 1), ('METHOD', 1), ('readyOps)', 1), ('{\n\n//', 1), ('this.soldierResponse', 1), ('A\n', 1), ('color=%s]",', 1), ('Debug.proxy(cfg,', 1), ('DatagramChannel', 1), ('imply', 1), ('Note,', 1), ('TakeWhileObserver<T>(t,', 1), ('UnsupportedOperationException()))\n', 1), ('structsMap;\n', 1), ('.retry(5)\n', 1), ('Provider<?>>', 1), ('set.size());\n\n', 1), ('findPattern(String', 1), ('(iteratorNotification.isOnNext())', 1), ('enqueueing', 1), ('info.getName()', 1), ('0.01);\n', 1), ('comparer));\n', 1), ('bookname', 1), ('log.info("customerDao.getCustomerById(2):', 1), ('directories),\n', 1), ('just(6,', 1), ('ReactorTest', 1), ('a.username', 1), ('buildMethodCacheKey(String', 1), ('javadoc2.substring(nn', 1), ('setAbilities(List<String>', 1), ('A>', 1), ('Permissions', 1), ('AtomicReference<InnerCompletableCache[]>(EMPTY);\n', 1), ('toCompletable}', 1), ('System.out.println("Entity', 1), ('ObservableSwitchMapCompletableTest', 1), ('"+9897641231"));\n', 1), ('https://github.com/ReactiveX/RxJava/issues/748#issuecomment-32471495\n', 1), ('sum);\n\n', 1), ('javaVersionString', 1), ('notifications.prizeError(tickets.get(id).getPlayerDetails(),', 1), ('alright\n', 1), ('ElementAtSubscriber(MaybeObserver<?', 1), ('call.</li>\n', 1), ('(javadocStartNext', 1), ('("_default_".equals(type.key))', 1), ('IllegalArgumentException("Detected', 1), ('com.iluwatar.fluentinterface.fluentiterable.lazy.LazyFluentIterable;\nimport', 1), ('Files.write(config,', 1), ('CompletableAndThenObservable(CompletableSource', 1), ('CSS,', 1), ('getAwsRequestId()', 1), ('"Resume");\n', 1), ('typeNames.add(singleType.type());\n', 1), ('java.util.Set;\n\nclass', 1), ('Observable.just(horrors);\n', 1), ('(accounts.getOrDefault(sourceBackAccount,', 1), ('JavaVersion.parse("8"));\n', 1), ('FlowableDoAfterNextTest', 1), ('assertNotNull(instance);\n', 1), ('beans.put(FISHING_BEAN,', 1), ('MaybeOperator.apply():\n', 1), ('testOnErrorExceptionIsThrownFromUnsafeSubscribe()', 1), ('clients\n', 1), ('(Weekday', 1), ('KeyManagerFactory",', 1), ('Single.just(1).hide())\n', 1), ('manually', 1), ('indexMappings.value));\n', 1), ('WeatherType[]', 1), ('publicKeyBytes);\n', 1), ('uriQuery,\n', 1), ('workers.add(doWorkOnNewTrampoline("B",', 1), ('tokenList', 1), ('lazySet(REQUESTED);\n', 1), ('rowSize;', 1), ('Read,', 1), ('maybes.length;\n\n', 1), ('originalEntities', 1), ('SingleError(Callable<?', 1), ('output()', 1), ('tail[indexInTail]', 1), ('SingleDoOnEvent<T>(this,', 1), ('"main"', 1), ('signalled.', 1), ('Provides}', 1), ('DisposableHelper.replace(d,', 1), ('mapInvalidSource()', 1), ('readThroughWithWriteBackPolicy(String', 1), ('completionValue)', 1), ('VolatileSizeArrayList)', 1), ('io.reactivex.flowables;\n\nimport', 1), ('X509Certificate[0]));\n', 1), ('this.view', 1), ('normalize', 1), ('Flowable.concatArrayEager(\n', 1), ('files.poll())', 1), ('#getValues()}', 1), ('check(String', 1), ('MapNotificationObserver', 1), ('expectedToString;\n\n', 1), ('this.crashOnIterator', 1), ('JS', 1), ('com.iluwatar.specification.property.Color;\n\n/**\n', 1), ('searched");\n\n', 1), ('Version(String', 1), ('(CombiningTrustConfig)', 1), ('Converter<>(\n', 1), ('allowInterrupt)', 1), ('Setting<List<String>>', 1), ('byteBuffer.get(publicKeyFingerprint);\n', 1), ('live', 1), ('supplierClass.getDeclaredField("heavyInstance");\n', 1), ('ver);\n', 1), ('newConcurrentMap()', 1), ('mapper.apply(value).iterator();\n\n', 1), ('runDispose()', 1), ('subscribeInner(ObservableSource<?', 1), ('BiConsumer<Set<String>,', 1), ('awaitingFlushed.entrySet().iterator();\n', 1), ('FlowableFromPublisher<T>', 1), ('AllSubscriber(Subscriber<?', 1), ('handler.caught;\n', 1), ('iterator,\n', 1), ('databaseReaders;\n\n', 1), ('level1.getTreeSize());\n\n', 1), ('IllegalStateException(message));\n', 1), ('CompletableTimeout(CompletableSource', 1), ('Schedulers.io().createWorker();\n\n', 1), ('AtomicReference<String>();\n', 1), ('testAllDaysWithoutDefaultObserver(final', 1), ('getRemainingElementsCount()', 1), ('io.reactivex.Single;\n\npublic', 1), ('assumeTrue("Ignoring', 1), ('foo', 1), ('FilterTckTest', 1), ('attachments.size()', 1), ('trustStorePassword.hashCode()', 1), ('UserRoleMapper}', 1), ('ID_GENERATOR.incrementAndGet());\n', 1), ('testToppings()', 1), ('Dimension(500,', 1), ('AsyncSubject.create();\n', 1), ('ALBUM_LIST_HTML_FILE;\n\n', 1), ('io.reactivex.Observable;\n\n/**\n', 1), ('getType("ArrayList");\n', 1), ('(--crashOnHasNext', 1), ('AutoDetectParser(PARSERS);\n\n', 1), ('(allows\n', 1), ('s.request(BackpressureHelper.addCap(u,', 1), ('subscribeConsumerConsumerWithError()', 1), ('on-demand,', 1), ('ParameterMetaDataProxy(log,', 1), ('ImmediateThinScheduler();\n\n', 1), ('X509Certificate[]', 1), ('io.reactivex.internal.operators.")\n', 1), ('this.userAccount', 1), ('SizeSelector', 1), ('io.reactivex.internal.operators.single.SingleZipArray.ZipCoordinator;\n\npublic', 1), ('(exceptions)', 1), ('TaskTest<T', 1), ('remaining%n",', 1), ('this.loaded;\n', 1), ('Black', 1), ('.concatMapSingle(Functions.justFunction(ss))\n', 1), ('params.get(key);\n', 1), ('org.elasticsearch.action.support.IndicesOptions;\nimport', 1), ('this.onLift', 1), ('last4.size());\n', 1), ('dddBook', 1), ('(scheduleParser', 1), ('executorService;\n', 1), ('lambdaInfo', 1), ('scheduler),', 1), ('addUserToPaidGroup(final', 1), ('handleRequest()', 1), ('compl', 1), ('"FlowableConcatWithMaybe",\n', 1), ('(crashRequest)', 1), ('FromArrayTckTest', 1), ('EpsonPrinter());\n', 1), ('batchSize;\n\n', 1), ('"combiner', 1), ('"Student', 1), ('1L),', 1), ('(sender', 1), ('wizard4.addSpellbook(spellbookDao.findByName("Book', 1), ('"225-946",', 1), ('.mergeWith(Maybe.<Long>empty())\n', 1), ('2620149119579502636L;\n\n', 1), ('observable,', 1), ('assertEquals("Epson', 1), ('com.iluwatar.hexagonal.domain.LotteryConstants;\nimport', 1), ('Observable<S,', 1), ('assertSame(testedPrototype.getClass(),', 1), ('testedPrototype.copy();\n', 1), ('ObjectHelper.requireNonNull(disposer,', 1), ('view,', 1), ('this.onSuccessCall', 1), ('wizard4', 1), ('"+3242434242"));\n', 1), ('FlowableDetachTest', 1), ('Method\n', 1), ('Collections.singletonList(v);\n', 1), ('XPackSettings.LOGSTASH_ENABLED.get(settings);\n', 1), ('resumeFunction})', 1), ('"addressLineOne")\n', 1), ('CallbackCompletableObserver(Consumer<?', 1), ('King();\n', 1), ('Single.fromPublisher(Flowable.empty())\n', 1), ('testedCreature.getColor());\n', 1), ('parallel\n', 1), ('filter.getLast());\n', 1), ('hostsList;\n', 1), ('cs;\n', 1), ('63', 1), ('com.iluwatar.hexagonal.domain.PlayerDetails;\n\n/**\n', 1), ('assertNull(RxJavaPlugins.onObservableError(null));\n//\n//', 1), ('{"@integration"},', 1), ('q.peek();', 1), ('#onPreCall()}', 1), ('limitZero()', 1), ('.subscribe();\n//', 1), ('"Event', 1), ('OR\nIMPLIED,', 1), ('accounts.get(sourceBackAccount)', 1), ('List<ColumnInfo>', 1), ('readAllLines(File', 1), ('name)));\n', 1), ('Nazgul.getInstance(NazgulName.KHAMUL));\n', 1), ('(cleared.compareAndSet(false,', 1), ('steps:', 1), ('is\nfurnished', 1), ('ElementType.METHOD})\n@Retention(RUNTIME)\n@ScopeAnnotation\npublic', 1), ('createEvent(int', 1), ('lombok.extern.slf4j.Slf4j;\n\n/**\n', 1), ('Cast(Class<?>', 1), ('AsynchronousService}.\n', 1), ('painlessParametersTypes,', 1), ('GuardedQueue()', 1), ('low', 1), ('allCollection,', 1), ('TestHelper.checkDisposed(Flowable.timer(1,', 1), ('dontfailIOObservableBlockingFirst()', 1), ('Depending', 1), ('boiled', 1), ('field.getter,', 1), ('BufferCloseSubscriber(BufferBoundarySubscriber<T,', 1), ('<p>DBManager', 1), ('(The\n', 1), ('"awsRequestId=\'"', 1), ('LinkedQueueNode()', 1), ('this.unit);\n', 1), ('domains,', 1), ('TakeUntil(frc,', 1), ('safety.\n', 1), ('fuseToFlowable();\n}\n', 1), ('execTime),', 1), ('categorize', 1), ('whip', 1), ('this.handler', 1), ('sum).toObservable();\n\n', 1), ('assertFalse(((Disposable)w).isDisposed());\n\n', 1), ('java.util.jar.JarFile;\nimport', 1), ('APIGatewayProxyResponseEvent>', 1), ('Scheduler:}', 1), ('Collection<Attribute>', 1), ('java.util.Properties;\n\n@SuppressWarnings("unused")\npublic', 1), ('assertNotNull(SingleInternalHelper.NoSuchElementCallable.valueOf("INSTANCE"));\n', 1), ('systems,', 1), ('"123-123",', 1), ('(Map<String,', 1), ('Exposed', 1), ('hostName.equals(hostAddress));\n', 1), ('maximum\n', 1), ('1000));\n\n', 1), ('md.actual.onSuccess(value);\n', 1), ('ResultSet)', 1), ('onExceptionResumeNext}', 1), ('SingleDoAfterSuccess<T>(this,', 1), ('.runOn(Schedulers.computation(),', 1), ('!name.startsWith("Test"))', 1), ('.takeUntil(new', 1), ('(char', 1), ('main(String...', 1), ('checkMaybeBackpressure()', 1), ('org.hibernate.transform.Transformers;\n\nimport', 1), ('byte[]>', 1), ('queried,', 1), ('single.toMaybe();\n', 1), ('c.subscribe(s);\n', 1), ('ConcurrentCollections.newConcurrentSet());\n', 1), ('crashRequest;\n\n', 1), ('dr)', 1), ('BlockingObservableIterator(int', 1), ('declare', 1), ('last4.size());\n\n', 1), ('com.google.common.collect.FluentIterable.\n', 1), ('Members', 1), ('Single.amb(Arrays.asList(Single.just(1),', 1), ('func;\n\n', 1), ('}).when(w).onSubscribe((Subscription)any());\n\n', 1), ('temp.next;\n', 1), ('(jj', 1), ('org.apache.tika.parser.rtf.RTFParser(),\n', 1), ('FlowableFlatMapCompletableSyncPerf', 1), ('.calendarId("calendar_id").build());\n\n', 1), ('Single.zip(source,', 1), ('WizardDaoImpl>', 1), ('noPermissionsAcc);\n', 1), ('Set}', 1), ('commandService;\n\n', 1), ('promises,', 1), ('assertEquals(WashingMachineState.ENABLED,', 1), ('Observer-based', 1), ('InternalWrongNaming', 1), ('CountDownLatch(n);\n', 1), ('intensive,', 1), ('FlowableSequenceEqual<T>(first,', 1), ('legal\n', 1), ('javax.swing.SwingUtilities;\n\n/**\n', 1), ('SimpleTroll}\n', 1), ('itemId;\n\n', 1), ('engineers', 1), ('testCancelledRetention(Scheduler.Worker', 1), ('t6)', 1), ('this.remoteAddress', 1), ('3258103020495908596L;\n\n', 1), ('this.enabled', 1), ('sequential()}', 1), ('Schedulers.io();\n\n', 1), ('Dispatcher.class.getDeclaredConstructor();\n', 1), ('Observer<GroupedObservable<Integer,', 1), ('value="', 1), ('(RxJavaPlugins.isFailOnNonBlockingScheduler()\n', 1), ('keySelector.apply(t);\n', 1), ('function9', 1), ('"none";\n', 1), ('durations', 1), ('"Please', 1), ('localNodeSupplier.get();\n', 1), ('dates.size());\n', 1), ('"jar1:', 1), ('CompletableAmb(CompletableSource[]', 1), ('Arrays.asList(doc.getString("numbers").split(",")).stream().mapToInt(Integer::parseInt).toArray();\n', 1), ('goldMine.digOutGold();\n\n', 1), ('this.actual.get();\n\n', 1), ('character;\n', 1), ('org.elasticsearch.xpack.sql.type.Types;\nimport', 1), ('that.version', 1), ('resultCalc.applyAsInt(i,', 1), ('name,\n', 1), ('propsMap.remove("has.native.controller");\n', 1), ('PluginInfo(String', 1), ('converter.convertFromEntity(u1);\n', 1), ('overrideInitComputationSchedulerCrashes()', 1), ('assertEquals((Integer)1,', 1), ('CakeLayer\n', 1), ("u.getAbsolutePath().replace('\\\\',", 1), ('super(run,', 1), ('fully-qualified,', 1), ('privileges;\n', 1), ('valueOf(number)', 1), ('(property.equalsIgnoreCase("YES"))', 1), ('completeFirst()', 1), ('Flowable.just(1).repeat(elements);\n', 1), ('right;\n', 1), ('CompletableDisposeOn(CompletableSource', 1), ('io.reactivex.internal.fuseable.HasUpstreamMaybeSource;\n\n/**\n', 1), ('java.util.EnumMap;\nimport', 1), ('perInstanceEvent.instanceId);\n', 1), ('back,', 1), ('PropertiesFeatureToggleVersionTest', 1), ('attribute(Expression', 1), ('Common', 1), ('this.getStudents().set(index,', 1), ('io.reactivex.observers.DefaultObserver;\nimport', 1), ('connect,', 1), ('org.hamcrest.Matchers.hasKey;\nimport', 1), ('#%d!",', 1), ('}.blockingSubscribe(ts);\n\n', 1), ('11:15', 1), ('assertThat(JvmOptionsParser.spaceDelimitJvmOptions(Collections.singletonList("-Xms1g")),', 1), ('producerLookAhead', 1), ('aggregator', 1), ('nowhere', 1), ('.map(TaskTest::get)\n', 1), ('FlowableMergeTests', 1), ('atomics', 1), ('NetworkUtils.getAllAddresses();\n', 1), ('addRuntimeClass(painlessStruct);\n', 1), ('Insert', 1), ('create(ThreadFactory', 1), ('qs)', 1), ('InterruptedException()));\n', 1), ('pp2.ignoreElements()).test();\n\n', 1), ('forEachColumn(Consumer<?', 1), ('ObservableReduceSeedSingle<T,', 1), ('FilePermissionUtils()', 1), ('permission).getUnresolvedType();\n', 1), ('testCollectToStringObservable()', 1), ('testBoundedVersionOption()', 1), ('writeThrough(UserAccount', 1), ('getGrade()', 1), ('ExceptionHelper.wrapOrThrow(t);\n', 1), ('waiting()', 1), ('Starting,', 1), ('Single.fromPublisher(Flowable.error(new', 1), ('ParallelMapSubscriber(Subscriber<?', 1), ('merge(List<IndexResolution>', 1), ('servers.size();\n', 1), ('ConsumeAction(this,', 1), ('overrides', 1), ('Consumer<String>', 1), ('this.resourceDisposer', 1), ('18:55', 1), ('spellDao.persist(spell15);\n', 1), ('assertTrue("expected', 1), ('MaybePeekTest', 1), ('PlayerDetails("monica@google.com",', 1), ('internal(Blackhole', 1), ('licenseSpec.version()', 1), ('HeroStats(Value', 1), ('reportDoubleSubscription(Class<?>', 1), ('SchedulerPoolFactory.shutdown();\n', 1), ('assertTrue(bs2.isCancelled());\n\n', 1), ('clear();', 1), ('ZipIterableObserver(Observer<?', 1), ('writers.\n', 1), ('uriPath.getPort(),', 1), ('immutable', 1), ('request[1],', 1), ('assertTrue(layer.calories', 1), ('cast()', 1), ('MaybeErrorCallable(Callable<?', 1), ('SOCKS_PROXY_DEFAULT', 1), ('(defined', 1), ('just10()', 1), ('DeferredScalarDisposable(Observer<?', 1), ('org.mockito.ArgumentCaptor;\n\nimport', 1), ('(d1', 1), ('.fulfillInAsync(\n', 1), ('zipFunction}', 1), ('Maybe.just(1).delay(10,', 1), ('numChecksPassed;', 1), ('RowView', 1), ('this.errors.pop();\n', 1), ('glag\n', 1), ('readingTime)', 1), ('org.elasticsearch.action.ActionResponse;\nimport', 1), ('se.toString();\n//', 1), ('ToFlowableIterable<T>(sources);\n', 1), ('org.elasticsearch.example.role;\n\nimport', 1), ('href="http://java-design-patterns.com/patterns/guarded-suspension/">http://java-design-patterns.com/patterns/guarded-suspension/</a>\n', 1), ('spellbooks");\n', 1), ('producerNode.get();\n', 1), ('Properties}.', 1), ('ReferenceDisposable(T', 1), ('href="https://docs.microsoft.com/en-us/azure/architecture/patterns/retry">Retry', 1), ('"new_name2");\n', 1), ('ioException)', 1), ('a.compareToIgnoreCase(b)', 1), ('#onComplete()},', 1), ('attributeView', 1), ('runnableDisposedAsyncTimed2()', 1), ('10000);\n', 1), ('immediateError()', 1), ('.zipWith(Flowable.range((int)elements,', 1), ('accepted', 1), ('org.elasticsearch.xpack.watcher.trigger.schedule;\n\nimport', 1), ('(matchingToppings.isEmpty())', 1), ('observers.getAndSet(CANCELLED);\n', 1), ('IllegalArgumentException(value);\n', 1), ('locates', 1), ('userAccount.getAdditionalInfo())));\n', 1), ('errs.get()', 1), ('InetSocketAddress((String)', 1), ('this.zipCode', 1), ('f.elementAt(0);\n', 1), ('onNextNull()', 1), ('readV1(String', 1), ('waitForFlush(...)\n', 1), ('"does', 1), ('AccessController.doPrivileged((PrivilegedExceptionAction<String>)\n', 1), ('rxThreadsAfter.removeAll(rxThreadsBefore);\n\n', 1), ('this.setBounds(100,', 1), ('com.iluwatar.specification.creature.Troll;\nimport', 1), ('(Whitelist.Constructor', 1), ('(active.compareAndSet(inner,', 1), ('IQueryService}.', 1), ('ReadableDateTime[values[d].length];\n', 1), ('"cluster', 1), ('.switchIfEmpty(withProducer)\n', 1), ('registers', 1), ('secondObservable', 1), ('csvPref', 1), ('BlobPath}.\n', 1), ('Clear', 1), ('toggle,', 1), ('emptySource()', 1), ('-7969063454040569579L;\n', 1), ('Maybe<Object>()', 1), ('t2.hashCode());\n', 1), ('inputs.<br>\n', 1), ('testExceptionThrownFromOnSubscribe()', 1), ('assertTrue(rmo.errors.contains(error));\n', 1), ('org.elasticsearch.painless.Definition;\nimport', 1), ('assemblyTrackingCompletable()', 1), ('occurring', 1), ('prevProducerNode.soNext(nextNode);', 1), ('manifest.getMainAttributes().getValue("Build-Date");\n', 1), ('delegation\n', 1), ('evicting', 1), ('com.gargoylesoftware.htmlunit.html.HtmlAnchor;\nimport', 1), ('JsonFileJournal', 1), ('EventEmitterTest<E', 1), ('"*', 1), ('there.\n', 1), ('RxJavaPlugins.onNewThreadScheduler(s));\n\n', 1), ('ObservableDelaySubscriptionOther(ObservableSource<?', 1), ('io.reactivex.Maybe;\n\npublic', 1), ('ConcatMapMaybeObserver(ConcatMapMaybeSubscriber<?,', 1), ('Exception("Should', 1), ('numberExpression.interpret());\n', 1), ('ConditionalSubscriber<T>', 1), ('created");\n', 1), ('SocketChannel}.\n', 1), ('Input.Result>>', 1), ('org.elasticsearch.client.Client;\n\nimport', 1), ('(bt.hasNext())', 1), ('message.addHeader(Message.Headers.SENDER,', 1), ('BlockingSubscriber<T>(queue);\n\n', 1), ('customerId)', 1), ('this.findPersonApiHandler.setDynamoDbMapper(dynamoDbMapper);\n', 1), ('nazguls', 1), ('hashCodeOf()', 1), ('testBuildPoorWizard()', 1), ('TimeUnit.MILLISECONDS).take(elements)\n', 1), ('System.out.println("==>', 1), ('.concatMapCompletableDelayError(\n', 1), ('MaybePeekObserver<T>', 1), ('sub-DSL', 1), ('"190-045",', 1), ('Thread.sleep(5000L);\n', 1), ('intType;\n', 1), ('Fowler",', 1), ('URLs.', 1), ('(!f2.exists())', 1), ('getPendingAudio()[headIndex].getStream();\n', 1), ('ex.getExceptions();\n', 1), ('MergeMaybeObserver<T>\n', 1), ('(PEMTrustConfig)', 1), ('java.util.concurrent.CompletableFuture;\nimport', 1), ('requestCancelRace()', 1), ('clusterName()', 1), ('readKey', 1), ('OnSubscribe<Integer>()', 1), ('Cursor', 1), ('setLastName(String', 1), ('[version]', 1), ('org.apache.isis.applib.annotation.DomainService;\nimport', 1), ('UnsubscribeOnTckTest', 1), ('repeatWhen(final', 1), ('(aliases.hasMoreElements())', 1), ('emptyThrower()', 1), ('(int)', 1), ('struct.setters.putIfAbsent(newName.toString(),', 1), ('tree.', 1), ('com.iluwatar.hexagonal.domain.LotteryConstants;\n\n/**\n', 1), ('plainExecutor()', 1), ('ClearScreenCliCommand()', 1), ('spellDao.persist(spell14);\n', 1), ('gap\n', 1), ('Driver', 1), ('shouldRetrieveChildren()', 1), ('cpu', 1), ('s.scheduleDirect(Functions.EMPTY_RUNNABLE));\n\n', 1), ('AppManager()', 1), ('Word', 1), ('CompletableObserverImplementation(s,', 1), ('SubscribeOnObserver(Observer<?', 1), ('(WeatherObserver', 1), ('delayed()', 1), ('checkObservableScheduler()', 1), ('Flowable.<Event>generate(new', 1), ('c.onSubscribe(s);\n\n', 1), ('"Alfonso",', 1), ('resumeFunction}.\n', 1), ('.collect(Collectors.toMap(\n', 1), ('EXCLUDES', 1), ('ObservableDefer<T>', 1), ('Single.toFlowable()}', 1), ('assertEquals(expectedTopping,', 1), ('getType("Byte");\n', 1), ('Function9', 1), ('getExtendedPlugins()', 1), ('not(equalTo(view.getOwner())));\n', 1), ('ImmediateThinScheduler()', 1), ('mostly.\n', 1), ('.appendPattern(pattern)\n', 1), ('(Publisher<?>', 1), ('contentActions.stream().map(ContentAction::getContent).filter(Content.COMPANY::equals).count());\n\n', 1), ('key.append(structName);\n', 1), ('FullTextPredicate', 1), ('javax.servlet.http.HttpServletRequest;\n\nimport', 1), ('java.io.BufferedWriter;\nimport', 1), ('jar\n', 1), ('heavyInstance', 1), ('doc.getString("phone"));\n', 1), ('assertFalse(o.isDisposed());\n\n', 1), ('moneyDepositEvent)', 1), ('node.previous', 1), ('TestHelper.checkDisposed(Observable.just(1).takeLast(1));\n', 1), ("entry.replace('/',", 1), ('peers.\n', 1), ('returns.\n', 1), ('com.google.inject.util.Modules;\nimport', 1), ('((Subscriber<Object>)it).onError(new', 1), ('this.date', 1), ('<li>Efficiency</li>\n', 1), ('Thread.yield();\n', 1), ('parsers.', 1), ('otherDamaged);\n\n', 1), ('displayed.\n', 1), ('<A>', 1), ('(boolean)', 1), ('assertEquals(TEST_PART_MODEL,', 1), ('TEST_CAR_PRICE);\n', 1), ('singleSource', 1), ('LOGGER.info(welcomeMessageturnedOff);\n\n', 1), ('Thread.sleep(1);\n\n', 1), ('DatagramPacket#setReceiver(SocketAddress)}.\n', 1), ('threads2.add(Thread.currentThread().getName());\n', 1), ('never()).onNext(5);\n', 1), ('ComputationHolder.DEFAULT;\n', 1), ('range.observeOn(Schedulers.single());\n\n', 1), ('org.apache.wicket.request.http.WebRequest;\n\nimport', 1), ('testNullTaskWithCallback()', 1), ('executor.submit(taskRunnable2);\n', 1), ('roundToPowerOfTwo(final', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.error.png"', 1), ('f.subscribe(consumer);\n', 1), ('seenJvmOptions', 1), ('assertTrue(e5', 1), ('sr.setFuture(new', 1), ('LongConsumer,', 1), ('Hand:', 1), ('secureSettings.getSettingNames())', 1), ('retryUntil(final', 1), ('MaybeSwitchIfEmpty<T>(this,', 1), ('cakeBakingService)', 1), ('short.class', 1), ('capacity.<br>\n', 1), ('getActiveNodesForCurrentCluster().add(this);\n', 1), ('(s.contains("org.gradle.internal."))', 1), ('IllegalArgumentException("URLFixture', 1), ('subject.test().assertEmpty();\n', 1), ('concatMapDelayError(mapper,', 1), ('xchgProducerNode(LinkedQueueNode<T>', 1), ('org.elasticsearch.test.discovery;\n\nimport', 1), ('10000;\n\n', 1), ('assertFalse(""', 1), ('writingTime', 1), ('@BeforeClass\n', 1), ('"spellbooks",', 1), ('Maybe.fromCallable(null);\n', 1), ('VirtualMachineError)', 1), ('Thread(()', 1), ('referred', 1), ('getType("double");\n', 1), ('((DatagramChannel)', 1), ('KingsHand}.', 1), ('operations............");\n\n', 1), ('RxJavaPlugins.setComputationSchedulerHandler(scheduler2scheduler);\n', 1), ('getEventClassName()', 1), ('SingleElementObserver(SingleObserver<?', 1), ('<li>Every', 1), ('goodMoodRoyalty', 1), ('NazgulEnum.DWAR);\n', 1), ('dynamoDbMapper)', 1), ('depositMoney(money);\n', 1), ('RxJavaPlugins.initIoScheduler(unsafeDefault);\n', 1), ('ByteType;\n', 1), ('q.poll();', 1), ('hasDocValues);\n', 1), ('activeNodes.stream()\n', 1), ('assertTrue(numbers.getNumbers().contains(3));\n', 1), ('ObservableConcatMap(ObservableSource<T>', 1), ('non-backpressured', 1), ('base.map(new', 1), ('java.nio.file.OpenOption;\nimport', 1), ('tailIndex;', 1), ('#merge(Publisher,', 1), ('socket.getOutputStream();\n', 1), ("'plant'", 1), ('(whitelistStruct.onlyFQNJavaClassName', 1), ('ObservableSkipLastTimed<T>', 1), ('identityFunctionToString()', 1), ('ObservableScanTests', 1), ('Java)', 1), ('"onErrorMapper', 1), ('something:\n', 1), ('eventTime)', 1), ('super("File', 1), ('ShortType;\n', 1), ('(++k', 1), ('HasPrivilegesResponse', 1), ('assertNull(error.get());\n', 1), ('withParentIsDisposed()', 1), ('onError(Observer<?>', 1), ('ObjectHelper.requireNonNull(operator.apply(s),', 1), ('java.util.Collections.emptyList;\n\n/**\n', 1), ('ArrayListType', 1), ('BaseTck<T>', 1), ('testSynchronousDrop()', 1), ('IOException");\n', 1), ('TimeUnit.SECONDS).blockingAwait();\n', 1), ('entityManager.setPackagesToScan("com.iluwatar");\n', 1), ('ServiceCache()', 1), ('FindIterable<Document>', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/repeat.o.png"', 1), ('100000;\n', 1), ('stopped.\n', 1), ('BlockingFirstObserver<T>', 1), ('(ConsoleLoggerModule.singleton', 1), ('requirement",\n', 1), ('ParallelFlowableConverter<T,', 1), ('s.indexOf("</code>",', 1), ('decoratedRun)', 1), ('in.readList(StreamInput::readString);\n', 1), ('(line.endsWith("{")', 1), ('testReadAndWrite()', 1), ('super.setUp();\n', 1), ('LOGGER.error("File', 1), ('numInstances,', 1), ('SingleElementObserver(MaybeObserver<?', 1), ('8).equals("MaybeObserver"))', 1), ('selector()', 1), ('navigated', 1), ('adopts\n', 1), ('Objects.requireNonNull(field);\n', 1), ('EventAsynchronous', 1), ('Acquisition', 1), ('LinkedArrayList(int', 1), ('ApiGatewayResponse<T', 1), ('Objects.hash(fieldString,', 1), ('getPresenter();\n\n', 1), ('"\\u0000\\n"\n', 1), ('constructor/method/field', 1), ('isDirty(long', 1), ('cap)', 1), ('LocalContainerEntityManagerFactoryBean();\n', 1), ('child.name', 1), ('getLengthMeters()', 1), ('avoiding', 1), ('replace(Disposable', 1), ('view.display();\n', 1), ('painlessStruct.clazz.getName().equals(whitelistStruct.javaClassName)', 1), ('TestHelper.checkDisposed(Flowable.just(1).throttleFirst(1,', 1), ('(Subscriber<T>)INSTANCE;\n', 1), ('java.\n', 1), ('RefCountSubscriber<T>\n', 1), ('this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n', 1), ('OnErrorNotImplementedException(null);\n\n', 1), ('_.,()]*Observable");\n', 1), ('nullResultCallable', 1), ('complexities', 1), ('"all"', 1), ('longerSequence()', 1), ('defaultSchedulePeriodicallyDirectRejects()', 1), ('execute-around', 1), ('Argument', 1), ('"FlowableSingleSingle",\n', 1), ('reactorMain.execute(()', 1), ('org.elasticsearch.cli.SuppressForbidden;\n\nimport', 1), ('703409937383992161L;\n\n', 1), ('href="http://reactivex.io/documentation/operators/count.html">ReactiveX', 1), ('(indexOf', 1), ('(JreHttpUrlConnection', 1), ('HomePageService', 1), ('Flowable<ArrayList<Integer>>', 1), ('obsMaybe(Blackhole', 1), ('simpleTypesMap.get(name);\n\n', 1), ('SelectionKey.OP_WRITE);\n', 1), ('GHobbitsTest', 1), ('(Map.Entry<MethodKey,Method>', 1), ('joins', 1), ('repository-url\n', 1), ('}).toObservable().blockingSingle();\n\n', 1), ('List<UserDto>', 1), ('List,', 1), ('checkTicket(service,', 1), ('(output).\n', 1), ('t4);\n\n', 1), ('"should', 1), ('maybe;\n\n', 1), ('MockSecureSettings(MockSecureSettings', 1), ('getters/setters\n', 1), ('parse(System.getProperty("java.specification.version"));\n', 1), ('Logger.getLogger(FileLoggerModuleTest.class);\n\n', 1), ('cake2', 1), ('b.substring(backpressureDoc,', 1), ('io.reactivex.exceptions;\n\n/**\n', 1), ('addServer(Server', 1), ('fs;\n\n', 1), ('server.getLocalAddress();\n', 1), ('(BackpressureHelper.add(requested,', 1), ('Maybe>', 1), ('translate', 1), ('org.elasticsearch.xpack.sql.expression.Expression;\nimport', 1), ('matchesPattern(Pattern.compile(regex));\n', 1), ('TimeOutObserver(set,', 1), ('FlowableTimer(long', 1), ('completableError()', 1), ('notifications.ticketDidNotWin(tickets.get(id).getPlayerDetails());\n', 1), ('FlowableTakePublisher(Publisher<T>', 1), ('paths.add(CertUtils.resolvePath(path,', 1), ('}).subscribe(input.observer);\n', 1), ('}).subscribe();\n\n\n', 1), ('onErrorWithNull()', 1), ('JavadocForAnnotations.readFile(f);\n\n', 1), ('ObjectHelper.requireNonNull(onCallback,', 1), ('InfiniteRangeIterator();\n', 1), ('holderNaive', 1), ('RainbowFish("Zed",', 1), ('state=\'"', 1), ('is("---\\nkey:', 1), ('javaMethod;\n\n', 1), ('LOGGER.debug("Counter', 1), ('com.iluwatar.specification.creature.Goblin;\nimport', 1), ('addFundsToLotteryAccount(bank,', 1), ('m.getName()', 1), ('RxJavaPlugins.setNewThreadSchedulerHandler(new', 1), ('testStartIdempotence()', 1), ('*have*', 1), ('Nazgul.getInstance(NazgulName.ADUNAPHEL));\n', 1), ('(parent.errors.addThrowable(t))', 1), ('"has_native_controller",\n', 1), ('address.city', 1), ('spellbooks', 1), ('this.expectedExecutionTime', 1), ('pp1.singleElement()))\n', 1), ('c.onSuccess(2);\n\n', 1), ("student'\n", 1), ('SDeclBlock', 1), ('considering', 1), ('is("{\\n', 1), ('mergeDelayError(MaybeSource<MaybeSource<T>>)}', 1), ('ObservableFromCallable<T>', 1), ('optionalCustomer', 1), ('errors.addThrowable(ex))', 1), ('Manager\n', 1), ('singleSupplier;\n', 1), ('(failOnEmpty)', 1), ('sql)', 1), ('setId(String', 1), ('albumTitleInputTextField', 1), ('createFluentIterable(final', 1), ('iterator\n', 1), ('wrapped.\n', 1), ('customer2', 1), ('logGroupName', 1), ('compilation', 1), ('onCompleteCrashConditional()', 1), ('ObjectHelper.requireNonNull(first,', 1), ('needed.\n', 1), ('LOGGER.info("DDD', 1), ('DListener());\n\n', 1), ('getRandomPlayerDetails()', 1), ('programmed', 1), ('LOGGER.info("Unfortunately', 1), ('Arrays.asList(2,', 1), ('LazyFluentIterable()', 1), ('assertFalse(numbers1.equals(numbers3));\n', 1), ('positives()', 1), ('Observable.just(1).forEachWhile(Functions.alwaysTrue(),', 1), ('DoOnEachConditionalSubscriber<T>(\n', 1), ('(Handler<E>)', 1), ('(NumberFormatException', 1), ('Observable.<Event>generate(new', 1), ('onSubscribeCall;\n', 1), ('assertNotNull(dataSource);\n', 1), ('workQueue);\n', 1), ('FlowableTake<T>', 1), ('TestException("One"));\n', 1), ('nullAuthor);\n', 1), ('ExampleSecurityExtension', 1), ('expectedAuthor', 1), ('actual.onSuccess(defaultValue);\n', 1), ('set.add(inner);\n', 1), ('.indices(index)\n', 1), ('getWelcomeMessage(final', 1), ('m.map(Functions.identity());\n', 1), ('cases\n', 1), ('action.accept(createCustomer(resultSet));\n', 1), ("we'll\n", 1), ('MaybeDoAfterSuccess(MaybeSource<T>', 1), ('mergeDelayError}\n', 1), ('SerialDisposable()', 1), ('FindCustomer}', 1), ('TimeUnit.SECONDS)\n@Fork(value', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/doOnError.m.png"', 1), ('Draw', 1), ('TestSingleValueAggregation(String', 1), ('mostRecentSubscriber', 1), ('doubleError2()', 1), ('round\n', 1), ('studentRepository.registerNew(student2);\n\n', 1), ('list.get(0).getMessage());\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timer.png"', 1), ('"fish2.out");\n', 1), ('ReplayTckTest', 1), ('ObservableFromCallableTest', 1), ('functionalMethod);\n', 1), ('setProducer(Producer', 1), ('description);\n', 1), ('basicDataSource.setUrl("jdbc:h2:~/databases/person");\n', 1), ('FiniteRangeIterator(long', 1), ('RuntimeClassToStruct(Class<?>', 1), ('testForInvalidAge()', 1), ('submitTicket(service,', 1), ('"java.time.temporal.txt",\n', 1), ('testOnErrorAfterOnCompleted()', 1), ('NodeImpl("level3_a",', 1), ('java.nio.channels.AsynchronousSocketChannel;\nimport', 1), ('(UserDto)', 1), ('turnedOff', 1), ('time,\n', 1), ('struct.type.getDescriptor();\n\n', 1), ('sameSize()', 1), ('handle;\n', 1), ('testToIteratorWithException()', 1), ('fulfilled,', 1), ('ts1.assertNoValues();\n', 1), ('assertFalse(bq.isCancelled());\n\n', 1), ('perms.setReadOnly();\n', 1), ('concatArrayDelayError}', 1), ('setSize(640,', 1), ('getExceptionList()', 1), ('prefetched', 1), ('event;\n\n', 1), ('"07001234");\n', 1), ('FlushReadyWrite(context,', 1), ('floatType', 1), ('single-thread-backed', 1), ('TestHelper.checkDoubleOnSubscribeFlowableToObservable(new', 1), ('Mock', 1), ('com.iluwatar.serverless.faas.LambdaInfo;\nimport', 1), ('Single.just(1).subscribeOn(Schedulers.computation());\n', 1), ('observers.delete(closer);\n', 1), ('traits', 1), ('(line.startsWith("class', 1), ('sockets', 1), ('Files.getFileAttributeView(tempFile,', 1), ('testIndicesRequest()', 1), ('IllegalStateException("Attempt', 1), ('doReturn(mockedConnection).when(mockedDataSource).getConnection();\n', 1), ('System.out.println(message);\n', 1), ('(").append(g.getName()).append(":").append(i', 1), ('toFlowable().retry(predicate).singleElement();\n', 1), ('remove(toBeRemoved);\n', 1), ('certPath.equals(that.certPath)', 1), ('mock(SpellDao.class);\n\n\n', 1), ('200)', 1), ('baked.\n', 1), ('java.util.concurrent.locks.ReadWriteLock;\n\nimport', 1), ('org.apache.isis.applib.query.QueryDefault;\nimport', 1), ('RxVsStreamPerf', 1), ('DisposableSingleObserver&lt;&gt;()', 1), ('tidy', 1), ('resetBefore()', 1), ('frame', 1), ('m.signature', 1), ('newSession(final', 1), ('@Assisted', 1), ('LoggerFactory.getLogger(CallsCount.class);\n', 1), ('getAvailableLayerEntities();\n', 1), ('getLoginTimeout()', 1), ('err,', 1), ('CopyOnWriteArrayList<>();\n', 1), ('result.getExceptionList());\n', 1), ('IllegalArgumentException("private', 1), ('toSortedListCapacityObservable()', 1), ('listener/callback', 1), ('std-Out\n', 1), ('certPath.hashCode()', 1), ('darkCreatures', 1), ('"flaky"', 1), ('version.size()));\n', 1), ('20.\n', 1), ('selectAlbum(String', 1), ('assertTrue(temporaryFile.exists());\n\n', 1), ('HttpGet("http://localhost:51516/inventories");\n', 1), ('java.util.Map}</li>\n', 1), ('eventManager.status(aEventId);\n', 1), ('executorService,\n', 1), ('CsvParserTests', 1), ('full.', 1), ('jtFields[1].getText(),', 1), ('(f.getType())', 1), ('testPluginExceptionWhileOnErrorUnsubscribeThrows()', 1), ('ObservableScalarXMap()', 1), ('oliphaunt3', 1), ('relevant', 1), ('GroupedUnicast(K', 1), ('calculated.\n', 1), ('onSuccess()', 1), ('List<TypeLiteral<?>>', 1), ('list.retainAll(c);\n', 1), ('this.type.equals(type.type)', 1), ('metadata', 1), ('found,\n', 1), ('InnerCompletableCache(CompletableObserver', 1), ('getters;\n', 1), ('IUnitOfWork.DELETE);\n', 1), ('tasks;\n\n', 1), ('downstreamRequest(long', 1), ('bus.subscribe(foo);\n', 1), ('DoOnEachConditionalSubscriber(\n', 1), ('TestHelper.checkDisposed(PublishSubject.create().singleOrError().doOnDispose(new', 1), ('MaybeEqualSingle(MaybeSource<?', 1), ('kill', 1), ('implementations,', 1), ('UsingObserver<R>\n', 1), ('"FlowableLastMaybe",\n', 1), ('pathMatcher.matches(databasePath))', 1), ('"453-936",', 1), ('System.getProperty("java.home"));\n', 1), ('(this.getStudentId()', 1), ('onSuccessCall;\n', 1), ('Completable.concat(up,', 1), ('inputStudent', 1), ('car");\n\n', 1), ('ApiGatewayResponse(this.statusCode,', 1), ('com.google.inject.Module;\nimport', 1), ('video\n', 1), ('addition', 1), ('}).toFlowable();\n', 1), ('Arrays.equals(i.getAddress(),', 1), ('output.accept("java.home:', 1), ('sw', 1), ('onSubscribeTwice()', 1), ('groups.put(mapKey,', 1), ('testStringValue', 1), ('Files.newInputStream(Paths.get(args[0]));\n', 1), ('flushAcknowledgement)', 1), ('PerfBoundedSubscriber(Blackhole', 1), ('ENABLED', 1), ('permission.getActions();\n', 1), ('studentDatabase)', 1), ('>>>>', 1), ('MissingBackpressureException("Couldn\'t', 1), ('Lists', 1), ('Stack<Expression>', 1), ('tempIdx;\n', 1), ('timeout(2000).atLeastOnce()).move();\n\n', 1), ('that.memoryLimitInMb', 1), ('ImageClientImpl', 1), ('sequenceEqual(source1,', 1), ('ObservableTakeLastTimed<T>', 1), ('normalizedRepositoryDir', 1), ('serialDisposable', 1), ('"Observer",', 1), ('nullUnit()', 1), ('mjoshzambales\n', 1), ('onError);\n', 1), ('arbiter.replace(s);\n', 1), ('emptyArray()', 1), ('domainapp.integtests.tests.modules.simple;\n\nimport', 1), ('Files.list(geoIpConfigDirectory))', 1), ('io.reactivex.Flowable}-based', 1), ('printThisBefore();\n', 1), ('said\n', 1), ('verify(second).dispose();\n', 1), ('setAddressLineTwo(String', 1), ('DeprecationInfoAction}.\n', 1), ('TestException("Second");\n', 1), ('testPickTarget()', 1), ('pp1.onComplete();\n', 1), ('SafeSubscriberTestException("failed"));\n', 1), ('testCanonPrinter()', 1), ('computation().shutdown();\n', 1), ('(date', 1), ('this.add(l);\n', 1), ('initialize();\n\n', 1), ('incurred', 1), ('SystemCallFilterTests', 1), ('domainapp.fixture.scenarios;\n\nimport', 1), ('AssistedInject}\n', 1), ('Flowable.using(Functions.justCallable(1),\n', 1), ('publishError(innerObserver,', 1), ('lookAheadStep;\n\n', 1), ('LOGGER.info("Creating', 1), ('types;\n\n', 1), ('enumValues[(currentWeather.ordinal()', 1), ('RuntimeException(e);\n//', 1), ('call();\n}\n', 1), ('backpressureOverflow()', 1), ('concatDelayError(Iterable<?', 1), ('(prevents', 1), ('largestPoolSize();\n\n', 1), ('this(new', 1), ('Charset.defaultCharset());\n', 1), ('mapping.\n', 1), ('exchange.sendResponseHeaders(storageResponse.status.getStatus(),', 1), ('this.area.setText(data);\n', 1), ('when(factory.call()).thenReturn(firstObservable,', 1), ('dao.update(new', 1), ('AbstractFlowableWithUpstream<TLeft,', 1), ('open();\n\n', 1), ('DisposableObserver&lt;Integer&gt;()', 1), ('successError()', 1), ('-7545121636549663526L;\n\n', 1), ('videoResource', 1), ('Small', 1), ('path,\n', 1), ('(!parent.endsWith("/"))', 1), ('SimpleFluentIterable}', 1), ('has;\n', 1), ('userDto.isActive', 1), ('java.text.DateFormat;\nimport', 1), ('TimeUnit.MICROSECONDS)\n', 1), ('!m.getName().endsWith("Scheduler")\n//', 1), ('"FlowableAllSingle",\n', 1), ('replacing', 1), ('enqueue(Runnable', 1), ('FallbackObserver<T>', 1), ('day",', 1), ('repositoryDir;\n', 1), ('ObservableBufferBoundarySupplier(ObservableSource<T>', 1), ('Anyone', 1), ('assertNotNull(byId);\n', 1), ('workers)', 1), ('System.out.println(msg);\n', 1), ('42,', 1), ('onSubscribe()}', 1), ('"false",\n', 1), ('list.toArray();\n', 1), ('org.apache.isis.applib.annotation.ParameterLayout;\nimport', 1), ('any.get().stream().map(constructor)', 1), ('MaybeDefer<T>', 1), ('org.elasticsearch.common.io.stream.StreamOutput;\n\n/**\n', 1), ('ImmediateThinWorker();\n\n', 1), ('RxJavaPlugins.onSubscribe(Completable.never(),', 1), ('InputStreamReader(in,', 1), ('this.add(w);\n', 1), ('service.checkTicketForPrize(new', 1), ('SafeSubscriberTestException("onCompleteFail");\n', 1), ('io.reactivex.functions.BiFunction;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 1), ('term', 1), ('testForValid()', 1), ('TakeWhileTckTest', 1), ('ObjectHelper.requireNonNull(other.iterator(),', 1), ('request.getRequestParameters();\n', 1), ('act(PartyMember', 1), ('.<Void>toObservable()\n', 1), ('Convert', 1), ('calculateLowestFrequencyChar();\n', 1), ('(elements.hasMoreElements())', 1), ('get(offset);\n', 1), ('Node(String', 1), ('RxJavaPlugins.setInitSingleSchedulerHandler(callable2scheduler);\n', 1), ('influencer', 1), ('CHM.keySet()', 1), ('limit),', 1), ('interruptible\n', 1), ('Headers\n', 1), ('target.isDamaged(),', 1), ('DematerializeObserver(Observer<?', 1), ('"When', 1), ('s.observeOn(Schedulers.single());\n', 1), ('DelayMaybeObserver<T>(observer,', 1), ('cachedService;\n', 1), ('MaybeErrorCallable<T>', 1), ('complete(Notification.<T>createOnError(t));\n', 1), ('(alias', 1), ('con)', 1), ('ownerStruct.members.get(whitelistField.javaFieldName);\n\n', 1), ('SingleToFlowable(v);\n', 1), ('assertTrue(appender.logContains("root"));\n', 1), ('(p.matcher(line).find())', 1), ('evictedGroups.offer(value);\n', 1), ('doubleOnSubscribe(MaybeObserver<?>', 1), ('conflicts', 1), ('https', 1), ('Functions.NaturalComparator.class.getMethod("valueOf",', 1), ('TestHelper.checkDoubleOnSubscribeFlowableToMaybe(new', 1), ('testFirstCount()', 1), ('name=layer', 1), ('ConsumerSingleObserver<T>\nextends', 1), ('sourceEmpty)', 1), ('parallel;\n\n', 1), ('generics:\n', 1), ('IllegalStateException("Interrupted', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/isEmpty.png"', 1), ('CakeInfo(Long', 1), ('append', 1), ('<li>Programming', 1), ('output,', 1), ('writeToBytes(WriteOperation', 1), ('mapper.update(student);\n\n', 1), ('keyed', 1), ('Flowable.ambArray(\n', 1), ('SingleDefer(Callable<?', 1), ('LOGGER.info("Do', 1), ('other.get()', 1), ('101', 1), ('NoSuchElementCallable.INSTANCE;\n', 1), ('advantage\n', 1), ('super.poll();\n', 1), ('*/\n@ExtendWith(SpringExtension.class)\n@ContextConfiguration(locations', 1), ('ConcatMapDelayErrorObserver(Observer<?', 1), ('RxJavaPlugins.setScheduleHandler(runnable2runnable);\n', 1), ('testNullPropertiesPassed()', 1), ('assertEquals(Arrays.asList(6L,', 1), ('WizardDaoImpl());\n', 1), ('AssistedConstructor<T>', 1), ('ON_COMPLETE;\n', 1), ('WriteOperation', 1), ('emptyActionToString()', 1), ('customerTwo', 1), ('disposable.dispose();\n\n', 1), ('List<Supplier<DeprecationIssue>>', 1), ('0L}\n', 1), ('OverallBucketsProcessor', 1), ('isDone.compareAndSet(false,', 1), ('KillerBee(),', 1), ('hasSize(2));\n', 1), ('up."));\n\n', 1), ('ActionListener<Set<RoleDescriptor>>>', 1), ('character.setWeapon(weapon);\n', 1), ('assertNotEquals(new', 1), ('familiar', 1), ('WindowOperation<Object,', 1), ('Events', 1), ('designed,', 1), ('super(Wizard::new,', 1), ('LoggerFactory.getLogger(Inventory.class);\n\n', 1), ('poison"));\n', 1), ('disposer));\n', 1), ('handleEvent(AccountCreateEvent', 1), ('TestHelper.checkDisposed(PublishSubject.create().ignoreElements().doFinally(this));\n', 1), ('timeoutMillis', 1), ('verify(spellbookDao).findAll();\n', 1), ('useOfMute()', 1), ('propsMap.remove("elasticsearch.version");\n', 1), ('key.channel()).write(pendingBuffer);\n', 1), ('.concatWith(Observable.just(2))\n', 1), ('minimize', 1), ('trustedNames', 1), ('(boolean):', 1), ('SafeSubscriberTest', 1), ('green.', 1), ('warrior\n\n', 1), ('preserve', 1), ('blockingFirst()', 1), ('(errorOnFewer)', 1), ('list.subList(2,', 1), ('starter\n', 1), ('CountSubscriber', 1), ('verify(wizardDao).findAll();\n', 1), ('TestHelper.checkDisposed(Flowable.just(1)\n', 1), ('R>(subscribers[i],', 1), ('assertTrue(books.size()', 1), ('inherited', 1), ('specifed', 1), ("Letter('m'),", 1), ('client.<br>\n', 1), ('FlatMapMaybeObserver(SingleObserver<?', 1), ('filtered,', 1), ('failSingleCompletableBlockingGet()', 1), ('java.util.Deque;\n\n/**\n', 1), ('ActionListener<Map<String,', 1), ('testGetSize(Creature', 1), ('Map.\n', 1), ('Single.ambArray()\n', 1), ('Files.createTempFile(path.getParent(),', 1), ('actual.onNext(c);\n', 1), ('getType("Number");\n', 1), ('findPattern("PublishProcessor<.*>\\\\s+ps");\n', 1), ('<code>CakeLayer</code>)', 1), ('PURGE_ENABLED_KEY', 1), ('Flowable.just(i).subscribeOn(Schedulers.computation());\n', 1), ('(head', 1), ('MonadTest', 1), ('pick', 1), ('io.reactivex.internal.operators.flowable.FlowableTimeoutTimed.TimeoutSupport;\nimport', 1), ('bs2.isCancelled());\n', 1), ('DisposableObserverTest', 1), ('trustedNames.stream().map(Automatons::predicate).collect(Collectors.toSet());\n', 1), ('ctor', 1), ('StringBuilder()\n', 1), ('mode.",', 1), ('(type.isInstance(item))', 1), ('DelayTckTest()', 1), ('LongRunningEventException(\n', 1), ('deque.removeFirst();\n', 1), ('beans.put(ROWING_BEAN,', 1), ('any())).thenReturn(new', 1), ('function3', 1), ('sum).toObservable().map(error);\n\n', 1), ('assertNull(RxJavaPlugins.onAssembly((Completable)null));\n\n', 1), ('1000).toMap(Functions.<Integer>identity()).toFlowable()\n', 1), ('ALBUM_LIST_HTML_FILE', 1), ('ResponseHandler(testServer));\n', 1), ('22876611072430776L;\n\n', 1), ('calories=20', 1), ('DebounceObserver(Observer<?', 1), ('temp;\n', 1), ('PropertiesFeatureToggleVersion(null);\n', 1), ('assertTrue(o.isUnsubscribed());\n//', 1), ('dataSource()', 1), ('ivoryTower2', 1), ('ensureGreen();\n', 1), ('clearButton.addActionListener(e', 1), ('warProto', 1), ('Observable.range(Integer.MAX_VALUE', 1), ('onErrorInner(Throwable', 1), ('sendRequest(Order', 1), ('error,\n', 1), ('df;\n\n', 1), ('OnErrorReturnItemTckTest', 1), ('(isStopped)', 1), ('Creature}', 1), ('order\n', 1), ('expectTargetOnFire\n', 1), ('s.get().dispose();\n', 1), ('f.forEachWhile(Functions.alwaysTrue());\n', 1), ('854110278590336484L;\n\n', 1), ('ResultSetProxy(log,', 1), ('testElementAtOrDefaultWithMinusIndexFlowable()', 1), ('innerObserver.onError(error);\n', 1), ('loaders,', 1), ('!m.signature.contains("ObservableSource")\n', 1), ('getData()', 1), ('checkEnum(Class<E>', 1), ('publishProcessorAsPs()', 1), ('statement.executeQuery();\n', 1), ('numbers3);\n', 1), ('(targetVersion', 1), ('Opaen");\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/AsyncSubject.png"', 1), ('Collections.unmodifiableMap(struct.members);\n\n', 1), ('statement.', 1), ('member.getValue().getter);\n', 1), ('Arrays.stream(clazz.getEnumConstants()).collect(toMap(mapper,', 1), ('valid,', 1), ('com.mongodb.client.FindIterable;\nimport', 1), ('owner.type;\n', 1), ('moment.', 1), ('testRangeWithOverflow5()', 1), ('.ApiGatewayResponseBuilder<LambdaInfo>()\n', 1), ('taskRunnable1', 1), ('reason\n', 1), ('SamlRedirect(RequestAbstractType', 1), ('Single};', 1), ('Worker(tasks.get(i));\n', 1), ('"dd/MM/yyyy"\n', 1), ('testMenuItemSelected()', 1), ('NOSONAR\n\n', 1), ('DwarvenGoldmineFacade()', 1), ('SkipLastTckTest', 1), ('ConcatMapSupport<R>', 1), ('MaybeObserver()', 1), ('LruCache(capacity);\n', 1), ('org.elasticsearch.test.AbstractStreamableTestCase;\nimport', 1), ('SkipLastTimedObserver<T>', 1), ('StoppingData(LocalDateTime', 1), ('mapper.\n', 1), ('Assert.assertNotNull(attributeView);\n', 1), ('ParallelFromPublisherTest', 1), ('}.test();\n', 1), ('byteType;\n', 1), ('javax.net.ssl.TrustManagerFactory;\nimport', 1), ('o2).map(new', 1), ('AssistedInject', 1), ('org.elasticsearch.xpack.core.security.authc.ldap.support.LdapMetaDataResolverSettings;\n\nimport', 1), ('NonNull', 1), ('CreateDomainEvent.class)\n', 1), ('SingleSource<List<Integer>>>()', 1), ('lastFetched;\n\n', 1), ('composes', 1), ('Optional.of(list.get(0));\n', 1), ('itemId++);\n', 1), ('username.equals(other.getUsername())', 1), ('java.util.concurrent.locks.ReentrantLock;\n\n/**\n', 1), ('developed', 1), ('this.onAfterTerminated', 1), ('.collect(Collectors.toList())\n', 1), ('lambdaInfo(Context', 1), ('partition\n', 1), ('f.onError(null);\n', 1), ('Flowable.merge(Flowable.just(\n', 1), ('Type,', 1), ('subscribers[0].onSubscribe(new', 1), ('io.reactivex.observers.TestObserver}', 1), ('ehanced', 1), ('MovementSelector(Movement', 1), ('tryEmitScalar(u);\n', 1), ('RxJavaPlugins.onSubscribe(Maybe.never(),', 1), ('LongType', 1), ('TestHelper.checkDisposed(Completable.create(new', 1), ('keystorePath.toAbsolutePath())\n', 1), ('DEFAULT_PORT', 1), ("Letter('f'),", 1), ('MessageCollectorMember}.\n', 1), ('assigned', 1), ('java.util.TreeSet;\nimport', 1), ('DateFormatCallable,', 1), ('testElementAtObservable()', 1), ('checkSchedulerBadMethod(Observable.class.getSimpleName());\n', 1), ('states', 1), ('BufferedReader(\n', 1), ('.thenAccept(value', 1), ('Joiner.on("\\n").join(readLines);\n', 1), ('Settings.builder().put("path.home",', 1), ('Dispatcher}.', 1), ('AccountCreateEvent.\n', 1), ('isDone', 1), ('ObservableSource[8];\n\n', 1), ('calories=100]";\n', 1), ('AsyncTask<O>', 1), ('prop.getProperty("INTERACTIVE_MODE");\n', 1), ('java.lang.annotation.Annotation;\nimport', 1), ('gopi', 1), ('CompletableConcatIterable(Iterable<?', 1), ('logger-usage', 1), ('reserved.', 1), ('IsEmptyMaybeObserver<T>(observer));\n', 1), ('service2', 1), ('"src/perf/java")));\n', 1), ('public+forbidden', 1), ('.map(f', 1), ('80);\n', 1), ('TranslatableString', 1), ('requestParameters.getParameterValue("user");\n', 1), ('overlap,', 1), ('doorProperties', 1), ('CompletableAndThenPublisher(CompletableSource', 1), ('LotteryNumbers.create(numbers);\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/ofClass.png"', 1), ('count.get();\n', 1), ('onErrorNoSubscribeOnErrorCrash()', 1), ('(VirtualMachineError)', 1), ('price)', 1), ("Colebourne's", 1), ('LambdaObserver(Consumer<?', 1), ('servers.', 1), ('when(task.call()).thenThrow(exception);\n', 1), ('hostName,', 1), ('(!rxdir.endsWith("/"))', 1), ('ObservableTimestampTest', 1), ('Schedulers.single();', 1), ('OnErrorNextObserver(Observer<?', 1), ('CsvListWriter(new', 1), ('second.request();\n', 1), ('things.\n', 1), ('Matcher<Path>', 1), ('coordinates.', 1), ('loop</li>\n', 1), ('assertEquals("Should', 1), ('findSource(Maybe.class.getSimpleName());\n\n', 1), ('package-private', 1), ('assertFalse(it.isDisposed());\n\n', 1), ('computation().start();\n', 1), ('subscriber.assertComplete();\n\n', 1), ('pattern,({@link', 1), ('FutureSingleObserver<T>());\n', 1), ('TransportAddress(InetAddress.getByName(host),', 1), ('ArrayDeque<C>();\n', 1), ('declaration.extractVariables(variables);\n', 1), ('ByteArrayInputStream(files.get(setting));\n', 1), ('withDiscoverability(Discoverability.DISCOVERABLE);\n', 1), ('compute;\n\n', 1), ('testPrototype(P', 1), ('Color.DARK},\n', 1), ('!keyPath.equals(that.keyPath)', 1), ('iterable\n', 1), ('redirect",', 1), ('iterableCancelRace()', 1), ('Tenant("Adidas",', 1), ('isEmpty(Collection<?>', 1), ('Round', 1), ('org.apache.lucene.util.SetOnce;\nimport', 1), ('"+79831742"));\n', 1), ('this.mar', 1), ('DeferTckTest', 1), ('getType()', 1), ('TreasureChestItemIterator', 1), ('getElasticsearchCodebase();\n', 1), ('makeServiceCalls(nike));\n', 1), ('org.elasticsearch.xpack.sql.util.Check;\n\nimport', 1), ('nextInner', 1), ('List<Fruit>', 1), ('checkDisposed(Flowable<T>', 1), ('FlowableError<T>', 1), ('Kihione");\n', 1), ('cs.test().assertResult();\n\n', 1), ('in.readException();\n', 1), ('program.', 1), ('FlowableRepeat<T>', 1), ('ObservableConcatWithCompletable(Observable<T>', 1), ('java.util.Iterator}</li>\n', 1), ('Performance', 1), ('assertNull(getInternalHeavyValue());\n', 1), ('setStudentId(final', 1), ('(also', 1), ('ObservableLift(ObservableSource<T>', 1), ('assertFalse(s1.isCancelled());\n\n', 1), ('CacheStore/LRUCache/CachingPolicy', 1), ('java.util.Arrays;\n\npublic', 1), ('succeeds,', 1), ('constructor.newInstance(args);\n', 1), ('MessageDigest', 1), ('<p>Use', 1), ('testAddLayer()', 1), ('sockets.', 1), ('now(TimeUnit.MILLISECONDS));\n', 1), ('child.clazz.getMethod(method.method.getName(),', 1), ('futureObservable.subscribeOn(Schedulers.computation()).subscribe(to);\n\n', 1), ('port\n', 1), ('owner=\'"', 1), ('fishV2.getName(),', 1), ('toObservableEnum()', 1), ('InnerQueuedObserver<R>(this,', 1), ('<p>Any', 1), ('headIndex', 1), ('createMessage("me",', 1), ('hashCode,', 1), ('resolveTimeout));\n', 1), ('DateTime(0,', 1), ('DisposeOnCancel(Disposable', 1), ('(currentCount', 1), ('getRemainingElementsCount();\n', 1), ('list.set(index,', 1), ('list.addAll(col);\n', 1), ('IllegalArgumentException("[message]', 1), ('"id")\n', 1), ('JTextArea(100,', 1), ('(definitionStart', 1), ('"241-465",', 1), ('testPluginErrorHandlerReceivesExceptionWhenUnsubscribeAfterCompletionThrows()', 1), ('setFutureCancelRace()', 1), ('TestSubscriber<Object>(0L);\n', 1), ('j)\n', 1), ('v2;\n', 1), ('filterFailWithRetryLimited()', 1), ('pre-allocated', 1), ('Promise<Object>', 1), ('QueueSubscription.BOUNDARY);\n\n', 1), ('SimpleTask();\n', 1), ('LOGGER.info(demandHolderIdiom.toString());\n', 1), ('"Timed[time="', 1), ('LOGGER.info(w.getName());\n', 1), ('PublicKey', 1), ('run.get(ScheduledRunnable.FUTURE_INDEX));\n\n', 1), ('cancelAfterFirst()', 1), ('Integer>[]', 1), ('(crashOnComplete)', 1), ('mpscLinkedQueueNull()', 1), ('org.springframework.test.context.junit.jupiter.SpringExtension;\n\nimport', 1), ('RuntimeException(e);', 1), ('MergerBiFunction<T>', 1), ('when(spell.getSpellbook()).thenReturn(spellbook);\n\n', 1), ('Offers', 1), ('9300', 1), ('Math.max(left.size(),', 1), ('peek();\n\n', 1), ('doOnSubscribe(@NonNull', 1), ('noPermissions),', 1), ('0.', 1), ('System.out.println("checking', 1), ('onSubscribeCrashed()', 1), ('Prevents', 1), ('missing:', 1), ('cli', 1), ('.forEachWhile(Functions.alwaysTrue(),', 1), ('ToFlowable', 1), ('observer.error;\n', 1), ('onAfterTerminateCrashes()', 1), ('AbstractNioChannel}s,', 1), ('equalTo("filter.filter_1', 1), ('list.toArray());\n', 1), ('service.submit(new', 1), ('BlockingIgnoringReceiver();\n', 1), ('innerObserver.onNext(value);\n', 1), ('singleSingle()', 1), ('license)', 1), ('4883307006032401862L;\n\n', 1), ('@Given("^there', 1), ('dir.resolve("ports"),', 1), ('trustConfig', 1), ('ObservableJoin(\n', 1), ('ObservableSwitchMap(ObservableSource<T>', 1), ('limitStep()', 1), ('Prototype>', 1), ('ambSingleSource()', 1), ('logo!",', 1), ('org.mockito.*;\nimport', 1), ('chest.iterator(expectedItem.getType());\n', 1), ('ResponseOrException<>(parser.apply(\n', 1), ('builder.startObject();\n', 1), ('this.delegate', 1), ('StartingData(LocalDateTime', 1), ('e.serialize().onNext(null);\n', 1), ('org.elasticsearch.example.resthandler;\n\nimport', 1), ('POOLS.remove(e);\n', 1), ('this.maybeSupplier', 1), ('NodeInfo<MultiMatchQueryPredicate>', 1), ('detail.</p>\n', 1), ('Spell("Bee', 1), ('Because', 1), ('result2);\n', 1), ('(e.isDisposed())', 1), ('command.add("-f");\n', 1), ('welcomeMessageFreeUser', 1), ('AtomicReferenceArray<T>\n', 1), ('jvmOptions.iterator();\n', 1), ('SerializedObserver<T>(child);\n\n', 1), ("audio's", 1), ('PARSER_INSTANCE', 1), ('calculation', 1), ('handler.apply(con);\n', 1), ('FutureTask', 1), ('"-Xms1g\\n%d:-Xmx1g\\n%d-:-XX:+UseG1GC\\n%d-%d:-Xlog:gc\\n%d-%d:-XX:+PrintFlagsFinal\\n%d-%d:-XX+AggressiveOpts",\n', 1), ('OBSERVER_ONERROR_FAIL()', 1), ('java.util.concurrent.ThreadLocalRandom;\n\n/**\n', 1), ('assertTrue(appender.logContains("level3_a"));\n', 1), ('Callable<O>', 1), ('spellDao.persist(spell11);\n', 1), ('Boolean.class)', 1), ('assertNull(e.getObjectToExplain());\n', 1), ('keyword.', 1), ('consumerNode.', 1), ('aborted', 1), ('EmailAttachments(Collection<EmailAttachmentParser.EmailAttachment>', 1), ('(DisposableHelper.dispose(upstream))', 1), ('spellbook7.addSpell(spell16);\n', 1), ('verify(subscription).dispose();\n', 1), ('EnumSet.of(INDEX,', 1), ('component).\n', 1), ('newModules);\n', 1), ('.blockingSubscribe(System.out::println);\n', 1), ('"}",', 1), ('ReplayProcessorTimeBoundAsPublisherTckTest()', 1), ('Group(List<Job>', 1), ('"Unknown",', 1), ('Collections.sort(t,', 1), ('CompletableMergeArray', 1), ('o.takeUntil(Functions.alwaysFalse());\n', 1), ('assertNull(RxJavaPlugins.onAssembly((ConnectableFlowable)null));\n\n', 1), ('singleObserver;\n\n', 1), ('Nazgul(NazgulName.REN));\n', 1), ('inner.queue();\n', 1), ('printAndCountExceptions(Result', 1), ('BufferOpenObserver<Open>(this);\n', 1), ('lock.writeLock()));\n', 1), ('io.reactivex.internal.operators.observable.ObservableMapNotification.MapNotificationObserver;\nimport', 1), ('SimpleFileWriter(nonExistingFile.getPath(),', 1), ('e.onNext(i);\n', 1), ('SpscLinkedArrayQueue<T>(prefetch);\n\n', 1), ('<dd></dd>', 1), ('shouldCallOnError()', 1), ('layerBean', 1), ('field.clazz,', 1), ('twice:', 1), ('FlowableElementAtTest', 1), ('FlowableGenerate<T,', 1), ('throwIfFatal(@NonNull', 1), ('sa.setSubscription(bs1);\n\n', 1), ('Book("title1",', 1), ('plugin.getFileName().toString());\n', 1), ('nativeRoleMappingStore)', 1), ('io()', 1), ('LambdaObserver<T>', 1), ('kinds', 1), ('request(1);\n\n', 1), ('up.\n', 1), ('PROP_FILE_NAME,', 1), ('Sentence', 1), ('processFactory', 1), ('enqueued', 1), ('charType', 1), ('numbered",', 1), ('expectedConfuseMethod', 1), ('CakeLayerInfo("layer2",', 1), ('"welcome.html"));\n', 1), ('luck);\n', 1), ('frc.setResource(0,', 1), ('System.out.print("java.lang.RuntimeException:', 1), ('UsingObserver(MaybeObserver<?', 1), ('Parser[]', 1), ('keyBytes)', 1), ('javax.sound.sampled.Clip;\nimport', 1), ('(ConditionalSubscriber<?', 1), ('ts.onComplete();\n', 1), ('special\n', 1), ('is(version.size()));\n', 1), ('ArrayList<UnicastProcessor<T>>();\n', 1), ('onComplete)?}.\n', 1), ('validate(projection.andThen(validation::test)::apply,', 1), ('"Different', 1), ('File(parent);\n', 1), ('this.dateValue', 1), ('painless\n', 1), ('"planning_exception":\n', 1), ('InnerObserver<U>(actual,', 1), ('overrideInitComputationScheduler()', 1), ('RxJavaPlugins.onAssembly(myb));\n\n\n', 1), ('FlowableCollectTest', 1), ('cancellable)', 1), ('RainbowFishSerializer()', 1), ('commit.\n', 1), ('dispatcher\n', 1), ('subject1', 1), ('DEFAULT_TICKETS_COLLECTION,', 1), ('oldTypeIterator', 1), ('FileStoreAttributeView>', 1), ('inherent', 1), ('noMoreAbilities();\n\n', 1), ('addresses', 1), ('remoteAddress;\n\n', 1), ('System.out.print(clazz2.getName());\n', 1), ('assertTrue(ticket3.isPresent());\n', 1), ('CompletableError(Throwable', 1), ('getValue', 1), ('functionName=\'"', 1), ('complexity', 1), ('places', 1), ('org.apache.lucene.util.Constants;\n\nimport', 1), ('nazguls.put(NazgulName.KHAMUL,', 1), ('parsed,', 1), ('ObservableConcatMapCompletable(Observable<T>', 1), ('SpellbookDaoImpl());\n', 1), ('testCustomConverter()', 1), ('naturalComparatorEnum()', 1), ('AStoreable', 1), ('DateTimeFormatterTimestampConverter', 1), ('org.elasticsearch.example.realm.CustomAuthenticationFailureHandler;\nimport', 1), ('context.get(IUnitOfWork.DELETE).size());\n', 1), ('OperatorWindowBoundaryCloseSubscriber(WindowBoundaryMainSubscriber<T,', 1), ('List<Callable<Integer>>', 1), ('"Single");\n\n', 1), ('"create-drop");\n', 1), ('level3B', 1), ('to.assertError(CompositeException.class);\n\n', 1), ('subscriber.onNext(item);\n', 1), ('BaseTck(long', 1), ('projected', 1), ('Handler}', 1), ('health', 1), ('GiantModel', 1), ('TriggerService', 1), ('<i>EventHandler</i>', 1), ('assertNotNull(item.getType());\n', 1), ('throws.\n', 1), ('Modules.override(isisDefaults).with(overrides);\n', 1), ("fn.substring(idx).replace('/',", 1), ('super.nodeSettings(nodeOrdinal);\n', 1), ('observableNoPublisher()', 1), ('cake.toString());\n\n', 1), ('"fail");\n', 1), ('spell6', 1), ('doOnSubscribe(Consumer<?', 1), ('//ignore\n', 1), ('buffers.clear();\n\n', 1), ('Single.just(8),', 1), ('0.90', 1), ('url)', 1), ('ls);\n', 1), ('(provided', 1), ('collect\n', 1), ('sb.append(arity);\n', 1), ('FlowableRetryBiPredicate(\n', 1), ('ObservableGenerate(Callable<S>', 1), ('count.incrementAndGet());\n', 1), ('emptyEnum()', 1), ('com.iluwatar.hexagonal.domain.LotteryTicketCheckResult;\nimport', 1), ('fuseToMaybe();\n}\n', 1), ('FlowableAllSingle<T>', 1), ('assertNull(RxJavaPlugins.onAssembly((Observable)null));\n\n', 1), ('JLabel("Name"));\n', 1), ('Flowable.empty().blockingLast();\n', 1), ('org.elasticsearch.test.loggerusage;\n\nimport', 1), ('(!freeGroup.contains(user))', 1), ('\\"value\\"\\n}"));\n', 1), ('threads2.size());\n', 1), ('.onError(\n', 1), ('ObservableErrorHandlingTests', 1), ('RxJavaPlugins.setOnObservableSubscribeError(errorHandler);\n//\n//', 1), ('eg:\n', 1), ('allPotions.size());\n', 1), ('moreover,', 1), ('MaybeFlatMapBiSelector<T,', 1), ('FishingBoatAdapter', 1), ('nextCancelRaceBackpressured()', 1), ('javadoc2.indexOf("', 1), ('(!asyncResult.isCompleted())', 1), ('""));\n\n', 1), ('SingleElementSubscriber(Subscriber<?', 1), ('(dq.size()', 1), ('plugins.add(plugin);\n', 1), ('testOnFire(final', 1), ('arguments,\n', 1), ('License.builder()\n', 1), ('nsme);\n', 1), ('edited.', 1), ('GZIP);\n\n', 1), ('external(Blackhole', 1), ('com.iluwatar.hexagonal.module.LotteryTestingModule;\nimport', 1), ('RxJavaPlugins.getOnSingleCreate());\n//', 1), ('del.addActionListener(new', 1), ('waitForFlush(String', 1), ('IO.\n', 1), ('false;\n}\n', 1), ('(trustConfig', 1), ('HolderNaive.class.getDeclaredField("heavy");\n', 1), ('actions).\n', 1), ('rmo.onComplete();\n\n', 1), ('to.valueCount();\n', 1), ('isOpened()', 1), ('0));\n\n', 1), ('verify(s,', 1), ('Underlying', 1), ('concatMapToFlowableEmpty;\n\n', 1), ('bounded1k()', 1), ('readFrom(StreamInput', 1), ('address.state', 1), ('subscribe(Publisher<?>[]', 1), ('Scheduler.Worker.schedule}', 1), ('void}', 1), ('con);\n', 1), ('repository.save(original);\n', 1), ('run\n', 1), ('.get()\n', 1), ('DatagramPacket(ByteBuffer.wrap(ACK));\n', 1), ('BurstSubscription', 1), ('MpscFillOnceSimpleQueue<T>\n', 1), ('mockSingleObserver()', 1), ('assertFalse(ss.hasObservers());\n', 1), ('overrideInitSingleScheduler()', 1), ('ScalarXMapZHelperTest', 1), ('ObservableFlatMapMaybe<T,', 1), ('Object[]>()', 1), ('assertExpectedJvmOptions(\n', 1), ('PropertiesFeatureToggleVersion#PropertiesFeatureToggleVersion(Properties)}\n', 1), ('CompletableMergeDelayErrorIterable', 1), ('Spliterator<Entry>', 1), ('ByteType', 1), ('CSV\n', 1), ('LoggerFactory.getLogger(AppClient.class);\n\n', 1), ('SlotPair<T>();\n', 1), ('instance);\n', 1), ('map.keySet())', 1), ('s3', 1), ('deprecation', 1), ('NoSuchElementException(),', 1), ('InvalidOperationException(\n', 1), ('testBakeCakeMissingTopping()', 1), ('MessageQueue.', 1), ('readingTime', 1), ('twin\n', 1), ('isEqual.test((T)o1,', 1), ('select', 1), ('FlowableDoFinally(Flowable<T>', 1), ('BlockingQueue<Runnable>', 1), ('charType;\n', 1), ('1000;\n\n', 1), ('args,', 1), ('assertTrue(initialLayers.isEmpty());\n\n', 1), ('RxJavaPlugins.setOnCompletableSubscribe(new', 1), ('true;', 1), ('wizard1', 1), ('Languages",', 1), ('in.toString();\n', 1), ('pubKeyFingerprint', 1), ('TEST_COUNTERS_COLLECTION', 1), ('ObjectHelper.requireNonNull(publisher,', 1), ('testNoTimedTaskPartRetention()', 1), ('Specifically', 1), ('writes/reads', 1), ('(defaultValue', 1), ('assertNull(RxJavaPlugins.onAssembly((ConnectableObservable)null));\n\n', 1), ('DomainEventProcessor();\n\n\n', 1), ('fileName;\n', 1), ('methodNotThrowingAnyException()', 1), ('shelves.', 1), ('void.class;\n', 1), ('innerComplete(InnerQueuedSubscriber<Integer>', 1), ('code)\n\n', 1), ('Function<MaybeSource<Object>,', 1), ('singleSourceAsCs()', 1), ('SingleObserveOn<T>(this,', 1), ('RuntimeException("always', 1), ('level3A,', 1), ('cake.setLayers(expectedLayers);\n', 1), ('(st', 1), ('AtomicReference<SlotPair<T>>', 1), ('found:");\n\n', 1), ('administration.getAllSubmittedTickets();\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/CompletableSubject.png"', 1), ('java.util.Locale;\n\n/**\n', 1), ('"address")\n', 1), ('"114-988",', 1), ('add(int', 1), ('CacheStore.set(userId,', 1), ('eventPool;\n', 1), ('dontRequestIfDownstreamRequestsLate()', 1), ('LinkedQueueNode<T>(e);\n', 1), ('argument)', 1), ('<p>As', 1), ('350));\n', 1), ('java.nio.file.Files;\n\nimport', 1), ('throwIfThrowable(Throwable', 1), ('resolveTimeout;\n\n', 1), ('nazguls.put(NazgulName.DWAR,', 1), ('painlessTypeName,', 1), ('source-like', 1), ('open()', 1), ('for:\n', 1), ('"alternative"', 1), ('customer.setFirstName("Daniel");\n', 1), ('encounter', 1), ('token);\n', 1), ('onAfterTerminate,', 1), ('(RestrictedTrustConfig)', 1), ('testOnErrorExceptionIsThrownFromGroupBy()', 1), ('privateKey,', 1), ('@SuppressWarnings({"rawtypes",', 1), ('validation.', 1), ('DoAfterObserver(MaybeObserver<?', 1), ('Flowable.<Long>empty()\n', 1), ('Loggers.getLogger(Logstash.class));\n', 1), ('Resets', 1), ('writer.invokeVirtual(type,', 1), ('mapper.apply(v).iterator();\n\n', 1), ('io.reactivex.internal.fuseable.HasUpstreamPublisher;\n\npublic', 1), ('LOGGER.info(specificFieldsDetails);\n\n', 1), ('Response(RestStatus.INTERNAL_SERVER_ERROR,', 1), ('consumerNode.lazySet(node);\n', 1), ('.endTime(ZonedDateTime.ofInstant(Instant.ofEpochMilli(1519862400000L),', 1), ('rangeFlatMap', 1), ('DoFinallyConditionalSubscriber<T>((ConditionalSubscriber<?', 1), ('Map<ClusterName,', 1), ('VideoResource}.\n', 1), ('(q.peek()', 1), ('subject.single("")\n', 1), ('DateTime(randomNonNegativeLong(),', 1), ('resolveRoles(UserData', 1), ('this.info', 1), ('VolatileSizeArrayList<Integer>();\n\n', 1), ('bulk', 1), ('spellbooks)', 1), ('architecture-specific', 1), ('java.sql.SQLIntegrityConstraintViolationException;\nimport', 1), ('com.iluwatar.fluentinterface.fluentiterable.simple.SimpleFluentIterable;\nimport', 1), ('value+time', 1), ('getType("short");\n', 1), ('MaybeFlatMapCompletable<T>', 1), ('source1', 1), ('observerSingle()', 1), ('SequentialDisposableTest', 1), ('RefCountProcessor<Integer>(mp);\n', 1), ('ScanSeedObserver(Observer<?', 1), ('numberOfObservers)', 1), ('writeBehind(UserAccount', 1), ('holder.\n', 1), ("'throws'", 1), ('accountNoTo)', 1), ('throwable.printStackTrace();\n', 1), ('ConcatMapSingleMainObserver(Observer<?', 1), ('SingleError<T>(errorSupplier));\n', 1), ('Observable.just(1).forEachWhile(new', 1), ('Completable.concat(Arrays.asList(Completable.complete()\n', 1), ('HTTP_PROXY_DEFAULT),', 1), ('maybeDocRefersToMaybeTypes()', 1), ('isDefOptimized()', 1), ('BlockingFirstSubscriber<T>', 1), ('testTimePasses()', 1), ('this.rtn', 1), ('TestHelper.checkUtilityClass(BlockingFlowableMostRecent.class);\n', 1), ('checkUtilityClass(Class<?>', 1), ('establishes', 1), ('Turns', 1), ('certainly', 1), ('inetAddress.getAddress()))\n', 1), ('toppingBean.findOne(matchingToppings.iterator().next().getId());\n', 1), ('TimeoutFallbackObserver<T>(actual);\n', 1), ('testDefaultSingleSchedulerIsInitializedLazily()', 1), ('this.requestType', 1), ('2.\n', 1), ('testIsNotDirty()', 1), ('directoryOf(baseClassName);\n', 1), ('fileLoggerModule.printString(MESSAGE);\n\n', 1), ('event.toString();\n', 1), ('outbound', 1), ('delegate.certificates(environment);\n', 1), ('THREAD_INDEX', 1), ('tasks();\n\n', 1), ('((ParameterizedType)', 1), ('toFlowable().retryWhen(handler).singleElement();\n', 1), ('countFruit()', 1), ('returnValue;\n', 1), ('single().start();\n', 1), ('lifetime:', 1), ('testPluginErrorHandlerReceivesExceptionFromFailingUnsubscribeAfterCompletionThrows()', 1), ('PublisherVerification<T>', 1), ('this.mask', 1), ('observers.remove(obs);\n', 1), ('assertTrue(found.isPresent());\n', 1), ('StringArrayList[4];\n\n', 1), ('"hot"', 1), ('seen.get());\n', 1), ('SwitchMapDelayErrorTckTest', 1), ('simpleObjects.container', 1), ('a.iterator();\n', 1), ('customers.add(customerTwo);\n\n', 1), ('break\n', 1), ('#retry()\n', 1), ('FlowableOnBackpressureLatestTest', 1), ('c.cancel();\n', 1), ('Class},', 1), ('SingleTransformer<Integer,', 1), ('(HttpURLConnection)', 1), ('sequential()', 1), ('AbstractNioChannel#getInterestedOps()}\n', 1), ('RxJavaPlugins#setInitIoSchedulerHandler(io.reactivex.functions.Function)}', 1), ('serve.\n', 1), ('stopLatch;\n\n', 1), ('IDE)\n', 1), ('TestException()).subscribe(new', 1), ('javaSuperClass.isInterface()', 1), ('BallThread();\n', 1), ('org.junit.Assert.*;\n\n\n/**\n', 1), ('person.address', 1), ('rmo.start);\n\n', 1), ('list.containsAll(c);\n', 1), ('fulfillInAsync(final', 1), ('requestWrongFusion()', 1), ('subscribe(MaybeSource<?', 1), ('Stream<Part>', 1), ('construction.\n', 1), ('participate', 1), ('testNullLocation()', 1), ('Dispatcher}', 1), ('safety', 1), ('LoggerFactory.getLogger(LruCache.class);\n\n', 1), ('Disposables.fromAction(aa).dispose();\n\n', 1), ('testGetMovement(Creature', 1), ("name.indexOf('['));\n", 1), ('array(long', 1), ('(List<HtmlAnchor>)', 1), ('testFirst()', 1), ('"&lt;&lt;STANDARD&gt;&gt;";</pre>\n', 1), ('this.formats', 1), ('Normalizer(jobId,', 1), ('asyncDrain()', 1), ('LOGGER.info("heavy={}",', 1), ('ResumeMainSingleObserver(SingleObserver<?', 1), ('AsyncProcessor()', 1), ('mapErrorConditionalNoError()', 1), ('generator-like', 1), ('"exists', 1), ('Arrays.asList(1));\n', 1), ('zip5()', 1), ('withSingleDoubleOnSubscribe()', 1), ('java.sql.Statement;\n\npublic', 1), ('whitelist\n', 1), ('active.get();\n\n', 1), ('createBlankInstance()', 1), ('1181159426782844892L;\n\n', 1), ('ZipFile', 1), ('BlockingObservableIterator<T>', 1), ('(paramType.isAssignableFrom(Consumer.class))', 1), ('TestHelper.checkDisposed(Observable.just(1).doOnEach(new', 1), ('emptyPolicyFile', 1), ('FlowableAnySingle(Flowable<T>', 1), ('(ein', 1), ('SecureRandom();\n', 1), ('catastrophic', 1), ('hasNativeController()', 1), ('Functions.HashSetCallable.class.getMethod("valueOf",', 1), ('50).reduce(second).toFlowable();\n', 1), ('Supplier<Weapon>', 1), ('precedence', 1), ('up.hide()\n', 1), ('subprocess.start();\n', 1), ('"2")\n', 1), ('database,', 1), ('LazyFluentIterable<E>', 1), ('DataBus}\n', 1), ('result3', 1), ('org.elasticsearch.xpack.security.authc.saml;\n\nimport', 1), ('filterManager)', 1), ('com.example:ui-thread}).\n', 1), ('(PEMKeyConfig)', 1), ('inheritance,', 1), ('multiplyCap()', 1), ('findAllWizards()', 1), ('delaySubscription(Flowable.timer(delay,', 1), ('socket.receive(reply);\n', 1), ('assertNotNull(d));\n', 1), ('flatMapXRange(Blackhole', 1), ('merge(sources,', 1), ('errorConditionalBackpressured()', 1), ('this.attachments', 1), ('javaClassParameters[parameterCount', 1), ('regards', 1), ('otherFiles.add(Files.createFile(homeDir.resolve("otherFile"', 1), ('3451719290311127173L;\n', 1), ('CompletableError', 1), ('MergeInnerObserver();\n', 1), ('findPattern("MaybeSource<.*>\\\\s+cs");\n', 1), ('signals</strong>.\n', 1), ('parser.parse(event);\n', 1), ('CertificateInfo(path,', 1), ('com.google.inject.util.Providers;\n\nimport', 1), ('"-XX:+UseG1GC")),\n', 1), ('StreamOutput::writeString,', 1), ('cake.addLayer(layer);\n\n', 1), ('(baseIndex', 1), ('-8223395059921494546L;\n', 1), ('adidas', 1), ('fixtureScripts;\n', 1), ('fields()', 1), ('spellbookDao.merge(spellbook2);\n', 1), ('setName(final', 1), ('java.lang.Object.class.getName(),\n', 1), ('FloatType', 1), ('innerArray', 1), ('Puts', 1), ('TimeUnit.MILLISECONDS).blockingLast();\n', 1), ('leaked', 1), ('Integer.parseInt(end);\n', 1), ('statusMember.getStopped());\n', 1), ('java.awt.Desktop;\nimport', 1), ('ConcatMapMaybeMainObserver<?,', 1), ('org.elasticsearch.xpack.sql.plan.logical.command;\n\nimport', 1), ('(both\n', 1), ('f.requestFusion(QueueSubscription.ANY', 1), ('SimpleObjectCreate().setName(names.get(i));\n', 1), ('ObservableIntervalRangeTest', 1), ('loading\n', 1), ('UnsubscribeOnSingleObserver<T>(observer,', 1), ('this.trustStorePassword', 1), ('onNextNormal()', 1), ('SimpleFluentIterable(Iterable<E>', 1), ('FlowableFromIterable.subscribe(s,', 1), ('spellbookDao.merge(spellbook6);\n', 1), ('domainEvent)', 1), ('DocumentImplementation(Map<String,', 1), ('ids', 1), ('List<Oliphaunt>', 1), ('Maybe.fromRunnable(null);\n', 1), ('ArithmeticSumTask(1000));\n\n', 1), ('TestHelper.checkDisposed(Single.timer(1,', 1), ('ArrayListSupplier', 1), ('java.util.Map.Entry;\n\n/**\n', 1), ('handleDeposit(BigDecimal', 1), ('w.toSortedList();\n\n', 1), ('Visitor(final', 1), ('testDisplay(String', 1), ('io.reactivex.internal.subscribers.SinglePostCompleteSubscriber;\n\npublic', 1), ('HashMap<>();\n\n\n', 1), ('crashOnNext,\n', 1), ('org.apache.tika.parser.ParserDecorator;\nimport', 1), ('--\n', 1), ('videos.', 1), ('serverPort))', 1), ('CountDownLatch(2);\n\n', 1), ('thread-safe\n', 1), ('IllegalStateException\n', 1), ('completableThrows()', 1), ('shown', 1), ('properties.containsKey(stat);\n', 1), ('MaybeFromCompletable<T>(completableSource));\n', 1), ('QueueDrain<T,', 1), ('X-Compile-Elasticsearch-Version}', 1), ('javaClassLoader;\n\n', 1), ('DateTimeZone.UTC),', 1), ('dl.run();\n', 1), ('@Ignore("This', 1), ('request(t);\n', 1), ('AmbMaybeObserver<T>', 1), ('GeoIpCache(cacheSize);\n', 1), ('Runnable}\n', 1), ('completableSupplier)', 1), ('loads,', 1), ('presenter)', 1), ('whenUnsubscribingSecondUnderlyingUnsubscribed()', 1), ('nothing!");\n', 1), ('Predicate<Object>()', 1), ('failureHandlingEnum()', 1), ('Flowable.just(1).blockingSubscribe(ts);\n\n', 1), ('whitelistMethod.painlessParameterTypeNames.size();', 1), ('benefit', 1), ('"SAMLResponse";\n', 1), ('Single.just(++counter);\n', 1), ('checkManifest(manifest,', 1), ('ArrayList<>(whitelistConstructor.painlessParameterTypeNames.size());\n', 1), ('e.getDeclaredMethod("values");\n\n', 1), ('FlowableSampleTimed<T>', 1), ('ambIterableWithFirstFires()', 1), ('consistent\n', 1), ('com.maxmind.db.NodeCache;\nimport', 1), ('href="http://reactivex.io/documentation/operators/to.html">ReactiveX', 1), ('e).toAttribute();\n', 1), ('Flow),', 1), ('FlowableMergeWithSingle<T>', 1), ('assertEquals(V1.getWeightTons(),', 1), ('queue.offer(now,', 1), ('-1001730202384742097L;\n\n', 1), ('struct.hashCode();\n', 1), ('pendingWrites);\n', 1), ('times(4)).onNext(anyString());\n', 1), ('ADDITIONAL_META_DATA_SETTING', 1), ('src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.doOnSuccess.2.png"', 1), ('ObservableConcatMapSingleTest', 1), ('intercommunicating', 1), ('c.onNext(null);\n\n', 1), ('execute,', 1), ('org.junit.Assert.assertFalse;\n\npublic', 1), ('expectedDamage\n', 1), ('readText', 1), ('projection,', 1), ('dtoEntities.forEach(System.out::println);\n\n', 1), ('CompositeException(current,', 1), ('tickets");\n', 1), ('getAllAddresses()', 1), ('pipe', 1), ('File(dataFileName))))', 1), ('concatMap(mapper,', 1), ('bakingService', 1), ('outputStream);\n', 1), ('day\n', 1), ('ParallelFilterSubscriber(Subscriber<?', 1), ('".";\n', 1), ('swarm");\n', 1), ('.filter(n', 1), ('ArrayList<>(version.subList(1,', 1), ('non-terminal', 1), ('weightTons)', 1), ('MediaType.application("vnd.ms-visio.template.macroenabled.12"),\n', 1), ('ticket4', 1), ('Local', 1), ('"ls";\n\n', 1), ('org.apache.isis.applib.annotation.ViewModel;\n\nimport', 1), ('"d")));\n\n', 1), ('"1";\n', 1), ('though)', 1), ('Thus,', 1), ('tryEmitScalar(Callable<?', 1), ('withObservableDispose()', 1), ('properties.get(stat);\n', 1), ('entityManager.setJpaProperties(jpaProperties());\n\n', 1), ('IllegalStateException("Was', 1), ('"null', 1), ('(Permission', 1), ('FlowableError(Callable<?', 1), ('fixed:', 1), ("s.substring(s.lastIndexOf(':'),", 1), ('startThread();\n', 1), ('ObservableSkipLastTimed(ObservableSource<T>', 1), ('Constructor}s,', 1), ('super(ObjectHelper.requireNonNull(value,', 1), ('ObservableSingleMaybe<T>', 1), ('f.getAbsolutePath();\n', 1), ('undoStack.offerLast(previousSpell);\n', 1), ('emitter.setCancellable(c);\n', 1), ('DataBus();\n\n', 1), ('LotteryConstants.SERVICE_BANK_ACCOUNT_SALDO);\n', 1), ('ACCOUNT_OF_DAENERYS', 1), ('").append(name).append(\'\\n\');\n', 1), ('Longs(new', 1), ('resource.getDetails(1);\n\n', 1), ('.append(prefix).append("Java', 1), ('DoFinallyObserver(CompletableObserver', 1), ('ReduceObserver(MaybeObserver<?', 1), ('Consumer<TestObserver<Integer>>()', 1), ('System.out.println(fail);\n\n', 1), ('dragonSlayer.goToBattle();\n\n', 1), ('overridden\n', 1), ('StandardOpenOption.READ,', 1), ('AbstractDynamoDbHandler()', 1), ('CompletableFromAction(Action', 1), ('this.loader', 1), ('io.reactivex.disposables.*;\n\n/**\n', 1), ('innerSuccessCompletesAfterMain()', 1), ('kvPair', 1), ('transmitted\n', 1), ('delayIndicator\n', 1), ('ObservableSource[count', 1), ('(inner.index', 1), ('jtFields)', 1), ('(eventType.equalsIgnoreCase("S"))', 1), ('(!closed)', 1), ('LEMON:\n', 1), ('allowInterrupt;\n\n', 1), ('byName', 1), ('executor.execute(worker);\n', 1), ('subject1()', 1), ('SOCKS_PROXY_DEFAULT),', 1), ('workers,\n', 1), ('com.iluwatar.reader.writer.lock.utils;\n\nimport', 1), ('manages.\n', 1), ('allowInterrupt;\n', 1), ('AsyncCallback\n', 1), ('Schedulers.NewThreadHolder());\n\n', 1), ('doOnError(@NonNull', 1), ('rightExpression', 1), ('(Stats', 1), ('LoggerFactory.getLogger(Worker.class);\n\n', 1), ('Objects.requireNonNull(javaClassName);\n', 1), ('view.displayData(data);\n', 1), ('UserGroup', 1), ('org.elasticsearch.xpack.security.authc.support.UserRoleMapper;\n\n/**\n', 1), ('"composer', 1), ('io.reactivex.observers;\n', 1), ('8943152917179642732L;\n\n', 1), ('(MalformedURLException', 1), ('either\n', 1), ('(hasNativeControllerValue', 1), ('com.iluwatar.servicelayer.spell;\n\nimport', 1), ('sit;\n', 1), ('checkFlowableBackpressure()', 1), ('ambIterableWithSecondFires()', 1), ('LotteryNumbers}\n', 1), ('ids.stream()\n', 1), ('frequently', 1), ('"+24626"));\n', 1), ('InternalNumericMetricsAggregation.MultiValue', 1), ('setSender(SocketAddress', 1), ('inserted', 1), ('<i>PARTICIPANTS</i>', 1), ('typeMustBeNumeric(Expression', 1), ('principle', 1), ('(!p.tillTheEnd)', 1), ('8).equals("CompletableObserver"))', 1), ('Tuple<>(tuple.v1(),', 1), ('assertNull(RxJavaPlugins.onSubscribe(Maybe.never(),', 1), ('to.assertValue(0);\n', 1), ('scheduleDirect(final', 1), ('KingsHand', 1), ('lvElement(offset);//', 1), ('o);\n\n', 1), ('toException;\n\n', 1), ('File(classLoader.getResource(filename).getFile());\n\n', 1), ('builder.fileMode(Reader.FileMode.MEMORY);\n', 1), ('holderThreadSafe.getHeavy();\n', 1), ('CRUNCHED_NUMBER', 1), ('trim(long', 1), ('pp.switchMapMaybe(new', 1), ('add(Permission', 1), ('cache;\n\n', 1), ('tryAcquireSlot()', 1), ('Config{"', 1), ('filterConditionalNoError()', 1), ('t.get();\n', 1), ('cake.getTopping().getName(),', 1), ('.onErrorReturnItem(1)\n', 1), ('X-Compile-Target-JDK}', 1), ('base:', 1), ('o.toSortedList().blockingGet());\n', 1), ('runInteractiveMode();\n', 1), ('readerLock', 1), ('TestHelper.checkDisposed(PublishProcessor.create().elementAt(0));\n', 1), ('createNullValueSerialized()', 1), ('eventId;\n', 1), ('this.flushAcknowledgement', 1), ('trustStore', 1), ('HttpsURLConnection', 1), ('cancelledAndRun()', 1), ('logo', 1), ('JdbcConnection(cfg);\n', 1), ('testCollision(final', 1), ('readObject)', 1), ('calculateTotalCalories());\n', 1), ('merge1SyncStreamOfN(final', 1), ('Objects.requireNonNull(painlessReturnTypeName);\n', 1), ('execution,', 1), ('this.dynamoDbMapper;\n', 1), ('oranges++;\n', 1), ('safe,', 1), ('getSpell()', 1), ('layer\n', 1), ('org.mockito.Mockito.*;\n\npublic', 1), ('jvm.options', 1), ('ie.printStackTrace();\n', 1), ('11', 1), ('java.net.HttpURLConnection;\nimport', 1), ('lowestFrequencyChar()\n', 1), ('onErrorCancelRace()', 1), ('LotteryNumbersTest', 1), ('difficult\n', 1), ('KingsHand},', 1), ('info.toString(prefix));\n', 1), ('SubscribeTask(SubscribeOnObserver<T>', 1), ('ParallelPeekSubscriber<T>(subscribers[i],', 1), ('ConsoleLottery', 1), ('StandardOpenOption.WRITE,', 1), ('add(@NonNull', 1), ('hashing', 1), ('int)}.\n', 1), ('ConverterTest', 1), ('Troll(),\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.from.Future.s.png"', 1), ('content);\n', 1), ('accountTo);\n', 1), ('scan(Class<?>', 1), ('SortedMap<Integer,', 1), ('close(OperatorWindowBoundaryCloseSubscriber<T,', 1), ('LoggerFactory.getLogger(ReaderTest.class);\n\n', 1), ('testUnModifiableHeaders()', 1), ('(completionValueSupplier', 1), ('seconds)', 1), ('joiner.add(iterator.next().toString());\n', 1), ('Single.never().timeout(100,', 1), ('SimpleFileWriter("testfile.txt",', 1), ('tenantCallsCount.putIfAbsent(tenantName,', 1), ('keyPath.hashCode()', 1), ('ObservableIntervalRange(long', 1), ('assertNotNull(document.toString().contains(KEY));\n', 1), ('com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBDocument;\n\nimport', 1), ('this.error;\n\n', 1), ('fishV2.getAge(),', 1), ('System.out.println("Running', 1), ('(scheduler)', 1), ('KeySetView\n\n', 1), ('Spell("Water', 1), ('SpellStep\n', 1), ('publicKeyBytes;\n', 1), ('Observable.empty().blockingLatest().iterator().next();\n', 1), ('TakeSubscriber<T>', 1), ('among', 1), ('CacheDisposable[0];\n\n', 1), ('SPSC', 1), ('(continueNextSource)', 1), ('jAugmentedClass', 1), ('source.subscribe(os);\n', 1), ('HashMap<>(cluster);\n', 1), ('g.put(Integer.valueOf(10)));\n', 1), ('java.security.InvalidParameterException;\n\nimport', 1), ('add(Object', 1), ('m.backpressureDocumentation', 1), ('prettyPrint("A', 1), ('child.onError(t);\n', 1), ('FIELD,', 1), ('getShutdownWorkers()', 1), ('closeResource(Resource', 1), ('ArrayCompositeSubscription', 1), ('testInterpret(NumberExpression', 1), ('java.io.StringReader;\nimport', 1), ('mine', 1), ('super.init();\n\n', 1), ('trick', 1), ('Monday\\n"', 1), ('assertEquals("Slingshot",', 1), ('resultExpression.interpret());\n', 1), ('-8.0f);\n', 1), ('8);\n\n', 1), ('Math.max(Runtime.getRuntime().availableProcessors()', 1), ('channel.write(replyPacket,', 1), ('unsubscribe(final', 1), ('assertTrue(JavaVersion.isValid(version));\n', 1), ('annotation.', 1), ('here...\n', 1), ('.concatWith(Completable.complete())\n', 1), ('count(id)', 1), ('Thread}', 1), ('predefined', 1), ('ESPolicy\n', 1), ('CompletableSubject();\n', 1), ('<p>Named', 1), ('(PURGE_THREAD.compareAndSet(curr,', 1), ('TakeWhileObserver<T>', 1), ('actionCaptor', 1), ('disposerThrowsEager()', 1), ('HttpGet("http://localhost:51515/information");\n', 1), ('testOnNextAfterOnError()', 1), ('<code>AsyncResult</code>', 1), ('SecurityFiles.writeFileAtomically(path,', 1), ('resolutions)', 1), ('");\n\n', 1), ('con.getOutputStream())', 1), ('(other.numbers', 1), ('level2', 1), ('(!executor.isTerminated())', 1), ('namedXContentRegistry));\n', 1), ('CertificateInfo(trustStorePath,', 1), ('actualPermissions', 1), ('found")),\n', 1), ('initData()', 1), ('Files.newInputStream(descriptor))', 1), ('flowableDocRefersToFlowableTypes()', 1), ('.subscribe(o);\n\n', 1), ('ObservableToFlowabeTestSync()', 1), ('availableLayers)', 1), ('"Melody");\n', 1), ('findPattern("Observable<.*>\\\\s+c\\\\b");\n', 1), ('authorsCount);\n', 1), ('org.elasticsearch.search.aggregations.metrics.InternalNumericMetricsAggregation;\n\nimport', 1), ('namedXContentRegistry)', 1), ('ObservableDistinctTest', 1), ('maxConcurrencyOne()', 1), ('NextIterator(Publisher<?', 1), ('PotionFactory()', 1), ('findNextIdx();\n', 1), ('<M>', 1), ('eager,\n', 1), ('testQuery()', 1), ('Observable.fromArray(array).flatMap(new', 1), ('-TimeUnit.SECONDS.toNanos(1)', 1), ('listener.onResponse(roleDescriptors);\n', 1), ('awaitingFlushed', 1), ('(Object[])null);\n', 1), ('Debug.explain', 1), ('#mergeArrayDelayError(MaybeSource...)}', 1), ('covariant/generic', 1), ('FunctionRegistry', 1), ('https://issues.apache.org/jira/browse/XMLBEANS-499\n', 1), ('BCrypt', 1), ('TakeWhileSubscriber<T>', 1), ('asynchronously.', 1), ('t.onSubscribe(parent);\n', 1), ('member\n', 1), ('innerIsDisposed()', 1), ('iterate(elements', 1), ('app.useReadAndWriteThroughStrategy();\n', 1), ('assertTrue(Thread.currentThread().getName().startsWith("RxCachedThreadScheduler"));\n', 1), ('java.util.concurrent.BlockingQueue;\n\n/**\n', 1), ('BorderLayout.EAST);\n', 1), ('3)\n//', 1), ('ESPolicy:', 1), ('8));', 1), ('AtomicReference<AsyncSubscription<T>[]>', 1), ('architectures', 1), ('readFile(file);\n\n', 1), ('MaybeIgnoreElementCompletable(MaybeSource<T>', 1), ('terminal.println(Verbosity.VERBOSE,', 1), ("Class}'s", 1), ('c0', 1), ('onDrop(R', 1), ('when(task.call()).thenReturn(result);\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.observeOn.png"', 1), ('BackpressureHelper.addCap(r,', 1), ('Maybe.concatArray(source,', 1), ('functionVersion=\'"', 1), ('modifiedStudents', 1), ('unbounded;\n\n', 1), ('java-doc-index-doc-simple\n\n', 1), ('Thread.sleep(task.getTimeMs());\n', 1), ('RxThreadFactory("TestCustomPoolTimed"));\n', 1), ('currentlyRunningSyncEvent;\n', 1), ('this.headers,', 1), ('CacheDisposable<T>\n', 1), ('coordinator', 1), ('inquire', 1), ('Guarded-suspension', 1), ('Servant\n', 1), ('e).name()', 1), ('ArithmeticSumTask(1));\n', 1), ('actualDetails', 1), ('testNormalize()', 1), ('WARRIOR,', 1), ('SingleDoOnDispose<T>', 1), ('struct)', 1), ('URLRepository(metadata,', 1), ('ConnectableFlowable>', 1), ('testNoPeriodicTimedTaskPartRetention()', 1), ('accessDeclaredMembers', 1), ('Flowable.just(\n', 1), ('Callable<Publisher<Movie>>()', 1), ('Flowable<Object>()', 1), ('PLAYERS.get(idx);\n', 1), ('NazgulEnum.UVATHA);\n', 1), ('Single<Boolean>\nimplements', 1), ('charProto.set(Stats.AGILITY,', 1), ('a.getType().equals(ActionType.CONTENT_CHANGED))\n', 1), ('4"));\n', 1), ('apiGatewayProxyRequestEvent()', 1), ('invoker', 1), ('0.75f,', 1), ('Function<JreHttpUrlConnection,', 1), ('eventTime)\n', 1), ('expectedToString)', 1), ('qs.length;\n', 1), ('times(1)).onEvent(eq(event));\n', 1), ('verify(queue).put(any(Item.class));\n\n', 1), ('command.add("../pid");\n', 1), ('copyStruct(String', 1), ('capPoolSize()', 1), ('org.elasticsearch.xpack.sql.tree.Location;\n\nimport', 1), ('12:19', 1), ('service.findWizardsWithSpell("Fireball");\n', 1), ('.onErrorResumeNext(Single.error(new', 1), ('User(userDto.getFirstName(),', 1), ('MoneyTransferEvent', 1), ('times(2)).call();\n', 1), ('com.iluwatar.fluentinterface.fluentiterable.FluentIterable;\nimport', 1), ('get(Future<O>', 1), ('propsMap.remove("name");\n', 1), ('observable2observer', 1), ('initialCollection;\n', 1), ('resourceDisposedIfMapperCrashesNonEager()', 1), ('assertEquals(initialLayers,', 1), ('cert;\n', 1), ('producer.get().request(1);\n//\n//', 1), ('"Rita");\n', 1), ('parallelism();\n', 1), ('SpscLinkedArrayQueue<T>(batchSize);\n', 1), ('RxJavaPlugins.setInitIoSchedulerHandler(initReplaceWithImmediate);\n', 1), ('Single.just(3)\n', 1), ('task.setRest(f1);\n', 1), ('false}.\n', 1), ('testCollectorFailureDoesNotResultInErrorAndCompletedEmissionsObservable()', 1), ('usernameInputTextField.setText(username);\n', 1), ('serialDisposable.get());\n\n', 1), ('dates.getValue());\n\n', 1), ('assertFalse(b.get());\n', 1), ('WindowOperation(UnicastProcessor<T>', 1), ('org.elasticsearch.index.translog;\n\nimport', 1), ('Tickets', 1), ('StringBuilder().append("{");\n\n', 1), ('present;', 1), ('Schedulers.computation());\n\n', 1), ('called.*/\n', 1), ('title:', 1), ('hooking', 1), ('*/\n\n\n/*\n', 1), ('click\n', 1), ('onePointSevenPointOne', 1), ('(count.compareAndSet(state,', 1), ('GetAliasesRequest()\n', 1), ('switch(attribute)', 1), ('cachingPolicy;\n\n', 1), ('dao.getById(existingCustomer.getId());\n', 1), ('clears', 1), ('SingleDelayWithObservable(SingleSource<T>', 1), ('MaybeDelayOtherPublisher<T,', 1), ('Nazgul}s', 1), ('testAggregateAsIntSumResultSelectorThrows()', 1), ('(int)elements).onBackpressureBuffer()\n', 1), ('this")\n', 1), ('97,', 1), ('collections', 1), ('"Riobard").withHairColor(HairColor.BLACK)\n', 1), ('SequentialDispose(mar,', 1), ('verify(observer).onNext(false);\n', 1), ('userDto.lastName)', 1), ('CollectionUtils', 1), ('END\n}\n', 1), ('holder.flushAcknowledgement', 1), ('rejectObservableFusion()', 1), ('assertEquals(V2.getName(),', 1), ('ToFlowableIterator<T>', 1), ('FlowableLimit<T>', 1), ('.startWith(Observable.fromIterable(li))\n', 1), ('updatingACustomerFailsWithFeedbackToTheClient()', 1), ('LOGGER.info("More', 1), ('ExpressionTest<MultiplyExpression>', 1), ('Modifier.FINAL))', 1), ('looping', 1), ('adequate', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/SingleSubject.png"', 1), ('builder.append(getClass().getName()).append("[");\n', 1), ('assertFalse(list.contains(1));\n', 1), ('last4.get(3));\n', 1), ('ts.assertFailure(InterruptedException.class);\n', 1), ('FlowableSingleSingle<T>(source,', 1), ('Munoa");\n', 1), ('(key.isWritable())', 1), ('1000).doOnNext(new', 1), ('TaskTest(final', 1), ('rethrowing', 1), ('writing.', 1), ('.20\n', 1), ('deleting', 1), ('inetAddress)', 1), ('ExceptionType', 1), ('list.contains(o);\n', 1), ('r1.run();\n', 1), ('failingInnerCancelsSource()', 1), ('scripting', 1), ('zip(final', 1), ('Servant("Travis");\n\n', 1), ('delegate.hashCode();\n', 1), ('Functions.EMPTY_RUNNABLE,', 1), ('(p.error.addThrowable(e))', 1), ('newline,\n', 1), ('runOn()}', 1), ('getAndNullValue()', 1), ('function5Fail()', 1), ('endOfWashing()', 1), ("'def',", 1), ('ObservableDelay(ObservableSource<T>', 1), ('headers,\n', 1), ('HashMap<>(actionsCount);\n', 1), ('this.jobs', 1), ('countDownRunnable', 1), ('1080);\n', 1), ('CakeLayerInfo(layer.getId(),', 1), ('"Joshua', 1), ('TreasureChestItemIterator\n', 1), ('org.elasticsearch.rest.RestStatus;\n\nimport', 1), ('hook.\n', 1), ('ObservableAutoConnect<T>(this,', 1), ('(int)elements).observeOn(Schedulers.single())\n', 1), ('reactorMain.awaitTermination(4,', 1), ('onSchedule(Schedulers.computation().createWorker());\n', 1), ('io.reactivex.observers.DisposableMaybeObserver;\nimport', 1), ('testElementAtWithMinusIndexFlowable()', 1), ('peek()', 1), ('MoneyTransferEvent)', 1), ('last.get());\n', 1), ('ClearScreenCliCommand', 1), ('max]\n', 1), ('single,', 1), ('basicDataSource', 1), ('findAllSpellbooks()', 1), ('Character.class)', 1), ('RxJavaPlugins.createComputationScheduler(factory);\n', 1), ('ArrayObjectIterator', 1), ('m.doAfterTerminate(afterTerminate);\n', 1), ('.doOnNext(Functions.emptyConsumer()));\n', 1), ('soNext(LinkedQueueNode<E>', 1), ('MySubscriber<Integer>(0);\n', 1), ('License.VERSION_CRYPTO_ALGORITHMS;\n', 1), ('in.readMap(StreamInput::readString,', 1), ('promise.onError(exceptionHandler);\n', 1), ('assertEquals(firstOliphaunt.getId()', 1), ('MaybeObserver<Object>,', 1), ('valuable', 1), ('out.writeBoolean(hasNativeController);\n', 1), ('source.subscribe(tus);\n', 1), ('this.constructor', 1), ('LoggerFactory.getLogger(StudentRepository.class);\n\n', 1), ('isDisposed(Disposable', 1), ('decoratedRun;\n\n', 1), ('SpellbookDaoImpl(),', 1), ('#count()\n', 1), ('SqlExceptionType.fromRemoteFailureType(failure.type());\n', 1), ('@DynamoDBAutoGeneratedKey\n', 1), ('onNext(1))");\n', 1), ('StackOverflowError', 1), ('CrashingIterable(int', 1), ('properties.get("enhancedWelcome");\n', 1), ('.append(total)\n', 1), ('FlowableConcatMapMaybe(Flowable<T>', 1), ('Repository.Factory>', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/amb.png"', 1), ('throwable;\n\n', 1), ('com.mongodb.client.model.UpdateOptions;\nimport', 1), ('org.elasticsearch.common.xcontent.XContentParser;\nimport', 1), ('scalarCallable()', 1), ('UserDto("John",', 1), ('assertEquals(accountOfDaenerysBeforeShotDown.getMoney(),\n', 1), ('this.setVisible(true);\n', 1), ('PURGE_PERIOD_SECONDS_KEY', 1), ('RunnableDisposable(Runnable', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.flatMapCompletable.png"', 1), ('com.iluwatar.servicelayer.spellbook.SpellbookDaoImpl;\nimport', 1), ('.assertFailure(MissingBackpressureException.class,', 1), ('doGetConnection(Properties', 1), ('org.elasticsearch.xpack.core.security.authc.support.BCrypt;\n\nimport', 1), ('nullValue()', 1), ('conditionalCancelAfterRequest1()', 1), ('itemType);\n', 1), ('writer2', 1), ('props;\n\n', 1), ('hasNativeController)', 1), ('matcher.group("end");\n', 1), ('Disposable>()', 1), ('DriverManager', 1), ('1000000', 1), ('invalidLineConsumer', 1), ('takeAll()', 1), ('Troll(),', 1), ('NullPointerException(message);\n', 1), ('ConsoleLoggerModule.getSingleton().prepare();\n', 1), ('346773832286157679L;\n\n', 1), ('withSingleDispose()', 1), ('struct.methods.entrySet())', 1), ('MaxNumOfEventsAllowedException("Too', 1), ('Logger.getLogger(App.class);\n\n', 1), ('java.util.Properties;\n\n/**', 1), ('6725975399620862591L;\n', 1), ('fieldJsonMapper.toJson(videos.get(id),', 1), ('asyncFlatten()', 1), ('EmptyCompletableObserver', 1), ('UnitTest<U', 1), ('f2);\n', 1), ('AsyncTask<T>', 1), ('rangeFlatMapJust;\n\n', 1), ('com.iluwatar.state;\n\nimport', 1), ('Functions.predicateReverseFor(stop));\n', 1), ('phone,\n', 1), ('JButton("Cancel");\n', 1), ('apply(MaybeObserver&lt;?', 1), ('me\n', 1), ('java-doc-index-doc-simple\n', 1), ('assertThrows(AssertionError.class,', 1), ('commanderResponse,\n', 1), ('Maybe.<Integer>never())\n', 1), ('ps.onError(ex0);\n', 1), ('assertNull(result[1]);\n', 1), ('entities:");\n', 1), ('usefulness', 1), ('testGetRight()', 1), ('expectedToString;\n', 1), ('painlessSuperStructs', 1), ('TEST_PART_TYPE);\n', 1), ('SocketPermission("localhost:"', 1), ('"000-346",', 1), ('"bar".getBytes(StandardCharsets.UTF_8));\n\n', 1), ('missingBackpressure()', 1), ('mageProto.set(Stats.INTELLECT,', 1), ('getType("byte");\n', 1), ('manner\n', 1), ('settingUnderlyingWhenUnsubscribedCausesImmediateUnsubscriptionConcurrently()\n', 1), ('mapErrorNoError()', 1), ('resolution},', 1), ('identical.");\n', 1), ('rxThreadsAfter', 1), ('Single.zip(Single.error(new', 1), ('ObservableFromTest', 1), ('list2.add(7);\n', 1), ('noSpell();\n', 1), ('pool.checkIn(oliphaunt);\n', 1), ('emit(Processor<T,', 1), ('ObservableWindowBoundarySelector<T,', 1), ('appClient', 1), ('child.onNext(value);\n', 1), ('Definition(Whitelist.BASE_WHITELISTS);\n\n', 1), ('-7789753024099756196L;\n\n', 1), ('Files.isReadable(normalizedPath)', 1), ('(int)(n', 1), ('instance)', 1), ('AssertionError(cause);\n', 1), ('ObservableTimeoutTimed<T>', 1), ('ObservableMergeWithMaybe<T>', 1), ('(bound.getAddress()', 1), ('addRemoveRace()', 1), ('System.out.print(clazz.getSimpleName());\n', 1), ('\\"name\\",', 1), ('updated,', 1), ('initialized.', 1), ('onCompleteCall;\n', 1), ('pane.setBounds(150,', 1), ('JavaVersion.majorVersion(JavaVersion.CURRENT),\n', 1), ('non-static\n', 1), ('ObjectHelper.requireNonNull(completableFunction.apply(resource),', 1), ('List<Function<IndexMetaData,', 1), ('java.util.Collections.singletonList;\nimport', 1), ('in.supportsFileAttributeView(name);\n', 1), ('org.elasticsearch.action.admin.indices.get.GetIndexResponse;\nimport', 1), ('LOGGER.error("ERROR:', 1), ('delay(Publisher<U>', 1), ('testAddCap()', 1), ('verifyNoMoreInteractions(task);\n\n', 1), ('Wizard("Aderlard', 1), ('lambdas,', 1), ('doesWriterOwnThisLock()', 1), ('FlowableTimestampTest', 1), ('Maybe.<Integer>empty().subscribe(rmo);\n\n', 1), ('QueueDrainHelper.createQueue(-prefetch);\n', 1), ('__randomizedtesting.SeedInfo.seed([65E6C4BED11899E:FC6E1CA6AA2DB634]:0)\n', 1), ('List<MlFilter>', 1), ('testAggregateAsIntSumObservable()', 1), ('out.writeString(name);\n', 1), ('biFunction', 1), ('ParallelReduceFull(ParallelFlowable<?', 1), ('had', 1), ('#compose(SingleTransformer)\n', 1), ('"roleB";\n\n', 1), ('("5".equals(cmd))', 1), ('io.reactivex.Maybe', 1), ('java.util.Queue;\n\n/**\n', 1), ('*NOT*', 1), ('ExecutionException}\n', 1), ('res;\n\n', 1), ('TimeUnit.MINUTES,', 1), ('cb', 1), ('t2.join();\n', 1), ('newConcurrentSet()', 1), ('Tenants\n', 1), ('Struct(this,', 1), ('all)', 1), ('b.substring(schhedulerSpec', 1), ('blockingSubscribeConsumerConsumer()', 1), ('<K>', 1), ('AmbInnerObserver(AmbCoordinator<T>', 1), ('FlowableAmb<T>', 1), ('p.times', 1), ('202;\n', 1), ('empty")\n', 1), ('ObservableThrottleFirstTimed(ObservableSource<T>', 1), ('restricted', 1), ('ballThread.suspendMe();\n', 1), ('Their', 1), ('SubscribeTask', 1), ('numbers.hashCode());\n', 1), ('iterator);\n', 1), ('LOGSTASH_TEMPLATE_NAME,\n', 1), ('JdbcDriver', 1), ('TestException("iterator()");\n', 1), ('this.method.steal();\n\n', 1), ('readable,', 1), ('DateTimeFormatter}\n', 1), ('Matcher<?', 1), ('convenient', 1), ('parameterName;\n', 1), ('service2.getWelcomeMessage(freeUser);\n', 1), ('slowPath(a,', 1), ('noAbilities()', 1), ('PropertiesFeatureToggleVersion(turnedOff);\n', 1), ('emptyConditional()', 1), ('gateways,', 1), ('license,', 1), ('declarations.size();\n', 1), ('fileNameChanged()', 1), ('isEqual));\n', 1), ('Its', 1), ('Experimental', 1), ('private.\n', 1), ('CakeDao\n', 1), ('valueSupplier));\n', 1), ('createAsync(int', 1), ('-2108443387387077490L;\n\n', 1), ('parent.otherError(t);\n', 1), ('age,', 1), ('Dirty-Flag', 1), ('ready";\n', 1), ('org.elasticsearch.example.role.CustomInMemoryRolesProvider;\nimport', 1), ('.getTopping().getCalories());\n', 1), ('consisting', 1), ('TakeLastTimedSubscriber<T>(s,', 1), ('getAddressLineTwo()', 1), ('URISyntaxException,', 1), ('io.reactivex.SingleTransformer;\nimport', 1), ('Workaround', 1), ('PEMKeyConfig(String', 1), ('m.getParameterTypes()[0];\n\n', 1), ('MaybeCreate<T>', 1), ('depositMoney(BigDecimal', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.subscribeOn.png"', 1), ('mediates', 1), ('emitter.onComplete();\n', 1), ('DONE))', 1), ('RxJavaPlugins#setIoSchedulerHandler(io.reactivex.functions.Function)}', 1), ('successDisposeRace()', 1), ('strategy/policy', 1), ('TestException()).doOnError(new', 1), ('LOGGER.info(welcomeMessage);\n\n', 1), ('millis\n', 1), ('DbCustomerDao\n', 1), ('(zipCode', 1), ('pendingCommands.add(new', 1), ('hacky)', 1), ('SingleCache<T>(this));\n', 1), ('augmentation,', 1), ('(DisposableHelper.setOnce(subscription,', 1), ('TimeOutObserver(CompositeDisposable', 1), ('layer.getName(),', 1), ('FlowableGenerate(Callable<S>', 1), ('checkManifest(Manifest', 1), ('org.elasticsearch.xpack.core.ml.job.config.DataDescription;\nimport', 1), ('formatPermission(Permission', 1), ('assertTrue(repository.getTicketsCollection().count()', 1), ('hand', 1), ('DEFAULT_ACCOUNTS_COLLECTION', 1), ('BooleanRunnable(decoratedRun);\n\n', 1), ('4).toObservable()\n', 1), ('ObjectClassTodefClass(type.clazz);\n', 1), ('NewThreadWorker(threadFactory);\n', 1), ('assertEquals(V2.getWeightTons(),', 1), ('OnBackpressureBufferStrategySubscriber<T>\n', 1), ('io().start();\n', 1), ('java.lang.Object}</li>\n', 1), ('password.toString());\n', 1), ('EmptyTckTest', 1), ('set!)");\n', 1), ('height="281"', 1), ('BlockingObservableMostRecent<T>', 1), ('Exception>', 1), ('handleEvent((StartingData)', 1), ('LOGGER.info(welcomeMessageFreeUser);\n', 1), ('confirmPolicyExceptions(Terminal', 1), ('checkDoubleOnSubscribeObservableToSingle(Function<Observable<T>,', 1), ('completable;\n', 1), ('<b>Event-based', 1), ('T>>();\n\n', 1), ('DListener', 1), ('SubscribeTask<T>(parent,', 1), ('option,', 1), ('FlowableSwitchMapMaybe<T,', 1), ('resourceName)', 1), ('events/threads', 1), ('testCallException()', 1), ('QueueDisposable#NONE}.\n', 1), ('SingleSubject()', 1), ('AmazonDynamoDB', 1), ('simpleObjects;\n', 1), ('bcrypt)', 1), ('super.readFrom(in);\n', 1), ('Driven', 1), ('ThreadPool', 1), ('consoleLoggerModule.printString("Message");\n', 1), ('ObservableFlatMapCompletablePerf', 1), ('Flowable.just(1).map(new', 1), ('VolatileSizeArrayList()', 1), ('LdapMetaDataResolver(Collection<String>', 1), ('Whereas', 1), ('ObservableEventStream()', 1), ('onCompleteDelayed()', 1), ('FallbackObserver(Observer<?', 1), ('TestSingle<Integer>();\n', 1), ('stdout.readLine())', 1), ('Optional<List<Map<String,', 1), ('nullable(List<?', 1), ('(cfg.sslConfig().isEnabled())', 1), ('ObservableDoOnEachTest', 1), ('SERIAL(SerialException::new),\n', 1), ('nativeRoleMappingStore);\n', 1), ('processButton.addActionListener(e', 1), ('times(1)).load(Person.class,', 1), ('MockSecureSettings(this);\n', 1), ('org.hamcrest.Matchers.is;\nimport', 1), ('writingTime)', 1), ('Flowable.intervalRange(Long.MIN_VALUE,', 1), ('abilities"', 1), ('setProperties(Properties', 1), ('getPendingAudio()[i].setVolume(Math.max(volume,', 1), ("'MESSAGE'", 1), ('holderThreadSafe', 1), ('invocations:', 1), ('load.\n', 1), ('assertEquals("Weak', 1), ('JButton("Process");\n\n', 1), ('BASE_WHITELIST_FILES', 1), ('from()}', 1), ('filterNoError()', 1), ('socket.getInputStream());\n', 1), ('(whitelistStruct.onlyFQNJavaClassName)', 1), ('sideEffectObserver', 1), ('producerNode.value', 1), ('app";\n', 1), ('MonoState', 1), ('basicSerialized()', 1), ('bodies', 1), ('com.iluwatar.twin;\n\n/**\n', 1), ('java.lang.Throwable}\n', 1), ('AssertionError(ex.toString());\n', 1), ('Flowable.just("one");\n', 1), ('assertFalse(s.isDisposed());\n', 1), ('ReduceSubscriber(Subscriber<?', 1), ('FlowableMapNotification<T,', 1), ('assertTrue(DisposableHelper.trySet(ref,', 1), ('getIndexPrivileges()', 1), ('CachingPolicy.THROUGH");\n', 1), ('doorProperties.put(HasType.PROPERTY,', 1), ('MaybeCreateTest', 1), ('notifications.', 1), ('CallsCount.addTenant(name);\n', 1), ('value.set(Thread.currentThread());\n', 1), ('fillShelves();\n', 1), ('assertTrue(topping.calories', 1), ('maybe2observer', 1), ('javax.net.ssl.HttpsURLConnection;\nimport', 1), ('logstash', 1), ('MuteTest', 1), ('onError(Consumer<?', 1), ('TcpLoggingClient(String', 1), ('jtAreas[i]', 1), ('testSuccessfulTaskWithoutCallback()', 1), ('stopped));\n', 1), ('numInstances;\n\n', 1), ('RxJavaPlugins.setOnMaybeAssembly(new', 1), ('Fatal', 1), ('performLottery()', 1), ('SpscArrayQueue<CompletableSource>(prefetch);\n', 1), ('jvmOption);\n', 1), ('verifyNoMoreInteractions(underlying);\n', 1), ('com.iluwatar.specification.creature;\n\nimport', 1), ('encountered\n', 1), ('ArrayList<RxMethod>();\n\n', 1), ('false,\n', 1), ('sources,\n', 1), ('suppressAccessChecks}.', 1), ('testAggregateAsIntSumSourceThrows()', 1), ('eventManager.status(sEventId);\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/contains.png"', 1), ('ObservableAllSingle(ObservableSource<T>', 1), ('OBSERVER_ONNEXT_FAIL(final', 1), ('(props', 1), ('Fiducia', 1), ('SpiExtensionPlugin', 1), ('verifyLicense(license,', 1), ('consoleLoggerModule.printErrorString("Error");\n', 1), ('getRepositories(Environment', 1), ('findPattern("PublishSubject<.*>\\\\s+pp");\n', 1), ('JoinSubscription(Subscriber<?', 1), ('(Files.exists(targetPath))', 1), ('client.admin().indices().getAliases(aliasRequest,', 1), ('fusionRejected()', 1), ('DEFAULT_HOST', 1), ('results.add(getIndexResult.get());\n', 1), ('com.iluwatar.reactor.framework.SameThreadDispatcher;\nimport', 1), ('expectedDates[d][0]', 1), ('(MappingException', 1), ('spaceDelimitedJvmOptionsBuilder.toString();\n', 1), ('poolSize)', 1), ('this.dataSource', 1), ('Integer>(new', 1), ('t.getPriority());\n', 1), ('spellbook7.addSpell(spell17);\n', 1), ('innerError(InnerSubscriber<T,', 1), ('TestException);\n\n', 1), ('io.reactivex.internal.fuseable.SimplePlainQueue;\n\n/**\n', 1), ('Single.zip(pp.single(0),', 1), ('assertTrue(list.contains(2));\n', 1), ('secondObserver', 1), ('org.elasticsearch.xpack.sql.jdbc.debug.Debug;\nimport', 1), ('dao.findByName(book.getName());\n', 1), ('strength', 1), ('new}', 1), ('timed()', 1), ('albumYearSelectOption.setSelectedAttribute(yearOption,', 1), ('crap', 1), ('com.iluwatar.servicelayer.wizard.WizardDao;\n\n/**\n', 1), ('lvProducerNode())', 1), ('PoisonPotion();\n', 1), ('(child.clazz', 1), ('statusOfAllEvents()', 1), ('propsMap.keySet());\n', 1), ('deferred,', 1), ('publisher.subscribe(s);\n', 1), ('expectedTarget,', 1), ('this.client', 1), ('ProtocolViolationException.class);\n', 1), ("'r'))));\n", 1), ('behind', 1), ('"ports"', 1), ('filterWrongParallelismConditional()', 1), ('Begin', 1), ('DebounceSubscriber(Subscriber<?', 1), ('CachingPolicy.ASIDE");\n', 1), ('clazz2.getMethods())', 1), ('CrashingIterator(int', 1), ('PATTERN.matcher(line);\n', 1), ('HobbitsTest()', 1), ('xchgProducerNode(nextNode);\n', 1), ('MaybeError<T>(exception));\n', 1), ('org.elasticsearch.xpack.core.ssl.cert.CertificateInfo;\nimport', 1), ('observerMaybe()', 1), ('whitelistFields));\n\n', 1), ('-=', 1), ('TestHelper.checkDisposed(Completable.complete().observeOn(Schedulers.single()));\n', 1), ('io.reactivex.annotations.SchedulerSupport#IO', 1), ('"[%d]:', 1), ('ObservableTimer(long', 1), ('setLogWriter(PrintWriter', 1), ('SingleFlatMapPublisherObserver<S,', 1), ('*/\n@Slf4j\npublic', 1), ('dl.dispose();\n', 1), ('failWithCustomHandler()', 1), ('volume);\n', 1), ('builder.append("', 1), ('ToMapTckTest', 1), ('to2.assertResult(2);\n', 1), ('MovementSelector(Movement.WALKING))\n', 1), ('ToMultimapTckTest', 1), ('((Observer<Object>)it).onError(new', 1), ('Arrays.fill(ints,', 1), ('interrupting', 1), ('IOException},', 1), ('SerializedObserver<U>(s);\n', 1), ('actual.onSubscribe(d);\n', 1), ('super.schedulePeriodicallyDirect(run,', 1), ('LotteryService(LotteryTicketRepository', 1), ('(with', 1), ('maybeSingle()', 1), ('IsisWicketApplication', 1), ('rangeObservable(Blackhole', 1), ('added.', 1), ('.fromArray(ss,', 1), ('MockTerminal()', 1), ('_.,()]*ObservableSource");\n', 1), ('name);\n}\n', 1), ('this.writer', 1), ('circumstances', 1), ('(!m.signature.contains("Single"))', 1), ('.observeOn(Schedulers.io()),\n', 1), ('io.reactivex.internal.observers.BasicFuseableObserver;\nimport', 1), ('java.util.stream.Collectors;\n\nclass', 1), ('merge(SingleSource<?', 1), ('assertEquals(e.getCause().getMessage(),', 1), ('mask)', 1), ('bs)', 1), ('merge(TrustConfig', 1), ('LOGGER.info("Java8Holder', 1), ('Trampoline.done(prod);\n', 1), ('getIndexResult', 1), ('IndexInfo(alias,', 1), ('globalMutex.isEmpty();\n', 1), ('MaybeConcatArray(MaybeSource<?', 1), ('asyncResult2', 1), ('studentsToBeInserted', 1), ('dao.getById(CUSTOMER.getId()).get());\n', 1), ('Set<Path>', 1), ('testElementAtFlowable()', 1), ('compareTo(TimedRunnable', 1), ('SafeSubscriberTestException(String', 1), ('ObservableThrottleWithTimeoutTests', 1), ('Iterator<Runnable>', 1), ('oneOf(mockContainer).persistIfNotAlready(simpleObject);\n', 1), ('add(final', 1), ('java.util.Collections.emptyMap;\n\n/**\n', 1), ('emissionRequestRace()', 1), ('SubscriptionHelper.setOnce(upstream,', 1), ("s.indexOf('>',", 1), ('eq(fields))).thenReturn(expectedDetails);\n\n', 1), ('textInput.add(input);\n', 1), ('weather);\n', 1), ('Publisher<Disposable>>()', 1), ('testCollectorFailureDoesNotResultInErrorAndOnNextEmissionsObservable()', 1), ('javax.swing.JTable;\nimport', 1), ('available.size(),', 1), ('packet.setSender(sender);\n\n', 1), ('line.substring(1,', 1), ('reported.\n', 1), ('500;\n\n', 1), ('fromIterator.hasNext()', 1), ('PublishSubject<T>();\n', 1), ('System.out.print(".");\n', 1), ('(Observer<T>)INSTANCE;\n', 1), ('NullNode}', 1), ('requestOne()', 1), ('System.out.println(string);\n', 1), ('java.lang.SecurityManager}\n', 1), ('job);\n\n', 1), ('Observable<Event>', 1), ('assertNotNull(cakeInfo.cakeLayerInfos);\n', 1), ('addReadPermissions(Permissions', 1), ('CrashingIterable', 1), ('ds.downstreamRequest(1);\n', 1), ('Upcast', 1), ('Validator.of(tom).validate(User::getName,', 1), ('"FlowableMergeWithCompletable"\n', 1), ('onCallback.accept(value,', 1), ('Exception)', 1), ('MaybeSwitchIfEmpty(MaybeSource<T>', 1), ('org.apache.isis.applib.services.eventbus.ActionDomainEvent;\nimport', 1), ('callables', 1), ('org.elasticsearch.common.xcontent.ToXContentFragment;\nimport', 1), ('com.iluwatar.decorator;\n\nimport', 1), ('job)', 1), ('consumer);\n\n', 1), ('(!name.equals(other.name))', 1), ('DisposeOnCancel(d);\n\n', 1), ('eager,', 1), ('?>[]>(EMPTY);\n', 1), ('times(1)).onNext(Arrays.asList(1,', 1), ('FlatMapMaybeObserver<R>', 1), ('attempts()', 1), ('type)).subscribeOn(Schedulers.newThread());\n', 1), ('add(jl,', 1), ('calls[0]);\n\n', 1), ('ParallelCollectSubscriber(Subscriber<?', 1), ('Timeout', 1), ('Object>>();\n\n', 1), ('protecting"}\n', 1), ('Collections.unmodifiableMap(databaseReaders);\n', 1), ('AmbInnerSubscriber[count];\n', 1), ('OtherSubscriber(MaybeObserver<?', 1), ('set.clear();\n', 1), ('Type(name,', 1), ('(32', 1), ('ScriptDocValuesLongsTests', 1), ('CustomerClientApp})', 1), ('postVisitDirectory(Path', 1), ('this.boxFrom', 1), ('!name.isEmpty(),', 1), ('read();\n', 1), ('disposeAfter()', 1), ('rust")});\n', 1), ('info\n', 1), ('status;\n', 1), ('Single-Producer-Single-Consumer', 1), ('views.stream().forEach(view', 1), ('actual.subscribe(s);\n', 1), ('TestHelper.checkDoubleOnSubscribeCompletableToSingle(new', 1), ('doWorkOnNewTrampoline(final', 1), ('io.reactivex.internal.schedulers.ExecutorScheduler.ExecutorWorker.BooleanRunnable;\nimport', 1), ('FlowableConcatMap(Flowable.fromArray(sources),', 1), ('ShowFunctions::new,', 1), ('-7044685185359438206L;\n\n', 1), ('org.elasticsearch.action.search.SearchResponse;\nimport', 1), ('(doesWriterOwnThisLock())', 1), ('MaybeFromFuture<T>', 1), ('ZipWithIterableTckTest', 1), ('Cache-Aside\n', 1), ('getAccount(int', 1), ('PublishSubscription<T>(t,', 1), ('B2BService})', 1), ('update(final', 1), ('interleave', 1), ('dao,\n', 1), ('IO;\n\n', 1), ('url.getPort());\n', 1), ('registerView(View', 1), ('(members)\n', 1), ('delimiter,', 1), ('File(this.testFolder.getRoot(),', 1), ('DecoratingIterator<T>(null)', 1), ('Observable.empty().takeLast(1).subscribe(s);\n', 1), ('whitelisted!");\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.subscribeOn.png"', 1), ('assertEquals("level2_a",', 1), ('.grantedFields("*")\n', 1), ('300);\n', 1), ('invalidUpperJavaMajorVersion', 1), ('1).trim().split("\\\\s+");\n\n', 1), ('Define', 1), ('SafeSubscriber<Object>(this);\n', 1), ('divided', 1), ('"+5646346524"));\n', 1), ('casts', 1), ('"With', 1), ('invocations.', 1), ('NazgulEnum.JI_INDUR);\n', 1), ('SwingUtilities.getRootPane(del);\n', 1), ('zero\n', 1), ('Maybe.just(3),', 1), ('@Action(domainEvent', 1), ('.assertResult("123456");\n', 1), ('Collections.unmodifiableSet(trustedNames);\n', 1), ('isCancelled.compareAndSet(false,', 1), ('toObservable', 1), ('parsed:\n', 1), ('count.\n', 1), ('io.reactivex.internal.functions.Functions;\n\n@BenchmarkMode(Mode.Throughput)\n@Warmup(iterations', 1), ('AppManager})', 1), ('FlowableDoOnSubscribeTest', 1), ('DisposableObserver}', 1), ('co[0]', 1), ('AtomicReferenceArray<Object>\nimplements', 1), ('washing', 1), ('Delete.\n', 1), ('bookcount;\n', 1), ('cache,\n', 1), ('wake', 1), ('classPath)', 1), ('MergeInnerCompletableObserver\n', 1), ('DriverManager.getDriver(url);\n', 1), ('token,', 1), ('add(CacheDisposable<T>', 1), ('onPreCall();\n\n', 1), ('characterToFrequency', 1), ('ExecutorScheduler(executor);\n', 1), ('SlidingDoor())', 1), ('ignoreCancelConditional()', 1), ('World}', 1), ('SerializedSubscriber<T>(t);\n', 1), ('java.util.StringJoiner;\nimport', 1), ('Arrays.asList("c",', 1), ('crashOnIterator,', 1), ('(--i', 1), ('CustomSingleObserver&lt;T&gt;(upstream);\n', 1), ('wolf', 1), ('FlowableTimeout<T,', 1), ('com.iluwatar.retry.BusinessException...)', 1), ('jobs;\n', 1), ('RxJavaPlugins.setOnSingleLift(new', 1), ('listIterator()', 1), ('commandService.authorCreated("username2",', 1), ('jsp.setPreferredSize(new', 1), ('blockingSubscribeConsumerConsumerAction()', 1), ('checkDoubleOnSubscribeMaybeToObservable(Function<Maybe<T>,', 1), ('using(Callable<U>', 1), ('BufferBoundarySupplierObserver(Observer<?', 1), ('CharacterSteps();\n', 1), ('GameItem}', 1), ('StripBoundaryObserver(Observer<?', 1), ('org.joda.time.DateTimeUtils.class.getName(),\n', 1), ('generateRandomNumbers();\n', 1), ('ft.run();\n\n', 1), ('T>(source,', 1), ('withFutureDisposed3()', 1), ('saveAside(userAccount);\n', 1), ('include', 1), ('accountNoTo;\n\n', 1), ('makeActions(Collection<DwarvenMineWorker>', 1), ('TakeLastTimedObserver<T>\n', 1), ('DataMapperException;\n}\n', 1), ('prompt(final', 1), ('org.hamcrest.core.IsEqual.equalTo;\n\npublic', 1), ('this.singleFunction', 1), ('SourceObserver(PublishSubject<T>', 1), ('RetryTckTest', 1), ('entry.getKey());\n', 1), ('onErrorNoSubscribeCrash()', 1), ('andThenMaybeCompleteError()', 1), ('printPlugin(env,', 1), ('specialDay)', 1), ('org.joda.time.ReadableDateTime}</li>\n', 1), ('TimeoutMainObserver(SingleObserver<?', 1), ('testToString(NumberExpression', 1), ('shouldNotDeleteFromDbIfNotRegisteredStudentsToBeCommitted()', 1), ('holderNaive.getHeavy();\n', 1), ('java.lang.Runtime#availableProcessors()})', 1), ('status,', 1), ('Matchers.contains(expectedPathList.toArray(new', 1), ('Optional.of("Good', 1), ('0.001)', 1), ('applied\n', 1), ('javax.swing.SwingUtilities;\nimport', 1), ('evaluated");\n', 1), ('.replaceAll("\\\\s+",', 1), ('DebounceInnerSubscriber(DebounceSubscriber<T,', 1), ('jsonElement.toString();\n', 1), ('(left.isEmpty())', 1), ('base64Encode(byte[]', 1), ('works.\n', 1), ('urlEncode(String', 1), ('APIGatewayProxyRequestEvent', 1), ('e);\n}\n', 1), ('indexOrAlias,\n', 1), ('FlowableDelaySubscriptionOther(Publisher<?', 1), ('value.toString()', 1), ('R>(a,', 1), ('<code>getStatus</code>.', 1), ('BasicDataSource', 1), ('WindowBoundaryTckTest', 1), ('CONSTRUCTOR,', 1), ('ObservableDebounce<T,', 1), ('calculateTotalCalories()', 1), ('Files.isDirectory(geoIpConfigDirectory))', 1), ('MAX_PENDING', 1), ('maxConcurrency,\n', 1), ('mock(MaybeObserver.class);\n', 1), ('base64Encoded(Boolean', 1), ('{"Name",', 1), ('com.iluwatar.hexagonal.sampledata.SampleData;\nimport', 1), ('3).subscribe(new', 1), ('Show', 1), ('Java.', 1), ('ExternalConsumer', 1), ('deleteAll();\n', 1), ('UnsubscribeObserver<T>', 1), ('0).blockingIterable().iterator().hasNext());\n', 1), ('io.reactivex.internal.operators.single.SingleJust;\nimport', 1), ('newNode);\n', 1), ('complete(c);\n', 1), ('applicationFile);\n', 1), ('(name.charAt(index)', 1), ('resource.close());\n', 1), ('future))', 1), ('org.elasticsearch.common.collect.Tuple;\nimport', 1), ('fromIterator;\n', 1), ('now(@NonNull', 1), ('this.visitor.visitCommander(new', 1), ('person.firstName', 1), ('GiantModel}', 1), ('Predicate<Expression>', 1), ('"doc",', 1), ('ps.test(false);\n\n', 1), ('SchedulerPoolFactory.start();\n', 1), ('C>(subscribers[i],', 1), ('numTickets)', 1), ('lvProducerNode()', 1), ('readKey.attach(key.attachment());\n', 1), ('EventConsumer(String', 1), ('FlowableSwitchMapMaybe(Flowable<T>', 1), ('querying,', 1), ('resumeSuccess()', 1), ('ExpressionTest<MinusExpression>', 1), ('LOGGER.info("Intiating', 1), ('simple.', 1), ('boxFrom)', 1), ('\'.\').replace(".java",', 1), ('Field}s', 1), ('AndThenObservableObserver<R>(s,', 1), ('com.google.common.jimfs.Jimfs;\nimport', 1), ('\'Fireball\'",', 1), ('80);\n\n', 1), ('Bajraktari");\n', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().reduce(0,', 1), ('urlElements', 1), ('System.out.println("Total:', 1), ('InnerQueuedSubscriberSupport<Integer>()', 1), ('sender);\n', 1), ('level2_b\n', 1), ('assertNull(RxJavaPlugins.onObservableReturn(null));\n//\n//', 1), ('UnsubscribeOnMaybeObserver(MaybeObserver<?', 1), ('expectedOliphaunt', 1), ('HashMapSupplier', 1), ('ReplayProcessorTimeBoundAsPublisherTckTest', 1), ('StoppingData(stop);\n', 1), ('HashMapType;\n\n', 1), ('AlbumPage(WebClient', 1), ('subSequence', 1), ('org.apache.tika.parser.xml.DcXMLParser(),\n', 1), ('onSuccessCall;\n\n', 1), ('byte[4', 1), ('assertNull(RxJavaPlugins.onCompletableLift(null));\n//\n//', 1), ('getProcessors(Processor.Parameters', 1), ('docToTicket(Document', 1), ('checkMaybeSchedulerDoc()', 1), ('"\\"conditions\\":[{\\"type\\":\\"time\\",\\"condition\\":{\\"operator\\":\\"gte\\",\\"value\\":\\"1511395200\\"}},"', 1), ('painlessSuperStructs);\n\n', 1), ('ObservableEmitter<T>,', 1), ('blood")});\n', 1), ('testDisplayGiant()', 1), ('this.loaded', 1), ('resumeFunctionInCaseOfError})', 1), ('@OneToMany(mappedBy', 1), ('getLruData()', 1), ('this.age', 1), ('ms.add(Maybe.<Integer>never());\n', 1), ('FlowableReduce<T>', 1), ('this.from', 1), ('lastName)', 1), ('cfg.proxyConfig().proxy();\n', 1), ('ownerStruct.staticMethods.get(painlessMethodKey);\n\n', 1), ('org.apache.isis.viewer.wicket.viewer.IsisWicketApplication;\nimport', 1), ('in.read()', 1), ('(exception', 1), ('BackpressureHelper.producedCancel(this,', 1), ('secretInput.clear();\n', 1), ('WithLatestInnerSubscriber(WithLatestFromSubscriber<?,', 1), ('"FlowableIgnoreElementsCompletable",\n', 1), ('toFlowable().repeat();\n', 1), ('getType("Object");\n', 1), ('rangeObservableFlatMapJust;\n\n', 1), ('Predicate<Integer>', 1), ('ballThread.start();\n', 1), ('oliphaunt);\n', 1), ('(JavaVersion.current().compareTo(version)', 1), ('factories,', 1), ('toObservableAndBack()', 1), ('errorNoRetry()', 1), ('("long".equals(whitelistStruct.javaClassName))', 1), ('DistinctSubscriber(Subscriber<?', 1), ('FlowableSkipLast(Flowable<T>', 1), ('syncb', 1), ('STANDARD.equals(permission.getName()))', 1), ('8517344746016032542L;\n\n', 1), ('(pid', 1), ('"trustStorePath=["', 1), ('TIMEOUT;\n', 1), ('schedulerDocLine;\n', 1), ('testIssue1451Case2()', 1), ('EqualCoordinator<T>(s,', 1), ('FileAttributeChecker', 1), ('csub.dispose();\n', 1), ('Item(name,', 1), ('resource.getDetails(2,', 1), ('SingleFromPublisher(Publisher<?', 1), ('Nobody', 1), ('o3', 1), ('Functions.<Throwable>emptyConsumer(),\n', 1), ('lastName.hashCode()', 1), ('oliphaunt4', 1), ('await(CyclicBarrier', 1), ('AudioInputStream\n', 1), ('PURGE_ENABLED;\n\n', 1), ('SingleDefer<T>(singleSupplier));\n', 1), ('SingleSubscribeOn(SingleSource<?', 1), ('(transferred)', 1), ('HashSet<>(Arrays.asList(6,', 1), ('ObservableRetryPredicate(Observable<T>', 1), ('sqlQuery.setResultTransformer(Transformers.aliasToBean(Book.class)).uniqueResult();\n', 1), ('permission.getName();\n', 1), ('AnySubscriber(Subscriber<?', 1), ('utilized.', 1), ('filesystem.\n', 1), ('AtomicBoolean()));\n', 1), ('t1.join();\n', 1), ('flushAcknowledgement;\n', 1), ('FlatMapSingleObserver(MaybeObserver<?', 1), ('onError.get().getMessage());\n\n', 1), ('java.lang.Thread.sleep;\nimport', 1), ('transportUri;\n', 1), ('toFlowable', 1), ('Entity\n', 1), ('temp2;', 1), ('json.\n', 1), ('-3031974433025990931L;\n\n', 1), ('"scheduledevent.0.rules', 1), ('remove(d);\n', 1), ('SingleFlatMapCompletable<T>', 1), ('testGetAuthorByUsername()', 1), ('io.reactivex.subjects.PublishSubject;\nimport', 1), ('direct;\n\n', 1), ('weight={}', 1), ('whitelistMethods;\n\n', 1), ('stats).\n', 1), ('throttles', 1), ('lock.writeLock(),', 1), ('LinkOption...', 1), ('IllegalArgumentException("specified', 1), ('ObservableSource<V>', 1), ('(disposed)\n', 1), ('lit.previous().intValue());\n', 1), ('e5.getMessage());\n', 1), ('.andThen(Completable.fromAction(new', 1), ('POISON:\n', 1), ('(!line.startsWith("//")', 1), ('32,', 1), ('assertNull(RxJavaPlugins.onObservableLift(null));\n//\n//', 1), ('IllegalArgumentException("unknown', 1), ('CompletableDelay', 1), ('indexInTail;\n', 1), ('assertEquals(TEST_CAR_PRICE,', 1), ('Idores\'",', 1), ('getRandomPlayerDetails(),', 1), ('ticketsCollectionName,', 1), ('attachment.toXContent(builder,', 1), ('BlockingIgnoringReceiver\nextends', 1), ('FlowableElementAtMaybe(Flowable<T>', 1), ('doOnTerminateError()', 1), ('nonterminal)', 1), ('REQUEST_MASK', 1), ('templates', 1), ('Byte.class)', 1), ('Queen}.\n', 1), ('ConcatMapInner<R>\n', 1), ('info;\n\n', 1), ('TestHelper.checkDoubleOnSubscribeCompletableToFlowable(new', 1), ('19:25', 1), ('o.toSortedList().toObservable().blockingFirst());\n', 1), ('br.read();\n', 1), ('-5636543848937116287L;\n', 1), ('list.get(i', 1), ('com.maxmind.db.NoCache;\nimport', 1), ('assertTrue(appender.logContains("move"));\n\n', 1), ('c.newInstance();\n', 1), ('org.elasticsearch.xpack.security.authc.support.mapper;\n\nimport', 1), ('(!once.get()', 1), ('eventPool', 1), ('albumTitle);\n', 1), ('checked\n', 1), ('bind(String.class).annotatedWith(Names.named("applicationJs")).toInstance(\n', 1), ('UserGroup#paidGroup}.\n', 1), ('accountOfDaenerysAfterShotDown', 1), ('remaining.lazySet(n);\n', 1), ('this.writeLock', 1), ('scheduleActual(action,', 1), ('testNoFileMessage()', 1), ('testSteal()', 1), ('ERROR', 1), ('videos);\n', 1), ('callback.error;\n', 1), ('getAvailableToppingEntities()', 1), ('this.accountNoFrom', 1), ('know,', 1), ('super.implies(p);\n', 1), ('TestHelper.checkDisposed(Observable.just(Notification.createOnComplete()).dematerialize());\n', 1), ('PARSERS[]', 1), ('assertTrue(completed.get());\n', 1), ('java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)\n', 1), ('TREE_ROOT.walk();\n\n', 1), ('public).\n', 1), ('java.security.KeyPair;\nimport', 1), ('(!abilities.isEmpty())', 1), ('Collections.sort(plugins);\n', 1), ('actual.get()', 1), ('timed.time());\n', 1), ('connect}.', 1), ('SingleDetach<T>(this));\n', 1), ('g.getName().endsWith(".java"))', 1), ('"resumeSingleInCaseOfError', 1), ('findPattern("ConnectableFlowable<.*>\\\\s+co(0-9|\\\\b)");\n', 1), ('container.allInstances(SimpleObject.class);\n', 1), ('(nextNode', 1), ('consumerErrorThrows()', 1), ('wizards;\n\n', 1), ('anyMatch(List<?', 1), ('"TODO', 1), ('innerVisitor', 1), ('is(version.get(2)));\n', 1), ('lock.readLock()));\n', 1), ('dtoEntities', 1), ('constructs.', 1), ('onPostCall(Long', 1), ('TimeIntervalObserver<T>', 1), ('ObserverPattern},', 1), ('ReduceSubscriber<T>', 1), ('onErrorFailure()', 1), ('onPreCall()', 1), ('error.set(e);\n', 1), ('DelegateTest', 1), ('toFunction9()', 1), ('END:\n', 1), ('FlowableEmitter\n', 1), ('this.handled', 1), ('SwitchMapMaybeMainObserver<?,', 1), ('(!pp.hasSubscribers())', 1), ('upperBoundGreaterThanLowerBound', 1), ('assertUndeliverableTestException(List<Throwable>', 1), ('s.onSubscribe(inner);\n\n', 1), ('org.elasticsearch.test.InternalTestCluster}\n', 1), ('non-interrupting', 1), ('member.joinedParty(party);\n', 1), ('FlowableAny<T>(source,', 1), ('parsers.stream().forEach(parser', 1), ('Consumer<HashMap<String,', 1), ('cakeInfo.cakeToppingInfo.name));\n', 1), ('java.time.LocalDate;\nimport', 1), ('.concatMapCompletable(completableThrows())\n', 1), ('afterScenario(cucumber.api.Scenario', 1), ('testAppUsingThreadPoolDispatcher()', 1), ('out.writeStringList(extendedPlugins);\n', 1), ('").append(extendedPlugins).append("\\n")\n', 1), ('"&Signature="', 1), ('p.getType().get(),', 1), ('person);\n', 1), ('subscribers.delete(closer);\n', 1), ('deferred.complete(v);\n', 1), ('assertTrue(s.isDisposed());\n', 1), ('ps.singleOrError();\n', 1), ('ConsoleLoggerModule()', 1), ('HOME:\n', 1), ('org.elasticsearch.xpack.sql.plan.logical;\n\nimport', 1), ('Typically,', 1), ('view.storeChanged(this));\n', 1), ('user.userId);\n', 1), ('segment.\n', 1), ('@Bean(destroyMethod', 1), ('JavaVersion(List<Integer>', 1), ('function3Fail()', 1), ('ArrayListType;\n', 1), ('files.putAll(secureSettings.files);\n', 1), ('hashCode();\n', 1), ('source.blockingMostRecent(initialValue);\n', 1), ('ThreadPoolDispatcher', 1), ('spell8', 1), ('Notice', 1), ('innerComplete(InnerQueuedSubscriber<T>', 1), ('IndexResolution.notFound(indexWildcard);\n', 1), ('Integer.parseInt(start);\n', 1), ('(!current.compareAndSet(null,', 1), ('250,', 1), ('MediaType.application("vnd.ms-visio.drawing")\n', 1), ('onComplete();\n}\n', 1), ('(ThreadDeath)', 1), ('DoOnEachConditionalSubscriber<T>', 1), ('producerNode.getAndSet(node);\n', 1), ('object..\n', 1), ('impact', 1), ('JdbcDriver.deregister();\n', 1), ('cancel"))', 1), ('little', 1), ('within\n', 1), ('messageFromElves()', 1), ('clip.open(audioStream);\n', 1), ('PlayerDetails("kevin@google.com",', 1), ('TestHelper.checkUtilityClass(Exceptions.class);\n', 1), ('(f.isDirectory())', 1), ('GroupBySubscriber(Subscriber<?', 1), ('incrementing', 1), ('handle;\n\n', 1), ('T>(key,', 1), ('X.509', 1), ('ivoryTower1', 1), ('flushed.\n', 1), ('CompletableObserveOn', 1), ('NewThreadScheduler', 1), ('processes.', 1), ('spellbook7', 1), ('OnErrorNextObserver<T>(t,', 1), ('Hobbits());\n\n', 1), ('Maybe.just(1).subscribe(rmo);\n\n', 1), ('(Constants.LINUX)', 1), ('(StreamInput', 1), ('spellbook2.addSpell(spell6);\n', 1), ('perhaps', 1), ('policy");\n', 1), ('randomIterator', 1), ('InMemoryAppender(GiantView.class);\n', 1), ('"comparison"\n', 1), ('car.getParts().count());\n', 1), ('onChannelWritable(SelectionKey', 1), ('exist");\n', 1), ('bwc', 1), ('deserializedFishV1', 1), ('+cal.get(Calendar.YEAR));\n', 1), ('Blackhole.consumeCPU(10);\n', 1), ('onEvent\n', 1), ('(outdated', 1), ('(DebounceInnerSubscriber<T,', 1), ('methodCache.computeIfAbsent(buildMethodCacheKey(ownerStruct.name,', 1), ('emptyMap())),\n', 1), ('parser);\n', 1), ('errorWithRetry();\n', 1), ('ObservableIntervalRange', 1), ('Fast\n', 1), ('ACK', 1), ('LambdaSubscriber(Consumer<?', 1), ('con.getErrorStream()))', 1), ('ScriptDocValuesDatesTests', 1), ('org.apache.tika.parser.txt.TXTParser(),\n', 1), ('com.iluwatar.pageobject;\n\nimport', 1), ('mutedClose(connection,', 1), ('CancellableDisposable(Cancellable', 1), ('list.listIterator(index);\n', 1), ('directory")\n', 1), ('super("\\n");', 1), ('org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest;\nimport', 1), ('"+5432503945"));\n', 1), ('analytical', 1), ('loggedMuteShouldLogExceptionTraceBeforeSwallowingIt()', 1), ('info.name));\n', 1), ('java.lang.reflect.*;\n\nimport', 1), ('getClassFromBinaryName(String', 1), ('isEmpty(byte[]', 1), ('FlowableSkipUntil<T,', 1), ('HttpGet("http://localhost:50005/image-path");\n', 1), ('properties.setProperty("hibernate.dialect",', 1), ('CompletableToFlowable<T>(other));\n', 1), ('testDefaultComputationSchedulerIsInitializedLazily()', 1), ('this.contentType', 1), ('assertEquals(expected,', 1), ('ForEachWhileSubscriber<T>\nextends', 1), ('tasks.size();', 1), ('Aras"));\n', 1), ('CustomMatcher<Path>("Path', 1), ('spscLinkedNewBufferPeek()', 1), ('.append(".java:").append(m.backpressureDocLine).append(")\\r\\n\\r\\n");\n', 1), ('ComputationScheduler.MAX_THREADS;\n\n', 1), ('lastFetched', 1), ('.doOnDispose(unsubscribeAction)\n', 1), ('fromObservable(ObservableSource<?', 1), ('LeafPlan(Location', 1), ('java.io.ObjectOutputStream;\nimport', 1), ('impl.elements();\n', 1), ('CompletableDisposable\n', 1), ('videos)', 1), ('csvReader', 1), ('darkCreatures.stream().forEach(c', 1), ('ConcatMapSingleSubscriber<?,', 1), ('SYNC_DISPOSED)', 1), ('http(String', 1), ('update()', 1), ('commitModify();\n', 1), ('scoping.', 1), ('set(AtomicReference<Subscription>', 1), ('parseTriggerEvent(TriggerService', 1), ('garbage', 1), ('buildGetIndexResult(concreteIndex,', 1), ('ActionListener<Set<String>>', 1), ('Flowable.<String>empty().single("");\n', 1), ('periodicDirectThrows()', 1), ('evolves', 1), ('deleted,', 1), ('addInner(InnerSubscriber<T,', 1), ('price="', 1), ('newIsisWicketModule()', 1), ('printCustomerDetails(allCustomers);\n', 1), ('1ms\n\n', 1), ('java.io.Closeable},', 1), ('WithLatestInnerSubscriber[n];\n', 1), ('Files.getPosixFilePermissions(path);\n', 1), ('*/",\n', 1), ('property,', 1), ('CompletableLiftTest', 1), ('Kritior");\n', 1), ('System.out.println("subscribing");\n', 1), ("'p'))));\n", 1), ('CustomerClientApp', 1), ('(DisposableHelper.set(this,', 1), ('seenJvmOption', 1), ('Single.<Integer>just(1);\n', 1), ('longs.get(i).longValue());\n', 1), ('ObservableConcatMapEager<T,', 1), ('(whitelistMethod.javaAugmentedClassName', 1), ('NioServerSocketChannel}', 1), ('RxJavaPlugins.set(scheduler', 1), ('suspension', 1), ('onXLift()', 1), ('statusMember.accept(stoppingData);\n', 1), ('message.getBytes().length,', 1), ('FlowableFlatMap(Flowable<T>', 1), ('false).onClose(()', 1), ('latches', 1), ('customers.add(customer2);\n', 1), ('Collections.unmodifiableMap(struct.staticMethods);\n', 1), ('observers.offer(inner);\n\n', 1), ('FlowableConcatMapSingle<T,', 1), ('ObservableCollectSingle<T,', 1), ('MaybeContains<T>(this,', 1), ('readyOps;\n\n', 1), ('simpleTypesMap.values();\n', 1), ('User("Tom",', 1), ('"name2",', 1), ('IndexInfo', 1), ('resubscriptions', 1), ('SecurityFiles.writeFileAtomically(\n', 1), ('files.put(setting,', 1), ('SingleObserver}s.', 1), ('TestingHelper()', 1), ('FlowableOnBackpressureBufferStrategy(Flowable<T>', 1), ('disposeTwice()', 1), ('columnCount();\n', 1), ('AbstractDirectTask\nextends', 1), ('java.lang.annotation.*;\n\nimport', 1), ('binder\n', 1), ('HashMap<Object,', 1), ('ERROR);\n\n', 1), ('ParallelReduce(ParallelFlowable<?', 1), ('FiniteRangeIterator(end);\n', 1), ('findPattern("SingleSource<.*>\\\\s+ms");\n', 1), ('restrict', 1), ('scheduleParser.parse(parser);\n', 1), ('correspondence', 1), ('com.iluwatar.event.sourcing.app.App.ACCOUNT_OF_JON;\nimport', 1), ('SecurityFiles()', 1), ('IllegalStateException("Execution', 1), ('(subscribers.length', 1), ('this.injector', 1), ('SubscriptionLambdaSubscriber<T>', 1), ('.concatMapSingle(Functions.justFunction(Single.never()))\n', 1), ('"}";\n', 1), ('getFunctionVersion()', 1), ('.parseLenient()\n', 1), ('mapFactory)', 1), ('JButton("Clear");\n', 1), ('Functions.toFunction(function5);\n', 1), ('TakeLastSubscriber<T>', 1), ('Java",', 1), ('concept', 1), ('single.toFlowable();\n', 1), ('item.getType();\n', 1), ('org.elasticsearch.test.SecurityIntegTestCase;\nimport', 1), ('"//NTLNTL")', 1), ('secondOliphaunt.getId());\n\n', 1), ('credits', 1), ('overflown', 1), ('PublishProcessor<Void>', 1), ('org.elasticsearch.action.support.GroupedActionListener;\nimport', 1), ('level3.getRight());\n', 1), ('LoggerFactory.getLogger(Writer.class);\n\n', 1), ('this.chest', 1), ('BlockingObservableMostRecent(ObservableSource<T>', 1), ('goodbye', 1), ('(IndexResolution', 1), ('wanna', 1), ('assertTrue(onErrorFailedException.getCause()', 1), ('pane', 1), ('IntervalRangeTckTest', 1), ('RetryBiObserver<T>(s,', 1), ('demandHolderIdiom', 1), ('schedulePeriodic()', 1), ('onSuccess()}.\n', 1), ('not(equalTo(view.readAttributes().group())));\n\n', 1), ('org.elasticsearch.xpack.sql.cli.CliTerminal;\n\nimport', 1), ('this.receiver', 1), ('unsubscribingWithSingleUnderlyingUnsubscribes()', 1), ('ArrayDeque<U>', 1), ('MapTckTest', 1), ('future;\n\n', 1), ('re', 1), ('LicenseSigner', 1), ('"firstName")\n', 1), ('write-behind\n', 1), ('AsynchronousServerSocketChannel', 1), ('accountOfJonBeforeShotDown', 1), ('Many', 1), ('requestUpfront()', 1), ('HEALING:\n', 1), ('MaybeJust<T>', 1), ('SingleNever()', 1), ('setPosixAttributesOnTempFile(Path', 1), ('ShowFunctions(Location', 1), ('List<Flowable<Integer>>', 1), ('isStopped;\n\n', 1), ('Disposables.fromSubscription(null);\n', 1), ('PlayerDetails("steve@google.com",', 1), ('servers.size())', 1), ('socketChannel.register(selector,', 1), ('flatten(Throwable', 1), ('(version.size()', 1), ('shutdown\n', 1), ('assertNull(cake.getTopping());\n\n', 1), ('jt;\n', 1), ('dematerialize.subscribe(ts);\n\n', 1), ('t8,', 1), ('StartingData(when);\n', 1), ('maybeObserver)', 1), ('requestDescription;\n', 1), ('exceptions,\n', 1), ('(file.getName().endsWith(".java"))', 1), ('SubscriptionDisposable', 1), ('(numbers.size()', 1), ('XFlatMapTest', 1), ('GroupedActionListener<>(ActionListener.wrap(\n', 1), ('SingleSchedulerTest', 1), ('ScheduledEvent.Builder().description("Black', 1), ('testSwitchTriggerUnsubscribe()', 1), ('(DisposableHelper.isDisposed(s.get())', 1), ('this.functionVersion', 1), ('ResourceObserver<T>', 1), ('assertNotNull(\n', 1), ('.singleOrError()\n', 1), ('utilizes\n', 1), ('TEMPLATE_VERSION_PATTERN', 1), ('q.setFirst(err);\n', 1), ('kingJoffrey.onEvent(event);\n\n', 1), ('SampleTimedObserver(Observer<?', 1), ('disposable;\n', 1), ('interrupt()', 1), ('DefaultSubscriberImpl', 1), ('CacheStore.readThroughWithWriteBackPolicy(userId);\n', 1), ('AllSubscriber(SingleObserver<?', 1), ('OBSERVER_ONERROR_FAIL();\n', 1), ('ObservableFromFuture<T>', 1), ('(owner', 1), ('Observable.just("abc").takeUntil(predicate).subscribe(to);\n\n', 1), ('timeoutMillis);\n\n', 1), ('https://github.com/ReactiveX/RxJava/issues/969\n', 1), ('Boolean>newConcurrentMap());\n', 1), ('java.util.stream.Collectors;\nimport', 1), ('scheduler.scheduleDirect(Functions.EMPTY_RUNNABLE,', 1), ('keystore.setKeyEntry("private', 1), ('registered\n', 1), ('testScanFunctionThrowsAndUpstreamErrorsDoesNotResultInTwoTerminalEvents()', 1), ('ScheduledWorker(ScheduledExecutorService', 1), ('methods2.add(m.getName());\n', 1), ('org.elasticsearch.script;\n\nimport', 1), ('fromFuture()', 1), ('fromDtos', 1), ('ObservableCreateTest', 1), ('this.expectedToString', 1), ('failComputationFlowableBlockingLast()', 1), ('el', 1), ('testWaitingForeverForPromiseToBeFulfilled()', 1), ('checkDoubleOnSubscribeSingle(Function<Single<T>,', 1), ('getFormats()', 1), ('apiGatewayProxyResponseEvent(BAD_REQUEST_STATUS_CODE,', 1), ('accounts.put(LotteryConstants.SERVICE_BANK_ACCOUNT,', 1), ('com.fasterxml.jackson.annotation.JsonProperty;\n\nimport', 1), ('26,', 1), ('sub.events);\n', 1), ('washingMachine.getWashingMachineState();\n', 1), ('getNode();\n', 1), ('(queue.offer(t))', 1), ('using(\n', 1), ('Collections.singletonMap(GeoIpProcessor.TYPE,', 1), ('blockingFirstTimeout()', 1), ('find(String', 1), ('CompletableFromCallableTest', 1), ('times(0)).onNext("three");\n', 1), ('corresponds', 1), ('Functions.<Integer>emptyConsumer(),\n', 1), ('Observer()', 1), ('Bytes(byte[]', 1), ('.takeUntil(Functions.alwaysFalse())\n', 1), ('FlowableToListSingle<T,', 1), ('(Constants.JRE_IS_MINIMUM_JAVA9', 1), ('StandardOpenOption.CREATE_NEW);\n', 1), ('(parts.length', 1), ('ParserDecorator.withoutTypes(new', 1), ('FlowableAnySingle<T>', 1), ('MaybeFromCallableTest', 1), ('tokens[0]));\n', 1), ('obvious', 1), ('this.struct', 1), ('"street', 1), ('io.reactivex.Observable;\n\npublic', 1), ('fetched', 1), ('onSuccessError()', 1), ('invalidLowerJavaMajorVersion,\n', 1), ('jtFields[i]', 1), ('ThreadAsyncExecutor#startProcess(Callable)}\n', 1), ('Observer<Timed<Integer>>', 1), ('com.iluwatar.databus.members.StatusMember;\n\nimport', 1), ('ps.single(-99).subscribe(new', 1), ('shouldConstructCar()', 1), ('onAfterTerminate', 1), ('JavaVersion.current().compareTo(JavaVersion.parse("9"))', 1), ('analyze', 1), ('grade="', 1), ('java.util.NoSuchElementException;\n\npublic', 1), ('writeProperties(pluginDir.resolve(PluginInfo.ES_PLUGIN_PROPERTIES),', 1), ('ApiGatewayResponse>', 1), ('amended', 1), ('singleCompletable2()', 1), ('SwitchMapMaybeObserver(SwitchMapMaybeMainObserver<?,', 1), ('com.iluwatar.templatemethod;\n\nimport', 1), ('Executors.newFixedThreadPool(5);\n', 1), ('mapFailHandlerThrowsConditional()', 1), ('get(stat)', 1), ('9-10:-Xlog:age*=trace,gc*,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m}\n', 1), ('interrupted:', 1), ('Parser', 1), ('Customer(4,', 1), ('ConcurrentHashMap<ScheduledThreadPoolExecutor,', 1), ('ProtectionDomain(ESPolicyUnitTests.class.getProtectionDomain().getCodeSource(),', 1), ('CacheStore.initCapacity(capacity);\n', 1), ('ability);\n\n', 1), ('THREAD_FACTORY;\n\n', 1), ('ScalarSubscription<T>', 1), ('ConcatMapInner(ConcatMapSupport<R>', 1), ('assertSame(getHeavy(),', 1), ('blockinsSubscribeCancelAsync()', 1), ('this.throttlePeriod', 1), ('-4025173261791142821L;\n\n', 1), ('ObservableStripBoundary<T>(null);\n', 1), ('batched', 1), ('@Injected\n', 1), ('rsa.initVerify(CryptUtils.readPublicKey(publicKeyData));\n', 1), ('"3")\n', 1), ('(q.accept(actual))', 1), ('2).elementAt(1).toObservable().blockingSingle()\n', 1), ('assertNull(RxJavaPlugins.onSubscribe(Observable.never(),', 1), ('location);\n', 1), ('repeat\n', 1), ('Exception(MESSAGE);\n', 1), ('strategies/techniques', 1), ('FrontController', 1), ('Copy', 1), ('doOnEventThrowsSuccess()', 1), ('(periodic)', 1), ('fromEntity', 1), ('findAside(userId);\n', 1), ('Version.class.getProtectionDomain().getCodeSource().getLocation();\n', 1), ('test;\n', 1), ('background,"', 1), ('input);\n\n', 1), ('cause,', 1), ('collector.accept(collection,', 1), ('"parsing_exception":\n', 1), ('SQLException(EXCEPTION_CAUSE);\n', 1), ('DoOnSubscribeSingleObserver(SingleObserver<?', 1), ('TakeUntilMainObserver<T>\n', 1), ('ambWithFirstFires()', 1), ('more(final', 1), ('AsyncSubscription<T>(s,', 1), ('JreHttpUrlConnection(URL', 1), ('CompletableEmitter}', 1), ('"10000"})\n', 1), ('ObservableFromCallable(Callable<?', 1), ('Handler}.\n', 1), ('assertTrue(list.equals(list2));\n\n', 1), ('Utility.downloadFile(urlString);\n', 1), ('SizeSelector(Size', 1), ('getAuthorsCount();\n\n}\n', 1), ('updateDb(UserAccount', 1), ('ste', 1), ('diagrams.', 1), ('owner.methods.put(methodKey,', 1), ('ps2.onNext(2);\n', 1), ('IndexResolver', 1), ('setPosixAttributesOnTempFile(path,', 1), ('Star})', 1), ('Boolean.toString(rainbowFish.getSleeping()));\n', 1), ('InMemoryTicketRepositoryTest', 1), ('dispatcher;\n\n', 1), ('org.elasticsearch.xpack.sql.type.EsField;\nimport', 1), ('Typical', 1), ('TakeLastTimedSubscriber(Subscriber<?', 1), ('TestSingleValueAggregation', 1), ('o1.collision(o2);\n', 1), ('bufferOpen.subscribe(open);\n\n', 1), ('(SubscriptionHelper.cancel(upstream))', 1), ('Executors.newSingleThreadedExecutor();\n', 1), ('HasPrivilegesResponse(boolean', 1), ('jobs)', 1), ('com.iluwatar.nullobject;\n\nimport', 1), ('(line.startsWith("("))', 1), ('mortezaadi@gmail.com\n', 1), ('formats\n', 1), ('arity)', 1), ('content\n', 1), ('(ObservableSource<?', 1), ('"subscriptionIndicator', 1), ('#fuseToFlowable()}\n', 1), ('BlockingFlowableLatestTest', 1), ('navigation', 1), ('java.util.Queue.\n', 1), ('resources")\n', 1), ('dq.isEmpty();\n', 1), ('disabled.', 1), ('commands.bookAddedToAuthor("Domain-Driven', 1), ('newConcurrentMapWithAggressiveConcurrency(int', 1), ('csvPref))', 1), ('builder.append(list.get(i));\n', 1), ('org.mockito.Mockito.spy;\nimport', 1), ('RepeatTckTest', 1), ('spellbook2', 1), ('shouldNotModifyToDbIfNotRegisteredStudentsToBeCommitted()', 1), ('configurations\n', 1), ('iterate(boolean', 1), ('files.add(resolveGroupConfigPath(environment));\n', 1), ('ParallelReduceFullInnerSubscriber<T>\n', 1), ('TestHelper.assertNoOffer(sc);\n', 1), ('initiating', 1), ('FlowableBufferExactBoundary(Flowable<T>', 1), ('"@', 1), ('concatMapToObservableEmpty.subscribeWith(new', 1), ('assertEquals(Arrays.asList(3L,1L,2L,3L,4L,5L),', 1), ('expectedDamage', 1), ('findByName', 1), ('.test();\n', 1), ('MethodHandles.publicLookup().unreflectGetter(javaField);\n', 1), ('requestFirst()', 1), ('sleep.', 1), ('this.filterManager', 1), ('*/\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Target({ElementType.CONSTRUCTOR,', 1), ('SingleUsing(Callable<U>', 1), ('statuses\n', 1), ('keyPassword', 1), ('resumeSingleInCaseOfError})', 1), ('handleWithdrawal(BigDecimal', 1), ('server.getEndpoint()', 1), ('getHostName(InetAddress', 1), ('run-time.\n', 1), ('(loader.getFileName()', 1), ('(Timed<?>)', 1), ('t7)', 1), ('w3', 1), ('con.getErrorStream())', 1), ('assertEquals("07001234",', 1), ('(painlessConstructor', 1), ('Timed', 1), ('actions.length()', 1), ('SingleInternalHelper()', 1), ('(type.toSql.equals(name))', 1), ('singletonList(storageResponse.contentType));\n', 1), ('Classname:', 1), ('MaybeError<T>', 1), ('-3740826063558713822L;\n\n', 1), ('createMessage("late_for_the_party",', 1), ('first();\n\n', 1), ('page.getElementById("password");\n', 1), ('Fighter', 1), ('this.onlyFQNJavaClassName', 1), ('java.util.Collections.emptyMap;\n\nclass', 1), ('(super.tryDispose())', 1), ('((ExecutorService)executor).submit(task);\n', 1), ('futureObservable', 1), ('Noteworthy', 1), ('testGetInstance()', 1), ('evaluation\n', 1), ('studentRepository.registerModified(student2);\n\n', 1), ('TakeUntilMainObserver<T>(observer);\n', 1), ('(args[2])', 1), ('missingLayer)));\n', 1), ('ObservableTimeout<T,', 1), ('"executor-"', 1), ('IllegalStateException("Illegal', 1), ('rangeAsyncPipeline.subscribe(lo);\n\n', 1), ('DROP_OLDEST:\n', 1), ('supportsPosixAttributes', 1), ('lineNumber(CharSequence', 1), ('Objects");\n', 1), ('event[0]);\n', 1), ('volumes.\n', 1), ('brackets', 1), ('"+99324554",', 1), ('T#toString()},', 1), ('testThatClusterIsFormed()', 1), ('Collections.list(permissions.elements()))', 1), ('Set<RoleDescriptor>', 1), ('UTF', 1), ('intensive', 1), ('customer1', 1), ('that.keyPassword', 1), ('DelaySubscriber', 1), ('concatMapToObservableEmpty', 1), ('timeoutContinueOther()', 1), ('add(WeaponType', 1), ('promise.get());\n', 1), ('Optional<TrustConfig>', 1), ('java.util}', 1), ('eligible', 1), ('Observable.fromArray(array);\n\n', 1), ('replaces', 1), ('processFile(StringBuilder', 1), ('this.parsers.put(parser.type(),', 1), ('resultCalc)', 1), ('latter\n', 1), ('playSound', 1), ('NextSubscriber<T>();\n', 1), ('40.54,', 1), ('available=2', 1), ('com.iluwatar.featuretoggle.pattern.tieredversion.TieredFeatureToggleVersion;\nimport', 1), ('allCollection.add(all);\n', 1), ('StudentDataMapperImpl();\n\n', 1), ("computation's", 1), ('ConcatMapIterableTckTest', 1), ('a1);\n', 1), ('SingleUnsubscribeOn<T>', 1), ('docToTicket(results.get(0));\n', 1), ('#refCount()\n', 1), ('enforced', 1), ('(shared.compareAndSet(false,', 1), ('else.\n', 1), ('time");\n', 1), ('app.useReadThroughAndWriteBehindStrategy();\n', 1), ('ThreadPoolExecutor}.', 1), ('SimpleTroll', 1), ('Single.timer(100,', 1), ('(eventId', 1), ('System.getProperty("java.home");\n', 1), ('LOGGER.info("Time', 1), ('patch.\n', 1), ('createProxy(Proxy.Type', 1), ('filename\n', 1), ('Assert.assertEquals(Arrays.asList(0L,', 1), ('ts.assertValue(1);\n//', 1), ('checkJavaVersion(String', 1), ('MaybeCallbackObserver<T>\nextends', 1), ('ThreadDeath}</li>\n', 1), ('SafeSubscriber<Integer>(new', 1), ('output.accept("sun.boot.class.path:', 1), ('"looks', 1), ('paths.add(CertUtils.resolvePath(keyPath,', 1), ('spell2', 1), ('computes', 1), ('cake.getId());\n', 1), ('Objects.equals().\n', 1), ('GuardedQueue,', 1), ('Completable.concat(Flowable.just(Completable.complete()).hide(),', 1), ('guarantees', 1), ('Maybe<String>', 1), ('builder.append("Player:', 1), ('gaps\n', 1), ('assertSame(errorHandler,', 1), ('i)));\n', 1), ('AtomicReference<SingleDisposable<T>[]>(EMPTY);\n', 1), ('RetryBiSubscriber<T>(s,', 1), ('Date(0));\n', 1), ('isPaid(User', 1), ('con.setRequestMethod("HEAD");\n', 1), ('.assertFailure(IllegalStateException.class,', 1), ('MaybeConcatIterable<T>', 1), ('request()', 1), ('","));\n', 1), ('io.reactivex.internal.operators.parallel.*;\nimport', 1), ('DatabaseReader.Builder(databasePath.toFile());\n', 1), ('Move', 1), ('(int)elements).takeWhile(Functions.alwaysTrue())\n', 1), ('lazily,', 1), ('thread!', 1), ('suit\n', 1), ('FileOutputStream(ERROR_FILE));\n\n', 1), ('rested', 1), ('.assertFailure(IndexOutOfBoundsException.class);\n', 1), ('emptiness.\n', 1), ('ticket);\n', 1), ('Flowable.<String>', 1), ('Schedulers.start();\n', 1), ('trustGroupConfig', 1), ('CacheStore.get(userId);\n', 1), ('Executors.newFixedThreadPool(2,', 1), ('follow\n', 1), ('takes\n', 1), ('height="515"', 1), ('studentDatabase;\n\n', 1), ('executor.get();\n\n', 1), ('concentrate', 1), ('SequentialDisposable.\n', 1), ('singletonList("java.lang.Object")));\n\n', 1), ('serviceCache.keySet())', 1), ('sslContextHolder(super.sslConfiguration(settings)).sslContext();\n', 1), ('assertThat(list).isEqualTo(all);\n', 1), ('year)', 1), ('remove(inner);\n', 1), ('org.junit.Assert;\n\nimport', 1), ('<code>handler</code>', 1), ('.append(weapon', 1), ('(Enum<E>', 1), ('CombiningTrustConfig(Arrays.asList(INSTANCE,', 1), ('customer,', 1), ('12/6/15', 1), ('pros', 1), ('failure.\n', 1), ('.concatMapMaybe(Functions.justFunction(Maybe.never()))\n', 1), ('Properties\n', 1), ('MaybeFlatMapObservable(MaybeSource<T>', 1), ('StandardCharsets.UTF_8));\n\n', 1), ('doOnError(Consumer<?', 1), ('.reduceWith(new', 1), ('").replace("\\r",', 1), ('MissingBackpressureException("could', 1), ('yearOption', 1), ('getSender()', 1), ('RxJavaPlugins.setOnObservableLift(new', 1), ('several\n', 1), ('ObservableConcatMapCompletablePerf', 1), ('"lazily".\n', 1), ('org.apache.tika.parser.iwork.IWorkPackageParser(),\n', 1), ('"-Xlog:gc"));\n', 1), ('saveChanges()', 1), ('both.add(bt.next());\n', 1), ('testOnCompletedAfterOnError()', 1), ('blockingGetError()', 1), ('observableDocRefersToObservableTypes()', 1), ('testDamaged(final', 1), ('CertUtils.readCertificates(Collections.singletonList(certPath),', 1), ('clazz.substring(idx', 1), ('DefaultEntry(names.get(i),', 1), ('src="https://raw.githubusercontent.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.doOnSubscribe.png"', 1), ('org.mockito.ArgumentMatchers.anyInt;\nimport', 1), ('org.elasticsearch.transport.TransportService;\n\nimport', 1), ('a.size()', 1), ('java.awt.Dimension;\nimport', 1), ('sb.append(transform.apply(entry)).append(System.lineSeparator()).toString();\n', 1), ('RxJavaPlugins.onIoScheduler(IO);\n', 1), ('properties.entrySet()\n', 1), ('[strength="', 1), ('ZipSingleObserver[n];\n', 1), ('loggingHandler', 1), ('.assertResult("1234567");\n', 1), ('bunch', 1), ('remoteAddress);\n\n', 1), ('Nazgul(NazgulName.AKHORAHIL));\n', 1), ('Least-Recently-Used', 1), ('CompletableMergeSubscriber(s,', 1), ('(int)elements).takeUntil(Flowable.never())\n', 1), ('concatArrayDelayError(MaybeSource<?', 1), ('keySelector,\n', 1), ('Subscriptions.', 1), ('Spliterator<Integer>', 1), ('RxJavaPlugins.setSingleSchedulerHandler(new', 1), ('ProcessBuilder', 1), ('Strings.collectionToCommaDelimitedString(caPaths)', 1), ('IllegalArgumentException("§3.9', 1), ('SingleDelayWithCompletable<T>(this,', 1), ('assertFalse(list.remove((Integer)1));\n\n', 1), ('login()', 1), ('ConcatInnerObserver(this);\n', 1), ('/\n', 1), ('DataSource\n', 1), ('o));\n', 1), ('mergeErrors()', 1), ('(paramType', 1), ('ComputationHolder', 1), ("extension's", 1), ('ObservableConcatWithMaybe(Observable<T>', 1), ('crashDispose;\n\n', 1), ('single.blockingGet();\n', 1), ('writability,', 1), ('actual.onNext(n);\n', 1), ('SingleScheduler', 1), ('concatWith(MaybeSource<?', 1), ('arrayCancelRace()', 1), ('ObservableWindowBoundarySupplier(\n', 1), ('MaybeSource",', 1), ('turns', 1), ('"flowable."', 1), ('FlowableTimeInterval<T>', 1), ('andThenNoInterrupt()', 1), ('imaginary', 1), ('TestHelper.checkUtilityClass(FlowableBlockingSubscribe.class);\n', 1), ('11:58', 1), ('(ParameterListKey)', 1), ('order!"});\n\n', 1), ('latchedObserver.latch.await();\n', 1), ('missingClosingDD(StringBuilder', 1), ('KillerBee());\n', 1), ('times(1)).onComplete(Matchers.isNull(),', 1), ('lemons++;\n', 1), ('eventClassName)', 1), ('testActual()', 1), ('mergeWith(MaybeSource<?', 1), ('mergeNSyncStreamsOfN(final', 1), ('testConversionsStartingFromDto()', 1), ('LoggerFactory.getLogger(App.class);\n\n\n', 1), ('FilterManager', 1), ('committing', 1), ('(addressLineOne', 1), ('EndConsumerHelper.composeMessage(rco.getClass().getName()));\n', 1), ('com.iluwatar.factory.method;\n\nimport', 1), ('super.fulfillExceptionally(exception);\n', 1), ('"+9872342"));\n', 1), ('java.util.stream.Collectors;\n\npublic', 1), ('?user=sven&pass=pass}</tt>\n', 1), ('sarah', 1), ('InvalidOperationException,', 1), ('.append(prefix).append("Extended', 1), ('ExampleTestFixture', 1), ('mock(WizardDao.class);\n\n', 1), ('javax.sound.sampled.AudioSystem;\nimport', 1), ('Tracks', 1), ('Unit\n', 1), ('reliably', 1), ('ObservableFlattenIterable(ObservableSource<T>', 1), ('(as.isCancelled())', 1), ('End', 1), ('edge', 1), ('JavaVersion(version);\n', 1), ('SavePersonApiHandler', 1), ('mock(Connection.class);\n', 1), ('nazguls.put(NazgulName.JI_INDUR,', 1), ('org.h2.jdbcx.JdbcDataSource;\nimport', 1), ('support.', 1), ('-3434801548987643227L;\n\n', 1), ('painlessFieldTypeName)', 1), ('asSubscriber()', 1), ('unwrapDefaultPeriodicTask()', 1), ('createdDateValues[i]', 1), ('MaybeFilterSingle<T>(this,', 1), ('toArray()', 1), ('unavailable.\n', 1), ('isEnhanced()', 1), ('spellDao.persist(spell10);\n', 1), ('entry.setValue(entry.getValue().freeze(computeFunctionalInterfaceMethod(entry.getValue())));\n', 1), ('book.getPrice(),', 1), ('SubscriptionHelper.cancel(parent);\n', 1), ('ObservableIgnoreElements<T>(source));\n', 1), ('mar,', 1), ('sa.produced(Long.MAX_VALUE);\n\n', 1), ('<tt>false</tt>', 1), ('retry.attempts()\n', 1), ('parent.s.request(e);\n', 1), ('(!validation.test(t))', 1), ('queryData()', 1), ('Mammoth();\n\n', 1), ('completeAfterMain()', 1), ('ThreadPoolDispatcher(2));\n', 1), ('BlockingHelper', 1), ('(existingStruct', 1), ('muteShouldRethrowUnexpectedExceptionAsAssertionError()', 1), ('caPaths.equals(that.caPaths)', 1), ('elasticsearchVersion,', 1), ('DisposableHelper.dispose(boundary);\n\n', 1), ('ConditionFactory', 1), ('io.reactivex.flowables;\n', 1), ('testAggregateAsIntSum()', 1), ('Types.fromEs(singleType.sourceAsMap());\n', 1), ('IntervalSubscriber(ts);\n', 1), ('structsMap.containsKey(name);\n', 1), ('!trustStorePassword.equals(that.trustStorePassword)', 1), ('SubscriptionHelper.deferredRequest(parent,', 1), ('targetVersion}\n', 1), ('TakeObserver<T>(observer,', 1), ('complete(u);\n', 1), ('created,', 1), ('basicDataSource.setPassword("sa");\n', 1), ('iteration,\n', 1), ('timePasses()', 1), ('fileLastModified;\n', 1), ('org.elasticsearch.xpack.ml.job.process.autodetect.output;\n\nimport', 1), ('panel.setBounds(0,', 1), ('injections.\n', 1), ('delayMillis\n', 1), ('permissions.', 1), ('fails,', 1), ('TestException())),\n', 1), ('PotatoPeelingTask(5));\n\n', 1), ('TestException("Mapper");\n', 1), ('MAX_LOOK_AHEAD_STEP);\n', 1), ('customerResource.delete(customerOne.getId());\n', 1), ('retryWhen(\n', 1), ('version.get(0)', 1), ("']';\n", 1), ('MulticastProcessor.create(true);\n', 1), ('never()).cancel();\n\n', 1), ('consumer.', 1), ('overrideComputationScheduler()', 1), ('RetrySubscriber<T>(s,', 1), ('this.numberOfObservers', 1), ('reasons).\n', 1), ('3837284832786408377L;\n', 1), ('ByteBuffer[]', 1), ('Iterator<Module>', 1), ('interrupt\n', 1), ('ObservableTakeLastOneTest', 1), ('trampoline().shutdown();\n', 1), ('(unit', 1), ('ticketsCollection.find(find).limit(1).into(new', 1), ('cancelButton.click();\n', 1), ('queryService.getAuthorBooks("username1");\n', 1), ('(BiPredicate<T,', 1), ('it);', 1), ('iterable.forEach(action);\n', 1), ('<li>§1.3:', 1), ('Prototype\n', 1), ('(typically', 1), ('addCustomers(customerDao);\n', 1), ('eventPool.get(eventId).start();\n', 1), ('testMessage', 1), ('seq', 1), ('Observable.fromArray(array).reduce(this);\n\n', 1), ('ToListTckTest', 1), ('verify(firstSet).dispose();\n', 1), ('SingleOperator#apply(SingleObserver)', 1), ('zipCode.equals(address.zipCode)', 1), ('(!found.isPresent())', 1), ('retryWhen(Function<?', 1), ('algorithm.', 1), ('SpellbookDaoImplTest()', 1), ('http://docs.oracle.com/javase/7/docs/technotes/guides/net/http-keepalive.html\n', 1), ('"config.properties";\n\n', 1), ('ChannelFactory', 1), ('normalDelayErrorsTillTheEnd()', 1), ('App.class.getClassLoader().getResourceAsStream(PROP_FILE_NAME);\n\n', 1), ('Objects.requireNonNull(properties,', 1), ('(privateKey', 1), ('mockedDataSource', 1), ('assertTrue(numbers.getNumbers().contains(1));\n', 1), ('serializedConcurrentOnNextOnComplete()', 1), ('topShelf.size());\n\n', 1), ('ticket.getNumbers().getNumbersAsString());\n', 1), ('observableProducers()', 1), ('verifying', 1), ('addObserver(WeatherObserver', 1), ('WILL', 1), ('MaybeHide<T>(this));\n', 1), ('zipCode)', 1), ('schedule;\n', 1), ('TestHelper.checkEnum(ParallelFailureHandling.class);\n', 1), ('lines.get(i);\n', 1), ('}).blockingGet();\n\n', 1), ('Servant(String', 1), ('(!f.canRead())', 1), ('<li>Availability</li>\n', 1), ('@}Target(TYPE)\n', 1), ('Files.setPosixFilePermissions(path,', 1), ('".class");\n\n', 1), ('generate).\n', 1), ('cancel(int', 1), ('parameterTypes)', 1), ('-660395290758764731L;\n\n', 1), ('SwitchMapInnerObserver(SwitchMapObserver<T,', 1), ('securely', 1), ('Thread.currentThread().getName()', 1), ('assertEquals(Long.valueOf(3),', 1), ('servant.giveWine(q);\n', 1), ('observableStart()', 1), ('accountOfJonAfterShotDown.getMoney());\n', 1), ('resumeFunctionInCaseOfError));\n', 1), ('10));\n\n', 1), ('FUTURE_INDEX', 1), ('addAndGet(-e);\n', 1), ('super(200L);\n', 1), ('main.actual.onSubscribe(this);\n\n', 1), ('allPotions.addAll(topShelf);\n', 1), ('Public', 1), ('doc.put("phone",', 1), ('assertFalse(mo.isDisposed());\n\n', 1), ('turnedOffService', 1), ('MammothTest', 1), ('explicit)', 1), ('spell13', 1), ('map/wrap', 1), ('List<EventObserver>', 1), ('srvRunnable', 1), ('"LotteryNumbers{"', 1), ('createNullError()', 1), ('CN', 1), ('movement=%s,', 1), ('java.time.DateTimeException;\nimport', 1), ('hint', 1), ('offset,', 1), ('doc.put("numbers",', 1), ('optional,', 1), ('shutdown\\r\\n");\n', 1), ('onErrorNotImplementedFailureWithUnsubscribeFailure()', 1), ('MovementSelector(Movement.FLYING)))\n', 1), ('this.wizards', 1), ('fromDto.apply(dto);\n', 1), ('t))', 1), ('structsMap.put(importedPainlessTypeName,', 1), ('.append(".gt(")\n', 1), ('SOCKS_PROXY', 1), ('recovered', 1), ('applications,', 1), ('constructor);\n}\n', 1), ('session.merge(entity);\n', 1), ('lexicographically', 1), ('BlockingFlowableIterable<T>', 1), ('singletonList(painlessClassName));\n', 1), ('indices\n', 1), ('jvmArgsAppend', 1), ('memHeap.getUsed();\n\n', 1), ('backport', 1), ('a.onNext(t);\n\n', 1), ('AtomicReference<Future<?>>\nimplements', 1), ('notFused()', 1), ('60.08,', 1), ('SingleDoOnSubscribe<T>(this,', 1), ('MaybeFromSingle<T>(singleSource));\n', 1), ('SingleDoFinally<T>(this,', 1), ('verify()', 1), ('dealing', 1), ('clazz2', 1), ('Single.never().hide());\n', 1), ('build();\n', 1), ('this.tasks', 1), ('requests.add(t);\n', 1), ('java.util.Collections;\n\n/**', 1), ('(scalarEmission', 1), ('observer.assertNoErrors();\n\n', 1), ('(matcher.group("range")', 1), ('fos', 1), ('BaseTypeParser.parse(MaybeNo2Dot0Since.findSource("Single"),', 1), ('o.blockingForEach(new', 1), ('propagate(@NonNull', 1), ('handleRequest(Map<String,', 1), ('browser.\n', 1), ('testFindWizardsWithSpellbook()', 1), ('checkDisposedCompletable(Function<Completable,', 1), ('LOGGER.info(result.toString());\n', 1), ('FlushAcknowledgementHolder(String', 1), ('Libraries', 1), ('Converter<T,', 1), ('m.doOnSuccess(Functions.emptyConsumer());\n', 1), ('assertTrue(optionalCustomer.isPresent());\n', 1), ('SchedulerWorkerTest', 1), ('MAX_STACK_DEPTH', 1), ('f.onError(ex);\n', 1), ('Integer.numberOfLeadingZeros(value', 1), ('Optional<InetAddress>', 1), ('onAfterNext;\n', 1), ('topShelf)', 1), ('addTenant(String', 1), ('ArithmeticSumTask', 1), ('-3096000382929934955L;\n\n', 1), ('observer1.value;\n', 1), ('executorService.invokeAll(tasks);\n\n', 1), ('lastTwoPositives);\n\n', 1), ('FutureSubscriberTest', 1), ('actual.onNext(buffers.poll());\n', 1), ('(this.getStudents().contains(studentToBeUpdated))', 1), ('Observable<?>>()', 1), ('java.time.Duration;\nimport', 1), ('io.reactivex.internal.schedulers;\n\n/**\n', 1), ('(!buffers.isEmpty())', 1), ('line.startsWith("#")', 1), ('parallel2', 1), ('(Files.exists(geoIpConfigDirectory)', 1), ('indices,\n', 1), ('Orgymon"));\n', 1), ('href="http://reactivex.io/documentation/operators/ignoreelements.html">ReactiveX', 1), ('org.hamcrest.Matchers.hasItems;\n\n/**\n', 1), ('library.', 1), ('kvPair.getValue();\n', 1), ('aliases.getAliases().values())', 1), ('v.singleOrError();\n', 1), ('allSpells', 1), ('guests)', 1), ('org.elasticsearch.env;\n\nimport', 1), ('StatusMember}.\n', 1), ('LazyFluentIterable', 1), ('pattern.matcher(indexName).matches())', 1), ('SingleZipIterable(Iterable<?', 1), ('assertNotNull(evenItems);\n', 1), ('details3', 1), ('connections', 1), ('.append("\\n");\n', 1), ('compareAndSet(FUTURE_INDEX,', 1), ('channels,', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/timer.s.png"', 1), ('missingLayer', 1), ('"FlowableFlatMapCompletable",\n', 1), ('indexWildcard));\n', 1), ('.put(signedContent);\n\n', 1), ('BlockingFlowableIterable(Flowable<T>', 1), ('FindCustomer#FindCustomer(java.lang.String,', 1), ('List<U>', 1), ('12/20/15', 1), ('index++;\n\n', 1), ('ObservableJoin<TLeft,', 1), ('whitelistStructs.add(new', 1), ('2^63', 1), ('InnerSubscriber(MergeSubscriber<T,', 1), ('MissingBackpressureException()));\n', 1), ('command.add(bin.toString());\n', 1), ('SlidingDoor', 1), ('FlowableUnsubscribeOn<T>', 1), ('(previous', 1), ('Schedulers#single()', 1), ('urls:', 1), ('fromCallableSingle', 1), ('FileOutputStream(OUTPUT_FILE));\n', 1), ('ArithmeticSumTask(2000));\n', 1), ('cls)', 1), ('LongType;\n', 1), ('lazy,', 1), ('Nazgul.getInstance(NazgulName.HOARMURATH));\n', 1), ('DefaultIfEmptyTckTest', 1), ('ex1;\n', 1), ('MaybeConcatArrayDelayError<T>(sources));\n', 1), ('con.connect();\n', 1), ('getCity()', 1), ('input.size)\n', 1), ('Files.move(sourcePath,', 1), ('topShelf;\n', 1), ('TakeSubscriber(Subscriber<?', 1), ('testFactoryFailureResultsInErrorEmissionFlowable()', 1), ('subscriber2', 1), ('s.request(-99);\n', 1), ('this.crashOnError', 1), ('concatArray(SingleSource<?', 1), ('details3,', 1), ('FutureObserver<T>', 1), ('AtomicAction();\n\n', 1), ('parent.onSuccessCall.accept(value);\n', 1), ('assertNull(fs.get(5,', 1), ('restrictedTrustConfig', 1), ('previous"', 1), ('"org.hibernate.dialect.H2Dialect");\n', 1), ('xs.toList().toFlowable();\n', 1), ('nameBuilder', 1), ('specifier', 1), ('SingleTimer(delay,', 1), ('Flowable<TLeft>', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.concatWith.png"', 1), ('@OneToOne(cascade', 1), ('name.isEmpty())', 1), ('java.nio.file.attribute.PosixFilePermission;\n\n/**', 1), ('allowedCallsPerSecond;\n\n', 1), ('define\n', 1), ('ConcurrentLinkedDeque<>();\n', 1), ('isomorphic', 1), ('assertEquals("email1",', 1), ('(LRU)', 1), ('FileLoggerModule()', 1), ('Response(RestStatus.FORBIDDEN,', 1), ('assertEquals(Collections.<Integer>emptyList(),', 1), ('Byte.parseByte(parts[2])', 1), ('q.addAndGet(n);\n', 1), ('never()).onNext(value);\n\n', 1), ('geoIpConfigDirectory.getFileSystem().getPathMatcher("glob:**.mmdb");\n', 1), ('charFrequency);\n', 1), ('completableStart()', 1), ('globalMutex\n', 1), ('FINISHED)', 1), ('path.substring(0,', 1), ('(context', 1), ('TestHelper.checkEnum(SubscriptionHelper.class);\n', 1), ('WithLatestFromTckTest', 1), ('generator.nextInt();\n', 1), ('AssertionError("Default', 1), ('blobPath', 1), ('TakeUntilPredicateObserver<T>', 1), ('whitelistConstructors.add(new', 1), ('value",', 1), ('TrampolineAppTest', 1), ('service.findWizardsWithSpellbook(bookname);\n', 1), ('"Shark",', 1), ('FlowableLastSingle<T>', 1), ('map.put("sleeping",', 1), ('this.to', 1), ('Messenger\n', 1), ('dates.get(i));\n', 1), ('parameterIndex).split("\\\\s+");\n\n', 1), ('"@whatever.com"));\n', 1), ('conflicting', 1), ('list2.addAll(Arrays.asList(1,', 1), ('futures', 1), ('rogueDouble', 1), ('(html\n', 1), ('removeInner(InnerObserver<T,', 1), ('SingleTimeoutTest', 1), ('"spellbook",', 1), ('FIXME\n', 1), ('"\\r\\n"', 1), ('f.doFinally(MaybeDoFinallyTest.this);\n', 1), ('aq.poll();\n', 1), ('(pendingWrite', 1), ('onCompleteAfterCrash()', 1), ('bracket', 1), ('String.format("id=%s', 1), ("whitelistStruct.javaClassName.lastIndexOf('.');\n\n", 1), ('shouldDeleteCustomer()', 1), ('TestHelper.checkDisposed(Completable.complete().andThen(Single.just(1)));\n', 1), ('collect(@NonNull', 1), ('untilCompletableOtherOnComplete()', 1), ('assertThat(all).hasSize(fs.getSimpleObjects().size());\n\n', 1), ('info)', 1), ('examples:\n', 1), ('"Nguyen");\n', 1), ('SerializedObserver<U>', 1), ('MaybeFromCallable<T>(callable));\n', 1), ('IllegalArgumentException(String.format("number', 1), ('MY', 1), ('citizens.', 1), ('io.reactivex.annotations.NonNull;\n\nimport', 1), ('\\"James', 1), ('outright', 1), ('addThrowable(AtomicReference<Throwable>', 1), ('consequences.', 1), ('1000).reduce(new', 1), ('mostRecentObserver.getIterable();\n', 1), ('specify\n', 1), ('org.elasticsearch.xpack.core.security.authc.Realm;\nimport', 1), ('doOnSuccess(Consumer<?', 1), ('unclear', 1), ('TestException("request()");\n', 1), ('RangeTckTest', 1), ('assertEquals(integers.get(integers.size()', 1), ('RxJavaPlugins.setOnCompletableLift(new', 1), ('list(String', 1), ('FlowableRepeatUntil(Flowable<T>', 1), ('org.elasticsearch.xpack.core.security.action.user;\n\nimport', 1), ('O>', 1), ('executor.execute(()', 1), ('assertTrue(onePointSevenPointOnePointOne.compareTo(onePointSevenPointOne)', 1), ('idiom\n', 1), ("'[';\n", 1), ('tags\n', 1), ('factoryWithDefaultObserver,\n', 1), ('Concurrency', 1), ('assertTrue(between.toString(),', 1), ('list.toArray(a);\n', 1), ('architecture.', 1), ('eventManager.create(60);\n', 1), ('other.pattern);\n', 1), ('lineNum++;\n\n', 1), ('HolderNaive();\n', 1), ('com.iluwatar.throttling.timer;\n\nimport', 1), ('HolyWaterPotion();\n', 1), ('assertThat(obj.getName()).isEqualTo("Foobar");\n', 1), ('Files.createFile(homeDir.resolve("groupConfig"));\n\n', 1), ('threads.");\n', 1), ('testThreadDeathIsThrown()', 1), ('"restrictedTrust=["', 1), ('IncrementingIterable(int', 1), ('.delaySubscription(Flowable.error(new', 1), ('\\"price\\""', 1), ('(depth.get()', 1), ('CakeTest', 1), ('Integer.class;\n', 1), ('TestException\n', 1), ('APIGatewayProxyResponseEvent().withHeaders(headers());\n', 1), ('ExecutableChainInput(ChainInput', 1), ('spellDao.persist(spell1);\n', 1), ('onAfterNext}', 1), ('com.gargoylesoftware.htmlunit.html.HtmlTextInput;\n\nimport', 1), ('RxJavaPlugins.clear();\n//', 1), ('existence.</p>\n', 1), ('"bar"', 1), ('deletedStudents', 1), ('result[1],', 1), ('executor);\n\n', 1), ('https://bugs.openjdk.java.net/browse/JDK-8187485\n', 1), ('getTypeInternal(name);\n', 1), ('TestSubscriber<Object>[]', 1), ('javaVersion)', 1), ('sourcePath', 1), ('Essentially,', 1), ('visitor;\n\n', 1), ('"342-874",', 1), ('this.panel.add(input);\n', 1), ('super(settings);\n', 1), ('Observable&lt;Integer>', 1), ('Arrays.stream(InetAddress.getAllByName(hostName))\n', 1), ('isEmpty}', 1), ('delay(delay,', 1), ('line.trim().substring(0,', 1), ('"s",\n', 1), ('RxJavaPlugins.setInitSingleSchedulerHandler(initReplaceWithImmediate);\n\n', 1), ('(ScheduledThreadPoolExecutor', 1), ('(MethodKey)', 1), ('"+23452346"));\n', 1), ('id.orElse(-1L),\n', 1), ('msg.setBody(body);\n\n', 1), ('testWriterNotNull()', 1), ('cakeLayerInfos.add(new', 1), ('attrs', 1), ('testAllDays(final', 1), ('BucketInfluencer(JOB_ID,', 1), ('simulateEvent(String', 1), ('singleDocRefersToSingleTypes()', 1), ('pretty', 1), ('org.junit.jupiter.api.Assumptions.assumeTrue;\nimport', 1), ('"Froyo",', 1), ('Flowable\n\n', 1), ('code.', 1), ('def()', 1), ('popular', 1), ('Boolean.class;\n', 1), ('RangePerf', 1), ('SingleFromPublisherTest', 1), ('ignore_unavailable\n', 1), ('checkDoubleOnSubscribeMaybeToFlowable(Function<Maybe<T>,', 1), ('obsMaybe;\n\n', 1), ('remove(CacheDisposable<T>', 1), ('ChannelHandler}s\n', 1), ('retries;\n\n', 1), ('InetAddressHelper()', 1), ('remove(InnerCompletableCache', 1), ('this.factoryWithDefaultObserver.apply(defaultObserver);\n', 1), ('LoggingHandler();\n\n', 1), ('fishingBoatAdapter);\n\n', 1), ('buffer,', 1), ('delaySubscription(SingleSource<U>', 1), ('restCancelRace()', 1), ('event,\n', 1), ('shared.onError(npe);\n', 1), ('user");\n', 1), ('basicCoverage()', 1), ('AsyncCallback)}\n', 1), ('FlatMapJustPerf', 1), ('integerIntegerGroupedObservable)', 1), ('SingleObserver<Object>,', 1), ('change\n', 1), ('WeakScalarSubscription(T', 1), ('rules\n', 1), ('bytes)', 1), ('IsEmptyMaybeObserver(SingleObserver<?', 1), ('timePasses(Weekday', 1), ('org.junit.Assert.assertNotSame;\nimport', 1), ('FiniteRange(elements);\n', 1), ('"close")\n', 1), ('unit.convert(time,', 1), ('assertTrue(oliphaunts.contains(firstOliphaunt));\n', 1), ('consumerIndex();\n\n', 1), ('DisposableMaybeObserver&lt;Integer&gt;', 1), ('Quixote",', 1), ('onRequest)', 1), ('TestHelper.race(ft,', 1), ('IllegalArgumentException("getter/setter', 1), ('Completable.mergeArrayDelayError(new', 1), ('((Callable<R>)o).call();\n', 1), ('io.reactivex.internal.util.AtomicThrowable;\n\npublic', 1), ('digOutGold()', 1), ('equals', 1), ('BlockingBaseObserver()', 1), ('LOGGER.info("All', 1), ('Spliterators.AbstractSpliterator<Customer>(Long.MAX_VALUE,', 1), ('purpose', 1), ('creating\n', 1), ('RxJavaPlugins.initSingleScheduler(c));\n\n', 1), ('(ObservableSource<?>', 1), ('com.iluwatar.hexagonal.database.LotteryTicketRepository;\n\nimport', 1), ('Character("Player_4",', 1), ('tss', 1), ('interrupted.\n', 1), ('TakeUntilObserver<T>(serial,', 1), ('FlowableDebounceTimed<T>', 1), ('connectableFlowableAsCo()', 1), ('load(Properties', 1), ('set(AtomicReference<Disposable>', 1), ('comments.\n', 1), ('s.onError(npe);\n', 1), ('.assertResult(1L);\n', 1), ('Math.min(capacity', 1), ('ParallelPeekTest', 1), ('SimpleQueueTest', 1), ('ExceptionHelperTest', 1), ('line\n', 1), ('MaybeDelay<T>(this,', 1), ('put(Fruit', 1), ('url.toString();\n\n', 1), ('AssertionError("Wrong', 1), ('"johndoe@whatever.com");\n', 1), ('(line.contains("("))', 1), ('serialDisposable;\n\n', 1), ('consumer.consume();\n', 1), ('writeOperation', 1), ('workaround,', 1), ('Flowable},', 1), ('getDateList()', 1), ('FindPersonApiHandler', 1), ('8\n', 1), ('d.actual.onError(e);\n', 1), ('java-doc-admin-indices-refresh\n', 1), ('matchingForwardResolvedAddress', 1), ('assertTrue(emitter.toString().contains(MaybeCreate.Emitter.class.getSimpleName()));\n', 1), ('StoreLoad\n', 1), ('mock(FlowableSubscriber.class);\n\n', 1), ('testSwitchWhenEmpty()', 1), ('disposable.dispose();\n', 1), ('exec("Debug.explain(null)"));\n', 1), ('this.javaClassLoader', 1), ('manySources()', 1), ('MongoConnectionPropertiesLoader', 1), ('LOGGER.info("Modifying', 1), ('SchedulerTest', 1), ('task.run();\n', 1), ('publishSubjectAsPp()', 1), ('this.logStreamName', 1), ('Object.class.getMethod(m.getName(),', 1), ('LOGGER.info("...............State:............");\n', 1), ('Files.newOutputStream(propertiesFile))', 1), ('RESTRICTIONS_KEY_SUBJECT_NAME', 1), ('Typically\n', 1), ('transportClientSettings()', 1), ('Maybe&lt;Integer&gt;', 1), ('(compareAndSet(PARENT_INDEX,', 1), ('Provide', 1), ('shouldSaveAllLocalChangesToDb()', 1), ('Base64.getDecoder().decode(license.signature());\n', 1), ('Flowable.combineLatest(\n', 1), ('settingNames.addAll(secureSettings.settingNames);\n', 1), ('ObservableSwitchMapSinglePerf', 1), ('(supportsPosixAttributes)', 1), ('enums.\n', 1), ('d.actual.onSuccess(value);\n', 1), ('(upper', 1), ('root.getFileSystem().getSeparator();\n', 1), ('suits', 1), ('RxJavaPlugins.setIoSchedulerHandler(new', 1), ('assertTrue(ex.isTerminated());\n', 1), ('Pow2', 1), ('IllegalStateException("§2.12', 1), ('NonBlockingThread\n', 1), ('DragonSlayer(new', 1), ('Thread.currentThread().getName(),', 1), ('ConsumerSingleObserver(Consumer<?', 1), ('TrustManager', 1), ('selector.close();\n', 1), ('f.getName();\n', 1), ('".java"))', 1), ('futureResult4.get();\n\n', 1), ('collector.getMessages().size());\n', 1), ('containers', 1), ('(eventPool.get(eventId).isSynchronous())', 1), ('influencer.setInitialAnomalyScore(anomalyScore);\n', 1), ('error(ZipSubscriber<T,', 1), ('java.util.concurrent.Future;\n\n/**\n', 1), ('CapturingObserver<T>', 1), ('CommanderVisitorTest()', 1), ('FlowableOnSubscribe<Long>()', 1), ('robust', 1), ('defClassToObjectClass(painlessReturnClass))', 1), ('single-line', 1), ('getAssistedParameters()', 1), ('#offer(Object,', 1), ('javaInteraceLookups.push(javaPushInterface);\n', 1), ('CompletableToFlowable(CompletableSource', 1), ('log.\n', 1), ('SingleResumeNext<T>', 1), ('1).intValue());\n', 1), ('single2observer', 1), ('populate', 1), ('jdbcMajorVersion()', 1), ('though!!!!)\n', 1), ('.switchMapSingle(Functions.justFunction(Single.never()))\n', 1), ('stuff', 1), ('DistinctUntilChangedTckTest', 1), ('settingNames', 1), ('IllegalStateException("Unknown', 1), ('r/w', 1), ('mammoth",', 1), ('ParallelReduceFullInnerSubscriber[n];\n', 1), ('java.lang.Error}', 1), ("sb.append('/');\n", 1), ('System.out.printf("Peak:', 1), ('IllegalArgumentException("AzureStorageFixture', 1), ('(HtmlAnchor', 1), ('rangeFlatMapJust', 1), ('writing.\n', 1), ('java.sql.SQLDataException;\nimport', 1), ('tenant.getAllowedCallsPerSecond())', 1), ('layer,\n', 1), ('Character(Type', 1), ('this.getStudents())', 1), ('ObservableConcatMap(sources,', 1), ('Collections.singletonList(layer3)));\n\n', 1), ('parallelism)', 1), ('IOUtils.close(databaseReaders.values());\n', 1), ('javaClassesToPainlessStructs.get(javaSuperInterface);\n\n', 1), ('previous;\n', 1), ('HeavyFactory', 1), ('CallbackCompletableObserver(Action', 1), ('empty}', 1), ('between.add(Thread.currentThread().getName());\n', 1), ('(Files.exists(path))', 1), ('SpscLinkedArrayQueue<Integer>(8);\n', 1), ('(!get()', 1), ('CompletableTimer', 1), ('io.reactivex.exceptions;\n', 1), ('TakeWhileSubscriber(Subscriber<?', 1), ('this.getStudents().add(studentToBeInserted);\n\n', 1), ('FlowableTakeLastOneTest', 1), ('testDoRequest()', 1), ('CakeLayerDao\n', 1), ('marble', 1), ('InnerCompletableObserver(s,', 1), ('TestHelper.checkDisposed(Observable.just(1).timeInterval());\n', 1), ('(subscription', 1), ('testInitialValueEmittedNoProducer()', 1), ('<li>Static', 1), ('sourceCode.indexOf("You', 1), ('FlowableLastSingle(Publisher<T>', 1), ('"735-964",', 1), ('Ends', 1), ('member.act(action);\n', 1), ('rogue\n\n', 1), ('BaseDaoTest<Wizard,', 1), ('eventManager.start(sEventId);\n', 1), ('Objects.requireNonNull(javaVersion);\n', 1), ('load.', 1), ('plugin-security.policy.\n', 1), ('csub.add(w2);\n', 1), ('"jdbc:es:localhost:9200/";\n', 1), ('queue-based-load-leveling', 1), ('file)', 1), ('io.reactivex.internal.fuseable.HasUpstreamMaybeSource;\n\npublic', 1), ('S3', 1), ('runOn(scheduler,', 1), ('10:54', 1), ('concentrated.', 1), ('org.elasticsearch.xpack.core.ml.job.config.Job;\n\nimport', 1), ('doLogging((ByteBuffer)', 1), ('SingleToFlowable<E>(other));\n', 1), ('PlayerDetails("ollie@google.com",', 1), ('NetworkService', 1), ('"Operator', 1), ('Class<E>', 1), ('walkingCreatures', 1), ('just(final', 1), ('getPresenter()', 1), ('Pool)', 1), ('allParameters;\n\n', 1), ('").append(description).append("\\n")\n', 1), ('(!compareAndSet(false,', 1), ('Video.class.getDeclaredField(fields[i])));\n', 1), ('getNumbers()', 1), ('License:', 1), ('inner.requestOne();\n', 1), ('panel.add(jtFields[1]);\n', 1), ('invalidUpperJavaMajorVersion);\n', 1), ('otherHeaders)', 1), ('MagicService}).', 1), ('details1', 1), ('getJavaChannel().send(pendingPacket.getData(),', 1), ('Requests', 1), ('assertTrue(onePointSeven.compareTo(onePointSevenPointZero)', 1), ('add(int,', 1), ('jackson', 1), ('chest.\n', 1), ('made\n', 1), ('(shared.get())', 1), ('ScheduledExecutorService\n', 1), ('Schedulers()', 1), ('#fuseToMaybe()}\n', 1), ('struct.members.entrySet())', 1), ('Flowable.<T>fromPublisher(source).materialize().subscribe(lio);\n', 1), ('setReplace()', 1), ('onDisposeCall;\n\n', 1), ('.test(5)\n', 1), ('Status', 1), ('com.iluwatar.builder;\n\nimport', 1), ('org.mockito.stubbing.Answer;\nimport', 1), ('onAfterNext)', 1), ('hasKey', 1), ('secureStrings.put(setting,', 1), ('sendLogRequests(writer,', 1), ('ObservableUnsubscribeOn<T>', 1), ('allLayers', 1), ('rxThreadsBefore', 1), ('simple;\n', 1), ('nextInner))', 1), ('getType("void");\n', 1), ('activeNodes', 1), ('Queue<Runnable>', 1), ('(q1', 1), ('Maybe.amb(Arrays.asList(Maybe.just(1),', 1), ('BallItemTest', 1), ('Maybe.fromAction(null);\n', 1), ('IllegalArgumentException("Illegal', 1), ('uncomment', 1), ('spConsumerNode(node);\n', 1), ('(unbounded', 1), ('ConcatPublisherTckTest', 1), ('times];\n', 1), ('paths.add(CertUtils.resolvePath(certPath,', 1), ('w.subscribe(ts);\n\n', 1), ('SubscriptionHelper', 1), ('io.reactivex.internal.util.ArrayListSupplier;\nimport', 1), ('list.get(index).getCause().getMessage());\n', 1), ('InterruptedIOException()));\n\n', 1), ('successfully");\n', 1), ('TestCompletable();\n', 1), ('this.area.setEditable(false);\n', 1), ('assertTrue(map.toString(),', 1), ('<li>An', 1), ('SingleFlatMapPublisherObserver(Subscriber<?', 1), ('Flowable.<String>never().ignoreElements();\n', 1), ('testedPrototype);\n', 1), ('initialized.");\n', 1), ('ElfWarlord("protecting"),', 1), ('never()).onNext(any(String.class));\n', 1), ('(accountFrom', 1), ('Maybe.just(1).hide().flatMapPublisher(new', 1), ('existingStruct.clazz.getName()', 1), ('CustomerNotFoundException.class.isAssignableFrom(e.getClass())\n', 1), ('first.interpret();\n', 1), ('allowed!"),', 1), ('keys', 1), ('org.elasticsearch.license;\n\nimport', 1), ('(!f.getName().endsWith(".java"))', 1), ('elements()', 1), ('mo.onError(new', 1), ('ExceptionHelper.wrapOrThrow(errors[0]);\n', 1), ('Character("Player_3",', 1), ('MessageCollectorMemberTest', 1), ('"rx2.purge-period-seconds";\n\n', 1), ('explains', 1), ('org.mockito.Mockito.*;\nimport', 1), ('SingleTimeout<T>', 1), ('§1.3', 1), ('CompletableFromCallable(Callable<?>', 1), ('java.math.BigDecimal}</li>\n', 1), ('callable.', 1), ('testDefaultIoSchedulerIsInitializedLazily()', 1), ('exit.', 1), ('TestHelper.checkDisposed(Observable.just(new', 1), ('DATA;\n', 1), ('(requested.isEmpty())', 1), ('PerfSubscriber(Blackhole', 1), ('Constructor<?>', 1), ('RainbowFishSerializer.writeV1(fishV1,', 1), ('-4627193790118206028L;\n\n', 1), ('split', 1), ('one");\n', 1), ('--r;\n', 1), ('ATTACHMENTS', 1), ('Consumer<TestObserver<T>>()', 1), ('car:");\n', 1), ('"Deposit', 1), ('deferred.complete(t);\n', 1), ('Objects.requireNonNull(System.getProperty("external.address"));\n', 1), ('inDateFormat,', 1), ('.concatWith(Maybe.<Integer>empty())\n', 1), ('REPLACE_EXISTING);\n', 1), ('instantiation\n', 1), ('secureSettings)', 1), ('interrupts.<br>\n', 1), ('TestHelper.checkDisposed(PublishProcessor.create().singleOrError().onTerminateDetach());\n', 1), ('OperatorCreationException', 1), ('"UserDto{"', 1), ('Publisher<String>', 1), ('to.onSubscribe(is);\n\n', 1), ('JRE</li>\n', 1), ('ivoryTower1);\n', 1), ('containsAll(Collection<?>', 1), ('checkDoubleOnSubscribeFlowable(Function<Flowable<T>,', 1), ('SYNTAX;\n', 1), ('whilst', 1), ('Single<?>[]', 1), ('onAfterNext', 1), ('(!veryEnd)', 1), ('list2)', 1), ('evenItems.get(0));\n', 1), ('PlayerDetails("john@google.com",', 1), ('observer.update((S)', 1), ('schedulerSpecEnd', 1), ('(paramType.isPrimitive())', 1), ('objects.stream().forEach(o1', 1), ('ObjectHelper.requireNonNull(zipper.apply(values.clone()),', 1), ('parameter\n', 1), ('started;\n', 1), ('add(Example,', 1), ('esVersion', 1), ('sc)', 1), ('ES</li>\n', 1), ('this.functionName', 1), ('message.getHeaders();\n', 1), ('System.out.println("DTO', 1), ('Single.ambArray(Single.just(1),', 1), ('setFunctionVersion(String', 1), ('TimerSubscriber(Subscriber<?', 1), ('arrayCancelled()', 1), ('"734-853",', 1), ('ch.write(ByteBuffer.wrap("TEST\\n".getBytes(StandardCharsets.UTF_8))).get();\n', 1), ('processor.onNext("one");\n', 1), ('sb.append(s.replace("!/"', 1), ('takeUntil(Publisher<U>', 1), ('SingleDelay<T>(this,', 1), ('MaybeDoAfterSuccessTest', 1), ('ownerStruct.methods.put(painlessMethodKey,', 1), ('this.props.putAll(props);\n', 1), ('setAddressLineOne(String', 1), ('accept(Observer<Object>', 1), ('File(rxdir).listFiles();\n', 1), ('X500Principal("CN=esnode"),', 1), ('CompletableDisposable', 1), ('(onOverflow', 1), ('flowable,', 1), ('frc,', 1), ('avoided,', 1), ('callbacks.\n', 1), ('(ZipMaybeObserver<?>', 1), ('registerObserver(obs);\n', 1), ('java.nio.file.StandardCopyOption.ATOMIC_MOVE;\nimport', 1), ('testPluginExceptionWhenUnsubscribing2()', 1), ('6537757548749041217L;\n\n', 1), ('Edition.\n', 1), ('org.elasticsearch.xpack.watcher.execution;\n\nimport', 1), ('customerDao.getById(2));\n', 1), ('setters;\n\n', 1), ('ts.values();\n', 1), ('ReaderAndWriterTest', 1), ('disposeUpFront()', 1), ('javax.enterprise.inject.Produces;\n\nimport', 1), ('com.iluwatar.hexagonal.domain.LotteryAdministration;\nimport', 1), ('discover', 1), ('subscriptionIndicator', 1), ('OnErrorResumeNextTckTest', 1), ('#testUnhandledErrorIsDeliveredToThreadHandler},', 1), ('Observable.just(1).takeLast(1).subscribe(s);\n', 1), ('"ca=["', 1), ('this.arguments', 1), ('Bytes', 1), ('Callable<Maybe<Integer>>()', 1), ('resourceDisposer;\n\n', 1), ('CompletableToFlowable<Integer>(composer.apply(pp.ignoreElements())).subscribe(ts);\n', 1), ('"Sham",', 1), ('onErrorAfterComplete()', 1), ('intelligence="', 1), ('flushCache...");\n', 1), ('lowerBound,', 1), ('testRead()', 1), ('AnimalSniffer:', 1), ('++i;\n\n', 1), ('AssertionError(ex.getMessage());\n', 1), ('courage"));\n', 1), ('UnsubscribeObserver<T>(t,', 1), ('co[0].onError(new', 1), ('(iterable', 1), ('opportunity', 1), ('subject,', 1), ('spellbookDao.persist(spellbook6);\n', 1), ('funds");\n', 1), ('up.onComplete();\n\n', 1), ("'m'))));\n", 1), ('tokens[2];\n', 1), ('DbCustomerDaoTest', 1), ('"proxy.socks";\n', 1), ('TIKA_INSTANCE', 1), ('Work.\n', 1), ('trustStoreAlgorithm,', 1), ('ES_PLUGIN_PROPERTIES', 1), ('Integer[d];\n\n', 1), ('Component.\n', 1), ('subject,\n', 1), ('requests.add(CANCELLED);\n', 1), ('InfiniteRangeIterator', 1), ('org.objectweb.asm.Type.getType(augmentation);\n', 1), ('1422936876.262044869,', 1), ('settings.setThemeProvider(new', 1), ('"transport.tcp.port:', 1), ('TypeResolution(message);\n', 1), ('assertEquals("n', 1), ('supplier.call();\n', 1), ('Single.just(2)\n', 1), ('trySet(AtomicReference<Disposable>', 1), ('menuActions.stream().map(MenuAction::getMenuItem).filter(MenuItem.COMPANY::equals).count());\n\n', 1), ('WashingMachineTest', 1), ('onCompletableLift', 1), ('timeout0(final', 1), ('!Modifier.isVolatile(method.modifiers))', 1), ('aLong)', 1), ('numberOfSongs)', 1), ('ResumeMainSingleObserver<T>(s,', 1), ('handler,\n', 1), ('Thread.sleep(this.delay);\n', 1), ('statementCount', 1), ('f.onBackpressureLatest();\n', 1), ('PlayerDetails("larry@google.com",', 1), ('b.substring(definitionStart,', 1), ('DragonSlayingStrategy})', 1), ('paidGroup.add(user);\n', 1), ('nice', 1), ('org.elasticsearch.xpack.sql.expression.FieldAttribute;\nimport', 1), ('(!Thread.currentThread().isInterrupted())', 1), ('StatementProxy(DebugLog', 1), ('List<Whitelist.Constructor>', 1), ('accountNoFrom,\n', 1), ('GWeather();\n', 1), ('assertFalse(allOdd.blockingFirst());\n', 1), ('needing', 1), ('sleep."));\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/PublishProcessor.png"', 1), ('InMemoryCustomerDaoTest', 1), ('Collections.unmodifiableList(items);\n', 1), ('this(LdapMetaDataResolverSettings.ADDITIONAL_META_DATA_SETTING.get(settings),', 1), ('exp.nodeName(),', 1), ('!trustStorePath.equals(that.trustStorePath)', 1), ('indefinitely.\n', 1), ('algo);\n', 1), ('Executors.newFixedThreadPool(10);\n', 1), ('ErrorView(),', 1), ('TrampolineWorker();\n', 1), ('java.util.stream.Collectors.toMap;\n\npublic', 1), ('DelaySubscriber<T>(s,', 1), ('height="395"', 1), ('FlamingAsteroid(0,', 1), ('getMethodType()', 1), ('ports}', 1), ('integrationFixtures()', 1), ('hasNext();\n\n', 1), ('XCHG', 1), ('value()', 1), ('PlayerDetails("ray@google.com",', 1), ('BiFunction<String,', 1), ('mergeDelayError(Flowable.fromIterable(sources));\n', 1), ('randomIterator;\n\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.flatMapCompletable.png"', 1), ('Flowable.just("one").doOnTerminate(new', 1), ('channelToPendingWrites', 1), ('org.elasticsearch.xpack.watcher.input.chain;\n\nimport', 1), ('IgnoreMaybeObserver(CompletableObserver', 1), ('trampolineWorker', 1), ('this.sourceSupplier', 1), ('this.panel.add(contents);\n', 1), ('break.\n', 1), ('IllegalArgumentException");\n', 1), ('badSourceDelayError()', 1), ('nThreads', 1), ('createSingleScheduler()', 1), ('other.fieldString);\n', 1), ('MaybeDoAfterSuccess<T>', 1), ('MessageData("message");\n', 1), ('bug)\n', 1), ('assertNull(cake.getId());\n\n', 1), ('RefCountObserver<T>\n', 1), ('AsynchronousServiceTest', 1), ('MaybeToFlowable<T>(this));\n', 1), ('CompletableObserver}.\n', 1), ('actions.put(randomAlphaOfLength(10),', 1), ('fromPublisher}', 1), ('CacheStore.writeThrough(userAccount);\n', 1), ('Collections.unmodifiableList(index);\n', 1), ('assertFalse(allOdd.blockingGet());\n', 1), ('PURGE_ENABLED', 1), ('toFunction8()', 1), ('ds.subscribeTo(Flowable.just(1));\n\n', 1), ('SQL-related', 1), ('8:45', 1), ('times(1)).onNext("1");\n', 1), ('.interval(1,', 1), ('java.nio.file.attribute.PosixFileAttributes;\nimport', 1), ('org.elasticsearch.xpack.sql.jdbc;\n\nimport', 1), ('testFatalError()', 1), ('FlowableCollect(Flowable<T>', 1), ('Data\n', 1), ('c.accept(d);\n\n', 1), ('io.reactivex.internal.util.ExceptionHelper;\n\nfinal', 1), ('CheckedConsumer<OutputStream,', 1), ('javadoc2.indexOf("{@",', 1), ('studentToBeUpdated);\n\n', 1), ('servers.get(lastServedId++);\n', 1), ('in.getTotalSpace();\n', 1), ('assertTrue(repository.getCountersCollection().count()', 1), ('io.reactivex.*;\n\n\npublic', 1), ('formats', 1), ('FlowableWithLatestFromMany<T,', 1), ('href="http://wiki.c2.com/?DataBusPattern">http://wiki.c2.com/?DataBusPattern</a>\n', 1), ('(Files.exists(normalizedPath)', 1), ('[y/N]");\n', 1), ('DatagramPacket(data,', 1), ('ObjectHelper.requireNonNull(singleFunction,', 1), ('ProductInformationClient', 1), ('this.properties', 1), ('closes.");\n', 1), ('SingleJust(T', 1), ('records', 1), ('(Microsoft', 1), ('assertEquals(expectedAuthor,', 1), ('"MESSAGE";\n', 1), ('\\"username\\",', 1), ('Parameter(parameterTypes.get(i).getType(),', 1), ('Collections.unmodifiableList(Objects.requireNonNull(whitelistStructs));\n', 1), ('<a\n', 1), ('numbers1);\n', 1), ('.name("Poor', 1), ('TREE_ROOT', 1), ('Functions.justCallable(Observable.just(3)))\n', 1), ('apiGatewayProxyRequestEvent,', 1), ('CustomRealm::new);\n', 1), ('LOGGER.info("ModuleTest::readFirstLine()', 1), ('veryEnd;\n\n', 1), ('doLogging(ByteBuffer', 1), ('complete.', 1), ('ServerSocketChannel.open());\n', 1), ('V>newConcurrentMap());\n', 1), ('ImmediateThinScheduler.INSTANCE.createWorker().schedule(Functions.EMPTY_RUNNABLE,', 1), ('batch.\n', 1), ('observableInner;\n\n', 1), ('IllegalStateException("getProcessors', 1), ('EqualObserver<T>\n', 1), ('(requested)', 1), ('(Modifier.isStatic(javaField.getModifiers()))', 1), ('(Function)ToObservable.INSTANCE;\n', 1), ('ExecutableChainInput', 1), ('wash()\n', 1), ('parsers.get(type);\n', 1), ('list3.add(7);\n', 1), ('javaMethodHandleSetter;\n\n', 1), ('AbstractComponent\n', 1), ('testNotAllObservable()', 1), ('30', 1), ('ambArrayEmpty()', 1), ('fs.onSubscribe(new', 1), ('invoked,', 1), ('submit/retrieve', 1), ('domain:");\n', 1), ('dao.getById(CUSTOMER.getId());\n', 1), ('executorService.shutdownNow();\n', 1), ('domainapp.dom.app.homepage;\n\nimport', 1), ('seen', 1), ('assertEquals(expectedItem.getType(),', 1), ('area.\n', 1), ('pp0.onNext(pp1);\n\n', 1), ('evenNumber));\n\n\n', 1), ('org.elasticsearch.xpack.qa.sql.jdbc;\n\nimport', 1), ('ThreadDeath();\n', 1), ('query(),', 1), ('unprivileged', 1), ('setLogGroupName(String', 1), ('con::getHeaderField\n', 1), ('builder.append("Stats:\\n");\n', 1), ('"NewThreadSchedulerTest";\n', 1), ('%.2f', 1), ('context.sequence("create");\n', 1), ('host(settings.getProperty(HTTP_PROXY,', 1), ('Puzzlers",', 1), ('FlowableCountSingle(Flowable<T>', 1), ('evenItems', 1), ('o.onError(err2);\n', 1), ('"-Xms1g\\n%d-:-Xmx1g\\n%d-:-XX:+UseG1GC\\n%d-:-Xlog:gc",\n', 1), ('wisdom")});\n', 1), ('io.reactivex.flowables.GroupedFlowable}.\n', 1), ('addUserToFreeGroup(final', 1), ('EventDispatcher', 1), ('RxJavaPlugins.createNewThreadScheduler(factory);\n', 1), ('instanceof-check.', 1), ('parent.s.request(p);\n', 1), ('source2;\n\n', 1), ('Collections.<EmailAttachmentParser.EmailAttachment>emptyList());\n\n', 1), ('targeted', 1), ('ver)', 1), ('"Login".equals(page.getTitleText());\n', 1), ('&lt;filter-name&gt;wicket&lt;/filter-name&gt;\n', 1), ('//make', 1), ('accessDeclaredMembers}', 1), ('Stream<Entry>', 1), ('cdl.await();\n', 1), ('org.apache.isis.applib.fixturescripts.FixtureScripts;\nimport', 1), ('RequestEarly();\n\n', 1), ('Observer<?>', 1), ('decryptedPrivateKey', 1), ('line.toCharArray())', 1), ('onSuccessMapper', 1), ('SwitchMapSingleObserver(SwitchMapSingleMainObserver<?,', 1), ('keyPair', 1), ('List<Callable<S>>', 1), ('oneMethod', 1), ('ObservableBuffer<T,', 1), ('entry.getKey();\n', 1), ('type,\n', 1), ('RxJavaPlugins.onSubscribe(Single.just(1),', 1), ('ScalarSubscription(Subscriber<?', 1), ('MAX_LOOK_AHEAD_STEP', 1), ('filterResults(String', 1), ('Producer()', 1), ('accidentally', 1), ('fail("No', 1), ('jdk', 1), ('org.elasticsearch.common.util.CollectionUtils;\n\nimport', 1), ('SocketChannel}', 1), ('innerObserver.onComplete();\n', 1), ('FlowableIntervalRangeTest', 1), ('inner.requestMore(1);\n', 1), ('Integer.getInteger(KEY_NEWTHREAD_PRIORITY,', 1), ('parent.onRequest.accept(n);\n', 1), ('task);\n\n', 1), ('filesystems', 1), ('lambdaInfo.setMemoryLimitInMb(context.getMemoryLimitInMB());\n\n', 1), ('IUnitOfWork.INSERT);\n', 1), ('PLAYERS.size();', 1), ('org.elasticsearch.common.unit.TimeValue;\n\nimport', 1), ('"localhost";\n', 1), ('SingleObserver\n', 1), ('").append(ste).append("\\r\\n");\n', 1), ('assertSame(underlying,', 1), ('DecoratingIterator<E>', 1), ('assertFalse(w.isDisposed());\n\n', 1), ('textInput', 1), ('DatabaseReaderLazyLoader(databaseFileName,\n', 1), ('io.reactivex.processors;\n', 1), ('ObservableThrottleFirstTest', 1), ('ServerSqlException', 1), ('string,', 1), ('observerCompletable()', 1), ('write-around\n', 1), ('java.util.UUID}</li>\n', 1), ('Desktop', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Single.onErrorReturn.png"', 1), ('MaybeUnsafeCreate<T>(source));\n', 1), ('*";\n', 1), ('testQueue()', 1), ('children.size();', 1), ('*/\n@Retention(RetentionPolicy.RUNTIME)\n@Documented\n@Target({ElementType.METHOD,', 1), ('threadSafeIvoryTower2);\n\n', 1), ('MaybeCallbackObserver<Object>(Functions.emptyConsumer(),', 1), ('Objects.requireNonNull(javaClassLoader);\n', 1), ('onCompletableLift.call(lift);\n//', 1), ('batch);\n', 1), ('Completable.complete().doOnEvent(new', 1), ('Functions.justFunction(next),', 1), ('pathMatcher', 1), ('MaybeCallbackObserverTest', 1), ('jenkins', 1), ('7)));\n\n', 1), ('change.\n', 1), ('interacting', 1), ('this.onSubscribeCall', 1), ('supportsPosixPermissions', 1), ('asNormalizables.size());\n', 1), ('Objects.hash(title,', 1), ('CustomerResource}.\n', 1), ('name.split("\\\\$");\n', 1), ('jarpath', 1), ('Array.getLength(array);\n', 1), ('dependencies,', 1), ('unique;\n\n', 1), ('Object>(null,', 1), ('"?"', 1), ('newThread().start();\n', 1), ('parallel1', 1), ('Short.class)', 1), ('assertEquals(FACTOR', 1), ('IllegalArgumentException("augmented', 1), ('@', 1), ('assertSame(myb,', 1), ('Objects.requireNonNull(value);\n', 1), ('toString("");\n', 1), ('currentCount++;\n', 1), ('List<DwarvenMineWorker>', 1), ('painlessStruct.name', 1), ('statusRecordsTheStartTime()', 1), ('Callable<Map<Object,', 1), ('FUSED_EMPTY)', 1), ('whitelistStruct.whitelistMethods)', 1), ('activates/deactivates', 1), ('onNextFailure()', 1), ('DatabaseReaderLazyLoader', 1), ('ignoreTests', 1), ('Flowable.merge(input.observables).subscribe(o);\n', 1), ('factory);\n', 1), ('base64Encode(bytesOut.toByteArray());\n', 1), ('JdbcConfiguration.create(url,', 1), ('KingJoffrey();\n\n', 1), ('plugins)', 1), ('Observer<U>,', 1), ('fromActionTwice()', 1), ('-5526049321428043809L;\n\n', 1), ('Object[]{"NonExistentCommand",', 1), ('concatMap(Function<?', 1), ('ByteArrayOutputStream#write(byte[])}', 1), ('io.reactivex.Observable#safeSubscribe(io.reactivex.Observer)}\n', 1), ('"bad_server";\n\n', 1), ('Author("new_name2",', 1), ('de.emit();\n', 1), ('X509Certificate[0];\n', 1), ('DelaySubscriber(Subscriber<?', 1), ('ObservableConcatWithCompletable<T>', 1), ('Failed', 1), ('de.agilecoders.wicket.core.Bootstrap;\nimport', 1), ('requested;\n', 1), ('SamlRedirect', 1), ('predicate).singleElement();\n', 1), ('single.\n', 1), ('System.out.println("testAsynchronousDrop', 1), ('implicit', 1), ('Integer>,', 1), ('int)\n', 1), ('SampleTimedEmitLast(Subscriber<?', 1), ('javax.sql.rowset.serial.SerialException;\n\nimport', 1), ('3:21', 1), ('enabled)', 1), ('SimpleMessageQueue', 1), ('ParallelFilterConditionalSubscriber<T>', 1), ('functionVersion)', 1), ('io.reactivex.subjects.PublishSubject;\n;\n\npublic', 1), ('ActionListener<List<EsIndex>>', 1), ('unboxTo)', 1), ('expectedStealMethod)', 1), ('StringReader(upperBoundGreaterThanLowerBound);\n', 1), ('pattern.asPredicate());\n', 1), ('references()', 1), ('delaySubscriptionObservable()', 1), ('subscribers?",', 1), ('assertNull(RxJavaPlugins.onSingleReturn(null));\n//\n//', 1), ('holderField.setAccessible(true);\n\n', 1), ('DisposablesTest', 1), ('getNoOfServers()', 1), ('loader.loadData();\n', 1), ('developers', 1), ('BaseConcatMapSubscriber(\n', 1), ('checkDoubleOnSubscribeCompletable(Function<Completable,', 1), ('Callable<Object>,', 1), ('readability', 1), ('Thread.sleep(Long.MAX_VALUE);\n', 1), ('{}.', 1), ('Allocate', 1), ('namespace', 1), ('view.showMessage("Please', 1), ('first-class', 1), ('File("fish1.out");\n', 1), ('""\n', 1), ('"rx2.single-priority";\n\n', 1), ('ballItem.move();\n', 1), ('CompletableFromCallable', 1), ('(indexInTail', 1), ('FlowableTimer', 1), ('DatagramPacket)', 1), ('getObjectToExplain()', 1), ('EXECUTABLE', 1), ('CANCELLED\n', 1), ('deprecated/internal/not', 1), ('countersCollection', 1), ('data.isEmpty()', 1), ('AmbInnerSubscriber<T>(this,', 1), ('extends\n', 1), ('pages', 1), ('.flatMapCompletable(Functions.justFunction(Completable.complete()),', 1), ('generateRandomNumbers()', 1), ('Processor.Factory>', 1), ('setLoginTimeout(int', 1), ('io.reactivex.internal.operators.observable.ObservableGroupJoin.*;\nimport', 1), ('longs.setNextDocId(d);\n', 1), ('"KillerBee",', 1), ('io.reactivex.internal.disposables.EmptyDisposable;\n\n/**\n', 1), ('<li>Pre-constructed', 1), ('chunks', 1), ('onSubscribeCall,\n', 1), ('Object.equals).\n', 1), ('RxJavaPlugins.setOnCompletableAssembly(completable2completable);\n', 1), ('percent\n', 1), ('MaybeOnSubscribe\n', 1), ('Docs)</a>\n', 1), ('BlockingObservableLatestTest', 1), ('writeTo(final', 1), ('AppConfig.class);\n', 1), ('observers.add(open);\n\n', 1), ('"lazy".\n', 1), ('ts2.assertNotComplete();\n\n', 1), ('TestHelper.checkDisposed(Observable.intervalRange(1,', 1), ('onNextMapper,', 1), ('Iterable<Entry>', 1), ('container;\n\n', 1), ('Pattern.quote("${logstash.template.version}");\n\n', 1), ('(List<Map<String,', 1), ('Objects.equals(userId,', 1), ('Different', 1), ('con.setReadTimeout((int)', 1), ('synthetic', 1), ('(strength', 1), ('FlowableEventStream()', 1), ('ObservableToFutureTest', 1), ('this.toSql', 1), ('CacheStore.readThrough(userId);\n', 1), ('specialDay;\n\n', 1), ('msg;\n', 1), ('Order("",', 1), ('BackpressureDropSubscriber(Subscriber<?', 1), ('MaybeSource<T>>', 1), ('com.google.common.base.Joiner;\nimport', 1), ('EnumMap<>(PotionType.class);\n', 1), ('getInnerQueue(InnerSubscriber<T,', 1), ('-3688291656102519502L;\n\n', 1), ('java.lang.reflect.ReflectPermission}\n', 1), ('closed.set(true);\n', 1), ('presenter.confirmed();\n', 1), ('append-only', 1), ('URLEncoder.encode(param,', 1), ('0.07,', 1), ('JLabel("Deposit', 1), ('Bucket(JOB_ID,', 1), ('data;\n\n', 1), ('java.nio.file.AtomicMoveNotSupportedException;\nimport', 1), ('p.flowable();\n', 1), ('Amb</a>\n', 1), ('AnnotationBasedRepositoryTest', 1), ('can,', 1), ('when(badMoodRoyalty.getMood()).thenReturn(true);\n\n', 1), ('w.subscribe(to);\n\n', 1), ('spellbook6.addSpell(spell14);\n', 1), ('.onErrorReturn(new', 1), ('compareAndSet(false,', 1), ('allSimpleTypes()', 1), ('flowable.blockingGet();\n', 1), ('LOGGER.info("putting");\n', 1), ('java.util.jar.Manifest;\n\npublic', 1), ('ToObservable', 1), ('super.newPermissionCollection();\n', 1), ('spellbookDao.merge(spellbook3);\n', 1), ('member.getValue().setter);\n', 1), ('inventorySize);\n', 1), ('creatures.stream()\n', 1), ('(fname.endsWith(".java"))', 1), ('MaybeDoFinallyTest', 1), ('(Modifier.isStatic(m.getModifiers()))', 1), ('Trampoline<T>()', 1), ('addStruct(whitelist.javaClassLoader,', 1), ('10:02', 1), ('invalid.\n', 1), ('dispatcher}', 1), ('started));\n', 1), ('BlockingObservableMostRecentTest', 1), ('testPluginExceptionWhileOnErrorThrowsAndUnsubscribeThrows()', 1), ('AbstractNioChannel}', 1), ('AtomicReference<Disposable>(u);\n\n', 1), ('ObserveOnMaybeObserver(MaybeObserver<?', 1), ('writeBlob(String', 1), ('com.iluwatar.cqrs.app;\n\nimport', 1), ('newThread().shutdown();\n', 1), ('Fortunately', 1), ('BlockingObservableIterable<T>', 1), ('goodCompany', 1), ('org.elasticsearch.xpack.core.ml.job.process.autodetect.writer.RecordWriter;\nimport', 1), ('TimeoutException\n', 1), ('value=1]",', 1), ('dl.run();\n\n', 1), ('FlowableFlatMapCompletableCompletable<T>', 1), ('artistInputTextField', 1), ('URLFixture', 1), ('sequential(Flowable.bufferSize());\n', 1), ('ps.publish().autoConnect(0);\n\n', 1), ('JarFile', 1), ('subscribe(o,', 1), ('9-:-Xlog:age*=trace,gc*,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m}\n', 1), ('.concatWith(Flowable.range(0,', 1), ('processKey(SelectionKey', 1), ('onErrorMapper', 1), ('first4.get(3));\n', 1), ('MaybeOperator&lt;String&gt;', 1), ('Disposables.fromRunnable(dispose);\n', 1), ('firstCancelRace()', 1), ('Flowable.zip(Arrays.asList(\n', 1), ('http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html\n', 1), ('BasicConfigurator.configure();\n', 1), ('org.apache.tika.parser.microsoft.OfficeParser(),\n', 1), ('urls,', 1), ('Word(List<Letter>', 1), ('-5454794857847146511L;\n\n', 1), ('SubscriptionHelper.deferredSetOnce(s,', 1), ('ImmediateThinScheduler.INSTANCE.createWorker();\n\n', 1), ('useInfinite', 1), ('(col', 1), ('DatagramPacket(buffer);\n', 1), ('ActionFuture<T>', 1), ('Processor.\n', 1), ('Flowable.concatEager(Flowable.just(\n', 1), ('"10000"', 1), ('MaybeFlatMapPublisherTckTest', 1), ('FlowableAutoConnect(ConnectableFlowable<?', 1), ('IgnoreElements</a>\n', 1), ('doubleOnSubscribe(CompletableObserver', 1), ('<tt>web.xml</tt>.\n', 1), ('luck="', 1), ('WithLatestInnerSubscriber\n', 1), ('blockingSubscribeObserverError()', 1), ('fruit\n', 1), ('JavaVersion.current().compareTo(JavaVersion.parse("11"))', 1), ('resumeSingleInCaseOfError)', 1), ('MaybeAmb<T>(null,', 1), ('.observeOn(scheduler)\n', 1), ('JOB_ID', 1), ('BufferBoundaryObserver<?,', 1), ('intelligence\n', 1), ('"java.util.txt",\n', 1), ('-4663883003264602070L;\n\n', 1), ('failComputationObservableBlockingLatest()', 1), ('MaybeCache<T>(this));\n', 1), ('"fish1.out");\n', 1), ('#getWrappedRunnable()}.\n', 1), ('source1;\n', 1), ('cfg))', 1), ('assertTrue(first.isPresent());\n', 1), ('expectedDamage)', 1), ('tss[i].assertFailure(IllegalArgumentException.class);\n', 1), ('this.handled;\n', 1), ('t8)', 1), ('4",', 1), ('IndexDeprecationChecks::storeThrottleSettingsCheck,\n', 1), ('IOException("Plugins', 1), ('finished");\n', 1), ('src.subscribe(main);\n', 1), ('errorNotImplementedNull1()', 1), ('IMPLEMENTATION:\n\n', 1), ('assertTrue(numbers.getNumbers().contains(2));\n', 1), ('InitializingOnDemandHolderIdiom()', 1), ('internally.', 1), ('LEVEL', 1), ('availableToppings)', 1), ('warning.\n', 1), ('BlockingObserverTest', 1), ('completableSupplier;\n', 1), ('lambdaInfo.setLogStreamName(context.getLogStreamName());\n', 1), ('toSql;\n\n', 1), ('observableSource', 1), ('IllegalStateException("Test', 1), ('token;\n', 1), ('Collections.unmodifiableList(Objects.requireNonNull(whitelistFields));\n', 1), ('PURGE_PERIOD_SECONDS', 1), ('Iterator<Entry>()', 1), ('@When("^I', 1), ('FileWriterAction}', 1), ('storageServer;\n', 1), ('cancel();\n\n', 1), ('entityManager', 1), ('RxJavaPlugins.onAssembly(oos));\n\n', 1), ('runnableDisposedAsync2()', 1), ('Making', 1), ('emitting\n', 1), ('previousSpell.redo();\n', 1), ('Charset.forName("UTF-8"));\n', 1), ('LotteryAdministration(LotteryTicketRepository', 1), ('ParallelFlowable<T>,', 1), ('anyway', 1), ('setupBasicAuth(cfg);\n', 1), ('Parameter', 1), ('shouldSaveCustomer()', 1), ('org.hamcrest.Matchers.hasSize;\nimport', 1), ('a.length);\n\n', 1), ('Delimits', 1), ('rest;\n\n', 1), ('Character("Player_1",', 1), ('"strawberry",', 1), ('StandardCharsets.UTF_8),', 1), ('"Backpressure:",', 1), ('onComplete();\n\n}\n', 1), ('badCompany', 1), ('WebClient}\n', 1), (':-)\n', 1), ('LinkedQueueNode(E', 1), ('java.lang.reflect.Constructor<?>', 1), ('listener.onResponse(toMap(entry::getAttribute));\n', 1), ('lastServedId', 1), ('()\n', 1), ('tickets.get(id);\n', 1), ('"ticketId").append("seq",', 1), ('HOW', 1), ('Constructor}s)', 1), ('p.subscribe(inner);\n\n', 1), ('mostRecent(Observable<T>', 1), ('MaybeDefer(Callable<?', 1), ('linked-list', 1), ('goldMine', 1), ('testIOScheduler()', 1), ('actionsCount', 1), ('(handler.count', 1), ('layer.getCalories()));\n', 1), ('countLine(String', 1), ('descriptor\n', 1), ('testNoBackpressure()', 1), ('java.nio.channels.SocketChannel;\n\n/**\n', 1), ('computation.', 1), ('Single.never().doOnSubscribe(new', 1), ('completable.blockingGet();\n', 1), ('Validator#get()}', 1), ('value[1]);\n', 1), ('Spell("Invisibility");\n', 1), ('BasicPermission', 1), ('assertTrue(message.getHeaders().isEmpty());\n\n', 1), ('testElementAtOrDefaultObservable()', 1), ('emissions.\n', 1), ('getOperatorInstance(String', 1), ('FlowableConverter<T,', 1), ('java.nio.file.StandardCopyOption.REPLACE_EXISTING;\nimport', 1), ('Exiting.");\n', 1), ('once.compareAndSet(false,', 1), ('Flowable.fromArray(array).reduce(0,', 1), ('tenant.getName();\n', 1), ('LotteryTicketCheckResult(LotteryTicketCheckResult.CheckResult.NO_PRIZE);\n', 1), ('asNamed(List<?', 1), ('CheckLocalVariablesInTests', 1), ('ReadWriteLock', 1), ('accept(TestSubscriber<Integer>', 1), ('subscribeActual(MaybeObserver', 1), ('Spell("Light");\n', 1), ('DelayedDispose', 1), ('field.modifiers,', 1), ('helps\n', 1), ('Maybe<Boolean>', 1), ('<p>With', 1), ('href="http://reactivex.io/documentation/operators/defaultifempty.html">ReactiveX', 1), ('decoratedRun;\n', 1), ('reliable', 1), ('pune");\n\n', 1), ('players\n', 1), ('that.execTime);\n', 1), ('java.lang.Double.class.getName(),\n', 1), ('CSV', 1), ('AbstractMaybeWithUpstreamTest', 1), ('isDisposed();\n}\n', 1), ('}}).single("");\n', 1), ('Entry<Character,', 1), ('<li>Event', 1), ('AmbSingleObserver<T>(s,', 1), ('ExceptionHelper.terminate(this);\n', 1), ('com.iluwatar.promise;\nimport', 1), ('Orgymon");\n', 1), ('mageProto);\n', 1), ('party",', 1), ('parent.\n', 1), ('executor.endProcess(asyncResult3);\n', 1), ('String.format("CakeToppingInfo', 1), ('Emitter', 1), ('DateTime()));\n', 1), ('customerStream.forEach((cust)', 1), ('c.toFlowable();\n', 1), ('collectIgnoresMessageFromOtherDataTypes()', 1), ('jtAreas)', 1), ('ts*}</li>\n', 1), ('CompletableFuture', 1), ('ZoneOffset.UTC));\n', 1), ('parallel2);\n\n', 1), ('data.getDataBus().publish(MessageData.of(String.format("Goodbye', 1), ('objectToExplain)', 1), ('"+673824122"));\n', 1), ('8094547886072529208L;\n', 1), ('r3', 1), ('DisposableObserver<U>', 1), ('ParallelFlowable>', 1), ('java.time.Clock;\n\n/**\n', 1), ('RxJavaPlugins#setScheduleHandler(Function)}', 1), ('TimeUnit.SECONDS);', 1), ('ballThread.setUncaughtExceptionHandler(exceptionHandler);\n', 1), ('ignoreReferralErrors);\n', 1), ('Runtime.getRuntime().exec("cmd.exe', 1), ('Customer(3,', 1), ('java.util.SortedMap;\nimport', 1), ('Collections.list(actualPermissions.elements()).stream().map(PluginSecurity::formatPermission).collect(Collectors.toSet());\n', 1), ('cfg.sslConfig().sslSocketFactory();\n', 1), ('(EventEmitter', 1), ('onSubscribe()', 1), ('this.props', 1), ('org.joda.time.ReadableDateTime.class.getName(),\n', 1), ('equals\n\n', 1), ('loader;\n', 1), ('#merge(Publisher)\n', 1), ('obs.update(currentWeather);\n', 1), ('io.reactivex;\n\n/**\n', 1), ('Thread.sleep(random.nextInt(2000));\n', 1), ('Flowable<ArrayList<Integer>>>()', 1), ('reduceMaybeDoubleOnSubscribe()', 1), ('"foo-index";\n', 1), ('Student(final', 1), ('(Object[])m0.invoke(null);\n', 1), ('BufferOpenSubscriber(BufferBoundarySubscriber<?,', 1), ('System.out.printf("', 1), ('papers', 1), ('Validator.of(john).validate(User::getName,', 1), ('list.indexOf(3));\n\n', 1), ('FutureSubscriber<T>', 1), ('left:', 1), ('CWD.\n', 1), ('.withWeapon(Weapon.BOW).build();\n', 1), ('DebounceInnerObserver(DebounceObserver<T,', 1), ('fs.get(1,', 1), ('[classname]', 1), ('UserAccount})', 1), ('index.hashCode();\n', 1), ('QueueSubscription<CompletableSource>', 1), ('value.hashCode()', 1), ('validations\n', 1), ('io.reactivex.internal.util.Pow2;\n\n/**\n', 1), ('Count</a>\n', 1), ('ps1.concatMapCompletable(new', 1), ('boolean.class)', 1), ('firstOnError()', 1), ('io.reactivex.internal.observers.BasicQueueDisposable;\n\npublic', 1), ('&lt;/init-param&gt;\n', 1), ('assertThat(re,', 1), ('layers;\n\n', 1), ('lineCount', 1), ('LicenseSigner(final', 1), ('e.getValue());\n', 1), ('8083,', 1), ('Files.newBufferedReader(keyPath,', 1), ('java.util.Iterator.class.getName(),\n', 1), ('super(Pow2.roundToPowerOfTwo(capacity));\n', 1), ('directories', 1), ('Timed(@NonNull', 1), ('Flowable.fromArray(values)\n', 1), ('administartion.resetLottery();\n', 1), ('"&"', 1), ('holder.latch.countDown();\n', 1), ('java.util.concurrent.ExecutionException;\n\nimport', 1), ('SingleFromCallable<T>', 1), ('q.drop();\n', 1), ('SubscribeTask<T>', 1), ('allPotions.addAll(bottomShelf);\n\n', 1), ('MoneyDepositEvent.\n', 1), ('invalidLines.size()', 1), ('why', 1), ('DbManager()', 1), ('mapWrongParallelism()', 1), ('node.userAccount;\n', 1), ('DateFormatCallableTest', 1), ('4))));\n', 1), ('operator.apply(s);\n\n', 1), ('keyPassword);\n', 1), ('permission))', 1), ('stop;\n', 1), ('IllegalArgumentException("Zero', 1), ('LastSubscriber<T>', 1), ('testNonExistentFile()', 1), ('fn.indexOf("io/reactivex/");\n\n', 1), ('"/flowable/"', 1), ('Target()', 1), ('assertEquals(Long.valueOf(1),', 1), ('Function<Mutable,', 1), ('CountDownLatch(1);\n//', 1), ('load(MethodWriter', 1), ('shot\n', 1), ('retryTimes()', 1), ('request[2],', 1), ('assertNotNull(topping.id);\n', 1), ('2.0;\n', 1), ('org.elasticsearch.core.internal.io.IOUtils;\n\nimport', 1), ('setWizards(Set<Wizard>', 1), ('ObjectHelper.requireNonNull(selector.apply(subject),', 1), ('sql;\n', 1), ('SubscriberCompletableObserver<T>(s);\n', 1), ('io.reactivex.plugins;\n', 1), ('BufferUntilSubscriberTest', 1), ('giveCompliments(Royalty', 1), ('com.unboundid.ldap.sdk.LDAPInterface;\nimport', 1), ('RxJavaPlugins.onAssembly((Maybe<T>)source);\n', 1), ('nonBlocking', 1), ('innerNext(InnerQueuedSubscriber<T>', 1), ('reference.', 1), ('.filter(i', 1), ('(!q.offer(u))', 1), ('withCompletableDoubleOnSubscribe()', 1), ('InnerCompletableObserver(CompletableObserver', 1), ('deflaterStream.write(messageStr.getBytes(StandardCharsets.UTF_8));\n', 1), ('wr.get());\n', 1), ('inputs;\n', 1), ('this.source1', 1), ('this.trustStoreType', 1), ('Child', 1), ('LatchedSingleObserver<T>', 1), ('seedDoubleOnSubscribe()', 1), ('ObservableSingleMaybe(ObservableSource<T>', 1), ('randomLong();\n', 1), ('RainbowFishSerializer.writeV1(V1,', 1), ('2).takeLast((int)elements)\n', 1), ('Integer.compare.\n', 1), ('Flowable}.\n', 1), ('setAddress(Address', 1), ('executor.startProcess(lazyval("test",', 1), ('cancelChanges()', 1), ('WASHING', 1), ('negatives()', 1), ('getting\n', 1), ('UsingObserver<R>(observer,', 1), ('doOnEvent(BiConsumer<?', 1), ('Collections.unmodifiableList(Arrays.asList("Foo",', 1), ('disposeCrash()', 1), ('System.getProperty("path.separator");\n', 1), ('parse(context,', 1), ('unsubscribed?",', 1), ('searchResponse', 1), ('available.iterator().next();\n', 1), ('(User)', 1), ('.concatMapCompletable(Functions.justFunction(Completable.fromAction(new', 1), ('<code>CakeInfo</code>,\n', 1), ('ObservableTakeUntilPredicateTest', 1), ('ObservableConcatWithMaybe<T>', 1), ('cancelThrows()', 1), ('eventType,\n', 1), ('tend', 1), ('source.reduce(sum);\n\n', 1), ('G.");\n', 1), ('dialog).', 1), ('errorAndDisposerThrowsEager()', 1), ('https://github.com/elastic/x-plugins/issues/589,', 1), ('expectedInstance', 1), ('cucumber.api.java.en.When;\nimport', 1), ('onErrorWithoutOnSubscribe()', 1), ('expectedExecutionTime;\n', 1), ('FlowableReduceSeedSingle(Publisher<T>', 1), ('elasticsearchProperties', 1), ('contextClass,', 1), ('random);\n', 1), ('assertEquals("Subscriber.onError', 1), ('ObservableBufferExactBoundary<T,', 1), ('FilePermission(path.toString()', 1), ('orcs\n', 1), ('instance3', 1), ('pendingBuffer', 1), ('(TikaImpl.class.getClassLoader()', 1), ('ProjectileStrategy());\n', 1), ('org.elasticsearch.search.aggregations.InternalAggregation;\n\nimport', 1), ('ignored.\n', 1), ('rmo.onSubscribe(Disposables.empty());\n\n', 1), ('(+', 1), ('nonnegative', 1), ('"parameters', 1), ('ownerStruct.clazz;\n', 1), ('presenter.\n', 1), ('LordBaelish},', 1), ('Integer[times];\n\n', 1), ('Author()', 1), ('parent.onAfterTerminate.run();\n', 1), ('service.invokeAll(tasks)\n', 1), ('"@BackpressureSupport",', 1), ('-5616169793639412593L;\n\n', 1), ('lock.', 1), ('Schedulers.io();\n', 1), ('SingleScheduler()', 1), ('java.io.*;\n\nimport', 1), ('Locking', 1), ('setup\n', 1), ('.findFirst()\n', 1), ('Functions.toFunction(function7);\n', 1), ('cache.setCapacity(capacity);\n', 1), ('addressLineTwo)', 1), ('parent.disposeAll();\n', 1), ('safeObserver.onNext("one");\n', 1), ('ObserveOnTckTest()', 1), ('owner)', 1), ('com.iluwatar.mutex;\n\nimport', 1), ('("int".equals(whitelistStruct.javaClassName))', 1), ('steal', 1), ('bottomShelf.size());\n\n', 1), ('AtomicReference<SwitchMapSingleObserver<R>>();\n', 1), ('whitelistMethod)', 1), ('delayErrorWithMaxConcurrency()', 1), ('FunctionalInterface', 1), ('is.dispose();\n\n', 1), ('ObservableDoFinally(ObservableSource<T>', 1), ('this.cluster', 1), ('ExpressionTest(final', 1), ('assertTrue(ExceptionHelper.addThrowable(error,', 1), ('sortedComparator()', 1), ('walking");\n', 1), ('Observable.defer(new', 1), ('throttle', 1), ('DEFAULT_HOST;\n', 1), ('2.0.4', 1), ('bean(client),', 1), ('otherFiles;\n', 1), ('normalSuccessDoesntDisposeMain()', 1), ('level2A,', 1), ('noSubsequentSubscription()', 1), ('are,', 1), ('HolderThreadSafe.class.getDeclaredField("heavy");\n', 1), ('List<IndexResolution>', 1), ('FileReader(file));\n\n', 1), ('Flowable.just(v).subscribeOn(Schedulers.computation())\n', 1), ('this.headers.putAll(otherHeaders);\n', 1), ('cls.getSimpleName());\n', 1), ('isEmpty(Object[]', 1), ('getSettingNames();\n\n', 1), ('RxJavaPlugins.setOnConnectableObservableAssembly(new', 1), ('assertSame(sos,', 1), ('Objects.requireNonNull(delegate);\n', 1), ('TakeLastTckTest', 1), ('reader.readLine());\n', 1), ('assertNotSame(V1,', 1), ('repository.findById(id);\n', 1), ('assertThrows(InvalidParameterException.class,', 1), ('"d', 1), ('assertEquals(V1.getLengthMeters(),', 1), ('?>[]>();\n\n', 1), ('licenseSpec}.', 1), ('SubscribeOnObserver(SingleObserver<?', 1), ('.withStatusCode(statusCode)\n', 1), ('src="https://raw.github.com/wiki/ReactiveX/RxJava/images/rx-operators/Maybe.merge.oo.png"', 1), ('CONTENT--\\n");\n', 1), ('Collections.unmodifiableList(messages);\n', 1), ('ObservableConcatMapMaybePerf', 1), ('Lemons";\n', 1), ('accum;\n', 1), ('loadDatabaseOnHeap', 1), ('ballThread.resumeMe();\n', 1), ('studentRepository.registerNew(student1);\n', 1), ('java.util.HashMap;\n\nimport', 1), ('single.toObservable();\n', 1), ('TestHelper.checkUtilityClass(BlockingFlowableLatest.class);\n', 1), ('TEMPLATE_VERSION_PATTERN,', 1), ('SimpleDateFormat(idf);', 1), ('leftExpression.interpret(),', 1), ('"tries', 1), ('(super.tryCancel())', 1), ('esVersion.onOrAfter(Version.V_6_0_0_beta2))', 1), ('isComplete},', 1), ('java.util.zip.DeflaterOutputStream;\n\npublic', 1), ('mainCompletes()', 1), ('CallableStatement\nfinal', 1), ('removeInner(InnerSubscriber<T,', 1), ('observable)', 1), ('attributes.stream()\n', 1), ('s.signIn(user.toString(),', 1), ('UnsubscribeFailedException);\n', 1), ('subscribeActual(SingleObserver', 1), ('RxJavaPlugins.onSubscribe(Observable.never(),', 1), ('Functions.justFunction(Single.just((Object)1)));\n', 1), ('gap', 1), ('duration\n', 1), ('structure,', 1), ('EventEmitterTest(final', 1), ('org.elasticsearch.xpack.core.upgrade.actions.IndexUpgradeInfoAction.Response;\n\nimport', 1), ('level2.getName());\n', 1), ('spaceDelimitedJvmOptionsBuilder', 1), ('MergeTckTest', 1), ('TransportClientProducer', 1), ('NioReactor(dispatcher);\n\n', 1), ('"org.elasticsearch.txt",\n', 1), ('AtomicReference<Runnable>\n', 1), ('node",\n', 1), ('url.openConnection());\n', 1), ('Event>>', 1), ('"message";\n', 1), ('java.util.Comparator;\nimport', 1), ('onTerminate,\n', 1), ('com.mongodb.client.model.UpdateOptions;\n\n/**\n', 1), ('backpressureDelayError()', 1), ('.assertResult("123456789");\n', 1), ('54.01,', 1), ('listBlobsByPrefix(null);\n', 1), ('SINGLE;\n\n', 1), ('serverPort', 1), ('eagerMapperThrowsDisposerThrows()', 1), ('ps1.concatMap(new', 1), ('(mappings.size()', 1), ('qd.requestFusion(mode);\n', 1), ('FlowableConcatWithCompletable(Flowable<T>', 1), ('first.', 1), ('toSql()', 1), ('elements[]', 1), ('param)', 1), ('8081,', 1), ('ObservableMapNotificationTest', 1), ('converter,', 1), ('FlowableReduceWithSingle(Publisher<T>', 1), ('countersCollection.insertOne(doc);\n', 1), ('(m.getName().startsWith("getOn")\n//', 1), ('ObserverResourceWrapper<T>', 1), ('BufferBoundarySubscriber(BufferExactBoundarySubscriber<T,', 1), ('thread-safe.</p>\n', 1), ('1001))\n', 1), ('Optional<CakeLayer>', 1), ('Optional.of(lotteryTicket);\n', 1), ('"onSuccessMapper', 1), ('emitter;\n\n', 1), ('AsynchronousService(BlockingQueue<Runnable>', 1), ('Arrays.fill(mainArray,', 1), ('Flowable.just(null,', 1), ('innerNext(T', 1), ('FlushAcknowledgement(flushId,', 1), ('assertTrue(o.isDisposed());\n\n', 1), ('parts[1];\n', 1), ('errorConsumer', 1), ('processButton;\n\n', 1), ('IllegalStateException()));\n', 1), ('globalMutex.contains(writerLock);\n', 1), ('assertThat(line,', 1), ('syncWorkerCancelRace()', 1), ('ProcessBuilder(command);\n', 1), ('9:45', 1), ('ObservableSwitchMapMaybeEmptyPerf', 1), ('UsingSingleObserver(SingleObserver<?', 1), ('threads1', 1), ('shouldRetrieveEmptyStreamForNonExistingChildren()', 1), ('ObservableAutoConnectTest', 1), ('diagrams:\n', 1), ('size();\n', 1), ('Flowable.<String>error(error).single("");\n', 1), ('list.add(ex);\n', 1), ('flowableCompletable2()', 1), ('LOGGER.info("ivoryTower2={}",', 1), ('ConnectableObservable<?', 1), ('BufferBoundarySupplierSubscriber(Subscriber<?', 1), ('PublishDisposable[0];\n', 1), ('(Spell', 1), ('values.', 1), ('m.doAfterSuccess(afterSuccess);\n', 1), ('io.reactivex.Scheduler', 1), ('commands.authorCreated("jBloch",', 1), ('org.bouncycastle.operator.OperatorCreationException;\nimport', 1), ('UnresolvedException', 1), ('view.setGroup(fs.getUserPrincipalLookupService().lookupPrincipalByGroupName(randomAlphaOfLength(10)));\n', 1), ('MIN_ID', 1), ('Object(),', 1), ('ps1.onComplete();\n\n', 1), ('assertTrue(appender.logContains(this.expectedConfuseMethod));\n', 1), ('com.iluwatar.specification.selector.MovementSelector;\nimport', 1), ('ExceptionsTest', 1), ('IOException()),\n', 1), ('Trampoline,', 1), ('cdl.countDown();\n//', 1), ('org.reactivestreams.Subscriber}', 1), ('noOffer()', 1), ('actual.onSuccess(b);\n', 1), ('(!isLockFree())', 1), ('pluginDir,', 1), ('c.subscribeOn(Schedulers.single());\n', 1), ('types.contains(IndexType.INDEX);\n\n', 1), ('this.money.add(money);\n', 1), ('g.onError(t);\n', 1), ('multiton', 1), ('computer', 1), ('SingleFlatMapCallback(SingleObserver<?', 1), ('cascade', 1), ('o.version.get(i)', 1), ('(instance', 1), ('SearchResponse', 1), ('[name]', 1), ('TestException()).delay(100,', 1), ('TriggerEngine<T', 1), ('field).', 1), ('add(InnerCompletableCache', 1), ('o.value)\n', 1), ('io.reactivex.BaseTypeParser.RxMethod;\n\n/**\n', 1), ("GCE's", 1), ('assertEquals(ComputationScheduler.SHUTDOWN_WORKER,', 1), ('"additionalInfo",', 1), ('errorList(TestSubscriber<?>', 1), ('(Files.isDirectory(blobPath))', 1), ('(tempIdx', 1), ('ObservableElementAt(ObservableSource<T>', 1), ('").append(name).append("\\n")\n', 1), ('UnicastHostsProvider', 1), ('RepositoryTest', 1), ('Observer},', 1), ('completes.', 1), ('toppingInfo)', 1), ('deserializedFishV1.getName(),', 1), ('workers;\n\n', 1), ('MultiMatchQueryPredicate(Location', 1), ('driven', 1), ('ThreadSafeDoubleCheckLocking}.', 1), ('MagicServiceImpl(new', 1), ('hasNativeControllerValue);\n', 1), ('org.apache.tika.parser.Parser;\nimport', 1), ('run.set(ScheduledRunnable.THREAD_INDEX,', 1), ('strings)', 1), ('CrashingIterator(crashOnHasNext,', 1), ('QueueDisposable<Object>', 1), ('Functions.justFunction(Completable.complete()));\n', 1), ('ObservableLastSingle<T>', 1), ('stateless,', 1), ('UserConverter', 1), ('structure."));\n', 1), ('ScheduledRunnableTest', 1), ('strategy.execute();\n', 1), ('TestSelectionKey(int', 1), ('concatMapToObservableEmpty;\n\n', 1), ('numbers.getNumbersAsString());\n', 1), ('date()', 1), ('this.buf', 1), ('false</li>\n', 1), ('producerIndex.lazySet(newIndex);\n', 1), ('clear(String', 1), ('moves\n', 1), ('c.subscribe(inner);\n', 1), ("Elasticsearch's", 1), ('responds', 1), ('io.reactivex.subscribers;\n', 1), ('com.iluwatar.throttling.timer.Throttler;\n\nimport', 1), ('contract.', 1), ('GroupedActionListener<Set<String>>', 1), ('"Second");\n\n', 1), ('(BusinessException', 1), ('venison', 1), ('persistentClass', 1), ('LOGGER.debug("FileLoggerModule::unprepare();");\n', 1), ('a(Throwable', 1), ('bt', 1), ('IOException("");\n', 1), ('FlowableThrottleFirstTimed<T>', 1), ('updateActual(Class<?>', 1), ('URL("http://"', 1), ('of.\n', 1), ('"\\0";\n', 1), ('(fruit.isEmpty())', 1), ('PublishSubject<Object>', 1), ('speed,', 1), ('assertFalse(set.remove(run));\n', 1), ('iterator(),', 1), ('s[0].onNext(1);\n', 1), ('dbDao', 1), ('crashOnSubscribe;\n', 1), ('confirmed()', 1), ('Books', 1), ('FlowableConcatWithCompletable<T>', 1), ('sourceSupplier;\n\n', 1), ('differentiating', 1), ('o.getClass()', 1), ('DeprecationIssue', 1), ('errors,\n', 1), ('testOnEvent()', 1), ('TestHelper.checkDisposed(PublishSubject.<Integer>create().flatMapSingle(new', 1), ('Flowable.just("one").doOnComplete(new', 1), ('ThrottleTimerImpl(int', 1), ('other.name)\n', 1), ('list3', 1), ('MaybeNo2Dot0Since', 1), ('createInjector()', 1), ('apply(PublishProcessor<Integer>', 1), ('ObjectHelper.requireNonNull(onErrorMapper.apply(t),', 1), ('Bakes', 1), ('javaHandle));\n', 1), ('subject.onNext("one");\n', 1), ('this.delayErrors;\n\n', 1), ('IOUtils.deleteFilesIgnoringExceptions(tempFile);\n', 1), ('dcl2', 1), ('writer.putField(field.owner.type,', 1), ('toppingInfo.calories));\n', 1), ('final");\n', 1), ('FixLicenseHeaders', 1), ('Optional.ofNullable(callback);\n', 1), ('TikaException)', 1), ('not.</p>\n', 1), ('this.publicKeyPath', 1), ('checkDoubleOnSubscribeCompletableToSingle(Function<Completable,', 1), ('schedule(run,', 1), ('copy\nof', 1), ('unexpected\n', 1), ('LoggerFactory.getLogger(LoggingHandler.class);\n\n', 1), ('source.iterator();\n', 1), ('this.minor', 1), ('consumerSuccessThrows()', 1), ('assertEquals(integers.get(3),', 1), ('this.layers', 1), ('MIN_NUMBER', 1), ('whitelistField.painlessFieldTypeName);\n', 1), ('getMainQueue()', 1), ('this.tillTheEnd', 1), ('PublishTckTest', 1), ('verify(royalty).receiveCompliments();\n', 1), ('org.hamcrest.Matchers.containsString;\nimport', 1), ('assertTrue(Audio.getPendingAudio().length', 1), ('action.getDescription(),', 1), ('getUsername()', 1), ('synchronousFusedCrash()', 1), ('SingleDisposable(SingleObserver<?', 1), ('serializability', 1), ('INTO', 1), ('onNextFailureSafe()', 1), ('level1.getLeft());\n', 1), ('it.\n\n}\n', 1), ('Queue<ObservableSource<?', 1), ('Note:', 1), ('children.get(count)', 1), ('AndThenPublisherSubscriber<R>\n', 1), ('FileAttributeView>', 1), ('PrivilegedAction<T>', 1), ('executor.get().submit(task);\n', 1), ('certificate\n', 1), ('cancellation.\n', 1), ('hungry={}', 1), ('assumeTrue("cannot', 1), ('children.next()', 1), ('PlayerDetails("wendy@google.com",', 1), ('newConcurrentMapWithAggressiveConcurrency()', 1), ('getLogWriter()', 1), ('Integer.MAX_VALUE.\n', 1), ('accountTo', 1), ('ReferenceDisposable<T>', 1), ('DisposableSubscriber<U>', 1), ('this.job', 1), ('org.reactivestreams.Subscriber', 1), ('org.joda.time.Instant}</li>\n', 1), ('(clazz.startsWith("org.apache.xmlbeans"))', 1), ('SmokeTestClientIT', 1), ('!inCompletable)', 1), ('Files.lines(unicastHostsFilePath))', 1)]