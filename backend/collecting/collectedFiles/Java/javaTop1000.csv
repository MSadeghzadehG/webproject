[('', 996543), ('*', 27729), ('{\n', 22744), ('the', 17439), ('=', 14663), ('public', 10548), ('}\n\n', 10197), ('}\n', 7744), ('void', 7626), ('to', 6773), ('final', 6174), ('@Override\n', 5782), ('if', 5278), ('new', 5075), ('*\n', 4982), ('of', 4547), ('a', 4491), ('return', 3648), ('and', 3492), ('OR', 3302), ('under', 3287), ('or', 3149), ('License', 3139), ('/**\n', 3018), ('static', 2659), ('for', 2604), ('this', 2591), ('extends', 2588), ('OF', 2545), ('in', 2445), ('is', 2319), ('@Test\n', 2307), ('may', 2244), ('}', 2227), ('distributed', 2149), ('class', 2117), ('super', 2076), ('not', 2052), ('{\n\n', 2020), ('by', 1975), ('@param', 1965), ('*/\n', 1952), ('THE', 1873), ('with', 1840), ('throws', 1792), ('on', 1757), ('ANY', 1731), ('an', 1719), ('{@link', 1554), ('private', 1519), ('==', 1515), ('boolean', 1466), ('Exception', 1436), ('Copyright', 1430), ('KIND,', 1415), ('WARRANTIES', 1415), ('"AS', 1414), ('WITHOUT', 1410), ('(the', 1409), ('+', 1397), ('software', 1371), ('file', 1368), ('try', 1358), ('(c)', 1335), ('int', 1331), ('is\n', 1329), ('in\n', 1298), ('you', 1265), ('The', 1264), ('//', 1259), ('be', 1228), ('License.\n', 1225), ('use', 1221), ('T>', 1212), ('!=', 1191), ('return;\n', 1187), ('IN', 1155), ('}\n}\n', 1138), ('except', 1134), ('Licensed', 1123), ('{@code', 1122), ('compliance', 1122), ('that', 1103), ('You', 1080), ('required', 1078), ('either', 1073), ('specific', 1067), ('copy', 1061), ('permissions', 1053), ('Apache', 1048), ('at\n', 1046), ('Version', 1046), ('language', 1043), ('2.0', 1041), ('obtain', 1040), ('License,', 1039), ('governing', 1039), ('CONDITIONS', 1039), ('Unless', 1039), ('applicable', 1039), ('law', 1039), ('agreed', 1039), ('IS"', 1038), ('http://www.apache.org/licenses/LICENSE-2.0\n', 1038), ('express', 1031), ('implied.', 995), ('BASIS,', 995), ('"License");', 994), ('long', 983), ('*/\n\npackage', 979), ('writing,', 979), ('limitations', 979), ('value', 978), ('RxJava', 971), ('Contributors.\n', 958), ('2016-present,', 956), ('License.', 936), ('See\n', 921), ('else', 880), ('catch', 858), ('throw', 837), ('String', 836), ('without', 823), ('null)', 788), ('e)', 788), ('t)', 776), ('Software', 761), ('copies', 753), ('@return', 753), ('SOFTWARE', 752), ('FOR', 752), ('notice', 752), ('?', 734), ('<p>\n', 733), ('source', 715), ('true;\n', 713), ('Disposable', 702), ('implements', 681), ('.test()\n', 678), ('*/\npublic', 661), ('all', 654), ('\n', 625), ('i', 614), ('any', 612), ('0)', 567), ('s)', 564), ('})\n', 552), ('R>', 546), ('<T>', 533), ('*/\npackage', 515), ('A', 512), ('onError(Throwable', 507), ('protected', 502), ('type\n', 490), ('io.reactivex.*;\nimport', 488), ('finally', 488), ('null', 482), ('ex)', 465), ('onComplete()', 465), ('and/or', 462), ('it', 458), (':', 457), ('(Throwable', 451), ('-', 445), ('do', 435), ('null;\n', 433), ('from', 429), ('Throwable', 425), ('run()', 418), ('subject', 418), ('as', 417), ('<', 415), ('following', 403), ('files', 401), ('associated', 399), ('null");\n', 397), ('permission', 390), ('OTHER', 388), ('free', 386), ('persons', 385), ('copyright', 385), ('error', 385), ('&&', 384), ('person', 384), ('including', 384), ('NO', 382), ('above', 381), ('THE\n', 380), ('NOT', 379), ('Permission', 379), ('included', 378), ('use,', 378), ('AN', 377), ('limitation', 377), ('permit', 377), ('documentation', 377), ('CONTRACT,', 376), ('WARRANTY', 376), ('PROVIDED', 376), ('CONNECTION', 376), ('LIMITED', 376), ('so,', 376), ('portions', 376), ('ACTION', 376), ('OTHERWISE,', 376), ('TORT', 376), ('will', 376), ('COPYRIGHT', 376), ('copy,', 376), ('publish,', 376), ('granted,', 376), ('EXPRESS', 376), ('charge,', 376), ('INCLUDING', 376), ('Software,', 376), ('NONINFRINGEMENT.', 376), ('MIT', 376), ('DAMAGES', 376), ('TO', 376), ('hereby', 376), ('IS",', 376), ('BE', 376), ('SHALL', 376), ('LIABLE', 376), ('PARTICULAR', 376), ('IS', 376), ('EVENT', 376), ('actual;\n', 376), ('shall', 376), ('HOLDERS', 376), ('whom', 376), ('sublicense,', 376), ('PURPOSE', 376), ('ARISING', 376), ('"Software"),', 376), ('substantial', 376), ('WITH', 376), ('DEALINGS', 376), ('merge,', 376), ('WHETHER', 376), ('obtaining', 376), ('modify,', 376), ('USE', 376), ('FITNESS', 375), ('T', 375), ('OUT', 375), ('LIABILITY,', 375), ('IMPLIED,', 375), ('SOFTWARE.\n', 375), ('conditions:\n', 375), ('Software.\n', 375), ('AUTHORS', 375), ('furnished', 375), ('FROM,\n', 372), ('apply(Integer', 370), ('OR\n', 369), ('AND', 367), ('restriction,', 367), ('distribute,', 367), ('CLAIM,', 367), ('BUT', 367), ('copy\n', 364), ('deal\n', 363), ('rights\n', 363), ('OTHER\n', 363), ('MERCHANTABILITY,\n', 363), ('sell\n', 363), ('default', 360), ('done', 358), ('License\n', 358), ('0,', 357), ('Seppälä\n', 355), ('Ilkka', 355), ('dispose()', 353), ('RxJavaPlugins.reset();\n', 352), ('does', 351), ('IN\n', 349), ('@CheckReturnValue\n', 347), ('Function<?', 346), ('Object', 343), ('"', 342), ('type', 339), ('List<Throwable>', 338), ('when', 334), ('};\n\n', 330), ('serialVersionUID', 330), ('errors', 329), ('Integer', 327), ('Runnable', 327), ('are', 326), ('T,', 321), ('Function<Integer,', 321), ('Maybe', 319), ('result', 314), ('the\n', 312), ('d', 311), ('2014-2016', 309), ('(int', 308), ('<dt><b>Scheduler:</b></dt>\n', 308), ('<dl>\n', 308), ('</dl>\n', 308), ('1,', 307), ('@SuppressWarnings("unchecked")\n', 298), ('});\n\n', 298), ('Elasticsearch', 297), ('emitted', 296), ('0;', 291), ('particular', 288), ('Scheduler}.</dd>\n', 282), ('can', 281), ('onSubscribe(Disposable', 280), ('returned', 279), ('item', 279), ('@see', 278), ('break;\n', 276), ('i++)', 275), ('operate', 272), ('<dd>{@code', 271), ('Scheduler', 271), ('method', 269), ('this.actual', 269), ('@SchedulerSupport(SchedulerSupport.NONE)\n', 267), ('2,', 266), ('Single', 265), ('one', 262), ('(done)', 260), ('io.reactivex.disposables.Disposable;\nimport', 258), ('v)', 256), ('instanceof', 256), ('instance\n', 255), ('have', 254), ('Runnable()', 250), ('isDisposed()', 249), ('(;;)', 248), ('into', 247), ('ex', 245), ('d)', 245), ('current', 244), ('});\n', 244), ('This', 243), ('should', 242), ('more', 238), ('has', 236), ('while', 235), ('given', 234), ('drain();\n', 230), ('MaybeSource<?', 229), ('onNext(T', 229), ('function', 229), ('s', 225), ('at', 225), ('->', 224), ('Subscription', 224), ('false;\n', 223), ('other', 220), ('/*\n', 218), ('operators', 213), ('SingleSource<?', 213), ('values', 211), ('value)', 209), ('Exceptions.throwIfFatal(ex);\n', 208), ('RxJavaPlugins.onAssembly(new', 206), ('each', 206), ('which', 206), ('emits', 204), ('after', 204), ('source.subscribe(new', 202), ('upstream', 200), ('{', 200), ('0;\n', 200), ('v', 198), ('actual.onComplete();\n', 195), ('Returns', 195), ('specified', 195), ('U>', 194), ('See', 193), ('its', 193), ('time', 191), ('TimeUnit', 191), ('actual,', 189), ('actual;\n\n', 188), ('};\n', 187), ('ts', 187), ('"The', 184), ('@since', 183), ('Integer>', 183), ('but', 183), ('interface', 182), ('list', 181), ('IOException', 181), ('alt="">\n', 177), ('<img', 177), ('width="640"', 177), ('1;\n', 177), ('observer)', 176), ('instance', 176), ('volatile', 176), ('source,', 175), ('number', 175), ('AtomicInteger', 175), ('<a', 174), ('assertEquals(1,', 170), ('items', 169), ('3,', 169), ('b', 169), ('RxJavaPlugins.onError(t);\n', 168), ('Elastic', 168), ('B.V.', 168), ('}\n\n}\n', 167), ('org.junit.Test;\n\nimport', 166), ('s;\n\n', 166), ('TestHelper.trackPluginErrors();\n', 165), ('Publisher<?', 163), ('source;\n', 163), ('/**', 162), ('},', 161), ('s))', 160), ('o', 159), ('returns', 158), ('>', 157), ('TestException();\n', 156), ('operator', 156), ('io.reactivex.plugins.RxJavaPlugins;\n\npublic', 155), ('Flowable', 155), ('e', 154), ('actual.onSubscribe(this);\n', 154), ('<R>', 153), ('PublishProcessor<Integer>', 153), ('io.reactivex.exceptions.Exceptions;\nimport', 153), ('||', 153), ('documentation:', 152), ('first', 152), ('agreements.', 152), ('v)\n', 152), ('cancel()', 152), ('license', 151), ('s.cancel();\n', 150), ('java.util.List;\nimport', 150), ('used', 150), ('event', 149), ('actual.onError(t);\n', 148), ('}\n\n\n', 148), ('R>>', 148), ('we', 147), ('single', 147), ('n)', 147), ('onSubscribe(Subscription', 146), ('no', 146), ('thread', 145), ('Flowable<T>', 145), ('Subscriber<?', 145), ('super(source);\n', 145), ('4,', 145), ('scheduler', 145), ('called', 145), ('queue', 143), ('TestHelper.assertUndeliverable(errors,', 143), ('object', 143), ('q', 143), ('idx', 142), ('Completable', 142), ('@throws', 141), ('calls', 141), ('data', 140), ('call()', 138), ('org.reactivestreams.*;\n\nimport', 138), ('and\n', 138), ('io.reactivex.internal.operators.observable;\n\nimport', 138), ('done;\n\n', 138), ('s;\n', 137), ('io.reactivex.internal.operators.flowable;\n\nimport', 137), ('this.s', 136), ('TestSubscriber<Integer>', 136), ('downstream', 135), ('this.source', 135), ('Exceptions.throwIfFatal(e);\n', 135), ('multiple', 134), ('name', 134), ('subscribeActual(Subscriber<?', 133), ('0', 133), ('5,', 132), ('Consumer<?', 132), ('@Benchmark\n', 132), ('unit,', 131), ('Observer<?', 131), ('expected', 131), ('cancelled', 131), ('Integer>()', 130), ('only', 130), ('test', 130), ('{\n//', 129), ('.assertFailure(TestException.class);\n', 127), ('source;\n\n', 127), ('Integer,', 127), ('["', 126), ('If', 126), ('via', 126), ('exception', 125), ('(ex', 125), ('Action', 124), (';\n', 123), ('Observable<Integer>', 122), ('before', 122), ('sources', 122), ('using', 122), ('subscribeActual(Observer<?', 121), ('io.reactivex.internal.disposables.DisposableHelper;\nimport', 121), ('null,', 121), ('io.reactivex.internal.functions.ObjectHelper;\nimport', 120), ('return\n', 120), ('a,', 117), ('missed', 116), ('io.reactivex.functions.Function;\nimport', 116), ('sequence', 116), ('empty', 116), ('true', 116), ('.test();\n\n', 116), ('@NonNull\n', 115), ('methods', 115), ('count', 115), ('(d', 115), ('TestException.class);\n', 114), ('(getAndIncrement()', 114), ('call', 114), ('org.junit.Assert.*;\n\nimport', 114), ('@author', 113), ('R', 113), ('elements)', 111), ('Flowable.range(1,', 111), ('Java', 111), ('org.reactivestreams.Publisher;\nimport', 110), ('io.reactivex.tck;\n\nimport', 110), ('org.testng.annotations.Test;\n\nimport', 110), ('was', 110), ('same', 110), ('verify(observer,', 110), ('pattern', 110), ('io.reactivex.plugins.RxJavaPlugins;\nimport', 109), ('then', 109), ('java.util.concurrent.atomic.AtomicReference;\n\nimport', 109), ('value;\n', 108), ('TestObserver<Integer>', 108), ('java.util.concurrent.atomic.*;\n\nimport', 108), ('Single<T>', 108), ('TestException());\n', 108), ('false,', 108), ('abstract', 107), ('been', 107), ('request(long', 106), ('bh)', 106), ('r', 106), ('java.util.List;\n\nimport', 105), ('to\n', 105), ('assertEquals(0,', 105), ('run', 105), ('io.reactivex.plugins.RxJavaPlugins;\n\n/**\n', 104), ('c', 104), ('Disposables.empty();\n\n', 103), ('ObservableSource<?', 103), ('MaybeSource', 103), ('signals', 102), ('io.reactivex.exceptions.TestException;\nimport', 101), ('an\n', 101), ('DisposableHelper.dispose(this);\n', 101), ('java.util.concurrent.TimeUnit;\n\nimport', 101), ('d.dispose();\n', 101), ('java.io.IOException;\nimport', 100), ('task', 100), ('@Test(expected', 99), ('inner', 99), ('scheduler;\n', 99), ('signal', 99), ('T>>', 99), ('parent;\n', 99), ('(InterruptedException', 99), ('U', 99), ('synchronized', 98), ('Maybe<T>', 98), ('java.util.ArrayList;\nimport', 98), ('implementation', 98), ('n', 98), ('pp', 98), ('java.util.Arrays;\nimport', 98), ('1)', 97), ('Logger', 97), ('1);\n', 97), ('so', 97), ('work', 96), ('success', 96), ('set', 96), ('experimental\n', 96), ('Throwable>', 95), ('Flowable<Integer>', 95), ('observer', 95), ('Map<String,', 95), ('jdx', 95), ('until', 94), ('contributor', 93), ('unit;\n', 93), ('a\n', 93), ('one\n', 93), ('null\n', 92), ('null;\n\n', 92), ('information', 92), ('subscription', 92), ('line', 91), ('mapper;\n', 91), ('s.dispose();\n', 91), ('d);\n', 91), ('actual.onError(e);\n', 90), ('array', 90), ('Publisher', 90), ('In', 89), ('TestException())\n', 89), ('TimeUnit.MILLISECONDS);\n', 89), ('next', 88), ('CountDownLatch', 88), ('timeout,', 88), ('args)', 88), ('Test', 87), ('List<String>', 87), ('(v', 87), ('RxJavaPlugins.onError(ex);\n', 86), ('additional', 86), ('Single\n', 85), ('state', 85), ('element', 85), ('f', 85), ('parent', 85), ('CompletableObserver', 85), ('w', 85), ('1', 85), ('RxJavaPlugins.onError(e);\n', 85), ('PublishProcessor.create();\n\n', 84), ('CompletableSource', 84), ('TestObserver<Void>', 84), ('backpressure', 84), ('>=', 84), ('this.parent', 84), ('<dt><b>Backpressure:</b></dt>\n', 84), ('with\n', 84), ('io.reactivex.functions.*;\nimport', 84), ('License;\n', 84), ('licensed', 84), ('target', 84), ('LOGGER', 83), ('SingleObserver<?', 83), ('Object>', 83), ('allowed', 83), ('"]', 83), ('TimeUnit.SECONDS)\n', 82), ('this.mapper', 82), ('createPublisher(long', 82), ('output', 82), ('PerfConsumer(bh));\n', 82), ('5)\n', 82), ('Create', 81), ('r1', 81), ('AtomicReference<Disposable>\n', 81), ('Observer<T>,', 81), ('resource', 81), ('o)', 81), ('List<Integer>', 81), ('InterruptedException', 80), ('t', 80), ('message', 80), ('must', 80), ('some', 80), ('j', 80), ('actual', 79), ('r2', 79), ('onSuccess(T', 79), ('Action()', 79), ('resulting', 79), ('TestHelper.race(r1,', 79), ('<dd>The', 79), ('FlowableSubscriber<T>,', 79), ('Observable', 79), ('subscriber', 78), ('io.reactivex.internal.subscriptions.SubscriptionHelper;\nimport', 78), ('value\n', 78), ('org.slf4j.Logger;\nimport', 78), ('AtomicLong', 78), ('onError', 77), ('PublishProcessor.create();\n', 77), ('TestException.class,', 77), ('.awaitDone(5,', 77), ('v;\n', 77), ('Flowable}', 77), ('AtomicReference<Disposable>', 77), ('example', 76), ('main', 76), ('mapper', 76), ('SingleSource', 76), ('null);\n', 76), ('scheduler)', 76), ('AtomicBoolean', 75), ('b)', 75), ('errors.terminate();\n', 75), ('actual)', 75), ('e);\n', 75), ('once', 75), ('cs', 75), ('two', 75), ('true,', 75), ('Flowable.range(0,', 75), ('Publisher<Integer>', 75), ('queue.clear();\n', 75), ('consumer', 74), ('than', 74), ('ArrayList<>();\n', 74), ('io.reactivex.internal.operators.maybe;\n\nimport', 74), ('io.reactivex.exceptions.*;\nimport', 74), ('events', 74), ('s);\n', 74), ('m', 74), ('p', 74), ('where', 73), ('applied', 73), ('b;\n', 73), ('index', 73), ('other;\n', 73), ('mapper;\n\n', 73), ('under\n', 72), ('2.0\n', 72), ('parent;\n\n', 72), ('Path', 72), ('field', 72), ('(e', 72), ('SubscriptionHelper.CANCELLED;\n', 72), ('.sequential()\n', 72), ('Predicate<?', 72), ('actual.onNext(t);\n', 72), ('AtomicThrowable', 71), ('mapper,', 71), ('(idx', 71), ('version', 71), ('MaybeSources', 71), ('inOrder.verify(w,', 71), ('results', 71), ('@BackpressureSupport(BackpressureKind.FULL)\n', 71), ('already', 71), ('source)', 70), ('DisposableHelper.DISPOSED)', 70), ('App', 70), ('TestScheduler', 70), ('TestHelper.trackPluginErrors();\n\n', 70), ('unit', 70), ('(cancelled)', 70), ('+\n', 70), ('(SubscriptionHelper.validate(this.s,', 69), ('entry', 69), ('allows', 69), ('name;\n', 68), ('NOTICE', 68), ('ownership.', 68), ('connection', 68), ('licenses', 68), ('create', 68), ('io.reactivex.Flowable;\nimport', 68), ('org.junit.jupiter.api.Test;\n\nimport', 67), ('CompletableSource>', 67), ('source\n', 67), ('source,\n', 67), ('io.reactivex.disposables.*;\nimport', 67), ('t;\n', 67), ('other)', 67), ('may\n', 67), ("can't", 67), ('.assertResult(1);\n', 66), ('ExceptionHelper.wrapOrThrow(ex);\n', 66), ('(o', 66), ('io.reactivex.internal.functions.Functions;\nimport', 66), ('d;\n\n', 66), ('timeout', 66), ('second', 66), ('service', 66), ('org.slf4j.LoggerFactory;\n\nimport', 66), ('fail("Should', 66), ('U,', 65), ('objects', 65), ('queue;\n', 65), ('0);\n', 65), ('0L)', 65), ('Jeroen', 65), ('Meulemeester\n', 65), ('/', 65), ('Date:', 65), ('honors', 65), ('Class<?>', 65), ('user', 64), ('io.reactivex.")\n', 64), ('It', 64), ('Integer>>()', 64), ('io.reactivex;\n\nimport', 64), ('n);\n', 64), ('assertEquals(2,', 64), ('provided', 64), ('TestHelper.RACE_DEFAULT_LOOPS;', 64), ('AbstractFlowableWithUpstream<T,', 64), ('PublishSubject<Integer>', 63), ("doesn't", 63), ('this.scheduler', 63), ('io.reactivex.internal.operators.single;\n\nimport', 63), ('.assertResult(1,', 63), ('main(String[]', 63), ('case', 63), ('out', 63), ('handler', 63), ('TestException());\n\n', 62), ('(Exception', 62), ('subscribers', 62), ('Callable<?', 62), ('.map(new', 62), ('Observable.range(1,', 62), ('disposed', 62), ('this.other', 62), ('MaybeSource\n', 62), ('get', 61), ('observer.onComplete();\n', 61), ('java.util.concurrent.Callable;\n\nimport', 61), ('need', 61), ('TimeUnit.SECONDS);\n\n', 61), ('delay,', 61), ('toString()', 61), ('regarding', 61), ('error;\n', 60), ('parent)', 60), ('args', 60), ('false', 60), ('writing,\n', 60), ('CompositeDisposable', 60), ('input', 60), ('()', 60), ('ANY\n', 60), ('there', 60), ('limitations\n', 60), ('onError}', 60), ('java.util.*;\nimport', 59), ('d))', 59), ('idx)', 59), ('/*', 59), ('contributor\n', 59), ('io.reactivex.Flowable;\n\n@Test\npublic', 59), ('ps', 59), ('read', 59), ('this.unit', 59), ('copyright\n', 59), ('queue;\n\n', 58), ('{\n\n\n', 58), ('ExecutorService', 58), ('|', 58), ('(empty)', 58), ('because', 58), ('continue;\n', 58), ('Object[]{new', 58), ('DisposableHelper.isDisposed(get());\n', 58), ('BaseTck<Integer>', 58), ('CompletableSubject', 58), ('=\n', 58), ('actual.onError(ex);\n', 57), ('String>', 57), ('last', 57), ('onSubscribe', 57), ('(missed', 57), ('.assertNoErrors()\n', 57), ('mapper)', 57), ('2);\n', 57), ('error;\n\n', 57), ('AbstractObservableWithUpstream<T,', 57), ('DisposableHelper.DISPOSED;\n', 57), ('java.util.Collections;\nimport', 57), ('PM\n', 57), ('make', 57), ('drain()', 56), ('common', 56), ('subscribeActual(SingleObserver<?', 56), ('plugin', 56), ('running', 56), ('to.assertEmpty();\n\n', 56), ('subscribed', 56), ('emit', 56), ('//\n', 56), ('s,', 56), ('up', 56), ('other;\n\n', 56), ('(this)', 55), ('setup()', 55), ('An', 55), ('sources)', 55), ('io.reactivex.observers.TestObserver;\nimport', 55), ('true))', 55), ('request', 55), ('Worker', 55), ('times', 55), ('path', 54), ('q.clear();\n', 54), ('source1,', 54), ('true;\n\n', 54), ('also', 54), ('r2);\n\n', 54), ('s.request(Long.MAX_VALUE);\n', 54), ('e;\n', 54), ('(s', 54), ('callback', 54), ('struct', 53), ('TimeUnit.SECONDS);\n', 53), ('onError(ex);\n', 53), (')\n', 53), ('StringBuilder', 53), ('application', 53), ('expected\n', 53), ('addAndGet(-missed);\n', 53), ('index,', 53), ('access', 53), ('subscribeActual(MaybeObserver<?', 53), ('T>[]', 53), ('(r', 53), ('they', 53), ('java.util.concurrent.atomic.AtomicInteger;\n\nimport', 52), ('predicate;\n', 52), ('Type', 52), ('dispose', 52), ('this;\n', 52), ('transform', 52), ('emitting', 51), ('Throwable}', 51), ('tasks', 51), ('DisposableHelper.setOnce(this,', 51), ('iterator', 51), ('Observable<?', 51), ('io.reactivex.internal.operators.completable;\n\nimport', 51), ('TestScheduler();\n\n', 51), ('command', 51), ('TestException', 51), ('Observable<T>', 51), ('cdl.countDown();\n', 51), ('(n', 51), ('onNext(Integer', 51), ('index)', 51), ('<U>', 50), ('(t', 50), ('B>', 50), ('Note', 50), ('e.append("java.lang.RuntimeException:', 50), ('terminal', 50), ('date', 50), ('V>', 50), ('TimeUnit.MILLISECONDS,', 50), ('count;\n', 50), ('String[]', 50), ('value");\n', 50), ('emitter', 50), ('point\n', 50), ('ParallelFlowable', 50), ('.filter(Functions.alwaysTrue())\n', 50), ('such', 49), ('between', 49), ('software\n', 49), ('a.onComplete();\n', 49), ('wait', 49), ('Flowable.just(1)\n', 49), ('Object>()', 49), ('onComplete', 49), ('value.\n', 49), ('Integer[]', 49), ('index;\n', 49), ('actual.onError(new', 49), ('threads', 49), ('terminate', 49), ('method.\n', 49), ('reactive', 49), ('sure', 49), ('org.junit.jupiter.api.Assertions.assertEquals;\nimport', 49), ('(IOException', 48), ('E', 48), ('RuntimeException();\n', 48), ('.assertResult();\n\n', 48), ('generally', 48), ('Iterable<?', 48), ('parameters', 48), ('jdx);\n', 48), ('Iterable', 48), ('get();\n', 48), ('them', 48), ('get()', 48), ('int[]', 48), ('count;\n\n', 47), ('Program', 47), ('height="380"', 47), ('through', 47), ('buffer', 47), ('t1,', 47), ('Creates', 47), ('Scheduler}', 47), ('downstream.onError(ex);\n', 47), ('Maybe\n', 47), ('just', 47), ('base', 47), ('",', 47)]